{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3","program":"/Users/thomas/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","naga","--edition=2018","/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"codespan-reporting\"","--cfg","feature=\"default\"","--cfg","feature=\"hexf-parse\"","--cfg","feature=\"msl-out\"","--cfg","feature=\"validate\"","--cfg","feature=\"wgsl-in\"","-C","metadata=fec10954649ac41d","-C","extra-filename=-fec10954649ac41d","--out-dir","/Users/thomas/Documents/paisley_generator/target/rls/debug/deps","-L","dependency=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps","--extern","bit_set=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libbit_set-b231629ac94fac4c.rmeta","--extern","bitflags=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libbitflags-d862fcb1d53f7562.rmeta","--extern","codespan_reporting=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libcodespan_reporting-8899e25ffbe593f7.rmeta","--extern","fxhash=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libfxhash-8c37cdcd951b4319.rmeta","--extern","hexf_parse=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libhexf_parse-2cadddababa355ee.rmeta","--extern","indexmap=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libindexmap-2e52facc2ded3716.rmeta","--extern","log=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/liblog-dc6405c8cf35d078.rmeta","--extern","num_traits=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libnum_traits-0b096a415c71410d.rmeta","--extern","thiserror=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libthiserror-be44f8b745ac8340.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/thomas/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libnaga-fec10954649ac41d.rmeta"},"prelude":{"crate_id":{"name":"naga","disambiguator":[2531074786142501699,0]},"crate_root":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src","external_crates":[{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15669064323078341672,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11357169968938206655,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6602629803563781521,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2747590458918256217,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6815800062292248865,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[14026126844841210853,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13025574654435908178,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[403676507750728715,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[11825504258628139003,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8663771689581725210,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[272349061558676930,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5692889037134661409,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[5672900006326178645,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[841089355853614604,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[5460130759259714783,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[16094886774496469189,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[6939062005183097301,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[11967481065853628164,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[9698159609188568189,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","num":20,"id":{"name":"indexmap","disambiguator":[1983690657070588579,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","num":21,"id":{"name":"hashbrown","disambiguator":[904530418460872825,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/number_literals.rs","num":22,"id":{"name":"hexf_parse","disambiguator":[5291958407558009653,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","num":23,"id":{"name":"codespan_reporting","disambiguator":[5514962816486700682,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","num":24,"id":{"name":"termcolor","disambiguator":[8470383241876327988,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","num":25,"id":{"name":"unicode_width","disambiguator":[10944563205308491406,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","num":26,"id":{"name":"thiserror","disambiguator":[15542646773361714037,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","num":27,"id":{"name":"thiserror_impl","disambiguator":[13031522780857654795,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","num":28,"id":{"name":"bit_set","disambiguator":[10667176914064565522,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","num":29,"id":{"name":"bit_vec","disambiguator":[10686831324226811821,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/writer.rs","num":30,"id":{"name":"log","disambiguator":[214507524855141354,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/writer.rs","num":31,"id":{"name":"cfg_if","disambiguator":[1532999587704713044,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","num":32,"id":{"name":"bitflags","disambiguator":[7262393479806847890,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","num":33,"id":{"name":"fxhash","disambiguator":[17667361322542672079,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","num":34,"id":{"name":"byteorder","disambiguator":[15294300342439398120,0]}}],"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":0,"byte_end":56416,"line_start":1,"line_end":1600,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":306},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":86678,"byte_end":86684,"line_start":36,"line_end":36,"column_start":17,"column_end":23},"alias_span":null,"name":"Writer","value":"","parent":{"krate":0,"index":155}},{"kind":"Use","ref_id":{"krate":0,"index":1130},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":448520,"byte_end":448535,"line_start":11,"line_end":11,"column_start":16,"column_end":31},"alias_span":null,"name":"IndexableLength","value":"","parent":{"krate":0,"index":1120}},{"kind":"Use","ref_id":{"krate":0,"index":1162},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":448556,"byte_end":448565,"line_start":12,"line_end":12,"column_start":20,"column_end":29},"alias_span":null,"name":"Alignment","value":"","parent":{"krate":0,"index":1120}},{"kind":"Use","ref_id":{"krate":0,"index":2670},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":448567,"byte_end":448582,"line_start":12,"line_end":12,"column_start":31,"column_end":46},"alias_span":null,"name":"InvalidBaseType","value":"","parent":{"krate":0,"index":1120}},{"kind":"Use","ref_id":{"krate":0,"index":2671},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":448567,"byte_end":448582,"line_start":12,"line_end":12,"column_start":31,"column_end":46},"alias_span":null,"name":"InvalidBaseType","value":"","parent":{"krate":0,"index":1120}},{"kind":"Use","ref_id":{"krate":0,"index":2652},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":448584,"byte_end":448592,"line_start":12,"line_end":12,"column_start":48,"column_end":56},"alias_span":null,"name":"Layouter","value":"","parent":{"krate":0,"index":1120}},{"kind":"Use","ref_id":{"krate":0,"index":2637},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":448594,"byte_end":448604,"line_start":12,"line_end":12,"column_start":58,"column_end":68},"alias_span":null,"name":"TypeLayout","value":"","parent":{"krate":0,"index":1120}},{"kind":"Use","ref_id":{"krate":0,"index":1188},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":448623,"byte_end":448638,"line_start":13,"line_end":13,"column_start":17,"column_end":32},"alias_span":null,"name":"EntryPointIndex","value":"","parent":{"krate":0,"index":1120}},{"kind":"Use","ref_id":{"krate":0,"index":2673},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":448640,"byte_end":448647,"line_start":13,"line_end":13,"column_start":34,"column_end":41},"alias_span":null,"name":"NameKey","value":"","parent":{"krate":0,"index":1120}},{"kind":"Use","ref_id":{"krate":0,"index":2721},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":448649,"byte_end":448654,"line_start":13,"line_end":13,"column_start":43,"column_end":48},"alias_span":null,"name":"Namer","value":"","parent":{"krate":0,"index":1120}},{"kind":"Use","ref_id":{"krate":0,"index":1211},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":448677,"byte_end":448697,"line_start":14,"line_end":14,"column_start":21,"column_end":41},"alias_span":null,"name":"ensure_block_returns","value":"","parent":{"krate":0,"index":1120}},{"kind":"Use","ref_id":{"krate":0,"index":1240},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":448718,"byte_end":448732,"line_start":15,"line_end":15,"column_start":20,"column_end":34},"alias_span":null,"name":"ResolveContext","value":"","parent":{"krate":0,"index":1120}},{"kind":"Use","ref_id":{"krate":0,"index":2740},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":448734,"byte_end":448746,"line_start":15,"line_end":15,"column_start":36,"column_end":48},"alias_span":null,"name":"ResolveError","value":"","parent":{"krate":0,"index":1120}},{"kind":"Use","ref_id":{"krate":0,"index":2727},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":448748,"byte_end":448762,"line_start":15,"line_end":15,"column_start":50,"column_end":64},"alias_span":null,"name":"TypeResolution","value":"","parent":{"krate":0,"index":1120}},{"kind":"Use","ref_id":{"krate":0,"index":3130},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":520298,"byte_end":520312,"line_start":22,"line_end":22,"column_start":20,"column_end":34},"alias_span":null,"name":"ExpressionInfo","value":"","parent":{"krate":0,"index":1365}},{"kind":"Use","ref_id":{"krate":0,"index":3178},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":520314,"byte_end":520326,"line_start":22,"line_end":22,"column_start":36,"column_end":48},"alias_span":null,"name":"FunctionInfo","value":"","parent":{"krate":0,"index":1365}},{"kind":"Use","ref_id":{"krate":0,"index":3016},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":520328,"byte_end":520337,"line_start":22,"line_end":22,"column_start":50,"column_end":59},"alias_span":null,"name":"GlobalUse","value":"","parent":{"krate":0,"index":1365}},{"kind":"Use","ref_id":{"krate":0,"index":2917},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":520339,"byte_end":520349,"line_start":22,"line_end":22,"column_start":61,"column_end":71},"alias_span":null,"name":"Uniformity","value":"","parent":{"krate":0,"index":1365}},{"kind":"Use","ref_id":{"krate":0,"index":2820},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":520351,"byte_end":520373,"line_start":22,"line_end":22,"column_start":73,"column_end":95},"alias_span":null,"name":"UniformityRequirements","value":"","parent":{"krate":0,"index":1365}},{"kind":"Use","ref_id":{"krate":0,"index":3205},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":520393,"byte_end":520405,"line_start":23,"line_end":23,"column_start":18,"column_end":30},"alias_span":null,"name":"ComposeError","value":"","parent":{"krate":0,"index":1365}},{"kind":"Use","ref_id":{"krate":0,"index":3231},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":520427,"byte_end":520442,"line_start":24,"line_end":24,"column_start":21,"column_end":36},"alias_span":null,"name":"ExpressionError","value":"","parent":{"krate":0,"index":1365}},{"kind":"Use","ref_id":{"krate":0,"index":3399},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":520463,"byte_end":520472,"line_start":25,"line_end":25,"column_start":20,"column_end":29},"alias_span":null,"name":"CallError","value":"","parent":{"krate":0,"index":1365}},{"kind":"Use","ref_id":{"krate":0,"index":3474},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":520474,"byte_end":520487,"line_start":25,"line_end":25,"column_start":31,"column_end":44},"alias_span":null,"name":"FunctionError","value":"","parent":{"krate":0,"index":1365}},{"kind":"Use","ref_id":{"krate":0,"index":3461},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":520489,"byte_end":520507,"line_start":25,"line_end":25,"column_start":46,"column_end":64},"alias_span":null,"name":"LocalVariableError","value":"","parent":{"krate":0,"index":1365}},{"kind":"Use","ref_id":{"krate":0,"index":3724},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":520530,"byte_end":520545,"line_start":26,"line_end":26,"column_start":21,"column_end":36},"alias_span":null,"name":"EntryPointError","value":"","parent":{"krate":0,"index":1365}},{"kind":"Use","ref_id":{"krate":0,"index":3655},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":520547,"byte_end":520566,"line_start":26,"line_end":26,"column_start":38,"column_end":57},"alias_span":null,"name":"GlobalVariableError","value":"","parent":{"krate":0,"index":1365}},{"kind":"Use","ref_id":{"krate":0,"index":3683},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":520568,"byte_end":520580,"line_start":26,"line_end":26,"column_start":59,"column_end":71},"alias_span":null,"name":"VaryingError","value":"","parent":{"krate":0,"index":1365}},{"kind":"Use","ref_id":{"krate":0,"index":3891},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":520600,"byte_end":520612,"line_start":27,"line_end":27,"column_start":18,"column_end":30},"alias_span":null,"name":"Disalignment","value":"","parent":{"krate":0,"index":1365}},{"kind":"Use","ref_id":{"krate":0,"index":3921},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":520614,"byte_end":520623,"line_start":27,"line_end":27,"column_start":32,"column_end":41},"alias_span":null,"name":"TypeError","value":"","parent":{"krate":0,"index":1365}},{"kind":"Use","ref_id":{"krate":0,"index":3774},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":520625,"byte_end":520634,"line_start":27,"line_end":27,"column_start":43,"column_end":52},"alias_span":null,"name":"TypeFlags","value":"","parent":{"krate":0,"index":1365}},{"kind":"Use","ref_id":{"krate":0,"index":80},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":9533,"byte_end":9538,"line_start":216,"line_end":216,"column_start":24,"column_end":29},"alias_span":null,"name":"Arena","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":30},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":9540,"byte_end":9546,"line_start":216,"line_end":216,"column_start":31,"column_end":37},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":66},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":9548,"byte_end":9553,"line_start":216,"line_end":216,"column_start":39,"column_end":44},"alias_span":null,"name":"Range","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":125},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":9555,"byte_end":9566,"line_start":216,"line_end":216,"column_start":46,"column_end":57},"alias_span":null,"name":"UniqueArena","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2806},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":9673,"byte_end":9677,"line_start":223,"line_end":223,"column_start":22,"column_end":26},"alias_span":null,"name":"Span","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2238},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":44540,"byte_end":44545,"line_start":1302,"line_end":1302,"column_start":16,"column_end":21},"alias_span":null,"name":"Block","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":0,"byte_end":56416,"line_start":1,"line_end":1600,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":154},{"krate":0,"index":471},{"krate":0,"index":518},{"krate":0,"index":1120},{"krate":0,"index":1352},{"krate":0,"index":1365},{"krate":0,"index":1821},{"krate":0,"index":1822},{"krate":0,"index":1825},{"krate":0,"index":1828},{"krate":0,"index":1831},{"krate":0,"index":1834},{"krate":0,"index":1835},{"krate":0,"index":1836},{"krate":0,"index":1839},{"krate":0,"index":1842},{"krate":0,"index":1845},{"krate":0,"index":1848},{"krate":0,"index":1849},{"krate":0,"index":1852},{"krate":0,"index":1854},{"krate":0,"index":4378},{"krate":0,"index":4380},{"krate":0,"index":4382},{"krate":0,"index":4383},{"krate":0,"index":4385},{"krate":0,"index":4388},{"krate":0,"index":4389},{"krate":0,"index":4391},{"krate":0,"index":4393},{"krate":0,"index":4394},{"krate":0,"index":4397},{"krate":0,"index":4399},{"krate":0,"index":4406},{"krate":0,"index":4408},{"krate":0,"index":4409},{"krate":0,"index":4411},{"krate":0,"index":4414},{"krate":0,"index":4415},{"krate":0,"index":4417},{"krate":0,"index":4419},{"krate":0,"index":4420},{"krate":0,"index":4422},{"krate":0,"index":4424},{"krate":0,"index":4431},{"krate":0,"index":4433},{"krate":0,"index":4434},{"krate":0,"index":4436},{"krate":0,"index":4439},{"krate":0,"index":4440},{"krate":0,"index":4442},{"krate":0,"index":4444},{"krate":0,"index":4445},{"krate":0,"index":4447},{"krate":0,"index":4449},{"krate":0,"index":4464},{"krate":0,"index":4466},{"krate":0,"index":4467},{"krate":0,"index":4469},{"krate":0,"index":4472},{"krate":0,"index":4473},{"krate":0,"index":4475},{"krate":0,"index":4477},{"krate":0,"index":4478},{"krate":0,"index":4481},{"krate":0,"index":4483},{"krate":0,"index":4524},{"krate":0,"index":4526},{"krate":0,"index":4527},{"krate":0,"index":4529},{"krate":0,"index":4532},{"krate":0,"index":4533},{"krate":0,"index":4535},{"krate":0,"index":4537},{"krate":0,"index":4538},{"krate":0,"index":4540},{"krate":0,"index":1855},{"krate":0,"index":4542},{"krate":0,"index":4552},{"krate":0,"index":4554},{"krate":0,"index":4555},{"krate":0,"index":4557},{"krate":0,"index":4560},{"krate":0,"index":4561},{"krate":0,"index":4563},{"krate":0,"index":4565},{"krate":0,"index":4566},{"krate":0,"index":4568},{"krate":0,"index":4570},{"krate":0,"index":4579},{"krate":0,"index":4581},{"krate":0,"index":4582},{"krate":0,"index":4584},{"krate":0,"index":4587},{"krate":0,"index":4588},{"krate":0,"index":4590},{"krate":0,"index":4592},{"krate":0,"index":4593},{"krate":0,"index":4595},{"krate":0,"index":4597},{"krate":0,"index":4603},{"krate":0,"index":4605},{"krate":0,"index":4606},{"krate":0,"index":4608},{"krate":0,"index":4611},{"krate":0,"index":4612},{"krate":0,"index":4614},{"krate":0,"index":4616},{"krate":0,"index":4617},{"krate":0,"index":4620},{"krate":0,"index":4622},{"krate":0,"index":4629},{"krate":0,"index":4631},{"krate":0,"index":4632},{"krate":0,"index":4634},{"krate":0,"index":4637},{"krate":0,"index":4638},{"krate":0,"index":4640},{"krate":0,"index":4642},{"krate":0,"index":4643},{"krate":0,"index":4645},{"krate":0,"index":4647},{"krate":0,"index":4654},{"krate":0,"index":4656},{"krate":0,"index":4657},{"krate":0,"index":4659},{"krate":0,"index":4662},{"krate":0,"index":4663},{"krate":0,"index":4665},{"krate":0,"index":4667},{"krate":0,"index":4668},{"krate":0,"index":4670},{"krate":0,"index":4672},{"krate":0,"index":4677},{"krate":0,"index":4679},{"krate":0,"index":4681},{"krate":0,"index":4682},{"krate":0,"index":4684},{"krate":0,"index":4687},{"krate":0,"index":4688},{"krate":0,"index":4691},{"krate":0,"index":4700},{"krate":0,"index":4702},{"krate":0,"index":4703},{"krate":0,"index":4705},{"krate":0,"index":4708},{"krate":0,"index":4709},{"krate":0,"index":4711},{"krate":0,"index":4713},{"krate":0,"index":4714},{"krate":0,"index":4716},{"krate":0,"index":4720},{"krate":0,"index":4722},{"krate":0,"index":4723},{"krate":0,"index":4724},{"krate":0,"index":4727},{"krate":0,"index":4728},{"krate":0,"index":4730},{"krate":0,"index":4732},{"krate":0,"index":4734},{"krate":0,"index":4736},{"krate":0,"index":4718},{"krate":0,"index":4739},{"krate":0,"index":4745},{"krate":0,"index":4747},{"krate":0,"index":4749},{"krate":0,"index":4751},{"krate":0,"index":4753},{"krate":0,"index":4775},{"krate":0,"index":4778},{"krate":0,"index":4780},{"krate":0,"index":4783},{"krate":0,"index":4785},{"krate":0,"index":4788},{"krate":0,"index":4790},{"krate":0,"index":4793},{"krate":0,"index":4795},{"krate":0,"index":4798},{"krate":0,"index":4801},{"krate":0,"index":4812},{"krate":0,"index":4877},{"krate":0,"index":4879},{"krate":0,"index":4880},{"krate":0,"index":4882},{"krate":0,"index":4885},{"krate":0,"index":4886},{"krate":0,"index":4888},{"krate":0,"index":4890},{"krate":0,"index":4891},{"krate":0,"index":4893},{"krate":0,"index":4895},{"krate":0,"index":4904},{"krate":0,"index":4906},{"krate":0,"index":4907},{"krate":0,"index":4909},{"krate":0,"index":4912},{"krate":0,"index":4913},{"krate":0,"index":4915},{"krate":0,"index":4917},{"krate":0,"index":4918},{"krate":0,"index":4921},{"krate":0,"index":4923},{"krate":0,"index":4926},{"krate":0,"index":4928},{"krate":0,"index":4929},{"krate":0,"index":4931},{"krate":0,"index":4934},{"krate":0,"index":4935},{"krate":0,"index":4938},{"krate":0,"index":4975},{"krate":0,"index":4977},{"krate":0,"index":4978},{"krate":0,"index":4980},{"krate":0,"index":4983},{"krate":0,"index":4984},{"krate":0,"index":4987},{"krate":0,"index":4991},{"krate":0,"index":4993},{"krate":0,"index":4994},{"krate":0,"index":4997},{"krate":0,"index":5010},{"krate":0,"index":5012},{"krate":0,"index":5014},{"krate":0,"index":5015},{"krate":0,"index":5017},{"krate":0,"index":5024},{"krate":0,"index":5026},{"krate":0,"index":5028},{"krate":0,"index":5029},{"krate":0,"index":5032},{"krate":0,"index":5040},{"krate":0,"index":5042},{"krate":0,"index":5044},{"krate":0,"index":5045},{"krate":0,"index":5047},{"krate":0,"index":5048},{"krate":0,"index":5051},{"krate":0,"index":5054},{"krate":0,"index":5057},{"krate":0,"index":5059},{"krate":0,"index":5061},{"krate":0,"index":5062},{"krate":0,"index":5064},{"krate":0,"index":5067},{"krate":0,"index":5069},{"krate":0,"index":5070},{"krate":0,"index":5073},{"krate":0,"index":5075},{"krate":0,"index":5081},{"krate":0,"index":5083},{"krate":0,"index":5085},{"krate":0,"index":5086},{"krate":0,"index":5089},{"krate":0,"index":5093},{"krate":0,"index":5095},{"krate":0,"index":5097},{"krate":0,"index":5102},{"krate":0,"index":5104},{"krate":0,"index":5105},{"krate":0,"index":5107},{"krate":0,"index":5110},{"krate":0,"index":5111},{"krate":0,"index":5113},{"krate":0,"index":5115},{"krate":0,"index":5116},{"krate":0,"index":5118},{"krate":0,"index":5120},{"krate":0,"index":5157},{"krate":0,"index":5159},{"krate":0,"index":5160},{"krate":0,"index":5162},{"krate":0,"index":5165},{"krate":0,"index":5166},{"krate":0,"index":5168},{"krate":0,"index":5170},{"krate":0,"index":5171},{"krate":0,"index":5173},{"krate":0,"index":5175},{"krate":0,"index":5192},{"krate":0,"index":5194},{"krate":0,"index":5195},{"krate":0,"index":5197},{"krate":0,"index":5200},{"krate":0,"index":5201},{"krate":0,"index":5203},{"krate":0,"index":5205},{"krate":0,"index":5206},{"krate":0,"index":5209},{"krate":0,"index":5211},{"krate":0,"index":5218},{"krate":0,"index":5220},{"krate":0,"index":5221},{"krate":0,"index":5223},{"krate":0,"index":5226},{"krate":0,"index":5227},{"krate":0,"index":5229},{"krate":0,"index":5231},{"krate":0,"index":5232},{"krate":0,"index":5234},{"krate":0,"index":5236},{"krate":0,"index":5249},{"krate":0,"index":5251},{"krate":0,"index":5252},{"krate":0,"index":5254},{"krate":0,"index":5257},{"krate":0,"index":5258},{"krate":0,"index":5260},{"krate":0,"index":5262},{"krate":0,"index":5263},{"krate":0,"index":5265},{"krate":0,"index":5267},{"krate":0,"index":5394},{"krate":0,"index":5396},{"krate":0,"index":5397},{"krate":0,"index":5399},{"krate":0,"index":5402},{"krate":0,"index":5403},{"krate":0,"index":5405},{"krate":0,"index":5407},{"krate":0,"index":5408},{"krate":0,"index":5410},{"krate":0,"index":5412},{"krate":0,"index":5426},{"krate":0,"index":5428},{"krate":0,"index":5429},{"krate":0,"index":5431},{"krate":0,"index":5432},{"krate":0,"index":5435},{"krate":0,"index":5444},{"krate":0,"index":5446},{"krate":0,"index":5447},{"krate":0,"index":5449},{"krate":0,"index":5450},{"krate":0,"index":5453},{"krate":0,"index":5466},{"krate":0,"index":5468},{"krate":0,"index":5469},{"krate":0,"index":5471},{"krate":0,"index":5472},{"krate":0,"index":5476},{"krate":0,"index":5478},{"krate":0,"index":5479},{"krate":0,"index":5480},{"krate":0,"index":5483},{"krate":0,"index":5484},{"krate":0,"index":5486},{"krate":0,"index":5488},{"krate":0,"index":5490},{"krate":0,"index":5492},{"krate":0,"index":5474},{"krate":0,"index":5495},{"krate":0,"index":5501},{"krate":0,"index":5503},{"krate":0,"index":5505},{"krate":0,"index":5507},{"krate":0,"index":5509},{"krate":0,"index":5531},{"krate":0,"index":5534},{"krate":0,"index":5536},{"krate":0,"index":5539},{"krate":0,"index":5541},{"krate":0,"index":5544},{"krate":0,"index":5546},{"krate":0,"index":5549},{"krate":0,"index":5551},{"krate":0,"index":5554},{"krate":0,"index":5557},{"krate":0,"index":5568},{"krate":0,"index":5653},{"krate":0,"index":5655},{"krate":0,"index":1856},{"krate":0,"index":5657},{"krate":0,"index":5661},{"krate":0,"index":5663},{"krate":0,"index":5665},{"krate":0,"index":5711},{"krate":0,"index":5713},{"krate":0,"index":5715},{"krate":0,"index":5719},{"krate":0,"index":5721},{"krate":0,"index":5723},{"krate":0,"index":5726},{"krate":0,"index":5728},{"krate":0,"index":5730},{"krate":0,"index":5738},{"krate":0,"index":5740},{"krate":0,"index":5742},{"krate":0,"index":5749},{"krate":0,"index":5751},{"krate":0,"index":5757},{"krate":0,"index":5759}],"decl_id":null,"docs":" Universal shader translator.","sig":null,"attributes":[{"value":"* Universal shader translator.\n\nThe central structure of the crate is [`Module`]. A `Module` contains:\n\n- [`Function`]s, which have arguments, a return type, local variables, and a body,\n\n- [`EntryPoint`]s, which are specialized functions that can serve as the entry\n  point for pipeline stages like vertex shading or fragment shading,\n\n- [`Constant`]s and [`GlobalVariable`]s used by `EntryPoint`s and `Function`s, and\n\n- [`Type`]s used by the above.\n\nThe body of an `EntryPoint` or `Function` is represented using two types:\n\n- An [`Expression`] produces a value, but has no side effects or control flow.\n  `Expressions` include variable references, unary and binary operators, and so\n  on.\n\n- A [`Statement`] can have side effects and structured control flow.\n  `Statement`s do not produce a value, other than by storing one in some\n  designated place. `Statements` include blocks, conditionals, and loops, but also\n  operations that have side effects, like stores and function calls.\n\n`Statement`s form a tree, with pointers into the DAG of `Expression`s.\n\nRestricting side effects to statements simplifies analysis and code generation.\nA Naga backend can generate code to evaluate an `Expression` however and\nwhenever it pleases, as long as it is certain to observe the side effects of all\npreviously executed `Statement`s.\n\nMany `Statement` variants use the [`Block`] type, which is `Vec<Statement>`,\nwith optional span info, representing a series of statements executed in order. The body of an\n`EntryPoint`s or `Function` is a `Block`, and `Statement` has a\n[`Block`][Statement::Block] variant.\n\n## Arenas\n\nTo improve translator performance and reduce memory usage, most structures are\nstored in an [`Arena`]. An `Arena<T>` stores a series of `T` values, indexed by\n[`Handle<T>`](Handle) values, which are just wrappers around integer indexes.\nFor example, a `Function`'s expressions are stored in an `Arena<Expression>`,\nand compound expressions refer to their sub-expressions via `Handle<Expression>`\nvalues. (When examining the serialized form of a `Module`, note that the first\nelement of an `Arena` has an index of 1, not 0.)\n\nA [`UniqueArena`] is just like an `Arena`, except that it stores only a single\ninstance of each value. The value type must implement `Eq` and `Hash`. Like an\n`Arena`, inserting a value into a `UniqueArena` returns a `Handle` which can be\nused to efficiently access the value, without a hash lookup. Inserting a value\nmultiple times returns the same `Handle`.\n\nIf the `span` feature is enabled, both `Arena` and `UniqueArena` can associate a\nsource code span with each element.\n\n## Function Calls\n\nNaga's representation of function calls is unusual. Most languages treat\nfunction calls as expressions, but because calls may have side effects, Naga\nrepresents them as a kind of statement, [`Statement::Call`]. If the function\nreturns a value, a call statement designates a particular [`Expression::CallResult`]\nexpression to represent its return value, for use by subsequent statements and\nexpressions.\n\n## `Expression` evaluation time\n\nIt is essential to know when an [`Expression`] should be evaluated, because its\nvalue may depend on previous [`Statement`]s' effects. But whereas the order of\nexecution for a tree of `Statement`s is apparent from its structure, it is not\nso clear for `Expressions`, since an expression may be referred to by any number\nof `Statement`s and other `Expression`s.\n\nNaga's rules for when `Expression`s are evaluated are as follows:\n\n-   [`Constant`](Expression::Constant) expressions are considered to be\n    implicitly evaluated before execution begins.\n\n-   [`FunctionArgument`] and [`LocalVariable`] expressions are considered\n    implicitly evaluated upon entry to the function to which they belong.\n    Function arguments cannot be assigned to, and `LocalVariable` expressions\n    produce a *pointer to* the variable's value (for use with [`Load`] and\n    [`Store`]). Neither varies while the function executes, so it suffices to\n    consider these expressions evaluated once on entry.\n\n-   Similarly, [`GlobalVariable`] expressions are considered implicitly\n    evaluated before execution begins, since their value does not change while\n    code executes, for one of two reasons:\n\n    -   Most `GlobalVariable` expressions produce a pointer to the variable's\n        value, for use with [`Load`] and [`Store`], as `LocalVariable`\n        expressions do. Although the variable's value may change, its address\n        does not.\n\n    -   A `GlobalVariable` expression referring to a global in the\n        [`StorageClass::Handle`] storage class produces the value directly, not\n        a pointer. Such global variables hold opaque types like shaders or\n        images, and cannot be assigned to.\n\n-   A [`CallResult`] expression that is the `result` of a [`Statement::Call`],\n    representing the call's return value, is evaluated when the `Call` statement\n    is executed.\n\n-   Similarly, an [`AtomicResult`] expression that is the `result` of an\n    [`Atomic`] statement, representing the result of the atomic operation, is\n    evaluated when the `Atomic` statement is executed.\n\n-   All other expressions are evaluated when the (unique) [`Statement::Emit`]\n    statement that covers them is executed. The [`Expression::needs_pre_emit`]\n    method returns `true` if the given expression is one of those variants that\n    does *not* need to be covered by an `Emit` statement.\n\nNow, strictly speaking, not all `Expression` variants actually care when they're\nevaluated. For example, you can evaluate a [`BinaryOperator::Add`] expression\nany time you like, as long as you give it the right operands. It's really only a\nvery small set of expressions that are affected by timing:\n\n-   [`Load`], [`ImageSample`], and [`ImageLoad`] expressions are influenced by\n    stores to the variables or images they access, and must execute at the\n    proper time relative to them.\n\n-   [`Derivative`] expressions are sensitive to control flow uniformity: they\n    must not be moved out of an area of uniform control flow into a non-uniform\n    area.\n\n-   More generally, any expression that's used by more than one other expression\n    or statement should probably be evaluated only once, and then stored in a\n    variable to be cited at each point of use.\n\nNaga tries to help back ends handle all these cases correctly in a somewhat\ncircuitous way. The [`ModuleInfo`] structure returned by [`Validator::validate`]\nprovides a reference count for each expression in each function in the module.\nNaturally, any expression with a reference count of two or more deserves to be\nevaluated and stored in a temporary variable at the point that the `Emit`\nstatement covering it is executed. But if we selectively lower the reference\ncount threshold to _one_ for the sensitive expression types listed above, so\nthat we _always_ generate a temporary variable and save their value, then the\nsame code that manages multiply referenced expressions will take care of\nintroducing temporaries for time-sensitive expressions as well. The\n`Expression::bake_ref_count` method (private to the back ends) is meant to help\nwith this.\n\n## `Expression` scope\n\nEach `Expression` has a *scope*, which is the region of the function within\nwhich it can be used by `Statement`s and other `Expression`s. It is a validation\nerror to use an `Expression` outside its scope.\n\nAn expression's scope is defined as follows:\n\n-   The scope of a [`Constant`], [`GlobalVariable`], [`FunctionArgument`] or\n    [`LocalVariable`] expression covers the entire `Function` in which it\n    occurs.\n\n-   The scope of an expression evaluated by an [`Emit`] statement covers the\n    subsequent expressions in that `Emit`, the subsequent statements in the `Block`\n    to which that `Emit` belongs (if any) and their sub-statements (if any).\n\n-   The `result` expression of a [`Call`] or [`Atomic`] statement has a scope\n    covering the subsequent statements in the `Block` in which the statement\n    occurs (if any) and their sub-statements (if any).\n\nFor example, this implies that an expression evaluated by some statement in a\nnested `Block` is not available in the `Block`'s parents. Such a value would\nneed to be stored in a local variable to be carried upwards in the statement\ntree.\n\n[`AtomicResult`]: Expression::AtomicResult\n[`CallResult`]: Expression::CallResult\n[`Constant`]: Expression::Constant\n[`Derivative`]: Expression::Derivative\n[`FunctionArgument`]: Expression::FunctionArgument\n[`GlobalVariable`]: Expression::GlobalVariable\n[`ImageLoad`]: Expression::ImageLoad\n[`ImageSample`]: Expression::ImageSample\n[`Load`]: Expression::Load\n[`LocalVariable`]: Expression::LocalVariable\n\n[`Atomic`]: Statement::Atomic\n[`Call`]: Statement::Call\n[`Emit`]: Statement::Emit\n[`Store`]: Statement::Store\n\n[`Validator::validate`]: valid::Validator::validate\n[`ModuleInfo`]: valid::ModuleInfo\n\n!*/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":0,"byte_end":8905,"line_start":1,"line_end":186,"column_start":1,"column_end":4}},{"value":"allow(renamed_and_removed_lints, unknown_lints, clippy ::\nnew_without_default, clippy :: unneeded_field_pattern, clippy ::\nmatch_like_matches_macro, clippy :: manual_strip, clippy :: if_same_then_else,\nclippy :: unknown_clippy_lints,)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":8966,"byte_end":9248,"line_start":189,"line_end":198,"column_start":1,"column_end":3}},{"value":"warn(trivial_casts, trivial_numeric_casts, unused_extern_crates,\nunused_qualifications, clippy :: pattern_type_mismatch)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":9249,"byte_end":9393,"line_start":199,"line_end":205,"column_start":1,"column_end":3}},{"value":"deny(clippy :: panic)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":9394,"byte_end":9417,"line_start":206,"line_end":206,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":30},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":57121,"byte_end":57127,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"Handle","qualname":"::arena::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"decl_id":null,"docs":" A strongly typed reference to an arena item.","sig":null,"attributes":[{"value":"/ A strongly typed reference to an arena item.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":56753,"byte_end":56801,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":56802,"byte_end":56805,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ A `Handle` value can be used as an index into an [`Arena`] or [`UniqueArena`].","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":56806,"byte_end":56888,"line_start":13,"line_end":13,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":57301,"byte_end":57306,"line_start":27,"line_end":27,"column_start":8,"column_end":13},"name":"clone","qualname":"<Handle<T> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":57494,"byte_end":57496,"line_start":36,"line_end":36,"column_start":8,"column_end":10},"name":"eq","qualname":"<Handle<T> as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":57640,"byte_end":57651,"line_start":42,"line_end":42,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Handle<T> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Self) -> Option<Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":57783,"byte_end":57786,"line_start":47,"line_end":47,"column_start":8,"column_end":11},"name":"cmp","qualname":"<Handle<T> as std::cmp::Ord>::cmp","value":"fn cmp(&Self, &Self) -> Ordering","parent":{"krate":2,"index":2838},"children":[],"decl_id":{"krate":2,"index":2839},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":57909,"byte_end":57912,"line_start":52,"line_end":52,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Handle<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":58065,"byte_end":58069,"line_start":57,"line_end":57,"column_start":8,"column_end":12},"name":"hash","qualname":"<Handle<T> as std::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: hash::Hasher","parent":{"krate":2,"index":10122},"children":[],"decl_id":{"krate":2,"index":10123},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":58517,"byte_end":58522,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"index","qualname":"<Handle<T>>::index","value":"fn index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the zero-based index of this handle.\n","sig":null,"attributes":[{"value":"/ Returns the zero-based index of this handle.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":58457,"byte_end":58505,"line_start":76,"line_end":76,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":66},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":59438,"byte_end":59443,"line_start":106,"line_end":106,"column_start":12,"column_end":17},"name":"Range","qualname":"::arena::Range","value":"Range {  }","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69}],"decl_id":null,"docs":" A strongly typed range of handles.\n","sig":null,"attributes":[{"value":"/ A strongly typed range of handles.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":59167,"byte_end":59205,"line_start":99,"line_end":99,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":59626,"byte_end":59631,"line_start":113,"line_end":113,"column_start":8,"column_end":13},"name":"clone","qualname":"<Range<T> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":59796,"byte_end":59799,"line_start":121,"line_end":121,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Range<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":60006,"byte_end":60010,"line_start":127,"line_end":127,"column_start":8,"column_end":12},"name":"next","qualname":"<Range<T> as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":80},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":60778,"byte_end":60783,"line_start":149,"line_end":149,"column_start":12,"column_end":17},"name":"Arena","qualname":"::arena::Arena","value":"Arena {  }","parent":null,"children":[{"krate":0,"index":82}],"decl_id":null,"docs":" An arena holding some kind of component (e.g., type, constant,\n instruction, etc.) that can be referenced.","sig":null,"attributes":[{"value":"/ An arena holding some kind of component (e.g., type, constant,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":60326,"byte_end":60392,"line_start":140,"line_end":140,"column_start":1,"column_end":67}},{"value":"/ instruction, etc.) that can be referenced.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":60393,"byte_end":60439,"line_start":141,"line_end":141,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":60440,"byte_end":60443,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ Adding new items to the arena produces a strongly-typed [`Handle`].","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":60444,"byte_end":60515,"line_start":143,"line_end":143,"column_start":1,"column_end":72}},{"value":"/ The arena can be indexed using the given handle to obtain","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":60516,"byte_end":60577,"line_start":144,"line_end":144,"column_start":1,"column_end":62}},{"value":"/ a reference to the stored item.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":60578,"byte_end":60613,"line_start":145,"line_end":145,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":60985,"byte_end":60992,"line_start":158,"line_end":158,"column_start":8,"column_end":15},"name":"default","qualname":"<Arena<T> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":61086,"byte_end":61089,"line_start":163,"line_end":163,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Arena<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":61292,"byte_end":61295,"line_start":170,"line_end":170,"column_start":12,"column_end":15},"name":"new","qualname":"<Arena<T>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new arena with no initial capacity allocated.\n","sig":null,"attributes":[{"value":"/ Create a new arena with no initial capacity allocated.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":61222,"byte_end":61280,"line_start":169,"line_end":169,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":61489,"byte_end":61499,"line_start":179,"line_end":179,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Arena<T>>::into_inner","value":"fn into_inner(Self) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the inner vector.\n","sig":null,"attributes":[{"value":"/ Extracts the inner vector.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":61447,"byte_end":61477,"line_start":178,"line_end":178,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":61620,"byte_end":61623,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"len","qualname":"<Arena<T>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of items stored in this arena.\n","sig":null,"attributes":[{"value":"/ Returns the current number of items stored in this arena.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":61547,"byte_end":61608,"line_start":183,"line_end":183,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":61742,"byte_end":61750,"line_start":189,"line_end":189,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Arena<T>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the arena contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the arena contains no elements.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":61677,"byte_end":61730,"line_start":188,"line_end":188,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":61944,"byte_end":61948,"line_start":195,"line_end":195,"column_start":12,"column_end":16},"name":"iter","qualname":"<Arena<T>>::iter","value":"fn iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the items stored in this arena, returning both\n the item's handle and a reference to it.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the items stored in this arena, returning both","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":61808,"byte_end":61883,"line_start":193,"line_end":193,"column_start":5,"column_end":80}},{"value":"/ the item's handle and a reference to it.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":61888,"byte_end":61932,"line_start":194,"line_end":194,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":62302,"byte_end":62310,"line_start":204,"line_end":204,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Arena<T>>::iter_mut","value":"fn iter_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a iterator over the items stored in this arena,\n returning both the item's handle and a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Returns a iterator over the items stored in this arena,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":62159,"byte_end":62218,"line_start":202,"line_end":202,"column_start":5,"column_end":64}},{"value":"/ returning both the item's handle and a mutable reference to it.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":62223,"byte_end":62290,"line_start":203,"line_end":203,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":62605,"byte_end":62611,"line_start":212,"line_end":212,"column_start":12,"column_end":18},"name":"append","qualname":"<Arena<T>>::append","value":"fn append(&mut Self, T, Span) -> Handle<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a new value to the arena, returning a typed handle.\n","sig":null,"attributes":[{"value":"/ Adds a new value to the arena, returning a typed handle.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":62533,"byte_end":62593,"line_start":211,"line_end":211,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":62952,"byte_end":62960,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"fetch_if","qualname":"<Arena<T>>::fetch_if","value":"fn fetch_if<F>(&Self, F) -> Option<Handle<T>> where F: Fn(&T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Fetch a handle to an existing type.\n","sig":null,"attributes":[{"value":"/ Fetch a handle to an existing type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":62901,"byte_end":62940,"line_start":222,"line_end":222,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":63360,"byte_end":63378,"line_start":234,"line_end":234,"column_start":12,"column_end":30},"name":"fetch_if_or_append","qualname":"<Arena<T>>::fetch_if_or_append","value":"fn fetch_if_or_append<F>(&mut Self, T, Span, F) -> Handle<T> where\nF: Fn(&T, &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Adds a value with a custom check for uniqueness:\n returns a handle pointing to\n an existing element if the check succeeds, or adds a new\n element otherwise.\n","sig":null,"attributes":[{"value":"/ Adds a value with a custom check for uniqueness:","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":63167,"byte_end":63219,"line_start":230,"line_end":230,"column_start":5,"column_end":57}},{"value":"/ returns a handle pointing to","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":63224,"byte_end":63256,"line_start":231,"line_end":231,"column_start":5,"column_end":37}},{"value":"/ an existing element if the check succeeds, or adds a new","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":63261,"byte_end":63321,"line_start":232,"line_end":232,"column_start":5,"column_end":65}},{"value":"/ element otherwise.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":63326,"byte_end":63348,"line_start":233,"line_end":233,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":63802,"byte_end":63817,"line_start":248,"line_end":248,"column_start":12,"column_end":27},"name":"fetch_or_append","qualname":"<Arena<T>>::fetch_or_append","value":"fn fetch_or_append(&mut Self, T, Span) -> Handle<T> where T: PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Adds a value with a check for uniqueness, where the check is plain comparison.\n","sig":null,"attributes":[{"value":"/ Adds a value with a check for uniqueness, where the check is plain comparison.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":63708,"byte_end":63790,"line_start":247,"line_end":247,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":63972,"byte_end":63979,"line_start":255,"line_end":255,"column_start":12,"column_end":19},"name":"try_get","qualname":"<Arena<T>>::try_get","value":"fn try_get(&Self, Handle<T>) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":64138,"byte_end":64145,"line_start":260,"line_end":260,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Arena<T>>::get_mut","value":"fn get_mut(&mut Self, Handle<T>) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to an element in the arena.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to an element in the arena.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":64071,"byte_end":64126,"line_start":259,"line_end":259,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":64339,"byte_end":64349,"line_start":265,"line_end":265,"column_start":12,"column_end":22},"name":"range_from","qualname":"<Arena<T>>::range_from","value":"fn range_from(&Self, usize) -> Range<T>","parent":null,"children":[],"decl_id":null,"docs":" Get the range of handles from a particular number of elements to the end.\n","sig":null,"attributes":[{"value":"/ Get the range of handles from a particular number of elements to the end.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":64250,"byte_end":64327,"line_start":264,"line_end":264,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":64578,"byte_end":64583,"line_start":273,"line_end":273,"column_start":12,"column_end":17},"name":"clear","qualname":"<Arena<T>>::clear","value":"fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the arena keeping all allocations\n","sig":null,"attributes":[{"value":"/ Clears the arena keeping all allocations","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":64522,"byte_end":64566,"line_start":272,"line_end":272,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":64641,"byte_end":64649,"line_start":277,"line_end":277,"column_start":12,"column_end":20},"name":"get_span","qualname":"<Arena<T>>::get_span","value":"fn get_span(&Self, Handle<T>) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":65617,"byte_end":65622,"line_start":318,"line_end":318,"column_start":8,"column_end":13},"name":"index","qualname":"<Arena<T> as std::ops::Index>::index","value":"fn index(&Self, Handle<T>) -> &T","parent":{"krate":2,"index":3454},"children":[],"decl_id":{"krate":2,"index":3457},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":65756,"byte_end":65765,"line_start":324,"line_end":324,"column_start":8,"column_end":17},"name":"index_mut","qualname":"<Arena<T> as std::ops::IndexMut>::index_mut","value":"fn index_mut(&mut Self, Handle<T>) -> &mut T","parent":{"krate":2,"index":3458},"children":[],"decl_id":{"krate":2,"index":3460},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":65930,"byte_end":65935,"line_start":331,"line_end":331,"column_start":8,"column_end":13},"name":"index","qualname":"<Arena<T> as std::ops::Index>::index","value":"fn index(&Self, Range<T>) -> &[T]","parent":{"krate":2,"index":3454},"children":[],"decl_id":{"krate":2,"index":3457},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":125},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":67926,"byte_end":67937,"line_start":391,"line_end":391,"column_start":12,"column_end":23},"name":"UniqueArena","qualname":"::arena::UniqueArena","value":"UniqueArena {  }","parent":null,"children":[{"krate":0,"index":127}],"decl_id":null,"docs":" An arena whose elements are guaranteed to be unique.","sig":null,"attributes":[{"value":"/ An arena whose elements are guaranteed to be unique.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":67235,"byte_end":67291,"line_start":377,"line_end":377,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":67292,"byte_end":67295,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ A `UniqueArena` holds a set of unique values of type `T`, each with an","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":67296,"byte_end":67370,"line_start":379,"line_end":379,"column_start":1,"column_end":75}},{"value":"/ associated [`Span`]. Inserting a value returns a `Handle<T>`, which can be","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":67371,"byte_end":67449,"line_start":380,"line_end":380,"column_start":1,"column_end":79}},{"value":"/ used to index the `UniqueArena` and obtain shared access to the `T` element.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":67450,"byte_end":67530,"line_start":381,"line_end":381,"column_start":1,"column_end":81}},{"value":"/ Access via a `Handle` is an array lookup - no hash lookup is necessary.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":67531,"byte_end":67606,"line_start":382,"line_end":382,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":67607,"byte_end":67610,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ The element type must implement `Eq` and `Hash`. Insertions of equivalent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":67611,"byte_end":67688,"line_start":384,"line_end":384,"column_start":1,"column_end":78}},{"value":"/ elements, according to `Eq`, all return the same `Handle`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":67689,"byte_end":67751,"line_start":385,"line_end":385,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":67752,"byte_end":67755,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ Once inserted, elements may not be mutated.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":67756,"byte_end":67803,"line_start":387,"line_end":387,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":67804,"byte_end":67807,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ `UniqueArena` is similar to [`Arena`]: If `Arena` is vector-like,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":67808,"byte_end":67877,"line_start":389,"line_end":389,"column_start":1,"column_end":70}},{"value":"/ `UniqueArena` is `HashSet`-like.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":67878,"byte_end":67914,"line_start":390,"line_end":390,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":68469,"byte_end":68472,"line_start":406,"line_end":406,"column_start":12,"column_end":15},"name":"new","qualname":"<UniqueArena<T>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new arena with no initial capacity allocated.\n","sig":null,"attributes":[{"value":"/ Create a new arena with no initial capacity allocated.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":68399,"byte_end":68457,"line_start":405,"line_end":405,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":68706,"byte_end":68709,"line_start":415,"line_end":415,"column_start":12,"column_end":15},"name":"len","qualname":"<UniqueArena<T>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the current number of items stored in this arena.\n","sig":null,"attributes":[{"value":"/ Return the current number of items stored in this arena.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":68634,"byte_end":68694,"line_start":414,"line_end":414,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":68826,"byte_end":68834,"line_start":420,"line_end":420,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<UniqueArena<T>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the arena contains no elements.\n","sig":null,"attributes":[{"value":"/ Return `true` if the arena contains no elements.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":68762,"byte_end":68814,"line_start":419,"line_end":419,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":68949,"byte_end":68954,"line_start":425,"line_end":425,"column_start":12,"column_end":17},"name":"clear","qualname":"<UniqueArena<T>>::clear","value":"fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the arena, keeping all allocations.\n","sig":null,"attributes":[{"value":"/ Clears the arena, keeping all allocations.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":68891,"byte_end":68937,"line_start":424,"line_end":424,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":69401,"byte_end":69409,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"get_span","qualname":"<UniqueArena<T>>::get_span","value":"fn get_span(&Self, Handle<T>) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Return the span associated with `handle`.","sig":null,"attributes":[{"value":"/ Return the span associated with `handle`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":69070,"byte_end":69115,"line_start":431,"line_end":431,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":69120,"byte_end":69123,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ If a value has been inserted multiple times, the span returned is the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":69128,"byte_end":69201,"line_start":433,"line_end":433,"column_start":5,"column_end":78}},{"value":"/ one provided with the first insertion.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":69206,"byte_end":69248,"line_start":434,"line_end":434,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":69253,"byte_end":69256,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ If the `span` feature is not enabled, always return `Span::default`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":69261,"byte_end":69333,"line_start":436,"line_end":436,"column_start":5,"column_end":77}},{"value":"/ This can be detected with [`Span::is_defined`].","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":69338,"byte_end":69389,"line_start":437,"line_end":437,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":69931,"byte_end":69935,"line_start":457,"line_end":457,"column_start":12,"column_end":16},"name":"iter","qualname":"<UniqueArena<T>>::iter","value":"fn iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the items stored in this arena, returning both\n the item's handle and a reference to it.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the items stored in this arena, returning both","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":69795,"byte_end":69870,"line_start":455,"line_end":455,"column_start":5,"column_end":80}},{"value":"/ the item's handle and a reference to it.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":69875,"byte_end":69919,"line_start":456,"line_end":456,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":70824,"byte_end":70830,"line_start":479,"line_end":479,"column_start":12,"column_end":18},"name":"insert","qualname":"<UniqueArena<T>>::insert","value":"fn insert(&mut Self, T, Span) -> Handle<T>","parent":null,"children":[],"decl_id":null,"docs":" Insert a new value into the arena.","sig":null,"attributes":[{"value":"/ Insert a new value into the arena.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":70214,"byte_end":70252,"line_start":465,"line_end":465,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":70257,"byte_end":70260,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ Return a [`Handle<T>`], which can be used to index this arena to get a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":70265,"byte_end":70339,"line_start":467,"line_end":467,"column_start":5,"column_end":79}},{"value":"/ shared reference to the element.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":70344,"byte_end":70380,"line_start":468,"line_end":468,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":70385,"byte_end":70388,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ If this arena already contains an element that is `Eq` to `value`,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":70393,"byte_end":70463,"line_start":470,"line_end":470,"column_start":5,"column_end":75}},{"value":"/ return a `Handle` to the existing element, and drop `value`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":70468,"byte_end":70532,"line_start":471,"line_end":471,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":70537,"byte_end":70540,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ When the `span` feature is enabled, if `value` is inserted into the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":70545,"byte_end":70616,"line_start":473,"line_end":473,"column_start":5,"column_end":76}},{"value":"/ arena, associate `span` with it. An element's span can be retrieved with","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":70621,"byte_end":70697,"line_start":474,"line_end":474,"column_start":5,"column_end":81}},{"value":"/ the [`get_span`] method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":70702,"byte_end":70730,"line_start":475,"line_end":475,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":70735,"byte_end":70738,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ [`Handle<T>`]: Handle","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":70743,"byte_end":70768,"line_start":477,"line_end":477,"column_start":5,"column_end":30}},{"value":"/ [`get_span`]: UniqueArena::get_span","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":70773,"byte_end":70812,"line_start":478,"line_end":478,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":71513,"byte_end":71516,"line_start":502,"line_end":502,"column_start":12,"column_end":15},"name":"get","qualname":"<UniqueArena<T>>::get","value":"fn get(&Self, &T) -> Option<Handle<T>>","parent":null,"children":[],"decl_id":null,"docs":" Return this arena's handle for `value`, if present.","sig":null,"attributes":[{"value":"/ Return this arena's handle for `value`, if present.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":71317,"byte_end":71372,"line_start":498,"line_end":498,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":71377,"byte_end":71380,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ If this arena already contains an element equal to `value`,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":71385,"byte_end":71448,"line_start":500,"line_end":500,"column_start":5,"column_end":68}},{"value":"/ return its handle. Otherwise, return `None`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":71453,"byte_end":71501,"line_start":501,"line_end":501,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":71773,"byte_end":71783,"line_start":509,"line_end":509,"column_start":12,"column_end":22},"name":"get_handle","qualname":"<UniqueArena<T>>::get_handle","value":"fn get_handle(&Self, Handle<T>) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Return this arena's value at `handle`, if that is a valid handle.\n","sig":null,"attributes":[{"value":"/ Return this arena's value at `handle`, if that is a valid handle.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":71692,"byte_end":71761,"line_start":508,"line_end":508,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":71922,"byte_end":71929,"line_start":515,"line_end":515,"column_start":8,"column_end":15},"name":"default","qualname":"<UniqueArena<T> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":72048,"byte_end":72051,"line_start":521,"line_end":521,"column_start":8,"column_end":11},"name":"fmt","qualname":"<UniqueArena<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":72240,"byte_end":72245,"line_start":528,"line_end":528,"column_start":8,"column_end":13},"name":"index","qualname":"<UniqueArena<T> as std::ops::Index>::index","value":"fn index(&Self, Handle<T>) -> &T","parent":{"krate":2,"index":3454},"children":[],"decl_id":{"krate":2,"index":3457},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":154},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"back","qualname":"::back","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":2209},{"krate":0,"index":2212},{"krate":0,"index":2214},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":449},{"krate":0,"index":455},{"krate":0,"index":2215},{"krate":0,"index":2222},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2227},{"krate":0,"index":2231},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2236},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":468},{"krate":0,"index":469}],"decl_id":null,"docs":" Functions which export shader modules into binary and text formats.\n","sig":null,"attributes":[{"value":"/ Functions which export shader modules into binary and text formats.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":73178,"byte_end":73249,"line_start":1,"line_end":1,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":155},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"msl","qualname":"::back::msl","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":209},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":1995},{"krate":0,"index":2002},{"krate":0,"index":2004},{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":2013},{"krate":0,"index":2016},{"krate":0,"index":2021},{"krate":0,"index":2023},{"krate":0,"index":2025},{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2031},{"krate":0,"index":2032},{"krate":0,"index":2034},{"krate":0,"index":381},{"krate":0,"index":2037},{"krate":0,"index":2041},{"krate":0,"index":2043},{"krate":0,"index":2045},{"krate":0,"index":2047},{"krate":0,"index":2050},{"krate":0,"index":2051},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2057},{"krate":0,"index":2061},{"krate":0,"index":2063},{"krate":0,"index":2065},{"krate":0,"index":2067},{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":2077},{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":2098},{"krate":0,"index":2103},{"krate":0,"index":2112},{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2143},{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2159},{"krate":0,"index":2168},{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2173},{"krate":0,"index":2179},{"krate":0,"index":2181},{"krate":0,"index":2183},{"krate":0,"index":2186},{"krate":0,"index":2187},{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":402},{"krate":0,"index":2193},{"krate":0,"index":2195},{"krate":0,"index":2197},{"krate":0,"index":2199},{"krate":0,"index":2200},{"krate":0,"index":2203},{"krate":0,"index":2204},{"krate":0,"index":2206},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":411},{"krate":0,"index":421},{"krate":0,"index":431},{"krate":0,"index":433}],"decl_id":null,"docs":" Metal Shading Language (MSL) backend","sig":null,"attributes":[{"value":"cfg(feature = \"msl-out\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":73378,"byte_end":73405,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"* Metal Shading Language (MSL) backend\n\n## Binding model\n\nMetal's bindings are flat per resource. Since there isn't an obvious mapping\nfrom SPIR-V's descriptor sets, we require a separate mapping provided in the options.\nThis mapping may have one or more resource end points for each descriptor set + index\npair.\n\n## Entry points\n\nEven though MSL and our IR appear to be similar in that the entry points in both can\naccept arguments and return values, the restrictions are different.\nMSL allows the varyings to be either in separate arguments, or inside a single\n`[[stage_in]]` struct. We gather input varyings and form this artificial structure.\nWe also add all the (non-Private) globals into the arguments.\n\nAt the beginning of the entry point, we assign the local constants and re-compose\nthe arguments as they are declared on IR side, so that the rest of the logic can\npretend that MSL doesn't have all the restrictions it has.\n\nFor the result type, if it's a structure, we re-compose it with a temporary value\nholding the result.\n!*/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":85468,"byte_end":86508,"line_start":1,"line_end":24,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":176},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sampler","qualname":"::back::msl::sampler","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":1859},{"krate":0,"index":1864},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1875},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":1878},{"krate":0,"index":1889},{"krate":0,"index":1891},{"krate":0,"index":1892},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1900},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":1903},{"krate":0,"index":1910},{"krate":0,"index":1912},{"krate":0,"index":1913},{"krate":0,"index":1915},{"krate":0,"index":1916},{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1921},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":1924},{"krate":0,"index":1929},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1940},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":1943},{"krate":0,"index":1960},{"krate":0,"index":1962},{"krate":0,"index":1963},{"krate":0,"index":1965},{"krate":0,"index":1966},{"krate":0,"index":1968},{"krate":0,"index":1969},{"krate":0,"index":1971},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":1974},{"krate":0,"index":1985},{"krate":0,"index":1987},{"krate":0,"index":1989},{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":204},{"krate":0,"index":205}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1860},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":105958,"byte_end":105968,"line_start":11,"line_end":11,"column_start":5,"column_end":15},"name":"Normalized","qualname":"::back::msl::sampler::Coord::Normalized","value":"Coord::Normalized","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1862},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":105974,"byte_end":105979,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"Pixel","qualname":"::back::msl::sampler::Coord::Pixel","value":"Coord::Pixel","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1859},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":105946,"byte_end":105951,"line_start":10,"line_end":10,"column_start":10,"column_end":15},"name":"Coord","qualname":"::back::msl::sampler::Coord","value":"enum Coord { Normalized, Pixel, }","parent":null,"children":[{"krate":0,"index":1860},{"krate":0,"index":1862}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":106016,"byte_end":106023,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"default","qualname":"<Coord as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":106094,"byte_end":106100,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Coord>::as_str","value":"fn as_str(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1879},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":106435,"byte_end":106441,"line_start":34,"line_end":34,"column_start":5,"column_end":11},"name":"Repeat","qualname":"::back::msl::sampler::Address::Repeat","value":"Address::Repeat","parent":{"krate":0,"index":1878},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1881},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":106447,"byte_end":106461,"line_start":35,"line_end":35,"column_start":5,"column_end":19},"name":"MirroredRepeat","qualname":"::back::msl::sampler::Address::MirroredRepeat","value":"Address::MirroredRepeat","parent":{"krate":0,"index":1878},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1883},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":106467,"byte_end":106478,"line_start":36,"line_end":36,"column_start":5,"column_end":16},"name":"ClampToEdge","qualname":"::back::msl::sampler::Address::ClampToEdge","value":"Address::ClampToEdge","parent":{"krate":0,"index":1878},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1885},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":106484,"byte_end":106495,"line_start":37,"line_end":37,"column_start":5,"column_end":16},"name":"ClampToZero","qualname":"::back::msl::sampler::Address::ClampToZero","value":"Address::ClampToZero","parent":{"krate":0,"index":1878},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1887},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":106501,"byte_end":106514,"line_start":38,"line_end":38,"column_start":5,"column_end":18},"name":"ClampToBorder","qualname":"::back::msl::sampler::Address::ClampToBorder","value":"Address::ClampToBorder","parent":{"krate":0,"index":1878},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1878},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":106421,"byte_end":106428,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"name":"Address","qualname":"::back::msl::sampler::Address","value":"enum Address {\n    Repeat,\n    MirroredRepeat,\n    ClampToEdge,\n    ClampToZero,\n    ClampToBorder,\n}","parent":null,"children":[{"krate":0,"index":1879},{"krate":0,"index":1881},{"krate":0,"index":1883},{"krate":0,"index":1885},{"krate":0,"index":1887}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":106553,"byte_end":106560,"line_start":42,"line_end":42,"column_start":8,"column_end":15},"name":"default","qualname":"<Address as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":106634,"byte_end":106640,"line_start":48,"line_end":48,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Address>::as_str","value":"fn as_str(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1904},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":107144,"byte_end":107160,"line_start":63,"line_end":63,"column_start":5,"column_end":21},"name":"TransparentBlack","qualname":"::back::msl::sampler::BorderColor::TransparentBlack","value":"BorderColor::TransparentBlack","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1906},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":107166,"byte_end":107177,"line_start":64,"line_end":64,"column_start":5,"column_end":16},"name":"OpaqueBlack","qualname":"::back::msl::sampler::BorderColor::OpaqueBlack","value":"BorderColor::OpaqueBlack","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1908},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":107183,"byte_end":107194,"line_start":65,"line_end":65,"column_start":5,"column_end":16},"name":"OpaqueWhite","qualname":"::back::msl::sampler::BorderColor::OpaqueWhite","value":"BorderColor::OpaqueWhite","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1903},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":107126,"byte_end":107137,"line_start":62,"line_end":62,"column_start":10,"column_end":21},"name":"BorderColor","qualname":"::back::msl::sampler::BorderColor","value":"enum BorderColor { TransparentBlack, OpaqueBlack, OpaqueWhite, }","parent":null,"children":[{"krate":0,"index":1904},{"krate":0,"index":1906},{"krate":0,"index":1908}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":107237,"byte_end":107244,"line_start":69,"line_end":69,"column_start":8,"column_end":15},"name":"default","qualname":"<BorderColor as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":107327,"byte_end":107333,"line_start":75,"line_end":75,"column_start":12,"column_end":18},"name":"as_str","qualname":"<BorderColor>::as_str","value":"fn as_str(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1925},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":107742,"byte_end":107749,"line_start":88,"line_end":88,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::back::msl::sampler::Filter::Nearest","value":"Filter::Nearest","parent":{"krate":0,"index":1924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1927},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":107755,"byte_end":107761,"line_start":89,"line_end":89,"column_start":5,"column_end":11},"name":"Linear","qualname":"::back::msl::sampler::Filter::Linear","value":"Filter::Linear","parent":{"krate":0,"index":1924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1924},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":107729,"byte_end":107735,"line_start":87,"line_end":87,"column_start":10,"column_end":16},"name":"Filter","qualname":"::back::msl::sampler::Filter","value":"enum Filter { Nearest, Linear, }","parent":null,"children":[{"krate":0,"index":1925},{"krate":0,"index":1927}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":107791,"byte_end":107797,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Filter>::as_str","value":"fn as_str(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":107975,"byte_end":107982,"line_start":102,"line_end":102,"column_start":8,"column_end":15},"name":"default","qualname":"<Filter as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1944},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":108216,"byte_end":108221,"line_start":111,"line_end":111,"column_start":5,"column_end":10},"name":"Never","qualname":"::back::msl::sampler::CompareFunc::Never","value":"CompareFunc::Never","parent":{"krate":0,"index":1943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1946},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":108227,"byte_end":108231,"line_start":112,"line_end":112,"column_start":5,"column_end":9},"name":"Less","qualname":"::back::msl::sampler::CompareFunc::Less","value":"CompareFunc::Less","parent":{"krate":0,"index":1943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1948},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":108237,"byte_end":108246,"line_start":113,"line_end":113,"column_start":5,"column_end":14},"name":"LessEqual","qualname":"::back::msl::sampler::CompareFunc::LessEqual","value":"CompareFunc::LessEqual","parent":{"krate":0,"index":1943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1950},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":108252,"byte_end":108259,"line_start":114,"line_end":114,"column_start":5,"column_end":12},"name":"Greater","qualname":"::back::msl::sampler::CompareFunc::Greater","value":"CompareFunc::Greater","parent":{"krate":0,"index":1943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1952},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":108265,"byte_end":108277,"line_start":115,"line_end":115,"column_start":5,"column_end":17},"name":"GreaterEqual","qualname":"::back::msl::sampler::CompareFunc::GreaterEqual","value":"CompareFunc::GreaterEqual","parent":{"krate":0,"index":1943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1954},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":108283,"byte_end":108288,"line_start":116,"line_end":116,"column_start":5,"column_end":10},"name":"Equal","qualname":"::back::msl::sampler::CompareFunc::Equal","value":"CompareFunc::Equal","parent":{"krate":0,"index":1943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1956},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":108294,"byte_end":108302,"line_start":117,"line_end":117,"column_start":5,"column_end":13},"name":"NotEqual","qualname":"::back::msl::sampler::CompareFunc::NotEqual","value":"CompareFunc::NotEqual","parent":{"krate":0,"index":1943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1958},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":108308,"byte_end":108314,"line_start":118,"line_end":118,"column_start":5,"column_end":11},"name":"Always","qualname":"::back::msl::sampler::CompareFunc::Always","value":"CompareFunc::Always","parent":{"krate":0,"index":1943},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1943},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":108198,"byte_end":108209,"line_start":110,"line_end":110,"column_start":10,"column_end":21},"name":"CompareFunc","qualname":"::back::msl::sampler::CompareFunc","value":"enum CompareFunc {\n    Never,\n    Less,\n    LessEqual,\n    Greater,\n    GreaterEqual,\n    Equal,\n    NotEqual,\n    Always,\n}","parent":null,"children":[{"krate":0,"index":1944},{"krate":0,"index":1946},{"krate":0,"index":1948},{"krate":0,"index":1950},{"krate":0,"index":1952},{"krate":0,"index":1954},{"krate":0,"index":1956},{"krate":0,"index":1958}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":108357,"byte_end":108364,"line_start":122,"line_end":122,"column_start":8,"column_end":15},"name":"default","qualname":"<CompareFunc as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":108436,"byte_end":108442,"line_start":128,"line_end":128,"column_start":12,"column_end":18},"name":"as_str","qualname":"<CompareFunc>::as_str","value":"fn as_str(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1974},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":108999,"byte_end":109012,"line_start":145,"line_end":145,"column_start":12,"column_end":25},"name":"InlineSampler","qualname":"::back::msl::sampler::InlineSampler","value":"InlineSampler { coord, address, border_color, mag_filter, min_filter, mip_filter, lod_clamp, max_anisotropy, compare_func }","parent":null,"children":[{"krate":0,"index":1975},{"krate":0,"index":1976},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1981},{"krate":0,"index":1982},{"krate":0,"index":1983},{"krate":0,"index":1984}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1975},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":109023,"byte_end":109028,"line_start":146,"line_end":146,"column_start":9,"column_end":14},"name":"coord","qualname":"::back::msl::sampler::InlineSampler::coord","value":"back::msl::sampler::Coord","parent":{"krate":0,"index":1974},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1976},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":109045,"byte_end":109052,"line_start":147,"line_end":147,"column_start":9,"column_end":16},"name":"address","qualname":"::back::msl::sampler::InlineSampler::address","value":"[back::msl::sampler::Address; 3]","parent":{"krate":0,"index":1974},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1978},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":109076,"byte_end":109088,"line_start":148,"line_end":148,"column_start":9,"column_end":21},"name":"border_color","qualname":"::back::msl::sampler::InlineSampler::border_color","value":"back::msl::sampler::BorderColor","parent":{"krate":0,"index":1974},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1979},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":109111,"byte_end":109121,"line_start":149,"line_end":149,"column_start":9,"column_end":19},"name":"mag_filter","qualname":"::back::msl::sampler::InlineSampler::mag_filter","value":"back::msl::sampler::Filter","parent":{"krate":0,"index":1974},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1980},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":109139,"byte_end":109149,"line_start":150,"line_end":150,"column_start":9,"column_end":19},"name":"min_filter","qualname":"::back::msl::sampler::InlineSampler::min_filter","value":"back::msl::sampler::Filter","parent":{"krate":0,"index":1974},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1981},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":109167,"byte_end":109177,"line_start":151,"line_end":151,"column_start":9,"column_end":19},"name":"mip_filter","qualname":"::back::msl::sampler::InlineSampler::mip_filter","value":"std::option::Option<back::msl::sampler::Filter>","parent":{"krate":0,"index":1974},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1982},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":109203,"byte_end":109212,"line_start":152,"line_end":152,"column_start":9,"column_end":18},"name":"lod_clamp","qualname":"::back::msl::sampler::InlineSampler::lod_clamp","value":"std::option::Option<std::ops::Range<f32>>","parent":{"krate":0,"index":1974},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1983},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":109242,"byte_end":109256,"line_start":153,"line_end":153,"column_start":9,"column_end":23},"name":"max_anisotropy","qualname":"::back::msl::sampler::InlineSampler::max_anisotropy","value":"std::option::Option<std::num::NonZeroU32>","parent":{"krate":0,"index":1974},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1984},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":109286,"byte_end":109298,"line_start":154,"line_end":154,"column_start":9,"column_end":21},"name":"compare_func","qualname":"::back::msl::sampler::InlineSampler::compare_func","value":"back::msl::sampler::CompareFunc","parent":{"krate":0,"index":1974},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":109431,"byte_end":109435,"line_start":161,"line_end":161,"column_start":8,"column_end":12},"name":"hash","qualname":"<InlineSampler as std::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: std::hash::Hasher","parent":{"krate":2,"index":10122},"children":[],"decl_id":{"krate":2,"index":10123},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":306},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/writer.rs","byte_start":121062,"byte_end":121068,"line_start":305,"line_end":305,"column_start":12,"column_end":18},"name":"Writer","qualname":"::back::msl::writer::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/writer.rs","byte_start":126231,"byte_end":126234,"line_start":470,"line_end":470,"column_start":12,"column_end":15},"name":"new","qualname":"<Writer<W>>::new","value":"fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Writer` instance.\n","sig":null,"attributes":[{"value":"/ Creates a new `Writer` instance.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/writer.rs","byte_start":126183,"byte_end":126219,"line_start":469,"line_end":469,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/writer.rs","byte_start":126803,"byte_end":126809,"line_start":486,"line_end":486,"column_start":12,"column_end":18},"name":"finish","qualname":"<Writer<W>>::finish","value":"fn finish(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Finishes writing and returns the output.\n","sig":null,"attributes":[{"value":"/ Finishes writing and returns the output.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/writer.rs","byte_start":126747,"byte_end":126791,"line_start":485,"line_end":485,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/writer.rs","byte_start":182713,"byte_end":182718,"line_start":1754,"line_end":1754,"column_start":12,"column_end":17},"name":"write","qualname":"<Writer<W>>::write","value":"fn write(&mut Self, &crate::Module, &valid::ModuleInfo, &Options,\n&PipelineOptions) -> Result<TranslationInfo, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":379},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":86696,"byte_end":86700,"line_start":38,"line_end":38,"column_start":10,"column_end":14},"name":"Slot","qualname":"::back::msl::Slot","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":380},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":86716,"byte_end":86734,"line_start":39,"line_end":39,"column_start":10,"column_end":28},"name":"InlineSamplerIndex","qualname":"::back::msl::InlineSamplerIndex","value":"u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1996},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":86946,"byte_end":86954,"line_start":45,"line_end":45,"column_start":5,"column_end":13},"name":"Resource","qualname":"::back::msl::BindSamplerTarget::Resource","value":"BindSamplerTarget::Resource(Slot)","parent":{"krate":0,"index":1995},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1998},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":86955,"byte_end":86959,"line_start":45,"line_end":45,"column_start":14,"column_end":18},"name":"0","qualname":"::back::msl::BindSamplerTarget::Resource::0","value":"u8","parent":{"krate":0,"index":1996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1999},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":86966,"byte_end":86972,"line_start":46,"line_end":46,"column_start":5,"column_end":11},"name":"Inline","qualname":"::back::msl::BindSamplerTarget::Inline","value":"BindSamplerTarget::Inline(InlineSamplerIndex)","parent":{"krate":0,"index":1995},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2001},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":86973,"byte_end":86991,"line_start":46,"line_end":46,"column_start":12,"column_end":30},"name":"0","qualname":"::back::msl::BindSamplerTarget::Inline::0","value":"u8","parent":{"krate":0,"index":1999},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1995},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":86922,"byte_end":86939,"line_start":44,"line_end":44,"column_start":10,"column_end":27},"name":"BindSamplerTarget","qualname":"::back::msl::BindSamplerTarget","value":"enum BindSamplerTarget { Resource(Slot), Inline(InlineSamplerIndex), }","parent":null,"children":[{"krate":0,"index":1996},{"krate":0,"index":1999}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2016},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":87188,"byte_end":87198,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"BindTarget","qualname":"::back::msl::BindTarget","value":"BindTarget { buffer, texture, sampler, mutable }","parent":null,"children":[{"krate":0,"index":2017},{"krate":0,"index":2018},{"krate":0,"index":2019},{"krate":0,"index":2020}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2017},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":87266,"byte_end":87272,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"name":"buffer","qualname":"::back::msl::BindTarget::buffer","value":"std::option::Option<u8>","parent":{"krate":0,"index":2016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2018},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":87353,"byte_end":87360,"line_start":56,"line_end":56,"column_start":9,"column_end":16},"name":"texture","qualname":"::back::msl::BindTarget::texture","value":"std::option::Option<u8>","parent":{"krate":0,"index":2016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2019},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":87441,"byte_end":87448,"line_start":58,"line_end":58,"column_start":9,"column_end":16},"name":"sampler","qualname":"::back::msl::BindTarget::sampler","value":"std::option::Option<back::msl::BindSamplerTarget>","parent":{"krate":0,"index":2016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2020},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":87542,"byte_end":87549,"line_start":60,"line_end":60,"column_start":9,"column_end":16},"name":"mutable","qualname":"::back::msl::BindTarget::mutable","value":"bool","parent":{"krate":0,"index":2016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":381},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":87638,"byte_end":87648,"line_start":64,"line_end":64,"column_start":10,"column_end":20},"name":"BindingMap","qualname":"::back::msl::BindingMap","value":"std::collections::BTreeMap<crate::ResourceBinding, BindTarget>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2037},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":87907,"byte_end":87924,"line_start":69,"line_end":69,"column_start":12,"column_end":29},"name":"PerStageResources","qualname":"::back::msl::PerStageResources","value":"PerStageResources { resources, push_constant_buffer, sizes_buffer }","parent":null,"children":[{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2038},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":87992,"byte_end":88001,"line_start":71,"line_end":71,"column_start":9,"column_end":18},"name":"resources","qualname":"::back::msl::PerStageResources::resources","value":"std::collections::BTreeMap<ResourceBinding, back::msl::BindTarget>","parent":{"krate":0,"index":2037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2039},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":88081,"byte_end":88101,"line_start":74,"line_end":74,"column_start":9,"column_end":29},"name":"push_constant_buffer","qualname":"::back::msl::PerStageResources::push_constant_buffer","value":"std::option::Option<u8>","parent":{"krate":0,"index":2037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2040},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":88382,"byte_end":88394,"line_start":80,"line_end":80,"column_start":9,"column_end":21},"name":"sizes_buffer","qualname":"::back::msl::PerStageResources::sizes_buffer","value":"std::option::Option<u8>","parent":{"krate":0,"index":2037},"children":[],"decl_id":null,"docs":" The slot of a buffer that contains an array of `u32`,\n one for the size of each bound buffer that contains a runtime array,\n in order of [`crate::GlobalVariable`] declarations.\n","sig":null,"attributes":[{"value":"/ The slot of a buffer that contains an array of `u32`,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":88122,"byte_end":88179,"line_start":76,"line_end":76,"column_start":5,"column_end":62}},{"value":"/ one for the size of each bound buffer that contains a runtime array,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":88184,"byte_end":88256,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ in order of [`crate::GlobalVariable`] declarations.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":88261,"byte_end":88316,"line_start":78,"line_end":78,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2057},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":88604,"byte_end":88615,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"PerStageMap","qualname":"::back::msl::PerStageMap","value":"PerStageMap { vs, fs, cs }","parent":null,"children":[{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2058},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":88683,"byte_end":88685,"line_start":88,"line_end":88,"column_start":9,"column_end":11},"name":"vs","qualname":"::back::msl::PerStageMap::vs","value":"back::msl::PerStageResources","parent":{"krate":0,"index":2057},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2059},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":88771,"byte_end":88773,"line_start":90,"line_end":90,"column_start":9,"column_end":11},"name":"fs","qualname":"::back::msl::PerStageMap::fs","value":"back::msl::PerStageResources","parent":{"krate":0,"index":2057},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2060},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":88859,"byte_end":88861,"line_start":92,"line_end":92,"column_start":9,"column_end":11},"name":"cs","qualname":"::back::msl::PerStageMap::cs","value":"back::msl::PerStageResources","parent":{"krate":0,"index":2057},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":88983,"byte_end":88988,"line_start":97,"line_end":97,"column_start":8,"column_end":13},"name":"index","qualname":"<PerStageMap as std::ops::Index>::index","value":"fn index(&Self, crate::ShaderStage) -> &PerStageResources","parent":{"krate":2,"index":3454},"children":[],"decl_id":{"krate":2,"index":3457},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2114},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":89857,"byte_end":89863,"line_start":134,"line_end":134,"column_start":5,"column_end":11},"name":"Format","qualname":"::back::msl::Error::Format","value":"Error::Format(FmtError)","parent":{"krate":0,"index":2095},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":89831,"byte_end":89852,"line_start":133,"line_end":133,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2116},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":89872,"byte_end":89880,"line_start":134,"line_end":134,"column_start":20,"column_end":28},"name":"0","qualname":"::back::msl::Error::Format::0","value":"std::fmt::Error","parent":{"krate":0,"index":2114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":89864,"byte_end":89871,"line_start":134,"line_end":134,"column_start":12,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2117},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":89930,"byte_end":89953,"line_start":136,"line_end":136,"column_start":5,"column_end":28},"name":"UnimplementedBindTarget","qualname":"::back::msl::Error::UnimplementedBindTarget","value":"Error::UnimplementedBindTarget(BindTarget)","parent":{"krate":0,"index":2095},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"bind target {0:?} is empty\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":89887,"byte_end":89925,"line_start":135,"line_end":135,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2119},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":89954,"byte_end":89964,"line_start":136,"line_end":136,"column_start":29,"column_end":39},"name":"0","qualname":"::back::msl::Error::UnimplementedBindTarget::0","value":"back::msl::BindTarget","parent":{"krate":0,"index":2117},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2120},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90029,"byte_end":90047,"line_start":138,"line_end":138,"column_start":5,"column_end":23},"name":"UnsupportedCompose","qualname":"::back::msl::Error::UnsupportedCompose","value":"Error::UnsupportedCompose(Handle<crate::Type>)","parent":{"krate":0,"index":2095},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"composing of {0:?} is not implemented yet\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":89971,"byte_end":90024,"line_start":137,"line_end":137,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2122},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90048,"byte_end":90067,"line_start":138,"line_end":138,"column_start":24,"column_end":43},"name":"0","qualname":"::back::msl::Error::UnsupportedCompose::0","value":"arena::Handle<Type>","parent":{"krate":0,"index":2120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2123},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90129,"byte_end":90148,"line_start":140,"line_end":140,"column_start":5,"column_end":24},"name":"UnsupportedBinaryOp","qualname":"::back::msl::Error::UnsupportedBinaryOp","value":"Error::UnsupportedBinaryOp(crate::BinaryOperator)","parent":{"krate":0,"index":2095},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"operation {0:?} is not implemented yet\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90074,"byte_end":90124,"line_start":139,"line_end":139,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2125},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90149,"byte_end":90170,"line_start":140,"line_end":140,"column_start":25,"column_end":46},"name":"0","qualname":"::back::msl::Error::UnsupportedBinaryOp::0","value":"BinaryOperator","parent":{"krate":0,"index":2123},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2126},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90240,"byte_end":90255,"line_start":142,"line_end":142,"column_start":5,"column_end":20},"name":"UnsupportedCall","qualname":"::back::msl::Error::UnsupportedCall","value":"Error::UnsupportedCall(String)","parent":{"krate":0,"index":2095},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"standard function '{0}' is not implemented yet\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90177,"byte_end":90235,"line_start":141,"line_end":141,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":2128},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90256,"byte_end":90262,"line_start":142,"line_end":142,"column_start":21,"column_end":27},"name":"0","qualname":"::back::msl::Error::UnsupportedCall::0","value":"std::string::String","parent":{"krate":0,"index":2126},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2129},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90322,"byte_end":90343,"line_start":144,"line_end":144,"column_start":5,"column_end":26},"name":"FeatureNotImplemented","qualname":"::back::msl::Error::FeatureNotImplemented","value":"Error::FeatureNotImplemented(String)","parent":{"krate":0,"index":2095},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"feature '{0}' is not implemented yet\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90269,"byte_end":90317,"line_start":143,"line_end":143,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":2131},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90344,"byte_end":90350,"line_start":144,"line_end":144,"column_start":27,"column_end":33},"name":"0","qualname":"::back::msl::Error::FeatureNotImplemented::0","value":"std::string::String","parent":{"krate":0,"index":2129},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2132},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90393,"byte_end":90403,"line_start":146,"line_end":146,"column_start":5,"column_end":15},"name":"Validation","qualname":"::back::msl::Error::Validation","value":"Error::Validation","parent":{"krate":0,"index":2095},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"module is not valid\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90357,"byte_end":90388,"line_start":145,"line_end":145,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2134},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90456,"byte_end":90474,"line_start":148,"line_end":148,"column_start":5,"column_end":23},"name":"UnsupportedBuiltIn","qualname":"::back::msl::Error::UnsupportedBuiltIn","value":"Error::UnsupportedBuiltIn(crate::BuiltIn)","parent":{"krate":0,"index":2095},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"BuiltIn {0:?} is not supported\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90409,"byte_end":90451,"line_start":147,"line_end":147,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2136},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90475,"byte_end":90489,"line_start":148,"line_end":148,"column_start":24,"column_end":38},"name":"0","qualname":"::back::msl::Error::UnsupportedBuiltIn::0","value":"BuiltIn","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2137},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90546,"byte_end":90568,"line_start":150,"line_end":150,"column_start":5,"column_end":27},"name":"CapabilityNotSupported","qualname":"::back::msl::Error::CapabilityNotSupported","value":"Error::CapabilityNotSupported(crate::valid::Capabilities)","parent":{"krate":0,"index":2095},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"capability {0:?} is not supported\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90496,"byte_end":90541,"line_start":149,"line_end":149,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":2139},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90569,"byte_end":90595,"line_start":150,"line_end":150,"column_start":28,"column_end":54},"name":"0","qualname":"::back::msl::Error::CapabilityNotSupported::0","value":"valid::Capabilities","parent":{"krate":0,"index":2137},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2095},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":89819,"byte_end":89824,"line_start":132,"line_end":132,"column_start":10,"column_end":15},"name":"Error","qualname":"::back::msl::Error","value":"enum Error {\n    Format(FmtError),\n    UnimplementedBindTarget(BindTarget),\n    UnsupportedCompose(Handle<crate::Type>),\n    UnsupportedBinaryOp(crate::BinaryOperator),\n    UnsupportedCall(String),\n    FeatureNotImplemented(String),\n    Validation,\n    UnsupportedBuiltIn(crate::BuiltIn),\n    CapabilityNotSupported(crate::valid::Capabilities),\n}","parent":null,"children":[{"krate":0,"index":2114},{"krate":0,"index":2117},{"krate":0,"index":2120},{"krate":0,"index":2123},{"krate":0,"index":2126},{"krate":0,"index":2129},{"krate":0,"index":2132},{"krate":0,"index":2134},{"krate":0,"index":2137}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2152},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90855,"byte_end":90869,"line_start":158,"line_end":158,"column_start":5,"column_end":19},"name":"MissingBinding","qualname":"::back::msl::EntryPointError::MissingBinding","value":"EntryPointError::MissingBinding(crate::ResourceBinding)","parent":{"krate":0,"index":2140},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"mapping of {0:?} is missing\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90811,"byte_end":90850,"line_start":157,"line_end":157,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2154},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90870,"byte_end":90892,"line_start":158,"line_end":158,"column_start":20,"column_end":42},"name":"0","qualname":"::back::msl::EntryPointError::MissingBinding::0","value":"ResourceBinding","parent":{"krate":0,"index":2152},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2155},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90953,"byte_end":90973,"line_start":160,"line_end":160,"column_start":5,"column_end":25},"name":"MissingPushConstants","qualname":"::back::msl::EntryPointError::MissingPushConstants","value":"EntryPointError::MissingPushConstants","parent":{"krate":0,"index":2140},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"mapping for push constants is missing\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90899,"byte_end":90948,"line_start":159,"line_end":159,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2157},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":91031,"byte_end":91049,"line_start":162,"line_end":162,"column_start":5,"column_end":23},"name":"MissingSizesBuffer","qualname":"::back::msl::EntryPointError::MissingSizesBuffer","value":"EntryPointError::MissingSizesBuffer","parent":{"krate":0,"index":2140},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"mapping for sizes buffer is missing\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90979,"byte_end":91026,"line_start":161,"line_end":161,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":2140},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":90789,"byte_end":90804,"line_start":156,"line_end":156,"column_start":10,"column_end":25},"name":"EntryPointError","qualname":"::back::msl::EntryPointError","value":"enum EntryPointError {\n    MissingBinding(crate::ResourceBinding),\n    MissingPushConstants,\n    MissingSizesBuffer,\n}","parent":null,"children":[{"krate":0,"index":2152},{"krate":0,"index":2155},{"krate":0,"index":2157}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2173},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":91357,"byte_end":91364,"line_start":176,"line_end":176,"column_start":12,"column_end":19},"name":"Options","qualname":"::back::msl::Options","value":"Options { lang_version, per_stage_map, inline_samplers, spirv_cross_compatibility, fake_missing_bindings }","parent":null,"children":[{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":2176},{"krate":0,"index":2177},{"krate":0,"index":2178}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2174},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":91444,"byte_end":91456,"line_start":178,"line_end":178,"column_start":9,"column_end":21},"name":"lang_version","qualname":"::back::msl::Options::lang_version","value":"(u8, u8)","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" (Major, Minor) target version of the Metal Shading Language.\n","sig":null,"attributes":[{"value":"/ (Major, Minor) target version of the Metal Shading Language.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":91371,"byte_end":91435,"line_start":177,"line_end":177,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":2175},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":91521,"byte_end":91534,"line_start":180,"line_end":180,"column_start":9,"column_end":22},"name":"per_stage_map","qualname":"::back::msl::Options::per_stage_map","value":"back::msl::PerStageMap","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Map of per-stage resources to slots.\n","sig":null,"attributes":[{"value":"/ Map of per-stage resources to slots.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":91472,"byte_end":91512,"line_start":179,"line_end":179,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2176},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":91603,"byte_end":91618,"line_start":182,"line_end":182,"column_start":9,"column_end":24},"name":"inline_samplers","qualname":"::back::msl::Options::inline_samplers","value":"std::vec::Vec<back::msl::sampler::InlineSampler>","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Samplers to be inlined into the code.\n","sig":null,"attributes":[{"value":"/ Samplers to be inlined into the code.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":91553,"byte_end":91594,"line_start":181,"line_end":181,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2177},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":91724,"byte_end":91749,"line_start":184,"line_end":184,"column_start":9,"column_end":34},"name":"spirv_cross_compatibility","qualname":"::back::msl::Options::spirv_cross_compatibility","value":"bool","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Make it possible to link different stages via SPIRV-Cross.\n","sig":null,"attributes":[{"value":"/ Make it possible to link different stages via SPIRV-Cross.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":91653,"byte_end":91715,"line_start":183,"line_end":183,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":2178},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":91836,"byte_end":91857,"line_start":186,"line_end":186,"column_start":9,"column_end":30},"name":"fake_missing_bindings","qualname":"::back::msl::Options::fake_missing_bindings","value":"bool","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Don't panic on missing bindings, instead generate invalid MSL.\n","sig":null,"attributes":[{"value":"/ Don't panic on missing bindings, instead generate invalid MSL.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":91761,"byte_end":91827,"line_start":185,"line_end":185,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":91902,"byte_end":91909,"line_start":190,"line_end":190,"column_start":8,"column_end":15},"name":"default","qualname":"<Options as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2193},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":92420,"byte_end":92435,"line_start":205,"line_end":205,"column_start":12,"column_end":27},"name":"PipelineOptions","qualname":"::back::msl::PipelineOptions","value":"PipelineOptions { allow_point_size }","parent":null,"children":[{"krate":0,"index":2194}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2194},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":92571,"byte_end":92587,"line_start":208,"line_end":208,"column_start":9,"column_end":25},"name":"allow_point_size","qualname":"::back::msl::PipelineOptions::allow_point_size","value":"bool","parent":{"krate":0,"index":2193},"children":[],"decl_id":null,"docs":" Allow `BuiltIn::PointSize` in the vertex shader.\n Metal doesn't like this for non-point primitive topologies.\n","sig":null,"attributes":[{"value":"/ Allow `BuiltIn::PointSize` in the vertex shader.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":92442,"byte_end":92494,"line_start":206,"line_end":206,"column_start":5,"column_end":57}},{"value":"/ Metal doesn't like this for non-point primitive topologies.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":92499,"byte_end":92562,"line_start":207,"line_end":207,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":92640,"byte_end":92647,"line_start":212,"line_end":212,"column_start":8,"column_end":15},"name":"default","qualname":"<PipelineOptions as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":431},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":101490,"byte_end":101505,"line_start":437,"line_end":437,"column_start":12,"column_end":27},"name":"TranslationInfo","qualname":"::back::msl::TranslationInfo","value":"TranslationInfo { entry_point_names }","parent":null,"children":[{"krate":0,"index":432}],"decl_id":null,"docs":" Information about a translated module that is required\n for the use of the result.\n","sig":null,"attributes":[{"value":"/ Information about a translated module that is required","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":101389,"byte_end":101447,"line_start":435,"line_end":435,"column_start":1,"column_end":59}},{"value":"/ for the use of the result.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":101448,"byte_end":101478,"line_start":436,"line_end":436,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":432},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":101715,"byte_end":101732,"line_start":442,"line_end":442,"column_start":9,"column_end":26},"name":"entry_point_names","qualname":"::back::msl::TranslationInfo::entry_point_names","value":"std::vec::Vec<std::result::Result<std::string::String, back::msl::EntryPointError>>","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Mapping of the entry point names. Each item in the array\n corresponds to an entry point index.","sig":null,"attributes":[{"value":"/ Mapping of the entry point names. Each item in the array","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":101512,"byte_end":101572,"line_start":438,"line_end":438,"column_start":5,"column_end":65}},{"value":"/ corresponds to an entry point index.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":101577,"byte_end":101617,"line_start":439,"line_end":439,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":101622,"byte_end":101625,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/Note: Some entry points may fail translation because of missing bindings.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":101630,"byte_end":101706,"line_start":441,"line_end":441,"column_start":5,"column_end":81}}]},{"kind":"Function","id":{"krate":0,"index":433},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":101782,"byte_end":101794,"line_start":445,"line_end":445,"column_start":8,"column_end":20},"name":"write_string","qualname":"::back::msl::write_string","value":"fn write_string(&crate::Module, &ModuleInfo, &Options, &PipelineOptions)\n-> Result<(String, TranslationInfo), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2216},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":79417,"byte_end":79425,"line_start":163,"line_end":163,"column_start":5,"column_end":13},"name":"Restrict","qualname":"::back::BoundsCheckPolicy::Restrict","value":"BoundsCheckPolicy::Restrict","parent":{"krate":0,"index":2215},"children":[],"decl_id":null,"docs":" Replace out-of-bounds indexes with some arbitrary in-bounds index.","sig":null,"attributes":[{"value":"/ Replace out-of-bounds indexes with some arbitrary in-bounds index.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":79053,"byte_end":79123,"line_start":157,"line_end":157,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":79128,"byte_end":79131,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ (This does not necessarily mean clamping. For example, interpreting the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":79136,"byte_end":79211,"line_start":159,"line_end":159,"column_start":5,"column_end":80}},{"value":"/ index as unsigned and taking the minimum with the largest valid index","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":79216,"byte_end":79289,"line_start":160,"line_end":160,"column_start":5,"column_end":78}},{"value":"/ would also be a valid implementation. That would map negative indices to","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":79294,"byte_end":79370,"line_start":161,"line_end":161,"column_start":5,"column_end":81}},{"value":"/ the last element, not the first.)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":79375,"byte_end":79412,"line_start":162,"line_end":162,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2218},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":79501,"byte_end":79518,"line_start":166,"line_end":166,"column_start":5,"column_end":22},"name":"ReadZeroSkipWrite","qualname":"::back::BoundsCheckPolicy::ReadZeroSkipWrite","value":"BoundsCheckPolicy::ReadZeroSkipWrite","parent":{"krate":0,"index":2215},"children":[],"decl_id":null,"docs":" Out-of-bounds  reads return zero, and writes have no effect.\n","sig":null,"attributes":[{"value":"/ Out-of-bounds  reads return zero, and writes have no effect.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":79432,"byte_end":79496,"line_start":165,"line_end":165,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2220},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":79738,"byte_end":79747,"line_start":171,"line_end":171,"column_start":5,"column_end":14},"name":"Unchecked","qualname":"::back::BoundsCheckPolicy::Unchecked","value":"BoundsCheckPolicy::Unchecked","parent":{"krate":0,"index":2215},"children":[],"decl_id":null,"docs":" Naga adds no checks to indexing operations. Generate the fastest code\n possible. This is the default for Naga, as a translator, but consumers\n should consider defaulting to a safer behavior.\n","sig":null,"attributes":[{"value":"/ Naga adds no checks to indexing operations. Generate the fastest code","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":79525,"byte_end":79598,"line_start":168,"line_end":168,"column_start":5,"column_end":78}},{"value":"/ possible. This is the default for Naga, as a translator, but consumers","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":79603,"byte_end":79677,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/ should consider defaulting to a safer behavior.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":79682,"byte_end":79733,"line_start":170,"line_end":170,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":2215},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":79029,"byte_end":79046,"line_start":156,"line_end":156,"column_start":10,"column_end":27},"name":"BoundsCheckPolicy","qualname":"::back::BoundsCheckPolicy","value":"enum BoundsCheckPolicy { Restrict, ReadZeroSkipWrite, Unchecked, }","parent":null,"children":[{"krate":0,"index":2216},{"krate":0,"index":2218},{"krate":0,"index":2220}],"decl_id":null,"docs":" How should code generated by Naga do bounds checks?","sig":null,"attributes":[{"value":"/ How should code generated by Naga do bounds checks?","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":77519,"byte_end":77574,"line_start":126,"line_end":126,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":77575,"byte_end":77578,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ When a vector, matrix, or array index is out of bounds—either negative, or","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":77579,"byte_end":77659,"line_start":128,"line_end":128,"column_start":1,"column_end":79}},{"value":"/ greater than or equal to the number of elements in the type—WGSL requires","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":77660,"byte_end":77739,"line_start":129,"line_end":129,"column_start":1,"column_end":78}},{"value":"/ that some other index of the implementation's choice that is in bounds is","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":77740,"byte_end":77817,"line_start":130,"line_end":130,"column_start":1,"column_end":78}},{"value":"/ used instead. (There are no types with zero elements.)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":77818,"byte_end":77876,"line_start":131,"line_end":131,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":77877,"byte_end":77880,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ Similarly, when out-of-bounds coordinates, array indices, or sample indices","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":77881,"byte_end":77960,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ are presented to the WGSL `textureLoad` and `textureStore` operations, the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":77961,"byte_end":78039,"line_start":134,"line_end":134,"column_start":1,"column_end":79}},{"value":"/ operation is redirected to do something safe.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":78040,"byte_end":78089,"line_start":135,"line_end":135,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":78090,"byte_end":78093,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ Different users of Naga will prefer different defaults:","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":78094,"byte_end":78153,"line_start":137,"line_end":137,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":78154,"byte_end":78157,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ -   When used as part of a WebGPU implementation, the WGSL specification","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":78158,"byte_end":78234,"line_start":139,"line_end":139,"column_start":1,"column_end":77}},{"value":"/     requires the `Restrict` behavior for array, vector, and matrix accesses,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":78235,"byte_end":78315,"line_start":140,"line_end":140,"column_start":1,"column_end":81}},{"value":"/     and either the `Restrict` or `ReadZeroSkipWrite` behaviors for texture","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":78316,"byte_end":78394,"line_start":141,"line_end":141,"column_start":1,"column_end":79}},{"value":"/     accesses.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":78395,"byte_end":78412,"line_start":142,"line_end":142,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":78413,"byte_end":78416,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ -   When used by the `wgpu` crate for native development, `wgpu` selects","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":78417,"byte_end":78493,"line_start":144,"line_end":144,"column_start":1,"column_end":77}},{"value":"/     `ReadZeroSkipWrite` as its default.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":78494,"byte_end":78537,"line_start":145,"line_end":145,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":78538,"byte_end":78541,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ -   Naga's own default is `Unchanged`, so that shader translations","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":78542,"byte_end":78612,"line_start":147,"line_end":147,"column_start":1,"column_end":71}},{"value":"/     are as faithful to the original as possible.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":78613,"byte_end":78665,"line_start":148,"line_end":148,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":78666,"byte_end":78669,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ Sometimes the underlying hardware and drivers can perform bounds checks","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":78670,"byte_end":78745,"line_start":150,"line_end":150,"column_start":1,"column_end":76}},{"value":"/ themselves, in a way that performs better than the checks Naga would inject.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":78746,"byte_end":78826,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ If you're using native checks like this, then having Naga inject its own","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":78827,"byte_end":78903,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ checks as well would be redundant, and the `Unchecked` policy is","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":78904,"byte_end":78972,"line_start":153,"line_end":153,"column_start":1,"column_end":69}},{"value":"/ appropriate.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":78973,"byte_end":78989,"line_start":154,"line_end":154,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":2227},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":79943,"byte_end":79962,"line_start":178,"line_end":178,"column_start":12,"column_end":31},"name":"BoundsCheckPolicies","qualname":"::back::BoundsCheckPolicies","value":"BoundsCheckPolicies { index, buffer, image }","parent":null,"children":[{"krate":0,"index":2228},{"krate":0,"index":2229},{"krate":0,"index":2230}],"decl_id":null,"docs":" Policies for injecting bounds checks during code generation.","sig":null,"attributes":[{"value":"/ Policies for injecting bounds checks during code generation.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":79791,"byte_end":79855,"line_start":175,"line_end":175,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":79856,"byte_end":79859,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ For SPIR-V generation, see [`spv::Options::bounds_check_policies`].","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":79860,"byte_end":79931,"line_start":177,"line_end":177,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":2228},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":80082,"byte_end":80087,"line_start":181,"line_end":181,"column_start":9,"column_end":14},"name":"index","qualname":"::back::BoundsCheckPolicies::index","value":"back::BoundsCheckPolicy","parent":{"krate":0,"index":2227},"children":[],"decl_id":null,"docs":" How should the generated code handle array, vector, or matrix indices\n that are out of range?\n","sig":null,"attributes":[{"value":"/ How should the generated code handle array, vector, or matrix indices","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":79969,"byte_end":80042,"line_start":179,"line_end":179,"column_start":5,"column_end":78}},{"value":"/ that are out of range?","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":80047,"byte_end":80073,"line_start":180,"line_end":180,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2229},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":82031,"byte_end":82037,"line_start":216,"line_end":216,"column_start":9,"column_end":15},"name":"buffer","qualname":"::back::BoundsCheckPolicies::buffer","value":"back::BoundsCheckPolicy","parent":{"krate":0,"index":2227},"children":[],"decl_id":null,"docs":" How should the generated code handle array, vector, or matrix indices\n that are out of range, when those values live in a [`GlobalVariable`] in\n the [`Storage`] or [`Uniform`] storage classes?","sig":null,"attributes":[{"value":"/ How should the generated code handle array, vector, or matrix indices","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":80113,"byte_end":80186,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ that are out of range, when those values live in a [`GlobalVariable`] in","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":80191,"byte_end":80267,"line_start":184,"line_end":184,"column_start":5,"column_end":81}},{"value":"/ the [`Storage`] or [`Uniform`] storage classes?","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":80272,"byte_end":80323,"line_start":185,"line_end":185,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":80328,"byte_end":80331,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Some graphics hardware provides \"robust buffer access\", a feature that","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":80336,"byte_end":80410,"line_start":187,"line_end":187,"column_start":5,"column_end":79}},{"value":"/ ensures that using a pointer cannot access memory outside the 'buffer'","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":80415,"byte_end":80489,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/ that it was derived from. In Naga terms, this means that the hardware","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":80494,"byte_end":80567,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ ensures that pointers computed by applying [`Access`] and","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":80572,"byte_end":80633,"line_start":190,"line_end":190,"column_start":5,"column_end":66}},{"value":"/ [`AccessIndex`] expressions to a [`GlobalVariable`] whose [`class`] is","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":80638,"byte_end":80712,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ [`Storage`] or [`Uniform`] will never read or write memory outside that","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":80717,"byte_end":80792,"line_start":192,"line_end":192,"column_start":5,"column_end":80}},{"value":"/ global variable.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":80797,"byte_end":80817,"line_start":193,"line_end":193,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":80822,"byte_end":80825,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ When hardware offers such a feature, it is probably undesirable to have","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":80830,"byte_end":80905,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/ Naga inject bounds checking code for such accesses, since the hardware","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":80910,"byte_end":80984,"line_start":196,"line_end":196,"column_start":5,"column_end":79}},{"value":"/ can probably provide the same protection more efficiently. However,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":80989,"byte_end":81060,"line_start":197,"line_end":197,"column_start":5,"column_end":76}},{"value":"/ bounds checks are still needed on accesses to indexable values that do","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":81065,"byte_end":81139,"line_start":198,"line_end":198,"column_start":5,"column_end":79}},{"value":"/ not live in buffers, like local variables.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":81144,"byte_end":81190,"line_start":199,"line_end":199,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":81195,"byte_end":81198,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ So, this option provides a separate policy that applies only to accesses","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":81203,"byte_end":81279,"line_start":201,"line_end":201,"column_start":5,"column_end":81}},{"value":"/ to storage and uniform globals. When depending on hardware bounds","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":81284,"byte_end":81353,"line_start":202,"line_end":202,"column_start":5,"column_end":74}},{"value":"/ checking, this policy can be `Unchecked` to avoid unnecessary overhead.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":81358,"byte_end":81433,"line_start":203,"line_end":203,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":81438,"byte_end":81441,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ When special hardware support is not available, this should probably be","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":81446,"byte_end":81521,"line_start":205,"line_end":205,"column_start":5,"column_end":80}},{"value":"/ the same as `index_bounds_check_policy`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":81526,"byte_end":81570,"line_start":206,"line_end":206,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":81575,"byte_end":81578,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ [`GlobalVariable`]: crate::GlobalVariable","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":81583,"byte_end":81628,"line_start":208,"line_end":208,"column_start":5,"column_end":50}},{"value":"/ [`class`]: crate::GlobalVariable::class","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":81633,"byte_end":81676,"line_start":209,"line_end":209,"column_start":5,"column_end":48}},{"value":"/ [`Restrict`]: crate::back::BoundsCheckPolicy::Restrict","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":81681,"byte_end":81739,"line_start":210,"line_end":210,"column_start":5,"column_end":63}},{"value":"/ [`ReadZeroSkipWrite`]: crate::back::BoundsCheckPolicy::ReadZeroSkipWrite","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":81744,"byte_end":81820,"line_start":211,"line_end":211,"column_start":5,"column_end":81}},{"value":"/ [`Access`]: crate::Expression::Access","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":81825,"byte_end":81866,"line_start":212,"line_end":212,"column_start":5,"column_end":46}},{"value":"/ [`AccessIndex`]: crate::Expression::AccessIndex","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":81871,"byte_end":81922,"line_start":213,"line_end":213,"column_start":5,"column_end":56}},{"value":"/ [`Storage`]: crate::StorageClass::Storage","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":81927,"byte_end":81972,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"/ [`Uniform`]: crate::StorageClass::Uniform","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":81977,"byte_end":82022,"line_start":215,"line_end":215,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":2230},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":82501,"byte_end":82506,"line_start":227,"line_end":227,"column_start":9,"column_end":14},"name":"image","qualname":"::back::BoundsCheckPolicies::image","value":"back::BoundsCheckPolicy","parent":{"krate":0,"index":2227},"children":[],"decl_id":null,"docs":" How should the generated code handle image texel references that are out\n of range?","sig":null,"attributes":[{"value":"/ How should the generated code handle image texel references that are out","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":82063,"byte_end":82139,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ of range?","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":82144,"byte_end":82157,"line_start":219,"line_end":219,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":82162,"byte_end":82165,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This controls the behavior of [`ImageLoad`] expressions and","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":82170,"byte_end":82233,"line_start":221,"line_end":221,"column_start":5,"column_end":68}},{"value":"/ [`ImageStore`] statements when a coordinate, texture array index, level","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":82238,"byte_end":82313,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ of detail, or multisampled sample number is out of range.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":82318,"byte_end":82379,"line_start":223,"line_end":223,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":82384,"byte_end":82387,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [`ImageLoad`]: crate::Expression::ImageLoad","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":82392,"byte_end":82439,"line_start":225,"line_end":225,"column_start":5,"column_end":52}},{"value":"/ [`ImageStore`]: crate::Statement::ImageStore","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":82444,"byte_end":82492,"line_start":226,"line_end":226,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":82626,"byte_end":82633,"line_start":232,"line_end":232,"column_start":8,"column_end":15},"name":"default","qualname":"<BoundsCheckPolicy as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2238},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":223018,"byte_end":223023,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Block","qualname":"::block::Block","value":"Block {  }","parent":null,"children":[{"krate":0,"index":2239}],"decl_id":null,"docs":" A code block is a vector of statements, with maybe a vector of spans.\n","sig":null,"attributes":[{"value":"/ A code block is a vector of statements, with maybe a vector of spans.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":222784,"byte_end":222857,"line_start":4,"line_end":4,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":223186,"byte_end":223189,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<Block>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":223347,"byte_end":223355,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<Block>::from_vec","value":"fn from_vec(Vec<Statement>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":223655,"byte_end":223668,"line_start":36,"line_end":36,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Block>::with_capacity","value":"fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":223908,"byte_end":223912,"line_start":45,"line_end":45,"column_start":12,"column_end":16},"name":"push","qualname":"<Block>::push","value":"fn push(&mut Self, Statement, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":223870,"byte_end":223896,"line_start":44,"line_end":44,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":224069,"byte_end":224075,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"extend","qualname":"<Block>::extend","value":"fn extend(&mut Self, Option<(Statement, Span)>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":224225,"byte_end":224237,"line_start":57,"line_end":57,"column_start":12,"column_end":24},"name":"extend_block","qualname":"<Block>::extend_block","value":"fn extend_block(&mut Self, Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":224401,"byte_end":224407,"line_start":63,"line_end":63,"column_start":12,"column_end":18},"name":"append","qualname":"<Block>::append","value":"fn append(&mut Self, &mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":224586,"byte_end":224590,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"cull","qualname":"<Block>::cull","value":"fn cull<R>(&mut Self, R) where R: RangeBounds<usize> + Clone","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":224773,"byte_end":224779,"line_start":75,"line_end":75,"column_start":12,"column_end":18},"name":"splice","qualname":"<Block>::splice","value":"fn splice<R>(&mut Self, R, Self) where R: RangeBounds<usize> + Clone","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":225043,"byte_end":225056,"line_start":82,"line_end":82,"column_start":12,"column_end":25},"name":"span_iter_mut","qualname":"<Block>::span_iter_mut","value":"fn span_iter_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":225383,"byte_end":225391,"line_start":91,"line_end":91,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Block>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":225456,"byte_end":225459,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"len","qualname":"<Block>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":225572,"byte_end":225577,"line_start":102,"line_end":102,"column_start":8,"column_end":13},"name":"deref","qualname":"<Block as std::ops::Deref>::deref","value":"fn deref(&Self) -> &[Statement]","parent":{"krate":2,"index":3369},"children":[],"decl_id":{"krate":2,"index":3371},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":225664,"byte_end":225673,"line_start":108,"line_end":108,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<Block as std::ops::DerefMut>::deref_mut","value":"fn deref_mut(&mut Self) -> &mut [Statement]","parent":{"krate":2,"index":3382},"children":[],"decl_id":{"krate":2,"index":3383},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":225869,"byte_end":225878,"line_start":117,"line_end":117,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a Block as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> std::slice::Iter","parent":{"krate":2,"index":7998},"children":[],"decl_id":{"krate":2,"index":8001},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":226261,"byte_end":226265,"line_start":133,"line_end":133,"column_start":8,"column_end":12},"name":"from","qualname":"<Block as std::convert::From>::from","value":"fn from(Vec<Statement>) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":518},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"front","qualname":"::front","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1083},{"krate":0,"index":1086},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1093},{"krate":0,"index":1096},{"krate":0,"index":1099},{"krate":0,"index":2625},{"krate":0,"index":2627},{"krate":0,"index":2629},{"krate":0,"index":1102},{"krate":0,"index":1105},{"krate":0,"index":2631},{"krate":0,"index":2633},{"krate":0,"index":2635},{"krate":0,"index":1107},{"krate":0,"index":1116},{"krate":0,"index":1119}],"decl_id":null,"docs":" Parsers which load shaders into memory.\n","sig":null,"attributes":[{"value":"/ Parsers which load shaders into memory.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":226336,"byte_end":226379,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":232598,"byte_end":232625,"line_start":39,"line_end":39,"column_start":12,"column_end":39},"name":"apply_default_interpolation","qualname":"<crate::Binding>::apply_default_interpolation","value":"fn apply_default_interpolation(&mut Self, &crate::TypeInner)","parent":null,"children":[],"decl_id":null,"docs":" Apply the usual default interpolation for `ty` to `binding`.","sig":null,"attributes":[{"value":"/ Apply the usual default interpolation for `ty` to `binding`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":230671,"byte_end":230735,"line_start":4,"line_end":4,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":230740,"byte_end":230743,"line_start":5,"line_end":5,"column_start":5,"column_end":8}},{"value":"/ This function is a utility front ends may use to satisfy the Naga IR's","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":230748,"byte_end":230822,"line_start":6,"line_end":6,"column_start":5,"column_end":79}},{"value":"/ requirement, meant to ensure that input languages' policies have been","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":230827,"byte_end":230900,"line_start":7,"line_end":7,"column_start":5,"column_end":78}},{"value":"/ applied appropriately, that all I/O `Binding`s from the vertex shader to the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":230905,"byte_end":230985,"line_start":8,"line_end":8,"column_start":5,"column_end":85}},{"value":"/ fragment shader must have non-`None` `interpolation` values.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":230990,"byte_end":231054,"line_start":9,"line_end":9,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":231059,"byte_end":231062,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ All the shader languages Naga supports have similar rules:","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":231067,"byte_end":231129,"line_start":11,"line_end":11,"column_start":5,"column_end":67}},{"value":"/ perspective-correct, center-sampled interpolation is the default for any","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":231134,"byte_end":231210,"line_start":12,"line_end":12,"column_start":5,"column_end":81}},{"value":"/ binding that can vary, and everything else either defaults to flat, or","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":231215,"byte_end":231289,"line_start":13,"line_end":13,"column_start":5,"column_end":79}},{"value":"/ requires an explicit flat qualifier/attribute/what-have-you.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":231294,"byte_end":231358,"line_start":14,"line_end":14,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":231363,"byte_end":231366,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ If `binding` is not a [`Location`] binding, or if its [`interpolation`] is","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":231371,"byte_end":231449,"line_start":16,"line_end":16,"column_start":5,"column_end":83}},{"value":"/ already set, then make no changes. Otherwise, set `binding`'s interpolation","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":231454,"byte_end":231533,"line_start":17,"line_end":17,"column_start":5,"column_end":84}},{"value":"/ and sampling to reasonable defaults depending on `ty`, the type of the value","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":231538,"byte_end":231618,"line_start":18,"line_end":18,"column_start":5,"column_end":85}},{"value":"/ being interpolated:","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":231623,"byte_end":231646,"line_start":19,"line_end":19,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":231651,"byte_end":231654,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ - If `ty` is a floating-point scalar, vector, or matrix type, then","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":231659,"byte_end":231729,"line_start":21,"line_end":21,"column_start":5,"column_end":75}},{"value":"/   default to [`Perspective`] interpolation and [`Center`] sampling.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":231734,"byte_end":231805,"line_start":22,"line_end":22,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":231810,"byte_end":231813,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ - If `ty` is an integral scalar or vector, then default to [`Flat`]","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":231818,"byte_end":231889,"line_start":24,"line_end":24,"column_start":5,"column_end":76}},{"value":"/   interpolation, which has no associated sampling.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":231894,"byte_end":231948,"line_start":25,"line_end":25,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":231953,"byte_end":231956,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ - For any other types, make no change. Such types are not permitted as","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":231961,"byte_end":232035,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/   user-defined IO values, and will probably be flagged by the verifier","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":232040,"byte_end":232114,"line_start":28,"line_end":28,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":232119,"byte_end":232122,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ When structs appear in input or output types, each member ought to have its","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":232127,"byte_end":232206,"line_start":30,"line_end":30,"column_start":5,"column_end":84}},{"value":"/ own [`Binding`], so structs are simply covered by the third case.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":232211,"byte_end":232280,"line_start":31,"line_end":31,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":232285,"byte_end":232288,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ [`Binding`]: crate::Binding","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":232293,"byte_end":232324,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ [`Location`]: crate::Binding::Location","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":232329,"byte_end":232371,"line_start":34,"line_end":34,"column_start":5,"column_end":47}},{"value":"/ [`interpolation`]: crate::Binding::Location::interpolation","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":232376,"byte_end":232438,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ [`Perspective`]: crate::Interpolation::Perspective","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":232443,"byte_end":232497,"line_start":36,"line_end":36,"column_start":5,"column_end":59}},{"value":"/ [`Flat`]: crate::Interpolation::Flat","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":232502,"byte_end":232542,"line_start":37,"line_end":37,"column_start":5,"column_end":45}},{"value":"/ [`Center`]: crate::Sampling::Center","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":232547,"byte_end":232586,"line_start":38,"line_end":38,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":522},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"wgsl","qualname":"::front::wgsl","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":551},{"krate":0,"index":629},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":696},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":703},{"krate":0,"index":706},{"krate":0,"index":709},{"krate":0,"index":712},{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":727},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":741},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":758},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":765},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":776},{"krate":0,"index":779},{"krate":0,"index":782},{"krate":0,"index":785},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":812},{"krate":0,"index":815},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":2281},{"krate":0,"index":2288},{"krate":0,"index":2289},{"krate":0,"index":2291},{"krate":0,"index":2293},{"krate":0,"index":2294},{"krate":0,"index":2296},{"krate":0,"index":2339},{"krate":0,"index":2341},{"krate":0,"index":2344},{"krate":0,"index":2347},{"krate":0,"index":2349},{"krate":0,"index":2353},{"krate":0,"index":2385},{"krate":0,"index":2387},{"krate":0,"index":2390},{"krate":0,"index":2393},{"krate":0,"index":2395},{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2402},{"krate":0,"index":2404},{"krate":0,"index":2409},{"krate":0,"index":2411},{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2423},{"krate":0,"index":2425},{"krate":0,"index":2430},{"krate":0,"index":2432},{"krate":0,"index":2434},{"krate":0,"index":2442},{"krate":0,"index":2559},{"krate":0,"index":2562},{"krate":0,"index":821},{"krate":0,"index":824},{"krate":0,"index":829},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":837},{"krate":0,"index":841},{"krate":0,"index":845},{"krate":0,"index":859},{"krate":0,"index":865},{"krate":0,"index":868},{"krate":0,"index":883},{"krate":0,"index":2565},{"krate":0,"index":2568},{"krate":0,"index":2570},{"krate":0,"index":2571},{"krate":0,"index":896},{"krate":0,"index":898},{"krate":0,"index":907},{"krate":0,"index":2573},{"krate":0,"index":2575},{"krate":0,"index":2577},{"krate":0,"index":2602},{"krate":0,"index":2604},{"krate":0,"index":2606},{"krate":0,"index":2607},{"krate":0,"index":917},{"krate":0,"index":2609},{"krate":0,"index":2614},{"krate":0,"index":918},{"krate":0,"index":923},{"krate":0,"index":2616},{"krate":0,"index":2620},{"krate":0,"index":2622},{"krate":0,"index":930},{"krate":0,"index":937},{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":945},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1068},{"krate":0,"index":1071},{"krate":0,"index":1074}],"decl_id":null,"docs":" Front end for consuming [WebGPU Shading Language][wgsl].","sig":null,"attributes":[{"value":"cfg(feature = \"wgsl-in\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":226482,"byte_end":226509,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/ Front end for consuming [WebGPU Shading Language][wgsl].","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":233372,"byte_end":233432,"line_start":1,"line_end":1,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":233433,"byte_end":233436,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [wgsl]: https://gpuweb.github.io/gpuweb/wgsl.html","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":233437,"byte_end":233490,"line_start":3,"line_end":3,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2282},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234554,"byte_end":234558,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"name":"Sint","qualname":"::front::wgsl::NumberType::Sint","value":"NumberType::Sint","parent":{"krate":0,"index":2281},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2284},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234564,"byte_end":234568,"line_start":51,"line_end":51,"column_start":5,"column_end":9},"name":"Uint","qualname":"::front::wgsl::NumberType::Uint","value":"NumberType::Uint","parent":{"krate":0,"index":2281},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2286},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234574,"byte_end":234579,"line_start":52,"line_end":52,"column_start":5,"column_end":10},"name":"Float","qualname":"::front::wgsl::NumberType::Float","value":"NumberType::Float","parent":{"krate":0,"index":2281},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2281},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234537,"byte_end":234547,"line_start":49,"line_end":49,"column_start":10,"column_end":20},"name":"NumberType","qualname":"::front::wgsl::NumberType","value":"enum NumberType { Sint, Uint, Float, }","parent":null,"children":[{"krate":0,"index":2282},{"krate":0,"index":2284},{"krate":0,"index":2286}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2298},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234650,"byte_end":234659,"line_start":57,"line_end":57,"column_start":5,"column_end":14},"name":"Separator","qualname":"::front::wgsl::Token::Separator","value":"Token::Separator(char)","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2300},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234660,"byte_end":234664,"line_start":57,"line_end":57,"column_start":15,"column_end":19},"name":"0","qualname":"::front::wgsl::Token::Separator::0","value":"char","parent":{"krate":0,"index":2298},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2301},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234671,"byte_end":234682,"line_start":58,"line_end":58,"column_start":5,"column_end":16},"name":"DoubleColon","qualname":"::front::wgsl::Token::DoubleColon","value":"Token::DoubleColon","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2303},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234688,"byte_end":234693,"line_start":59,"line_end":59,"column_start":5,"column_end":10},"name":"Paren","qualname":"::front::wgsl::Token::Paren","value":"Token::Paren(char)","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2305},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234694,"byte_end":234698,"line_start":59,"line_end":59,"column_start":11,"column_end":15},"name":"0","qualname":"::front::wgsl::Token::Paren::0","value":"char","parent":{"krate":0,"index":2303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2306},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234705,"byte_end":234716,"line_start":60,"line_end":60,"column_start":5,"column_end":16},"name":"DoubleParen","qualname":"::front::wgsl::Token::DoubleParen","value":"Token::DoubleParen(char)","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2308},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234717,"byte_end":234721,"line_start":60,"line_end":60,"column_start":17,"column_end":21},"name":"0","qualname":"::front::wgsl::Token::DoubleParen::0","value":"char","parent":{"krate":0,"index":2306},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2309},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234728,"byte_end":234734,"line_start":61,"line_end":61,"column_start":5,"column_end":11},"name":"Number","qualname":"::front::wgsl::Token::Number","value":"Token::Number { value, ty, width }","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2310},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234745,"byte_end":234750,"line_start":62,"line_end":62,"column_start":9,"column_end":14},"name":"value","qualname":"::front::wgsl::Token::Number::value","value":"&'a str","parent":{"krate":0,"index":2309},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2311},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234769,"byte_end":234771,"line_start":63,"line_end":63,"column_start":9,"column_end":11},"name":"ty","qualname":"::front::wgsl::Token::Number::ty","value":"front::wgsl::NumberType","parent":{"krate":0,"index":2309},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2312},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234793,"byte_end":234798,"line_start":64,"line_end":64,"column_start":9,"column_end":14},"name":"width","qualname":"::front::wgsl::Token::Number::width","value":"std::option::Option<u8>","parent":{"krate":0,"index":2309},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2313},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234826,"byte_end":234832,"line_start":66,"line_end":66,"column_start":5,"column_end":11},"name":"String","qualname":"::front::wgsl::Token::String","value":"Token::String(&'a str)","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2315},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234833,"byte_end":234840,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"0","qualname":"::front::wgsl::Token::String::0","value":"&'a str","parent":{"krate":0,"index":2313},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2316},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234847,"byte_end":234851,"line_start":67,"line_end":67,"column_start":5,"column_end":9},"name":"Word","qualname":"::front::wgsl::Token::Word","value":"Token::Word(&'a str)","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2318},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234852,"byte_end":234859,"line_start":67,"line_end":67,"column_start":10,"column_end":17},"name":"0","qualname":"::front::wgsl::Token::Word::0","value":"&'a str","parent":{"krate":0,"index":2316},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2319},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234866,"byte_end":234875,"line_start":68,"line_end":68,"column_start":5,"column_end":14},"name":"Operation","qualname":"::front::wgsl::Token::Operation","value":"Token::Operation(char)","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2321},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234876,"byte_end":234880,"line_start":68,"line_end":68,"column_start":15,"column_end":19},"name":"0","qualname":"::front::wgsl::Token::Operation::0","value":"char","parent":{"krate":0,"index":2319},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2322},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234887,"byte_end":234903,"line_start":69,"line_end":69,"column_start":5,"column_end":21},"name":"LogicalOperation","qualname":"::front::wgsl::Token::LogicalOperation","value":"Token::LogicalOperation(char)","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2324},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234904,"byte_end":234908,"line_start":69,"line_end":69,"column_start":22,"column_end":26},"name":"0","qualname":"::front::wgsl::Token::LogicalOperation::0","value":"char","parent":{"krate":0,"index":2322},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2325},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234915,"byte_end":234929,"line_start":70,"line_end":70,"column_start":5,"column_end":19},"name":"ShiftOperation","qualname":"::front::wgsl::Token::ShiftOperation","value":"Token::ShiftOperation(char)","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2327},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234930,"byte_end":234934,"line_start":70,"line_end":70,"column_start":20,"column_end":24},"name":"0","qualname":"::front::wgsl::Token::ShiftOperation::0","value":"char","parent":{"krate":0,"index":2325},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2328},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234941,"byte_end":234946,"line_start":71,"line_end":71,"column_start":5,"column_end":10},"name":"Arrow","qualname":"::front::wgsl::Token::Arrow","value":"Token::Arrow","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2330},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234952,"byte_end":234959,"line_start":72,"line_end":72,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::front::wgsl::Token::Unknown","value":"Token::Unknown(char)","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2332},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234960,"byte_end":234964,"line_start":72,"line_end":72,"column_start":13,"column_end":17},"name":"0","qualname":"::front::wgsl::Token::Unknown::0","value":"char","parent":{"krate":0,"index":2330},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2333},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234971,"byte_end":234989,"line_start":73,"line_end":73,"column_start":5,"column_end":23},"name":"UnterminatedString","qualname":"::front::wgsl::Token::UnterminatedString","value":"Token::UnterminatedString","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2335},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234995,"byte_end":235001,"line_start":74,"line_end":74,"column_start":5,"column_end":11},"name":"Trivia","qualname":"::front::wgsl::Token::Trivia","value":"Token::Trivia","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2337},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235007,"byte_end":235010,"line_start":75,"line_end":75,"column_start":5,"column_end":8},"name":"End","qualname":"::front::wgsl::Token::End","value":"Token::End","parent":{"krate":0,"index":2296},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2296},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":234634,"byte_end":234639,"line_start":56,"line_end":56,"column_start":10,"column_end":15},"name":"Token","qualname":"::front::wgsl::Token","value":"enum Token<'a> {\n    Separator(char),\n    DoubleColon,\n    Paren(char),\n    DoubleParen(char),\n    Number {\n            value: &'a str,\n            ty: NumberType,\n            width: Option<Bytes>,\n        },\n    String(&'a str),\n    Word(&'a str),\n    Operation(char),\n    LogicalOperation(char),\n    ShiftOperation(char),\n    Arrow,\n    Unknown(char),\n    UnterminatedString,\n    Trivia,\n    End,\n}","parent":null,"children":[{"krate":0,"index":2298},{"krate":0,"index":2301},{"krate":0,"index":2303},{"krate":0,"index":2306},{"krate":0,"index":2309},{"krate":0,"index":2313},{"krate":0,"index":2316},{"krate":0,"index":2319},{"krate":0,"index":2322},{"krate":0,"index":2325},{"krate":0,"index":2328},{"krate":0,"index":2330},{"krate":0,"index":2333},{"krate":0,"index":2335},{"krate":0,"index":2337}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2355},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235089,"byte_end":235094,"line_start":80,"line_end":80,"column_start":5,"column_end":10},"name":"Token","qualname":"::front::wgsl::ExpectedToken::Token","value":"ExpectedToken::Token(Token)","parent":{"krate":0,"index":2353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2357},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235095,"byte_end":235104,"line_start":80,"line_end":80,"column_start":11,"column_end":20},"name":"0","qualname":"::front::wgsl::ExpectedToken::Token::0","value":"front::wgsl::Token<'a>","parent":{"krate":0,"index":2355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2358},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235111,"byte_end":235121,"line_start":81,"line_end":81,"column_start":5,"column_end":15},"name":"Identifier","qualname":"::front::wgsl::ExpectedToken::Identifier","value":"ExpectedToken::Identifier","parent":{"krate":0,"index":2353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2360},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235127,"byte_end":235133,"line_start":82,"line_end":82,"column_start":5,"column_end":11},"name":"Number","qualname":"::front::wgsl::ExpectedToken::Number","value":"ExpectedToken::Number { ty, width }","parent":{"krate":0,"index":2353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2361},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235144,"byte_end":235146,"line_start":83,"line_end":83,"column_start":9,"column_end":11},"name":"ty","qualname":"::front::wgsl::ExpectedToken::Number::ty","value":"std::option::Option<front::wgsl::NumberType>","parent":{"krate":0,"index":2360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2362},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235176,"byte_end":235181,"line_start":84,"line_end":84,"column_start":9,"column_end":14},"name":"width","qualname":"::front::wgsl::ExpectedToken::Number::width","value":"std::option::Option<u8>","parent":{"krate":0,"index":2360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2363},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235209,"byte_end":235216,"line_start":86,"line_end":86,"column_start":5,"column_end":12},"name":"Integer","qualname":"::front::wgsl::ExpectedToken::Integer","value":"ExpectedToken::Integer","parent":{"krate":0,"index":2353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2365},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235222,"byte_end":235230,"line_start":87,"line_end":87,"column_start":5,"column_end":13},"name":"Constant","qualname":"::front::wgsl::ExpectedToken::Constant","value":"ExpectedToken::Constant","parent":{"krate":0,"index":2353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2367},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235301,"byte_end":235318,"line_start":89,"line_end":89,"column_start":5,"column_end":22},"name":"PrimaryExpression","qualname":"::front::wgsl::ExpectedToken::PrimaryExpression","value":"ExpectedToken::PrimaryExpression","parent":{"krate":0,"index":2353},"children":[],"decl_id":null,"docs":" Expected: constant, parenthesized expression, identifier\n","sig":null,"attributes":[{"value":"/ Expected: constant, parenthesized expression, identifier","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235236,"byte_end":235296,"line_start":88,"line_end":88,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2369},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235352,"byte_end":235370,"line_start":91,"line_end":91,"column_start":5,"column_end":23},"name":"AttributeSeparator","qualname":"::front::wgsl::ExpectedToken::AttributeSeparator","value":"ExpectedToken::AttributeSeparator","parent":{"krate":0,"index":2353},"children":[],"decl_id":null,"docs":" Expected: ']]', ','\n","sig":null,"attributes":[{"value":"/ Expected: ']]', ','","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235324,"byte_end":235347,"line_start":90,"line_end":90,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2371},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235410,"byte_end":235419,"line_start":93,"line_end":93,"column_start":5,"column_end":14},"name":"FieldName","qualname":"::front::wgsl::ExpectedToken::FieldName","value":"ExpectedToken::FieldName","parent":{"krate":0,"index":2353},"children":[],"decl_id":null,"docs":" Expected: '}', identifier\n","sig":null,"attributes":[{"value":"/ Expected: '}', identifier","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235376,"byte_end":235405,"line_start":92,"line_end":92,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2373},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235468,"byte_end":235481,"line_start":95,"line_end":95,"column_start":5,"column_end":18},"name":"TypeAttribute","qualname":"::front::wgsl::ExpectedToken::TypeAttribute","value":"ExpectedToken::TypeAttribute","parent":{"krate":0,"index":2353},"children":[],"decl_id":null,"docs":" Expected: ']]', 'access', 'stride'\n","sig":null,"attributes":[{"value":"/ Expected: ']]', 'access', 'stride'","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235425,"byte_end":235463,"line_start":94,"line_end":94,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2375},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235520,"byte_end":235529,"line_start":97,"line_end":97,"column_start":5,"column_end":14},"name":"Statement","qualname":"::front::wgsl::ExpectedToken::Statement","value":"ExpectedToken::Statement","parent":{"krate":0,"index":2353},"children":[],"decl_id":null,"docs":" Expected: ';', '{', word\n","sig":null,"attributes":[{"value":"/ Expected: ';', '{', word","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235487,"byte_end":235515,"line_start":96,"line_end":96,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2377},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235576,"byte_end":235586,"line_start":99,"line_end":99,"column_start":5,"column_end":15},"name":"SwitchItem","qualname":"::front::wgsl::ExpectedToken::SwitchItem","value":"ExpectedToken::SwitchItem","parent":{"krate":0,"index":2353},"children":[],"decl_id":null,"docs":" Expected: 'case', 'default', '}'\n","sig":null,"attributes":[{"value":"/ Expected: 'case', 'default', '}'","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235535,"byte_end":235571,"line_start":98,"line_end":98,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2379},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235619,"byte_end":235641,"line_start":101,"line_end":101,"column_start":5,"column_end":27},"name":"WorkgroupSizeSeparator","qualname":"::front::wgsl::ExpectedToken::WorkgroupSizeSeparator","value":"ExpectedToken::WorkgroupSizeSeparator","parent":{"krate":0,"index":2353},"children":[],"decl_id":null,"docs":" Expected: ',', ')'\n","sig":null,"attributes":[{"value":"/ Expected: ',', ')'","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235592,"byte_end":235614,"line_start":100,"line_end":100,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2381},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235712,"byte_end":235722,"line_start":103,"line_end":103,"column_start":5,"column_end":15},"name":"GlobalItem","qualname":"::front::wgsl::ExpectedToken::GlobalItem","value":"ExpectedToken::GlobalItem","parent":{"krate":0,"index":2353},"children":[],"decl_id":null,"docs":" Expected: 'struct', 'let', 'var', 'type', ';', 'fn', eof\n","sig":null,"attributes":[{"value":"/ Expected: 'struct', 'let', 'var', 'type', ';', 'fn', eof","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235647,"byte_end":235707,"line_start":102,"line_end":102,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2383},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235768,"byte_end":235783,"line_start":105,"line_end":105,"column_start":5,"column_end":20},"name":"StructAttribute","qualname":"::front::wgsl::ExpectedToken::StructAttribute","value":"ExpectedToken::StructAttribute","parent":{"krate":0,"index":2353},"children":[],"decl_id":null,"docs":" Expected: ']]', 'size', 'align'\n","sig":null,"attributes":[{"value":"/ Expected: ']]', 'size', 'align'","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235728,"byte_end":235763,"line_start":104,"line_end":104,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":2353},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235065,"byte_end":235078,"line_start":79,"line_end":79,"column_start":10,"column_end":23},"name":"ExpectedToken","qualname":"::front::wgsl::ExpectedToken","value":"enum ExpectedToken<'a> {\n    Token(Token),\n    Identifier,\n    Number {\n            ty: Option<NumberType>,\n            width: Option<Bytes>,\n        },\n    Integer,\n    Constant,\n    PrimaryExpression,\n    AttributeSeparator,\n    FieldName,\n    TypeAttribute,\n    Statement,\n    SwitchItem,\n    WorkgroupSizeSeparator,\n    GlobalItem,\n    StructAttribute,\n}","parent":null,"children":[{"krate":0,"index":2355},{"krate":0,"index":2358},{"krate":0,"index":2360},{"krate":0,"index":2363},{"krate":0,"index":2365},{"krate":0,"index":2367},{"krate":0,"index":2369},{"krate":0,"index":2371},{"krate":0,"index":2373},{"krate":0,"index":2375},{"krate":0,"index":2377},{"krate":0,"index":2379},{"krate":0,"index":2381},{"krate":0,"index":2383}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2413},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235872,"byte_end":235885,"line_start":111,"line_end":111,"column_start":5,"column_end":18},"name":"ParseIntError","qualname":"::front::wgsl::BadIntError::ParseIntError","value":"BadIntError::ParseIntError(ParseIntError)","parent":{"krate":0,"index":2399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235846,"byte_end":235867,"line_start":110,"line_end":110,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2415},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235894,"byte_end":235907,"line_start":111,"line_end":111,"column_start":27,"column_end":40},"name":"0","qualname":"::front::wgsl::BadIntError::ParseIntError::0","value":"std::num::ParseIntError","parent":{"krate":0,"index":2413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235886,"byte_end":235893,"line_start":111,"line_end":111,"column_start":19,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2416},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235985,"byte_end":235997,"line_start":113,"line_end":113,"column_start":5,"column_end":17},"name":"NegativeZero","qualname":"::front::wgsl::BadIntError::NegativeZero","value":"BadIntError::NegativeZero","parent":{"krate":0,"index":2399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"non-hex negative zero integer literals are not allowed\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235914,"byte_end":235980,"line_start":112,"line_end":112,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2418},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236078,"byte_end":236090,"line_start":115,"line_end":115,"column_start":5,"column_end":17},"name":"LeadingZeros","qualname":"::front::wgsl::BadIntError::LeadingZeros","value":"BadIntError::LeadingZeros","parent":{"krate":0,"index":2399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"leading zeros for non-hex integer literals are not allowed\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236003,"byte_end":236073,"line_start":114,"line_end":114,"column_start":5,"column_end":75}}]},{"kind":"Enum","id":{"krate":0,"index":2399},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":235828,"byte_end":235839,"line_start":109,"line_end":109,"column_start":10,"column_end":21},"name":"BadIntError","qualname":"::front::wgsl::BadIntError","value":"enum BadIntError { ParseIntError(ParseIntError), NegativeZero, LeadingZeros, }","parent":null,"children":[{"krate":0,"index":2413},{"krate":0,"index":2416},{"krate":0,"index":2418}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2436},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236181,"byte_end":236196,"line_start":121,"line_end":121,"column_start":5,"column_end":20},"name":"ParseFloatError","qualname":"::front::wgsl::BadFloatError::ParseFloatError","value":"BadFloatError::ParseFloatError(ParseFloatError)","parent":{"krate":0,"index":2420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236155,"byte_end":236176,"line_start":120,"line_end":120,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2438},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236205,"byte_end":236220,"line_start":121,"line_end":121,"column_start":29,"column_end":44},"name":"0","qualname":"::front::wgsl::BadFloatError::ParseFloatError::0","value":"std::num::ParseFloatError","parent":{"krate":0,"index":2436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236197,"byte_end":236204,"line_start":121,"line_end":121,"column_start":21,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2439},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236253,"byte_end":236267,"line_start":123,"line_end":123,"column_start":5,"column_end":19},"name":"ParseHexfError","qualname":"::front::wgsl::BadFloatError::ParseHexfError","value":"BadFloatError::ParseHexfError(ParseHexfError)","parent":{"krate":0,"index":2420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236227,"byte_end":236248,"line_start":122,"line_end":122,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2441},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236276,"byte_end":236290,"line_start":123,"line_end":123,"column_start":28,"column_end":42},"name":"0","qualname":"::front::wgsl::BadFloatError::ParseHexfError::0","value":"hexf_parse::ParseHexfError","parent":{"krate":0,"index":2439},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236268,"byte_end":236275,"line_start":123,"line_end":123,"column_start":20,"column_end":27}}]},{"kind":"Enum","id":{"krate":0,"index":2420},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236135,"byte_end":236148,"line_start":119,"line_end":119,"column_start":10,"column_end":23},"name":"BadFloatError","qualname":"::front::wgsl::BadFloatError","value":"enum BadFloatError {\n    ParseFloatError(ParseFloatError),\n    ParseHexfError(ParseHexfError),\n}","parent":null,"children":[{"krate":0,"index":2436},{"krate":0,"index":2439}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2444},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236345,"byte_end":236355,"line_start":128,"line_end":128,"column_start":5,"column_end":15},"name":"Unexpected","qualname":"::front::wgsl::Error::Unexpected","value":"Error::Unexpected(TokenSpan, ExpectedToken)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2446},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236356,"byte_end":236369,"line_start":128,"line_end":128,"column_start":16,"column_end":29},"name":"0","qualname":"::front::wgsl::Error::Unexpected::0","value":"(front::wgsl::Token<'a>, std::ops::Range<usize>)","parent":{"krate":0,"index":2444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2447},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236371,"byte_end":236388,"line_start":128,"line_end":128,"column_start":31,"column_end":48},"name":"1","qualname":"::front::wgsl::Error::Unexpected::1","value":"front::wgsl::ExpectedToken<'a>","parent":{"krate":0,"index":2444},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2448},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236395,"byte_end":236401,"line_start":129,"line_end":129,"column_start":5,"column_end":11},"name":"BadU32","qualname":"::front::wgsl::Error::BadU32","value":"Error::BadU32(Span, BadIntError)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2450},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236402,"byte_end":236406,"line_start":129,"line_end":129,"column_start":12,"column_end":16},"name":"0","qualname":"::front::wgsl::Error::BadU32::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2451},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236408,"byte_end":236419,"line_start":129,"line_end":129,"column_start":18,"column_end":29},"name":"1","qualname":"::front::wgsl::Error::BadU32::1","value":"front::wgsl::BadIntError","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2452},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236426,"byte_end":236432,"line_start":130,"line_end":130,"column_start":5,"column_end":11},"name":"BadI32","qualname":"::front::wgsl::Error::BadI32","value":"Error::BadI32(Span, BadIntError)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2454},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236433,"byte_end":236437,"line_start":130,"line_end":130,"column_start":12,"column_end":16},"name":"0","qualname":"::front::wgsl::Error::BadI32::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2452},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2455},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236439,"byte_end":236450,"line_start":130,"line_end":130,"column_start":18,"column_end":29},"name":"1","qualname":"::front::wgsl::Error::BadI32::1","value":"front::wgsl::BadIntError","parent":{"krate":0,"index":2452},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2456},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236583,"byte_end":236594,"line_start":133,"line_end":133,"column_start":5,"column_end":16},"name":"NegativeInt","qualname":"::front::wgsl::Error::NegativeInt","value":"Error::NegativeInt(Span)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":" A negative signed integer literal where both signed and unsigned,\n but only non-negative literals are allowed.\n","sig":null,"attributes":[{"value":"/ A negative signed integer literal where both signed and unsigned,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236457,"byte_end":236526,"line_start":131,"line_end":131,"column_start":5,"column_end":74}},{"value":"/ but only non-negative literals are allowed.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236531,"byte_end":236578,"line_start":132,"line_end":132,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2458},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236595,"byte_end":236599,"line_start":133,"line_end":133,"column_start":17,"column_end":21},"name":"0","qualname":"::front::wgsl::Error::NegativeInt::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2459},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236606,"byte_end":236614,"line_start":134,"line_end":134,"column_start":5,"column_end":13},"name":"BadFloat","qualname":"::front::wgsl::Error::BadFloat","value":"Error::BadFloat(Span, BadFloatError)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2461},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236615,"byte_end":236619,"line_start":134,"line_end":134,"column_start":14,"column_end":18},"name":"0","qualname":"::front::wgsl::Error::BadFloat::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2462},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236621,"byte_end":236634,"line_start":134,"line_end":134,"column_start":20,"column_end":33},"name":"1","qualname":"::front::wgsl::Error::BadFloat::1","value":"front::wgsl::BadFloatError","parent":{"krate":0,"index":2459},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2463},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236641,"byte_end":236655,"line_start":135,"line_end":135,"column_start":5,"column_end":19},"name":"BadU32Constant","qualname":"::front::wgsl::Error::BadU32Constant","value":"Error::BadU32Constant(Span)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2465},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236656,"byte_end":236660,"line_start":135,"line_end":135,"column_start":20,"column_end":24},"name":"0","qualname":"::front::wgsl::Error::BadU32Constant::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2463},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2466},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236667,"byte_end":236681,"line_start":136,"line_end":136,"column_start":5,"column_end":19},"name":"BadScalarWidth","qualname":"::front::wgsl::Error::BadScalarWidth","value":"Error::BadScalarWidth(Span, Bytes)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2468},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236682,"byte_end":236686,"line_start":136,"line_end":136,"column_start":20,"column_end":24},"name":"0","qualname":"::front::wgsl::Error::BadScalarWidth::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2466},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2469},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236688,"byte_end":236693,"line_start":136,"line_end":136,"column_start":26,"column_end":31},"name":"1","qualname":"::front::wgsl::Error::BadScalarWidth::1","value":"u8","parent":{"krate":0,"index":2466},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2470},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236700,"byte_end":236711,"line_start":137,"line_end":137,"column_start":5,"column_end":16},"name":"BadAccessor","qualname":"::front::wgsl::Error::BadAccessor","value":"Error::BadAccessor(Span)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2472},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236712,"byte_end":236716,"line_start":137,"line_end":137,"column_start":17,"column_end":21},"name":"0","qualname":"::front::wgsl::Error::BadAccessor::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2470},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2473},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236723,"byte_end":236733,"line_start":138,"line_end":138,"column_start":5,"column_end":15},"name":"BadTexture","qualname":"::front::wgsl::Error::BadTexture","value":"Error::BadTexture(Span)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2475},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236734,"byte_end":236738,"line_start":138,"line_end":138,"column_start":16,"column_end":20},"name":"0","qualname":"::front::wgsl::Error::BadTexture::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2476},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236745,"byte_end":236756,"line_start":139,"line_end":139,"column_start":5,"column_end":16},"name":"BadTypeCast","qualname":"::front::wgsl::Error::BadTypeCast","value":"Error::BadTypeCast { span, from_type, to_type }","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2477},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236767,"byte_end":236771,"line_start":140,"line_end":140,"column_start":9,"column_end":13},"name":"span","qualname":"::front::wgsl::Error::BadTypeCast::span","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2476},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2478},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236787,"byte_end":236796,"line_start":141,"line_end":141,"column_start":9,"column_end":18},"name":"from_type","qualname":"::front::wgsl::Error::BadTypeCast::from_type","value":"std::string::String","parent":{"krate":0,"index":2476},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2479},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236814,"byte_end":236821,"line_start":142,"line_end":142,"column_start":9,"column_end":16},"name":"to_type","qualname":"::front::wgsl::Error::BadTypeCast::to_type","value":"std::string::String","parent":{"krate":0,"index":2476},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2480},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236842,"byte_end":236862,"line_start":144,"line_end":144,"column_start":5,"column_end":25},"name":"BadTextureSampleType","qualname":"::front::wgsl::Error::BadTextureSampleType","value":"Error::BadTextureSampleType { span, kind, width }","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2481},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236873,"byte_end":236877,"line_start":145,"line_end":145,"column_start":9,"column_end":13},"name":"span","qualname":"::front::wgsl::Error::BadTextureSampleType::span","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2480},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2482},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236893,"byte_end":236897,"line_start":146,"line_end":146,"column_start":9,"column_end":13},"name":"kind","qualname":"::front::wgsl::Error::BadTextureSampleType::kind","value":"ScalarKind","parent":{"krate":0,"index":2480},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2483},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236926,"byte_end":236931,"line_start":147,"line_end":147,"column_start":9,"column_end":14},"name":"width","qualname":"::front::wgsl::Error::BadTextureSampleType::width","value":"u8","parent":{"krate":0,"index":2480},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2484},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236948,"byte_end":236962,"line_start":149,"line_end":149,"column_start":5,"column_end":19},"name":"InvalidResolve","qualname":"::front::wgsl::Error::InvalidResolve","value":"Error::InvalidResolve(ResolveError)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2486},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236963,"byte_end":236975,"line_start":149,"line_end":149,"column_start":20,"column_end":32},"name":"0","qualname":"::front::wgsl::Error::InvalidResolve::0","value":"proc::typifier::ResolveError","parent":{"krate":0,"index":2484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2487},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236982,"byte_end":237003,"line_start":150,"line_end":150,"column_start":5,"column_end":26},"name":"InvalidForInitializer","qualname":"::front::wgsl::Error::InvalidForInitializer","value":"Error::InvalidForInitializer(Span)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2489},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237004,"byte_end":237008,"line_start":150,"line_end":150,"column_start":27,"column_end":31},"name":"0","qualname":"::front::wgsl::Error::InvalidForInitializer::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2490},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237015,"byte_end":237034,"line_start":151,"line_end":151,"column_start":5,"column_end":24},"name":"UnknownStorageClass","qualname":"::front::wgsl::Error::UnknownStorageClass","value":"Error::UnknownStorageClass(Span)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2492},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237035,"byte_end":237039,"line_start":151,"line_end":151,"column_start":25,"column_end":29},"name":"0","qualname":"::front::wgsl::Error::UnknownStorageClass::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2493},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237046,"byte_end":237062,"line_start":152,"line_end":152,"column_start":5,"column_end":21},"name":"UnknownAttribute","qualname":"::front::wgsl::Error::UnknownAttribute","value":"Error::UnknownAttribute(Span)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2495},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237063,"byte_end":237067,"line_start":152,"line_end":152,"column_start":22,"column_end":26},"name":"0","qualname":"::front::wgsl::Error::UnknownAttribute::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2493},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2496},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237074,"byte_end":237088,"line_start":153,"line_end":153,"column_start":5,"column_end":19},"name":"UnknownBuiltin","qualname":"::front::wgsl::Error::UnknownBuiltin","value":"Error::UnknownBuiltin(Span)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2498},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237089,"byte_end":237093,"line_start":153,"line_end":153,"column_start":20,"column_end":24},"name":"0","qualname":"::front::wgsl::Error::UnknownBuiltin::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2496},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2499},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237100,"byte_end":237113,"line_start":154,"line_end":154,"column_start":5,"column_end":18},"name":"UnknownAccess","qualname":"::front::wgsl::Error::UnknownAccess","value":"Error::UnknownAccess(Span)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2501},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237114,"byte_end":237118,"line_start":154,"line_end":154,"column_start":19,"column_end":23},"name":"0","qualname":"::front::wgsl::Error::UnknownAccess::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2499},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2502},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237125,"byte_end":237143,"line_start":155,"line_end":155,"column_start":5,"column_end":23},"name":"UnknownShaderStage","qualname":"::front::wgsl::Error::UnknownShaderStage","value":"Error::UnknownShaderStage(Span)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2504},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237144,"byte_end":237148,"line_start":155,"line_end":155,"column_start":24,"column_end":28},"name":"0","qualname":"::front::wgsl::Error::UnknownShaderStage::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2502},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2505},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237155,"byte_end":237167,"line_start":156,"line_end":156,"column_start":5,"column_end":17},"name":"UnknownIdent","qualname":"::front::wgsl::Error::UnknownIdent","value":"Error::UnknownIdent(Span, &'a str)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2507},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237168,"byte_end":237172,"line_start":156,"line_end":156,"column_start":18,"column_end":22},"name":"0","qualname":"::front::wgsl::Error::UnknownIdent::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2505},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2508},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237174,"byte_end":237181,"line_start":156,"line_end":156,"column_start":24,"column_end":31},"name":"1","qualname":"::front::wgsl::Error::UnknownIdent::1","value":"&'a str","parent":{"krate":0,"index":2505},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2509},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237188,"byte_end":237205,"line_start":157,"line_end":157,"column_start":5,"column_end":22},"name":"UnknownScalarType","qualname":"::front::wgsl::Error::UnknownScalarType","value":"Error::UnknownScalarType(Span)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2511},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237206,"byte_end":237210,"line_start":157,"line_end":157,"column_start":23,"column_end":27},"name":"0","qualname":"::front::wgsl::Error::UnknownScalarType::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2512},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237217,"byte_end":237228,"line_start":158,"line_end":158,"column_start":5,"column_end":16},"name":"UnknownType","qualname":"::front::wgsl::Error::UnknownType","value":"Error::UnknownType(Span)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2514},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237229,"byte_end":237233,"line_start":158,"line_end":158,"column_start":17,"column_end":21},"name":"0","qualname":"::front::wgsl::Error::UnknownType::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2512},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2515},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237240,"byte_end":237260,"line_start":159,"line_end":159,"column_start":5,"column_end":25},"name":"UnknownStorageFormat","qualname":"::front::wgsl::Error::UnknownStorageFormat","value":"Error::UnknownStorageFormat(Span)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2517},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237261,"byte_end":237265,"line_start":159,"line_end":159,"column_start":26,"column_end":30},"name":"0","qualname":"::front::wgsl::Error::UnknownStorageFormat::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2515},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2518},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237272,"byte_end":237296,"line_start":160,"line_end":160,"column_start":5,"column_end":29},"name":"UnknownConservativeDepth","qualname":"::front::wgsl::Error::UnknownConservativeDepth","value":"Error::UnknownConservativeDepth(Span)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2520},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237297,"byte_end":237301,"line_start":160,"line_end":160,"column_start":30,"column_end":34},"name":"0","qualname":"::front::wgsl::Error::UnknownConservativeDepth::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2518},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2521},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237308,"byte_end":237318,"line_start":161,"line_end":161,"column_start":5,"column_end":15},"name":"ZeroStride","qualname":"::front::wgsl::Error::ZeroStride","value":"Error::ZeroStride(Span)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2523},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237319,"byte_end":237323,"line_start":161,"line_end":161,"column_start":16,"column_end":20},"name":"0","qualname":"::front::wgsl::Error::ZeroStride::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2524},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237330,"byte_end":237345,"line_start":162,"line_end":162,"column_start":5,"column_end":20},"name":"ZeroSizeOrAlign","qualname":"::front::wgsl::Error::ZeroSizeOrAlign","value":"Error::ZeroSizeOrAlign(Span)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2526},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237346,"byte_end":237350,"line_start":162,"line_end":162,"column_start":21,"column_end":25},"name":"0","qualname":"::front::wgsl::Error::ZeroSizeOrAlign::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2524},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2527},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237357,"byte_end":237376,"line_start":163,"line_end":163,"column_start":5,"column_end":24},"name":"InconsistentBinding","qualname":"::front::wgsl::Error::InconsistentBinding","value":"Error::InconsistentBinding(Span)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2529},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237377,"byte_end":237381,"line_start":163,"line_end":163,"column_start":25,"column_end":29},"name":"0","qualname":"::front::wgsl::Error::InconsistentBinding::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2527},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2530},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237388,"byte_end":237408,"line_start":164,"line_end":164,"column_start":5,"column_end":25},"name":"UnknownLocalFunction","qualname":"::front::wgsl::Error::UnknownLocalFunction","value":"Error::UnknownLocalFunction(Span)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2532},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237409,"byte_end":237413,"line_start":164,"line_end":164,"column_start":26,"column_end":30},"name":"0","qualname":"::front::wgsl::Error::UnknownLocalFunction::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2530},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2533},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237420,"byte_end":237446,"line_start":165,"line_end":165,"column_start":5,"column_end":31},"name":"InitializationTypeMismatch","qualname":"::front::wgsl::Error::InitializationTypeMismatch","value":"Error::InitializationTypeMismatch(Span, Handle<crate::Type>)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2535},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237447,"byte_end":237451,"line_start":165,"line_end":165,"column_start":32,"column_end":36},"name":"0","qualname":"::front::wgsl::Error::InitializationTypeMismatch::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2536},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237453,"byte_end":237472,"line_start":165,"line_end":165,"column_start":38,"column_end":57},"name":"1","qualname":"::front::wgsl::Error::InitializationTypeMismatch::1","value":"arena::Handle<Type>","parent":{"krate":0,"index":2533},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2537},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237479,"byte_end":237490,"line_start":166,"line_end":166,"column_start":5,"column_end":16},"name":"MissingType","qualname":"::front::wgsl::Error::MissingType","value":"Error::MissingType(Span)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2539},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237491,"byte_end":237495,"line_start":166,"line_end":166,"column_start":17,"column_end":21},"name":"0","qualname":"::front::wgsl::Error::MissingType::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2537},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2540},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237502,"byte_end":237522,"line_start":167,"line_end":167,"column_start":5,"column_end":25},"name":"InvalidAtomicPointer","qualname":"::front::wgsl::Error::InvalidAtomicPointer","value":"Error::InvalidAtomicPointer(Span)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2542},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237523,"byte_end":237527,"line_start":167,"line_end":167,"column_start":26,"column_end":30},"name":"0","qualname":"::front::wgsl::Error::InvalidAtomicPointer::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2543},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237534,"byte_end":237558,"line_start":168,"line_end":168,"column_start":5,"column_end":29},"name":"InvalidAtomicOperandType","qualname":"::front::wgsl::Error::InvalidAtomicOperandType","value":"Error::InvalidAtomicOperandType(Span)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2545},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237559,"byte_end":237563,"line_start":168,"line_end":168,"column_start":30,"column_end":34},"name":"0","qualname":"::front::wgsl::Error::InvalidAtomicOperandType::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2543},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2546},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237570,"byte_end":237577,"line_start":169,"line_end":169,"column_start":5,"column_end":12},"name":"Pointer","qualname":"::front::wgsl::Error::Pointer","value":"Error::Pointer(&'static str, Span)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2548},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237578,"byte_end":237590,"line_start":169,"line_end":169,"column_start":13,"column_end":25},"name":"0","qualname":"::front::wgsl::Error::Pointer::0","value":"&'static str","parent":{"krate":0,"index":2546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2549},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237592,"byte_end":237596,"line_start":169,"line_end":169,"column_start":27,"column_end":31},"name":"1","qualname":"::front::wgsl::Error::Pointer::1","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2550},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237603,"byte_end":237613,"line_start":170,"line_end":170,"column_start":5,"column_end":15},"name":"NotPointer","qualname":"::front::wgsl::Error::NotPointer","value":"Error::NotPointer(Span)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2552},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237614,"byte_end":237618,"line_start":170,"line_end":170,"column_start":16,"column_end":20},"name":"0","qualname":"::front::wgsl::Error::NotPointer::0","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2553},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237625,"byte_end":237637,"line_start":171,"line_end":171,"column_start":5,"column_end":17},"name":"NotReference","qualname":"::front::wgsl::Error::NotReference","value":"Error::NotReference(&'static str, Span)","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2555},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237638,"byte_end":237650,"line_start":171,"line_end":171,"column_start":18,"column_end":30},"name":"0","qualname":"::front::wgsl::Error::NotReference::0","value":"&'static str","parent":{"krate":0,"index":2553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2556},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237652,"byte_end":237656,"line_start":171,"line_end":171,"column_start":32,"column_end":36},"name":"1","qualname":"::front::wgsl::Error::NotReference::1","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2557},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237663,"byte_end":237668,"line_start":172,"line_end":172,"column_start":5,"column_end":10},"name":"Other","qualname":"::front::wgsl::Error::Other","value":"Error::Other","parent":{"krate":0,"index":2442},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2442},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":236329,"byte_end":236334,"line_start":127,"line_end":127,"column_start":10,"column_end":15},"name":"Error","qualname":"::front::wgsl::Error","value":"enum Error<'a> {\n    Unexpected(TokenSpan, ExpectedToken),\n    BadU32(Span, BadIntError),\n    BadI32(Span, BadIntError),\n    NegativeInt(Span),\n    BadFloat(Span, BadFloatError),\n    BadU32Constant(Span),\n    BadScalarWidth(Span, Bytes),\n    BadAccessor(Span),\n    BadTexture(Span),\n    BadTypeCast {\n            span: Span,\n            from_type: String,\n            to_type: String,\n        },\n    BadTextureSampleType {\n            span: Span,\n            kind: crate::ScalarKind,\n            width: u8,\n        },\n    InvalidResolve(ResolveError),\n    InvalidForInitializer(Span),\n    UnknownStorageClass(Span),\n    UnknownAttribute(Span),\n    UnknownBuiltin(Span),\n    UnknownAccess(Span),\n    UnknownShaderStage(Span),\n    UnknownIdent(Span, &'a str),\n    UnknownScalarType(Span),\n    UnknownType(Span),\n    UnknownStorageFormat(Span),\n    UnknownConservativeDepth(Span),\n    ZeroStride(Span),\n    ZeroSizeOrAlign(Span),\n    InconsistentBinding(Span),\n    UnknownLocalFunction(Span),\n    InitializationTypeMismatch(Span, Handle<crate::Type>),\n    MissingType(Span),\n    InvalidAtomicPointer(Span),\n    InvalidAtomicOperandType(Span),\n    Pointer(&'static str, Span),\n    NotPointer(Span),\n    NotReference(&'static str, Span),\n    Other,\n}","parent":null,"children":[{"krate":0,"index":2444},{"krate":0,"index":2448},{"krate":0,"index":2452},{"krate":0,"index":2456},{"krate":0,"index":2459},{"krate":0,"index":2463},{"krate":0,"index":2466},{"krate":0,"index":2470},{"krate":0,"index":2473},{"krate":0,"index":2476},{"krate":0,"index":2480},{"krate":0,"index":2484},{"krate":0,"index":2487},{"krate":0,"index":2490},{"krate":0,"index":2493},{"krate":0,"index":2496},{"krate":0,"index":2499},{"krate":0,"index":2502},{"krate":0,"index":2505},{"krate":0,"index":2509},{"krate":0,"index":2512},{"krate":0,"index":2515},{"krate":0,"index":2518},{"krate":0,"index":2521},{"krate":0,"index":2524},{"krate":0,"index":2527},{"krate":0,"index":2530},{"krate":0,"index":2533},{"krate":0,"index":2537},{"krate":0,"index":2540},{"krate":0,"index":2543},{"krate":0,"index":2546},{"krate":0,"index":2550},{"krate":0,"index":2553},{"krate":0,"index":2557}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":839},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":261889,"byte_end":261894,"line_start":698,"line_end":698,"column_start":10,"column_end":15},"name":"Value","qualname":"::front::wgsl::StringValueLookup::Value","value":"type Value;","parent":{"krate":0,"index":837},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2578},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":273664,"byte_end":273673,"line_start":1024,"line_end":1024,"column_start":5,"column_end":14},"name":"Attribute","qualname":"::front::wgsl::Scope::Attribute","value":"Scope::Attribute","parent":{"krate":0,"index":2577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2580},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":273679,"byte_end":273689,"line_start":1025,"line_end":1025,"column_start":5,"column_end":15},"name":"ImportDecl","qualname":"::front::wgsl::Scope::ImportDecl","value":"Scope::ImportDecl","parent":{"krate":0,"index":2577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2582},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":273695,"byte_end":273707,"line_start":1026,"line_end":1026,"column_start":5,"column_end":17},"name":"VariableDecl","qualname":"::front::wgsl::Scope::VariableDecl","value":"Scope::VariableDecl","parent":{"krate":0,"index":2577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2584},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":273713,"byte_end":273721,"line_start":1027,"line_end":1027,"column_start":5,"column_end":13},"name":"TypeDecl","qualname":"::front::wgsl::Scope::TypeDecl","value":"Scope::TypeDecl","parent":{"krate":0,"index":2577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2586},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":273727,"byte_end":273739,"line_start":1028,"line_end":1028,"column_start":5,"column_end":17},"name":"FunctionDecl","qualname":"::front::wgsl::Scope::FunctionDecl","value":"Scope::FunctionDecl","parent":{"krate":0,"index":2577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2588},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":273745,"byte_end":273750,"line_start":1029,"line_end":1029,"column_start":5,"column_end":10},"name":"Block","qualname":"::front::wgsl::Scope::Block","value":"Scope::Block","parent":{"krate":0,"index":2577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2590},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":273756,"byte_end":273765,"line_start":1030,"line_end":1030,"column_start":5,"column_end":14},"name":"Statement","qualname":"::front::wgsl::Scope::Statement","value":"Scope::Statement","parent":{"krate":0,"index":2577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2592},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":273771,"byte_end":273783,"line_start":1031,"line_end":1031,"column_start":5,"column_end":17},"name":"ConstantExpr","qualname":"::front::wgsl::Scope::ConstantExpr","value":"Scope::ConstantExpr","parent":{"krate":0,"index":2577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2594},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":273789,"byte_end":273800,"line_start":1032,"line_end":1032,"column_start":5,"column_end":16},"name":"PrimaryExpr","qualname":"::front::wgsl::Scope::PrimaryExpr","value":"Scope::PrimaryExpr","parent":{"krate":0,"index":2577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2596},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":273806,"byte_end":273818,"line_start":1033,"line_end":1033,"column_start":5,"column_end":17},"name":"SingularExpr","qualname":"::front::wgsl::Scope::SingularExpr","value":"Scope::SingularExpr","parent":{"krate":0,"index":2577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2598},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":273824,"byte_end":273833,"line_start":1034,"line_end":1034,"column_start":5,"column_end":14},"name":"UnaryExpr","qualname":"::front::wgsl::Scope::UnaryExpr","value":"Scope::UnaryExpr","parent":{"krate":0,"index":2577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2600},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":273839,"byte_end":273850,"line_start":1035,"line_end":1035,"column_start":5,"column_end":16},"name":"GeneralExpr","qualname":"::front::wgsl::Scope::GeneralExpr","value":"Scope::GeneralExpr","parent":{"krate":0,"index":2577},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2577},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":273652,"byte_end":273657,"line_start":1023,"line_end":1023,"column_start":10,"column_end":15},"name":"Scope","qualname":"::front::wgsl::Scope","value":"enum Scope {\n    Attribute,\n    ImportDecl,\n    VariableDecl,\n    TypeDecl,\n    FunctionDecl,\n    Block,\n    Statement,\n    ConstantExpr,\n    PrimaryExpr,\n    SingularExpr,\n    UnaryExpr,\n    GeneralExpr,\n}","parent":null,"children":[{"krate":0,"index":2578},{"krate":0,"index":2580},{"krate":0,"index":2582},{"krate":0,"index":2584},{"krate":0,"index":2586},{"krate":0,"index":2588},{"krate":0,"index":2590},{"krate":0,"index":2592},{"krate":0,"index":2594},{"krate":0,"index":2596},{"krate":0,"index":2598},{"krate":0,"index":2600}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2616},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":276691,"byte_end":276701,"line_start":1116,"line_end":1116,"column_start":12,"column_end":22},"name":"ParseError","qualname":"::front::wgsl::ParseError","value":"ParseError {  }","parent":null,"children":[{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2619}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":277522,"byte_end":277536,"line_start":1144,"line_end":1144,"column_start":12,"column_end":26},"name":"emit_to_stderr","qualname":"<ParseError>::emit_to_stderr","value":"fn emit_to_stderr(&Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Emits a summary of the error to standard error stream.\n","sig":null,"attributes":[{"value":"/ Emits a summary of the error to standard error stream.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":277452,"byte_end":277510,"line_start":1143,"line_end":1143,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":277932,"byte_end":277946,"line_start":1153,"line_end":1153,"column_start":12,"column_end":26},"name":"emit_to_string","qualname":"<ParseError>::emit_to_string","value":"fn emit_to_string(&Self, &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Emits a summary of the error to a string.\n","sig":null,"attributes":[{"value":"/ Emits a summary of the error to a string.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":277875,"byte_end":277920,"line_start":1152,"line_end":1152,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":278396,"byte_end":278404,"line_start":1163,"line_end":1163,"column_start":12,"column_end":20},"name":"location","qualname":"<ParseError>::location","value":"fn location(&Self, &str) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Returns the 1-based line number and column of the first label in the\n error message.\n","sig":null,"attributes":[{"value":"/ Returns the 1-based line number and column of the first label in the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":278289,"byte_end":278361,"line_start":1161,"line_end":1161,"column_start":5,"column_end":77}},{"value":"/ error message.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":278366,"byte_end":278384,"line_start":1162,"line_end":1162,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":278874,"byte_end":278877,"line_start":1178,"line_end":1178,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParseError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut std::fmt::Formatter) -> std::fmt::Result","parent":{"krate":2,"index":9916},"children":[],"decl_id":{"krate":2,"index":9917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":279034,"byte_end":279040,"line_start":1184,"line_end":1184,"column_start":8,"column_end":14},"name":"source","qualname":"<ParseError as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn std::error::Error + 'static>","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":941},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":279129,"byte_end":279135,"line_start":1189,"line_end":1189,"column_start":12,"column_end":18},"name":"Parser","qualname":"::front::wgsl::Parser","value":"Parser {  }","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":279282,"byte_end":279285,"line_start":1196,"line_end":1196,"column_start":12,"column_end":15},"name":"new","qualname":"<Parser>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":408752,"byte_end":408757,"line_start":4128,"line_end":4128,"column_start":12,"column_end":17},"name":"parse","qualname":"<Parser>::parse","value":"fn parse(&mut Self, &str) -> Result<crate::Module, ParseError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1065},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":409672,"byte_end":409681,"line_start":4152,"line_end":4152,"column_start":8,"column_end":17},"name":"parse_str","qualname":"::front::wgsl::parse_str","value":"fn parse_str(&str) -> Result<crate::Module, ParseError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1066},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":409781,"byte_end":409798,"line_start":4156,"line_end":4156,"column_start":12,"column_end":29},"name":"StringErrorBuffer","qualname":"::front::wgsl::StringErrorBuffer","value":"StringErrorBuffer {  }","parent":null,"children":[{"krate":0,"index":1067}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":409858,"byte_end":409861,"line_start":4161,"line_end":4161,"column_start":12,"column_end":15},"name":"new","qualname":"<StringErrorBuffer>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":409925,"byte_end":409936,"line_start":4165,"line_end":4165,"column_start":12,"column_end":23},"name":"into_string","qualname":"<StringErrorBuffer>::into_string","value":"fn into_string(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":410051,"byte_end":410056,"line_start":4171,"line_end":4171,"column_start":8,"column_end":13},"name":"write","qualname":"<StringErrorBuffer as std::io::Write>::write","value":"fn write(&mut Self, &[u8]) -> io::Result<usize>","parent":{"krate":1,"index":4566},"children":[],"decl_id":{"krate":1,"index":4567},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":410169,"byte_end":410174,"line_start":4176,"line_end":4176,"column_start":8,"column_end":13},"name":"flush","qualname":"<StringErrorBuffer as std::io::Write>::flush","value":"fn flush(&mut Self) -> io::Result<()>","parent":{"krate":1,"index":4566},"children":[],"decl_id":{"krate":1,"index":4571},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":410277,"byte_end":410291,"line_start":4182,"line_end":4182,"column_start":8,"column_end":22},"name":"supports_color","qualname":"<StringErrorBuffer as codespan_reporting::term::termcolor::WriteColor>::supports_color","value":"fn supports_color(&Self) -> bool","parent":{"krate":24,"index":29},"children":[],"decl_id":{"krate":24,"index":30},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":410337,"byte_end":410346,"line_start":4186,"line_end":4186,"column_start":8,"column_end":17},"name":"set_color","qualname":"<StringErrorBuffer as codespan_reporting::term::termcolor::WriteColor>::set_color","value":"fn set_color(&mut Self, &ColorSpec) -> io::Result<()>","parent":{"krate":24,"index":29},"children":[],"decl_id":{"krate":24,"index":31},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":410426,"byte_end":410431,"line_start":4190,"line_end":4190,"column_start":8,"column_end":13},"name":"reset","qualname":"<StringErrorBuffer as codespan_reporting::term::termcolor::WriteColor>::reset","value":"fn reset(&mut Self) -> io::Result<()>","parent":{"krate":24,"index":29},"children":[],"decl_id":{"krate":24,"index":32},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2631},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":228000,"byte_end":228008,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"Typifier","qualname":"::front::Typifier","value":"Typifier {  }","parent":null,"children":[{"krate":0,"index":2632}],"decl_id":null,"docs":" Helper processor that derives the types of all expressions.\n","sig":null,"attributes":[{"value":"/ Helper processor that derives the types of all expressions.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":227899,"byte_end":227962,"line_start":64,"line_end":64,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":228079,"byte_end":228082,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<Typifier>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":228179,"byte_end":228184,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"reset","qualname":"<Typifier>::reset","value":"fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":228249,"byte_end":228252,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"get","qualname":"<Typifier>::get","value":"fn get<'a>(&'a Self, Handle<crate::Expression>, &'a UniqueArena<crate::Type>)\n-> &'a crate::TypeInner","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":228483,"byte_end":228487,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"grow","qualname":"<Typifier>::grow","value":"fn grow(&mut Self, Handle<crate::Expression>, &Arena<crate::Expression>,\n&ResolveContext) -> Result<(), ResolveError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":229301,"byte_end":229311,"line_start":109,"line_end":109,"column_start":12,"column_end":22},"name":"invalidate","qualname":"<Typifier>::invalidate","value":"fn invalidate(&mut Self, Handle<crate::Expression>, &Arena<crate::Expression>,\n&ResolveContext) -> Result<(), ResolveError>","parent":null,"children":[],"decl_id":null,"docs":" Invalidates the cached type resolution for `epxr_handle` forcing a recomputation","sig":null,"attributes":[{"value":"/ Invalidates the cached type resolution for `epxr_handle` forcing a recomputation","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":229080,"byte_end":229164,"line_start":105,"line_end":105,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":229169,"byte_end":229172,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ If the type of the expression hasn't yet been calculated a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":229177,"byte_end":229239,"line_start":107,"line_end":107,"column_start":5,"column_end":67}},{"value":"/ [`grow`](Self::grow) is performed instead","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":229244,"byte_end":229289,"line_start":108,"line_end":108,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":229957,"byte_end":229962,"line_start":128,"line_end":128,"column_start":8,"column_end":13},"name":"index","qualname":"<Typifier as std::ops::Index>::index","value":"fn index(&Self, Handle<crate::Expression>) -> &Self::Output","parent":{"krate":2,"index":3454},"children":[],"decl_id":{"krate":2,"index":3457},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1119},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":230506,"byte_end":230514,"line_start":146,"line_end":146,"column_start":8,"column_end":16},"name":"align_up","qualname":"::front::align_up","value":"fn align_up(u32, u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Helper function used for aligning `value` to the next multiple of `align`","sig":null,"attributes":[{"value":"/ Helper function used for aligning `value` to the next multiple of `align`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":230075,"byte_end":230152,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":230153,"byte_end":230156,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ # Notes:","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":230157,"byte_end":230169,"line_start":135,"line_end":135,"column_start":1,"column_end":13}},{"value":"/ - `align` must be a power of two.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":230170,"byte_end":230207,"line_start":136,"line_end":136,"column_start":1,"column_end":38}},{"value":"/ - The returned value will be greater or equal to `value`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":230208,"byte_end":230269,"line_start":137,"line_end":137,"column_start":1,"column_end":62}},{"value":"/ # Examples:","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":230270,"byte_end":230285,"line_start":138,"line_end":138,"column_start":1,"column_end":16}},{"value":"/ ```ignore","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":230286,"byte_end":230299,"line_start":139,"line_end":139,"column_start":1,"column_end":14}},{"value":"/ assert_eq!(0, align_up(0, 16));","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":230300,"byte_end":230335,"line_start":140,"line_end":140,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(16, align_up(1, 16));","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":230336,"byte_end":230372,"line_start":141,"line_end":141,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(16, align_up(16, 16));","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":230373,"byte_end":230410,"line_start":142,"line_end":142,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(334, align_up(333, 2));","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":230411,"byte_end":230449,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(384, align_up(257, 128));","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":230450,"byte_end":230490,"line_start":144,"line_end":144,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":230491,"byte_end":230498,"line_start":145,"line_end":145,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":1120},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"proc","qualname":"::proc","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","parent":null,"children":[{"krate":0,"index":1121},{"krate":0,"index":1144},{"krate":0,"index":1174},{"krate":0,"index":1210},{"krate":0,"index":1215},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1262},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1272},{"krate":0,"index":1275},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1282},{"krate":0,"index":1285},{"krate":0,"index":1288},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1295},{"krate":0,"index":1298},{"krate":0,"index":2789},{"krate":0,"index":2790},{"krate":0,"index":2792},{"krate":0,"index":2794},{"krate":0,"index":2795},{"krate":0,"index":2797},{"krate":0,"index":2798},{"krate":0,"index":1301},{"krate":0,"index":1310},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1322},{"krate":0,"index":1327},{"krate":0,"index":1329},{"krate":0,"index":1332},{"krate":0,"index":1334},{"krate":0,"index":1339},{"krate":0,"index":1341},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1347}],"decl_id":null,"docs":" Module processing functionality.\n","sig":null,"attributes":[{"value":"/ Module processing functionality.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":448374,"byte_end":448410,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":463076,"byte_end":463092,"line_start":15,"line_end":15,"column_start":12,"column_end":28},"name":"indexable_length","qualname":"<crate::TypeInner>::indexable_length","value":"fn indexable_length(&Self, &crate::Module)\n-> Result<IndexableLength, ProcError>","parent":null,"children":[],"decl_id":null,"docs":" Return the length of a subscriptable type.","sig":null,"attributes":[{"value":"/ Return the length of a subscriptable type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":462606,"byte_end":462652,"line_start":6,"line_end":6,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":462657,"byte_end":462660,"line_start":7,"line_end":7,"column_start":5,"column_end":8}},{"value":"/ The `self` parameter should be a handle to a vector, matrix, or array","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":462665,"byte_end":462738,"line_start":8,"line_end":8,"column_start":5,"column_end":78}},{"value":"/ type, a pointer to one of those, or a value pointer. Arrays may be","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":462743,"byte_end":462813,"line_start":9,"line_end":9,"column_start":5,"column_end":75}},{"value":"/ fixed-size, dynamically sized, or sized by a specializable constant.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":462818,"byte_end":462890,"line_start":10,"line_end":10,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":462895,"byte_end":462898,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ The value returned is appropriate for bounds checks on subscripting.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":462903,"byte_end":462975,"line_start":12,"line_end":12,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":462980,"byte_end":462983,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ Return an error if `self` does not describe a subscriptable type at all.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":462988,"byte_end":463064,"line_start":14,"line_end":14,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1131},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":464615,"byte_end":464620,"line_start":50,"line_end":50,"column_start":5,"column_end":10},"name":"Known","qualname":"::proc::index::IndexableLength::Known","value":"IndexableLength::Known(u32)","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" Values of this type always have the given number of elements.\n","sig":null,"attributes":[{"value":"/ Values of this type always have the given number of elements.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":464545,"byte_end":464610,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":1133},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":464621,"byte_end":464624,"line_start":50,"line_end":50,"column_start":11,"column_end":14},"name":"0","qualname":"::proc::index::IndexableLength::Known::0","value":"u32","parent":{"krate":0,"index":1131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1134},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":464776,"byte_end":464789,"line_start":54,"line_end":54,"column_start":5,"column_end":18},"name":"Specializable","qualname":"::proc::index::IndexableLength::Specializable","value":"IndexableLength::Specializable(crate::Handle<crate::Constant>)","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" The value of the given specializable constant is the number of elements.\n (Non-specializable constants are reported as `Known`.)\n","sig":null,"attributes":[{"value":"/ The value of the given specializable constant is the number of elements.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":464632,"byte_end":464708,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ (Non-specializable constants are reported as `Known`.)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":464713,"byte_end":464771,"line_start":53,"line_end":53,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1136},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":464790,"byte_end":464820,"line_start":54,"line_end":54,"column_start":19,"column_end":49},"name":"0","qualname":"::proc::index::IndexableLength::Specializable::0","value":"arena::Handle<Constant>","parent":{"krate":0,"index":1134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1137},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":464885,"byte_end":464892,"line_start":57,"line_end":57,"column_start":5,"column_end":12},"name":"Dynamic","qualname":"::proc::index::IndexableLength::Dynamic","value":"IndexableLength::Dynamic","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" The number of elements is determined at runtime.\n","sig":null,"attributes":[{"value":"/ The number of elements is determined at runtime.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":464828,"byte_end":464880,"line_start":56,"line_end":56,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":1130},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":464523,"byte_end":464538,"line_start":48,"line_end":48,"column_start":10,"column_end":25},"name":"IndexableLength","qualname":"::proc::index::IndexableLength","value":"enum IndexableLength {\n    Known(u32),\n    Specializable(crate::Handle<crate::Constant>),\n    Dynamic,\n}","parent":null,"children":[{"krate":0,"index":1131},{"krate":0,"index":1134},{"krate":0,"index":1137}],"decl_id":null,"docs":" The number of elements in an indexable type.","sig":null,"attributes":[{"value":"/ The number of elements in an indexable type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":464326,"byte_end":464374,"line_start":44,"line_end":44,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":464375,"byte_end":464378,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This summarizes the length of vectors, matrices, and arrays in a way that is","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":464379,"byte_end":464459,"line_start":46,"line_end":46,"column_start":1,"column_end":81}},{"value":"/ convenient for indexing and bounds-checking code.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":464460,"byte_end":464513,"line_start":47,"line_end":47,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":464932,"byte_end":464951,"line_start":61,"line_end":61,"column_start":12,"column_end":31},"name":"to_indexable_length","qualname":"<crate::ArraySize>::to_indexable_length","value":"fn to_indexable_length(Self, &crate::Module)\n-> Result<IndexableLength, ProcError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1162},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/layouter.rs","byte_start":465737,"byte_end":465746,"line_start":4,"line_end":4,"column_start":10,"column_end":19},"name":"Alignment","qualname":"::proc::layouter::Alignment","value":"NonZeroU32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2637},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/layouter.rs","byte_start":465984,"byte_end":465994,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"TypeLayout","qualname":"::proc::layouter::TypeLayout","value":"TypeLayout { size, alignment }","parent":null,"children":[{"krate":0,"index":2638},{"krate":0,"index":2639}],"decl_id":null,"docs":" Alignment information for a type.\n","sig":null,"attributes":[{"value":"/ Alignment information for a type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/layouter.rs","byte_start":465762,"byte_end":465799,"line_start":6,"line_end":6,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":2638},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/layouter.rs","byte_start":466005,"byte_end":466009,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"name":"size","qualname":"::proc::layouter::TypeLayout::size","value":"u32","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2639},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/layouter.rs","byte_start":466024,"byte_end":466033,"line_start":12,"line_end":12,"column_start":9,"column_end":18},"name":"alignment","qualname":"::proc::layouter::TypeLayout::alignment","value":"std::num::NonZeroU32","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2652},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/layouter.rs","byte_start":466382,"byte_end":466390,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"Layouter","qualname":"::proc::layouter::Layouter","value":"Layouter {  }","parent":null,"children":[{"krate":0,"index":2653}],"decl_id":null,"docs":" Helper processor that derives the sizes of all types.\n It uses the default layout algorithm/table, described in\n <https://github.com/gpuweb/gpuweb/issues/1393>\n","sig":null,"attributes":[{"value":"/ Helper processor that derives the sizes of all types.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/layouter.rs","byte_start":466049,"byte_end":466106,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/ It uses the default layout algorithm/table, described in","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/layouter.rs","byte_start":466107,"byte_end":466167,"line_start":16,"line_end":16,"column_start":1,"column_end":61}},{"value":"/ <https://github.com/gpuweb/gpuweb/issues/1393>","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/layouter.rs","byte_start":466168,"byte_end":466218,"line_start":17,"line_end":17,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/layouter.rs","byte_start":466515,"byte_end":466520,"line_start":27,"line_end":27,"column_start":8,"column_end":13},"name":"index","qualname":"<Layouter as std::ops::Index>::index","value":"fn index(&Self, Handle<crate::Type>) -> &TypeLayout","parent":{"krate":2,"index":3454},"children":[],"decl_id":{"krate":2,"index":3457},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2670},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/layouter.rs","byte_start":466736,"byte_end":466751,"line_start":34,"line_end":34,"column_start":12,"column_end":27},"name":"InvalidBaseType","qualname":"::proc::layouter::InvalidBaseType","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Base type {0:?} is out of bounds\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/layouter.rs","byte_start":466680,"byte_end":466724,"line_start":33,"line_end":33,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2672},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/layouter.rs","byte_start":466752,"byte_end":466775,"line_start":34,"line_end":34,"column_start":28,"column_end":51},"name":"0","qualname":"::proc::layouter::InvalidBaseType::0","value":"arena::Handle<Type>","parent":{"krate":0,"index":2670},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/layouter.rs","byte_start":466806,"byte_end":466811,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"clear","qualname":"<Layouter>::clear","value":"fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/layouter.rs","byte_start":466873,"byte_end":466881,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"round_up","qualname":"<Layouter>::round_up","value":"fn round_up(Alignment, u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/layouter.rs","byte_start":467081,"byte_end":467097,"line_start":48,"line_end":48,"column_start":12,"column_end":28},"name":"member_placement","qualname":"<Layouter>::member_placement","value":"fn member_placement(&Self, u32, Handle<crate::Type>, Option<Alignment>,\nOption<NonZeroU32>) -> (ops::Range<u32>, Alignment)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/layouter.rs","byte_start":467610,"byte_end":467616,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"update","qualname":"<Layouter>::update","value":"fn update(&mut Self, &UniqueArena<crate::Type>, &Arena<crate::Constant>)\n-> Result<(), InvalidBaseType>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1188},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":470770,"byte_end":470785,"line_start":4,"line_end":4,"column_start":10,"column_end":25},"name":"EntryPointIndex","qualname":"::proc::namer::EntryPointIndex","value":"u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2674},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":470884,"byte_end":470892,"line_start":9,"line_end":9,"column_start":5,"column_end":13},"name":"Constant","qualname":"::proc::namer::NameKey::Constant","value":"NameKey::Constant(Handle<crate::Constant>)","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2676},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":470893,"byte_end":470916,"line_start":9,"line_end":9,"column_start":14,"column_end":37},"name":"0","qualname":"::proc::namer::NameKey::Constant::0","value":"arena::Handle<Constant>","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2677},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":470923,"byte_end":470937,"line_start":10,"line_end":10,"column_start":5,"column_end":19},"name":"GlobalVariable","qualname":"::proc::namer::NameKey::GlobalVariable","value":"NameKey::GlobalVariable(Handle<crate::GlobalVariable>)","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2679},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":470938,"byte_end":470967,"line_start":10,"line_end":10,"column_start":20,"column_end":49},"name":"0","qualname":"::proc::namer::NameKey::GlobalVariable::0","value":"arena::Handle<GlobalVariable>","parent":{"krate":0,"index":2677},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2680},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":470974,"byte_end":470978,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Type","qualname":"::proc::namer::NameKey::Type","value":"NameKey::Type(Handle<crate::Type>)","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2682},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":470979,"byte_end":470998,"line_start":11,"line_end":11,"column_start":10,"column_end":29},"name":"0","qualname":"::proc::namer::NameKey::Type::0","value":"arena::Handle<Type>","parent":{"krate":0,"index":2680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2683},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":471005,"byte_end":471017,"line_start":12,"line_end":12,"column_start":5,"column_end":17},"name":"StructMember","qualname":"::proc::namer::NameKey::StructMember","value":"NameKey::StructMember(Handle<crate::Type>, u32)","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2685},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":471018,"byte_end":471037,"line_start":12,"line_end":12,"column_start":18,"column_end":37},"name":"0","qualname":"::proc::namer::NameKey::StructMember::0","value":"arena::Handle<Type>","parent":{"krate":0,"index":2683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2686},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":471039,"byte_end":471042,"line_start":12,"line_end":12,"column_start":39,"column_end":42},"name":"1","qualname":"::proc::namer::NameKey::StructMember::1","value":"u32","parent":{"krate":0,"index":2683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2687},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":471049,"byte_end":471057,"line_start":13,"line_end":13,"column_start":5,"column_end":13},"name":"Function","qualname":"::proc::namer::NameKey::Function","value":"NameKey::Function(Handle<crate::Function>)","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2689},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":471058,"byte_end":471081,"line_start":13,"line_end":13,"column_start":14,"column_end":37},"name":"0","qualname":"::proc::namer::NameKey::Function::0","value":"arena::Handle<Function>","parent":{"krate":0,"index":2687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2690},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":471088,"byte_end":471104,"line_start":14,"line_end":14,"column_start":5,"column_end":21},"name":"FunctionArgument","qualname":"::proc::namer::NameKey::FunctionArgument","value":"NameKey::FunctionArgument(Handle<crate::Function>, u32)","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2692},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":471105,"byte_end":471128,"line_start":14,"line_end":14,"column_start":22,"column_end":45},"name":"0","qualname":"::proc::namer::NameKey::FunctionArgument::0","value":"arena::Handle<Function>","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2693},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":471130,"byte_end":471133,"line_start":14,"line_end":14,"column_start":47,"column_end":50},"name":"1","qualname":"::proc::namer::NameKey::FunctionArgument::1","value":"u32","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2694},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":471140,"byte_end":471153,"line_start":15,"line_end":15,"column_start":5,"column_end":18},"name":"FunctionLocal","qualname":"::proc::namer::NameKey::FunctionLocal","value":"NameKey::FunctionLocal(Handle<crate::Function>, Handle<crate::LocalVariable>)","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2696},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":471154,"byte_end":471177,"line_start":15,"line_end":15,"column_start":19,"column_end":42},"name":"0","qualname":"::proc::namer::NameKey::FunctionLocal::0","value":"arena::Handle<Function>","parent":{"krate":0,"index":2694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2697},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":471179,"byte_end":471207,"line_start":15,"line_end":15,"column_start":44,"column_end":72},"name":"1","qualname":"::proc::namer::NameKey::FunctionLocal::1","value":"arena::Handle<LocalVariable>","parent":{"krate":0,"index":2694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2698},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":471214,"byte_end":471224,"line_start":16,"line_end":16,"column_start":5,"column_end":15},"name":"EntryPoint","qualname":"::proc::namer::NameKey::EntryPoint","value":"NameKey::EntryPoint(EntryPointIndex)","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2700},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":471225,"byte_end":471240,"line_start":16,"line_end":16,"column_start":16,"column_end":31},"name":"0","qualname":"::proc::namer::NameKey::EntryPoint::0","value":"u16","parent":{"krate":0,"index":2698},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2701},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":471247,"byte_end":471262,"line_start":17,"line_end":17,"column_start":5,"column_end":20},"name":"EntryPointLocal","qualname":"::proc::namer::NameKey::EntryPointLocal","value":"NameKey::EntryPointLocal(EntryPointIndex, Handle<crate::LocalVariable>)","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2703},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":471263,"byte_end":471278,"line_start":17,"line_end":17,"column_start":21,"column_end":36},"name":"0","qualname":"::proc::namer::NameKey::EntryPointLocal::0","value":"u16","parent":{"krate":0,"index":2701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2704},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":471280,"byte_end":471308,"line_start":17,"line_end":17,"column_start":38,"column_end":66},"name":"1","qualname":"::proc::namer::NameKey::EntryPointLocal::1","value":"arena::Handle<LocalVariable>","parent":{"krate":0,"index":2701},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2705},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":471315,"byte_end":471333,"line_start":18,"line_end":18,"column_start":5,"column_end":23},"name":"EntryPointArgument","qualname":"::proc::namer::NameKey::EntryPointArgument","value":"NameKey::EntryPointArgument(EntryPointIndex, u32)","parent":{"krate":0,"index":2673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2707},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":471334,"byte_end":471349,"line_start":18,"line_end":18,"column_start":24,"column_end":39},"name":"0","qualname":"::proc::namer::NameKey::EntryPointArgument::0","value":"u16","parent":{"krate":0,"index":2705},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2708},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":471351,"byte_end":471354,"line_start":18,"line_end":18,"column_start":41,"column_end":44},"name":"1","qualname":"::proc::namer::NameKey::EntryPointArgument::1","value":"u32","parent":{"krate":0,"index":2705},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2673},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":470870,"byte_end":470877,"line_start":8,"line_end":8,"column_start":10,"column_end":17},"name":"NameKey","qualname":"::proc::namer::NameKey","value":"enum NameKey {\n    Constant(Handle<crate::Constant>),\n    GlobalVariable(Handle<crate::GlobalVariable>),\n    Type(Handle<crate::Type>),\n    StructMember(Handle<crate::Type>, u32),\n    Function(Handle<crate::Function>),\n    FunctionArgument(Handle<crate::Function>, u32),\n    FunctionLocal(Handle<crate::Function>, Handle<crate::LocalVariable>),\n    EntryPoint(EntryPointIndex),\n    EntryPointLocal(EntryPointIndex, Handle<crate::LocalVariable>),\n    EntryPointArgument(EntryPointIndex, u32),\n}","parent":null,"children":[{"krate":0,"index":2674},{"krate":0,"index":2677},{"krate":0,"index":2680},{"krate":0,"index":2683},{"krate":0,"index":2687},{"krate":0,"index":2690},{"krate":0,"index":2694},{"krate":0,"index":2698},{"krate":0,"index":2701},{"krate":0,"index":2705}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2721},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":471505,"byte_end":471510,"line_start":24,"line_end":24,"column_start":12,"column_end":17},"name":"Namer","qualname":"::proc::namer::Namer","value":"Namer {  }","parent":null,"children":[{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2724}],"decl_id":null,"docs":" This processor assigns names to all the things in a module\n that may need identifiers in a textual backend.\n","sig":null,"attributes":[{"value":"/ This processor assigns names to all the things in a module","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":471360,"byte_end":471422,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/ that may need identifiers in a textual backend.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":471423,"byte_end":471474,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":473565,"byte_end":473569,"line_start":83,"line_end":83,"column_start":12,"column_end":16},"name":"call","qualname":"<Namer>::call","value":"fn call(&mut Self, &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Return a new identifier based on `label_raw`.","sig":null,"attributes":[{"value":"/ Return a new identifier based on `label_raw`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":473172,"byte_end":473221,"line_start":74,"line_end":74,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":473226,"byte_end":473229,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The result:","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":473234,"byte_end":473249,"line_start":76,"line_end":76,"column_start":5,"column_end":20}},{"value":"/ - is a valid identifier even if `label_raw` is not","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":473254,"byte_end":473308,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/ - conflicts with no keywords listed in `Namer::keywords`, and","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":473313,"byte_end":473378,"line_start":78,"line_end":78,"column_start":5,"column_end":70}},{"value":"/ - is different from any identifier previously constructed by this","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":473383,"byte_end":473452,"line_start":79,"line_end":79,"column_start":5,"column_end":74}},{"value":"/   `Namer`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":473457,"byte_end":473471,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":473476,"byte_end":473479,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Guarantee uniqueness by applying a numeric suffix when necessary.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":473484,"byte_end":473553,"line_start":82,"line_end":82,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":475088,"byte_end":475095,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"call_or","qualname":"<Namer>::call_or","value":"fn call_or(&mut Self, &Option<String>, &str) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1203},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":475847,"byte_end":475852,"line_start":135,"line_end":135,"column_start":12,"column_end":17},"name":"reset","qualname":"<Namer>::reset","value":"fn reset(&mut Self, &crate::Module, &[&str], &[&str],\n&mut FastHashMap<NameKey, String>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1211},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/terminator.rs","byte_start":481441,"byte_end":481461,"line_start":7,"line_end":7,"column_start":8,"column_end":28},"name":"ensure_block_returns","qualname":"::proc::terminator::ensure_block_returns","value":"fn ensure_block_returns(&mut crate::Block)","parent":null,"children":[],"decl_id":null,"docs":" Ensure that the given block has return statements\n at the end of its control flow.","sig":null,"attributes":[{"value":"/ Ensure that the given block has return statements","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/terminator.rs","byte_start":481152,"byte_end":481205,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/ at the end of its control flow.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/terminator.rs","byte_start":481206,"byte_end":481241,"line_start":2,"line_end":2,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/terminator.rs","byte_start":481242,"byte_end":481245,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Note: we don't want to blindly append a return statement","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/terminator.rs","byte_start":481246,"byte_end":481306,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"/ to the end, because it may be either redundant or invalid,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/terminator.rs","byte_start":481307,"byte_end":481369,"line_start":5,"line_end":5,"column_start":1,"column_end":63}},{"value":"/ e.g. when the user already has returns in if/else branches.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/terminator.rs","byte_start":481370,"byte_end":481433,"line_start":6,"line_end":6,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2728},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":486239,"byte_end":486245,"line_start":89,"line_end":89,"column_start":5,"column_end":11},"name":"Handle","qualname":"::proc::typifier::TypeResolution::Handle","value":"TypeResolution::Handle(Handle<crate::Type>)","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" A type stored in the associated arena.\n","sig":null,"attributes":[{"value":"/ A type stored in the associated arena.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":486192,"byte_end":486234,"line_start":88,"line_end":88,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2730},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":486246,"byte_end":486265,"line_start":89,"line_end":89,"column_start":12,"column_end":31},"name":"0","qualname":"::proc::typifier::TypeResolution::Handle::0","value":"arena::Handle<Type>","parent":{"krate":0,"index":2728},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2731},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":486548,"byte_end":486553,"line_start":96,"line_end":96,"column_start":5,"column_end":10},"name":"Value","qualname":"::proc::typifier::TypeResolution::Value","value":"TypeResolution::Value(crate::TypeInner)","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" A free-floating [`TypeInner`], representing a type that may not be\n available in the associated arena. However, the `TypeInner` itself may\n contain `Handle<Type>` values referring to types from the arena.","sig":null,"attributes":[{"value":"/ A free-floating [`TypeInner`], representing a type that may not be","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":486273,"byte_end":486343,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ available in the associated arena. However, the `TypeInner` itself may","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":486348,"byte_end":486422,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ contain `Handle<Type>` values referring to types from the arena.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":486427,"byte_end":486495,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":486500,"byte_end":486503,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`TypeInner`]: crate::TypeInner","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":486508,"byte_end":486543,"line_start":95,"line_end":95,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2733},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":486554,"byte_end":486570,"line_start":96,"line_end":96,"column_start":11,"column_end":27},"name":"0","qualname":"::proc::typifier::TypeResolution::Value::0","value":"TypeInner","parent":{"krate":0,"index":2731},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2727},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":486171,"byte_end":486185,"line_start":87,"line_end":87,"column_start":10,"column_end":24},"name":"TypeResolution","qualname":"::proc::typifier::TypeResolution","value":"enum TypeResolution { Handle(Handle<crate::Type>), Value(crate::TypeInner), }","parent":null,"children":[{"krate":0,"index":2728},{"krate":0,"index":2731}],"decl_id":null,"docs":" The result of computing an expression's type.","sig":null,"attributes":[{"value":"/ The result of computing an expression's type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":482759,"byte_end":482808,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":482809,"byte_end":482812,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is the (Rust) type returned by [`ResolveContext::resolve`] to represent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":482813,"byte_end":482893,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ the (Naga) type it ascribes to some expression.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":482894,"byte_end":482945,"line_start":8,"line_end":8,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":482946,"byte_end":482949,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ You might expect such a function to simply return a `Handle<Type>`. However,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":482950,"byte_end":483030,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ we want type resolution to be a read-only process, and that would limit the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":483031,"byte_end":483110,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ possible results to types already present in the expression's associated","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":483111,"byte_end":483187,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `UniqueArena<Type>`. Naga IR does have certain expressions whose types are","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":483188,"byte_end":483266,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ not certain to be present.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":483267,"byte_end":483297,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":483298,"byte_end":483301,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ So instead, type resolution returns a `TypeResolution` enum: either a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":483302,"byte_end":483375,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/ [`Handle`], referencing some type in the arena, or a [`Value`], holding a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":483376,"byte_end":483453,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ free-floating [`TypeInner`]. This extends the range to cover anything that","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":483454,"byte_end":483532,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ can be represented with a `TypeInner` referring to the existing arena.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":483533,"byte_end":483607,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":483608,"byte_end":483611,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ What sorts of expressions can have types not available in the arena?","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":483612,"byte_end":483684,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":483685,"byte_end":483688,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ -   An [`Access`] or [`AccessIndex`] expression applied to a [`Vector`] or","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":483689,"byte_end":483767,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/     [`Matrix`] must have a [`Scalar`] or [`Vector`] type. But since `Vector`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":483768,"byte_end":483848,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/     and `Matrix` represent their element and column types implicitly, not","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":483849,"byte_end":483926,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/     via a handle, there may not be a suitable type in the expression's","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":483927,"byte_end":484001,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/     associated arena. Instead, resolving such an expression returns a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":484002,"byte_end":484075,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/     `TypeResolution::Value(TypeInner::X { ... })`, where `X` is `Scalar` or","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":484076,"byte_end":484155,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/     `Vector`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":484156,"byte_end":484173,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":484174,"byte_end":484177,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ -   Similarly, the type of an [`Access`] or [`AccessIndex`] expression","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":484178,"byte_end":484252,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/     applied to a *pointer to* a vector or matrix must produce a *pointer to*","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":484253,"byte_end":484333,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/     a scalar or vector type. These cannot be represented with a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":484334,"byte_end":484401,"line_start":33,"line_end":33,"column_start":1,"column_end":68}},{"value":"/     [`TypeInner::Pointer`], since the `Pointer`'s `base` must point into the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":484402,"byte_end":484482,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/     arena, and as before, we cannot assume that a suitable scalar or vector","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":484483,"byte_end":484562,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/     type is there. So we take things one step further and provide","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":484563,"byte_end":484632,"line_start":36,"line_end":36,"column_start":1,"column_end":70}},{"value":"/     [`TypeInner::ValuePointer`], specifically for the case of pointers to","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":484633,"byte_end":484710,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/     scalars or vectors. This type fits in a `TypeInner` and is exactly","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":484711,"byte_end":484785,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/     equivalent to a `Pointer` to a `Vector` or `Scalar`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":484786,"byte_end":484846,"line_start":39,"line_end":39,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":484847,"byte_end":484850,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ So, for example, the type of an `Access` expression applied to a value of type:","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":484851,"byte_end":484934,"line_start":41,"line_end":41,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":484935,"byte_end":484938,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":484939,"byte_end":484952,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/ TypeInner::Matrix { columns, rows, width }","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":484953,"byte_end":484999,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485000,"byte_end":485007,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485008,"byte_end":485011,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ might be:","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485012,"byte_end":485025,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485026,"byte_end":485029,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485030,"byte_end":485043,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ TypeResolution::Value(TypeInner::Vector {","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485044,"byte_end":485089,"line_start":50,"line_end":50,"column_start":1,"column_end":46}},{"value":"/     size: rows,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485090,"byte_end":485109,"line_start":51,"line_end":51,"column_start":1,"column_end":20}},{"value":"/     kind: ScalarKind::Float,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485110,"byte_end":485142,"line_start":52,"line_end":52,"column_start":1,"column_end":33}},{"value":"/     width,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485143,"byte_end":485157,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ })","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485158,"byte_end":485164,"line_start":54,"line_end":54,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485165,"byte_end":485172,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485173,"byte_end":485176,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ and the type of an access to a pointer of storage class `class` to such a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485177,"byte_end":485254,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/ matrix might be:","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485255,"byte_end":485275,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485276,"byte_end":485279,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485280,"byte_end":485293,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/ TypeResolution::Value(TypeInner::ValuePointer {","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485294,"byte_end":485345,"line_start":61,"line_end":61,"column_start":1,"column_end":52}},{"value":"/     size: Some(rows),","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485346,"byte_end":485371,"line_start":62,"line_end":62,"column_start":1,"column_end":26}},{"value":"/     kind: ScalarKind::Float,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485372,"byte_end":485404,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/     width,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485405,"byte_end":485419,"line_start":64,"line_end":64,"column_start":1,"column_end":15}},{"value":"/     class","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485420,"byte_end":485433,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/ })","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485434,"byte_end":485440,"line_start":66,"line_end":66,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485441,"byte_end":485448,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485449,"byte_end":485452,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`Handle`]: TypeResolution::Handle","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485453,"byte_end":485491,"line_start":69,"line_end":69,"column_start":1,"column_end":39}},{"value":"/ [`Value`]: TypeResolution::Value","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485492,"byte_end":485528,"line_start":70,"line_end":70,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485529,"byte_end":485532,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ [`Access`]: crate::Expression::Access","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485533,"byte_end":485574,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ [`AccessIndex`]: crate::Expression::AccessIndex","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485575,"byte_end":485626,"line_start":73,"line_end":73,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485627,"byte_end":485630,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`TypeInner`]: crate::TypeInner","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485631,"byte_end":485666,"line_start":75,"line_end":75,"column_start":1,"column_end":36}},{"value":"/ [`Matrix`]: crate::TypeInner::Matrix","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485667,"byte_end":485707,"line_start":76,"line_end":76,"column_start":1,"column_end":41}},{"value":"/ [`Pointer`]: crate::TypeInner::Pointer","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485708,"byte_end":485750,"line_start":77,"line_end":77,"column_start":1,"column_end":43}},{"value":"/ [`Scalar`]: crate::TypeInner::Scalar","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485751,"byte_end":485791,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"/ [`ValuePointer`]: crate::TypeInner::ValuePointer","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485792,"byte_end":485844,"line_start":79,"line_end":79,"column_start":1,"column_end":53}},{"value":"/ [`Vector`]: crate::TypeInner::Vector","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485845,"byte_end":485885,"line_start":80,"line_end":80,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485886,"byte_end":485889,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ [`TypeInner::Pointer`]: crate::TypeInner::Pointer","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485890,"byte_end":485943,"line_start":82,"line_end":82,"column_start":1,"column_end":54}},{"value":"/ [`TypeInner::ValuePointer`]: crate::TypeInner::ValuePointer","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":485944,"byte_end":486007,"line_start":83,"line_end":83,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":486609,"byte_end":486615,"line_start":100,"line_end":100,"column_start":12,"column_end":18},"name":"handle","qualname":"<TypeResolution>::handle","value":"fn handle(&Self) -> Option<Handle<crate::Type>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":486792,"byte_end":486802,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"inner_with","qualname":"<TypeResolution>::inner_with","value":"fn inner_with<'a>(&'a Self, &'a UniqueArena<crate::Type>)\n-> &'a crate::TypeInner","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":487129,"byte_end":487134,"line_start":117,"line_end":117,"column_start":8,"column_end":13},"name":"clone","qualname":"<TypeResolution as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":488256,"byte_end":488268,"line_start":152,"line_end":152,"column_start":12,"column_end":24},"name":"resolve_type","qualname":"<crate::ConstantInner>::resolve_type","value":"fn resolve_type(&Self) -> TypeResolution","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2759},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":488739,"byte_end":488755,"line_start":166,"line_end":166,"column_start":5,"column_end":21},"name":"OutOfBoundsIndex","qualname":"::proc::typifier::ResolveError::OutOfBoundsIndex","value":"ResolveError::OutOfBoundsIndex { expr, index }","parent":{"krate":0,"index":2740},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Index {index} is out of bounds for expression {expr:?}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":488668,"byte_end":488734,"line_start":165,"line_end":165,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":2760},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":488766,"byte_end":488770,"line_start":167,"line_end":167,"column_start":9,"column_end":13},"name":"expr","qualname":"::proc::typifier::ResolveError::OutOfBoundsIndex::expr","value":"arena::Handle<Expression>","parent":{"krate":0,"index":2759},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2761},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":488807,"byte_end":488812,"line_start":168,"line_end":168,"column_start":9,"column_end":14},"name":"index","qualname":"::proc::typifier::ResolveError::OutOfBoundsIndex::index","value":"u32","parent":{"krate":0,"index":2759},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2762},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":488906,"byte_end":488919,"line_start":171,"line_end":171,"column_start":5,"column_end":18},"name":"InvalidAccess","qualname":"::proc::typifier::ResolveError::InvalidAccess","value":"ResolveError::InvalidAccess { expr, indexed }","parent":{"krate":0,"index":2740},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid access into expression {expr:?}, indexed: {indexed}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":488830,"byte_end":488901,"line_start":170,"line_end":170,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":2763},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":488930,"byte_end":488934,"line_start":172,"line_end":172,"column_start":9,"column_end":13},"name":"expr","qualname":"::proc::typifier::ResolveError::InvalidAccess::expr","value":"arena::Handle<Expression>","parent":{"krate":0,"index":2762},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2764},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":488971,"byte_end":488978,"line_start":173,"line_end":173,"column_start":9,"column_end":16},"name":"indexed","qualname":"::proc::typifier::ResolveError::InvalidAccess::indexed","value":"bool","parent":{"krate":0,"index":2762},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2765},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489069,"byte_end":489085,"line_start":176,"line_end":176,"column_start":5,"column_end":21},"name":"InvalidSubAccess","qualname":"::proc::typifier::ResolveError::InvalidSubAccess","value":"ResolveError::InvalidSubAccess { ty, indexed }","parent":{"krate":0,"index":2740},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid sub-access into type {ty:?}, indexed: {indexed}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":488997,"byte_end":489064,"line_start":175,"line_end":175,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":2766},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489096,"byte_end":489098,"line_start":177,"line_end":177,"column_start":9,"column_end":11},"name":"ty","qualname":"::proc::typifier::ResolveError::InvalidSubAccess::ty","value":"arena::Handle<Type>","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2767},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489129,"byte_end":489136,"line_start":178,"line_end":178,"column_start":9,"column_end":16},"name":"indexed","qualname":"::proc::typifier::ResolveError::InvalidSubAccess::indexed","value":"bool","parent":{"krate":0,"index":2765},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2768},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489192,"byte_end":489205,"line_start":181,"line_end":181,"column_start":5,"column_end":18},"name":"InvalidScalar","qualname":"::proc::typifier::ResolveError::InvalidScalar","value":"ResolveError::InvalidScalar(Handle<crate::Expression>)","parent":{"krate":0,"index":2740},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid scalar {0:?}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489155,"byte_end":489187,"line_start":180,"line_end":180,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":2770},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489206,"byte_end":489231,"line_start":181,"line_end":181,"column_start":19,"column_end":44},"name":"0","qualname":"::proc::typifier::ResolveError::InvalidScalar::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":2768},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2771},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489275,"byte_end":489288,"line_start":183,"line_end":183,"column_start":5,"column_end":18},"name":"InvalidVector","qualname":"::proc::typifier::ResolveError::InvalidVector","value":"ResolveError::InvalidVector(Handle<crate::Expression>)","parent":{"krate":0,"index":2740},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid vector {0:?}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489238,"byte_end":489270,"line_start":182,"line_end":182,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":2773},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489289,"byte_end":489314,"line_start":183,"line_end":183,"column_start":19,"column_end":44},"name":"0","qualname":"::proc::typifier::ResolveError::InvalidVector::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":2771},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2774},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489359,"byte_end":489373,"line_start":185,"line_end":185,"column_start":5,"column_end":19},"name":"InvalidPointer","qualname":"::proc::typifier::ResolveError::InvalidPointer","value":"ResolveError::InvalidPointer(Handle<crate::Expression>)","parent":{"krate":0,"index":2740},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid pointer {0:?}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489321,"byte_end":489354,"line_start":184,"line_end":184,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":2776},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489374,"byte_end":489399,"line_start":185,"line_end":185,"column_start":20,"column_end":45},"name":"0","qualname":"::proc::typifier::ResolveError::InvalidPointer::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":2774},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2777},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489442,"byte_end":489454,"line_start":187,"line_end":187,"column_start":5,"column_end":17},"name":"InvalidImage","qualname":"::proc::typifier::ResolveError::InvalidImage","value":"ResolveError::InvalidImage(Handle<crate::Expression>)","parent":{"krate":0,"index":2740},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid image {0:?}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489406,"byte_end":489437,"line_start":186,"line_end":186,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2779},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489455,"byte_end":489480,"line_start":187,"line_end":187,"column_start":18,"column_end":43},"name":"0","qualname":"::proc::typifier::ResolveError::InvalidImage::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":2777},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2780},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489531,"byte_end":489549,"line_start":189,"line_end":189,"column_start":5,"column_end":23},"name":"FunctionNotDefined","qualname":"::proc::typifier::ResolveError::FunctionNotDefined","value":"ResolveError::FunctionNotDefined { name }","parent":{"krate":0,"index":2740},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Function {name} not defined\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489487,"byte_end":489526,"line_start":188,"line_end":188,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2781},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489552,"byte_end":489556,"line_start":189,"line_end":189,"column_start":26,"column_end":30},"name":"name","qualname":"::proc::typifier::ResolveError::FunctionNotDefined::name","value":"std::string::String","parent":{"krate":0,"index":2780},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2782},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489617,"byte_end":489636,"line_start":191,"line_end":191,"column_start":5,"column_end":24},"name":"FunctionReturnsVoid","qualname":"::proc::typifier::ResolveError::FunctionReturnsVoid","value":"ResolveError::FunctionReturnsVoid","parent":{"krate":0,"index":2740},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Function without return type\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489572,"byte_end":489612,"line_start":190,"line_end":190,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2784},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489705,"byte_end":489717,"line_start":193,"line_end":193,"column_start":5,"column_end":17},"name":"TypeNotFound","qualname":"::proc::typifier::ResolveError::TypeNotFound","value":"ResolveError::TypeNotFound","parent":{"krate":0,"index":2740},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Type is not found in the given immutable arena\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489642,"byte_end":489700,"line_start":192,"line_end":192,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2786},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489766,"byte_end":489786,"line_start":195,"line_end":195,"column_start":5,"column_end":25},"name":"IncompatibleOperands","qualname":"::proc::typifier::ResolveError::IncompatibleOperands","value":"ResolveError::IncompatibleOperands(String)","parent":{"krate":0,"index":2740},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Incompatible operands: {0}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489723,"byte_end":489761,"line_start":194,"line_end":194,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2788},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489787,"byte_end":489793,"line_start":195,"line_end":195,"column_start":26,"column_end":32},"name":"0","qualname":"::proc::typifier::ResolveError::IncompatibleOperands::0","value":"std::string::String","parent":{"krate":0,"index":2786},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2740},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":488649,"byte_end":488661,"line_start":164,"line_end":164,"column_start":10,"column_end":22},"name":"ResolveError","qualname":"::proc::typifier::ResolveError","value":"enum ResolveError {\n    OutOfBoundsIndex {\n            expr: Handle<crate::Expression>,\n            index: u32,\n        },\n    InvalidAccess {\n            expr: Handle<crate::Expression>,\n            indexed: bool,\n        },\n    InvalidSubAccess {\n            ty: Handle<crate::Type>,\n            indexed: bool,\n        },\n    InvalidScalar(Handle<crate::Expression>),\n    InvalidVector(Handle<crate::Expression>),\n    InvalidPointer(Handle<crate::Expression>),\n    InvalidImage(Handle<crate::Expression>),\n    FunctionNotDefined {\n            name: String,\n        },\n    FunctionReturnsVoid,\n    TypeNotFound,\n    IncompatibleOperands(String),\n}","parent":null,"children":[{"krate":0,"index":2759},{"krate":0,"index":2762},{"krate":0,"index":2765},{"krate":0,"index":2768},{"krate":0,"index":2771},{"krate":0,"index":2774},{"krate":0,"index":2777},{"krate":0,"index":2780},{"krate":0,"index":2782},{"krate":0,"index":2784},{"krate":0,"index":2786}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489810,"byte_end":489824,"line_start":198,"line_end":198,"column_start":12,"column_end":26},"name":"ResolveContext","qualname":"::proc::typifier::ResolveContext","value":"ResolveContext { constants, types, global_vars, local_vars, functions, arguments }","parent":null,"children":[{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1242},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489839,"byte_end":489848,"line_start":199,"line_end":199,"column_start":9,"column_end":18},"name":"constants","qualname":"::proc::typifier::ResolveContext::constants","value":"&'a arena::Arena<Constant>","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1243},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489886,"byte_end":489891,"line_start":200,"line_end":200,"column_start":9,"column_end":14},"name":"types","qualname":"::proc::typifier::ResolveContext::types","value":"&'a arena::UniqueArena<Type>","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1244},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489931,"byte_end":489942,"line_start":201,"line_end":201,"column_start":9,"column_end":20},"name":"global_vars","qualname":"::proc::typifier::ResolveContext::global_vars","value":"&'a arena::Arena<GlobalVariable>","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1245},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":489986,"byte_end":489996,"line_start":202,"line_end":202,"column_start":9,"column_end":19},"name":"local_vars","qualname":"::proc::typifier::ResolveContext::local_vars","value":"&'a arena::Arena<LocalVariable>","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1246},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":490039,"byte_end":490048,"line_start":203,"line_end":203,"column_start":9,"column_end":18},"name":"functions","qualname":"::proc::typifier::ResolveContext::functions","value":"&'a arena::Arena<Function>","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1247},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":490086,"byte_end":490095,"line_start":204,"line_end":204,"column_start":9,"column_end":18},"name":"arguments","qualname":"::proc::typifier::ResolveContext::arguments","value":"&'a [FunctionArgument]","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":490961,"byte_end":490968,"line_start":223,"line_end":223,"column_start":12,"column_end":19},"name":"resolve","qualname":"<ResolveContext>::resolve","value":"fn resolve<impl Fn(Handle<crate::Expression>) -> &'a TypeResolution>(&Self,\n&crate::Expression, impl Fn(Handle<crate::Expression>) -> &'a TypeResolution)\n-> Result<TypeResolution, ResolveError> where\nimpl Fn(Handle<crate::Expression>) -> &'a TypeResolution: Fn(Handle<crate::Expression>)\n-> &'a TypeResolution","parent":null,"children":[],"decl_id":null,"docs":" Determine the type of `expr`.","sig":null,"attributes":[{"value":"/ Determine the type of `expr`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":490165,"byte_end":490198,"line_start":208,"line_end":208,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":490203,"byte_end":490206,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The `past` argument must be a closure that can resolve the types of any","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":490211,"byte_end":490286,"line_start":210,"line_end":210,"column_start":5,"column_end":80}},{"value":"/ expressions that `expr` refers to. These can be gathered by caching the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":490291,"byte_end":490366,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/ results of prior calls to `resolve`, perhaps as done by the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":490371,"byte_end":490434,"line_start":212,"line_end":212,"column_start":5,"column_end":68}},{"value":"/ [`front::Typifier`] utility type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":490439,"byte_end":490476,"line_start":213,"line_end":213,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":490481,"byte_end":490484,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Type resolution is a read-only process: this method takes `self` by","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":490489,"byte_end":490560,"line_start":215,"line_end":215,"column_start":5,"column_end":76}},{"value":"/ shared reference. However, this means that we cannot add anything to","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":490565,"byte_end":490637,"line_start":216,"line_end":216,"column_start":5,"column_end":77}},{"value":"/ `self.types` that we might need to describe `expr`. To work around this,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":490642,"byte_end":490718,"line_start":217,"line_end":217,"column_start":5,"column_end":81}},{"value":"/ this method returns a [`TypeResolution`], rather than simply returning a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":490723,"byte_end":490799,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ `Handle<Type>`; see the documentation for [`TypeResolution`] for","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":490804,"byte_end":490872,"line_start":219,"line_end":219,"column_start":5,"column_end":73}},{"value":"/ details.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":490877,"byte_end":490889,"line_start":220,"line_end":220,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":490894,"byte_end":490897,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ [`front::Typifier`]: crate::front::Typifier","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":490902,"byte_end":490949,"line_start":222,"line_end":222,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2801},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":448920,"byte_end":448936,"line_start":20,"line_end":20,"column_start":5,"column_end":21},"name":"TypeNotIndexable","qualname":"::proc::ProcError::TypeNotIndexable","value":"ProcError::TypeNotIndexable","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"type is not indexable, and has no length (validation error)\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":448844,"byte_end":448915,"line_start":19,"line_end":19,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2803},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":449016,"byte_end":449040,"line_start":22,"line_end":22,"column_start":5,"column_end":29},"name":"InvalidArraySizeConstant","qualname":"::proc::ProcError::InvalidArraySizeConstant","value":"ProcError::InvalidArraySizeConstant(crate::Handle<crate::Constant>)","parent":{"krate":0,"index":2789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"array length is wrong kind of constant (validation error)\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":448942,"byte_end":449011,"line_start":21,"line_end":21,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":2805},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":449041,"byte_end":449071,"line_start":22,"line_end":22,"column_start":30,"column_end":60},"name":"0","qualname":"::proc::ProcError::InvalidArraySizeConstant::0","value":"arena::Handle<Constant>","parent":{"krate":0,"index":2803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2789},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":448828,"byte_end":448837,"line_start":18,"line_end":18,"column_start":10,"column_end":19},"name":"ProcError","qualname":"::proc::ProcError","value":"enum ProcError {\n    TypeNotIndexable,\n    InvalidArraySizeConstant(crate::Handle<crate::Constant>),\n}","parent":null,"children":[{"krate":0,"index":2801},{"krate":0,"index":2803}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":449140,"byte_end":449144,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"from","qualname":"<super::ScalarKind as std::convert::From>::from","value":"fn from(super::StorageFormat) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1311},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":450572,"byte_end":450583,"line_start":66,"line_end":66,"column_start":12,"column_end":23},"name":"scalar_kind","qualname":"<super::ScalarValue>::scalar_kind","value":"fn scalar_kind(&Self) -> super::ScalarKind","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1312},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":450883,"byte_end":450895,"line_start":76,"line_end":76,"column_start":11,"column_end":23},"name":"POINTER_SPAN","qualname":"::proc::POINTER_SPAN","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":450942,"byte_end":450953,"line_start":79,"line_end":79,"column_start":12,"column_end":23},"name":"scalar_kind","qualname":"<super::TypeInner>::scalar_kind","value":"fn scalar_kind(&Self) -> Option<super::ScalarKind>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":451280,"byte_end":451293,"line_start":89,"line_end":89,"column_start":12,"column_end":25},"name":"pointer_class","qualname":"<super::TypeInner>::pointer_class","value":"fn pointer_class(&Self) -> Option<crate::StorageClass>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":451524,"byte_end":451528,"line_start":97,"line_end":97,"column_start":12,"column_end":16},"name":"span","qualname":"<super::TypeInner>::span","value":"fn span(&Self, &super::Arena<super::Constant>) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":453411,"byte_end":453425,"line_start":143,"line_end":143,"column_start":12,"column_end":26},"name":"canonical_form","qualname":"<super::TypeInner>::canonical_form","value":"fn canonical_form(&Self, &crate::UniqueArena<crate::Type>)\n-> Option<crate::TypeInner>","parent":null,"children":[],"decl_id":null,"docs":" Return the canoncal form of `self`, or `None` if it's already in\n canonical form.","sig":null,"attributes":[{"value":"/ Return the canoncal form of `self`, or `None` if it's already in","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":452984,"byte_end":453052,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ canonical form.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":453057,"byte_end":453076,"line_start":136,"line_end":136,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":453081,"byte_end":453084,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Certain types have multiple representations in `TypeInner`. This","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":453089,"byte_end":453157,"line_start":138,"line_end":138,"column_start":5,"column_end":73}},{"value":"/ function converts all forms of equivalent types to a single","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":453162,"byte_end":453225,"line_start":139,"line_end":139,"column_start":5,"column_end":68}},{"value":"/ representative of their class, so that simply applying `Eq` to the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":453230,"byte_end":453300,"line_start":140,"line_end":140,"column_start":5,"column_end":75}},{"value":"/ result indicates whether the types are equivalent, as far as Naga IR is","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":453305,"byte_end":453380,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ concerned.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":453385,"byte_end":453399,"line_start":142,"line_end":142,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":454538,"byte_end":454548,"line_start":176,"line_end":176,"column_start":12,"column_end":22},"name":"equivalent","qualname":"<super::TypeInner>::equivalent","value":"fn equivalent(&Self, &crate::TypeInner, &crate::UniqueArena<crate::Type>)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Compare `self` and `rhs` as types.","sig":null,"attributes":[{"value":"/ Compare `self` and `rhs` as types.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":454156,"byte_end":454194,"line_start":168,"line_end":168,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":454199,"byte_end":454202,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This is mostly the same as `<TypeInner as Eq>::eq`, but it treats","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":454207,"byte_end":454276,"line_start":170,"line_end":170,"column_start":5,"column_end":74}},{"value":"/ `ValuePointer` and `Pointer` types as equivalent.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":454281,"byte_end":454334,"line_start":171,"line_end":171,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":454339,"byte_end":454342,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ When you know that one side of the comparison is never a pointer, it's","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":454347,"byte_end":454421,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ fine to not bother with canonicalization, and just compare `TypeInner`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":454426,"byte_end":454500,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/ values with `==`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":454505,"byte_end":454526,"line_start":175,"line_end":175,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":454874,"byte_end":454880,"line_start":188,"line_end":188,"column_start":12,"column_end":18},"name":"access","qualname":"<super::StorageClass>::access","value":"fn access(Self) -> crate::StorageAccess","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":455415,"byte_end":455429,"line_start":203,"line_end":203,"column_start":12,"column_end":26},"name":"argument_count","qualname":"<super::MathFunction>::argument_count","value":"fn argument_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1330},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":457856,"byte_end":457870,"line_start":283,"line_end":283,"column_start":12,"column_end":26},"name":"needs_pre_emit","qualname":"<crate::Expression>::needs_pre_emit","value":"fn needs_pre_emit(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the expression is considered emitted at the start of a function.\n","sig":null,"attributes":[{"value":"/ Returns true if the expression is considered emitted at the start of a function.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":457760,"byte_end":457844,"line_start":282,"line_end":282,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":458785,"byte_end":458801,"line_start":306,"line_end":306,"column_start":12,"column_end":28},"name":"is_dynamic_index","qualname":"<crate::Expression>::is_dynamic_index","value":"fn is_dynamic_index(&Self, &crate::Module) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this expression is a dynamic array index, for [`Access`].","sig":null,"attributes":[{"value":"/ Return true if this expression is a dynamic array index, for [`Access`].","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":458109,"byte_end":458185,"line_start":293,"line_end":293,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":458190,"byte_end":458193,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This method returns true if this expression is a dynamically computed","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":458198,"byte_end":458271,"line_start":295,"line_end":295,"column_start":5,"column_end":78}},{"value":"/ index, and as such can only be used to index matrices and arrays when","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":458276,"byte_end":458349,"line_start":296,"line_end":296,"column_start":5,"column_end":78}},{"value":"/ they appear behind a pointer. See the documentation for [`Access`] for","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":458354,"byte_end":458428,"line_start":297,"line_end":297,"column_start":5,"column_end":79}},{"value":"/ details.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":458433,"byte_end":458445,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":458450,"byte_end":458453,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ Note, this does not check the _type_ of the given expression. It's up to","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":458458,"byte_end":458534,"line_start":300,"line_end":300,"column_start":5,"column_end":81}},{"value":"/ the caller to establish that the `Access` expression is well-typed","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":458539,"byte_end":458609,"line_start":301,"line_end":301,"column_start":5,"column_end":75}},{"value":"/ through other means, like [`ResolveContext`].","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":458614,"byte_end":458663,"line_start":302,"line_end":302,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":458668,"byte_end":458671,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ [`Access`]: crate::Expression::Access","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":458676,"byte_end":458717,"line_start":304,"line_end":304,"column_start":5,"column_end":46}},{"value":"/ [`ResolveContext`]: crate::proc::ResolveContext","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":458722,"byte_end":458773,"line_start":305,"line_end":305,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":459081,"byte_end":459101,"line_start":317,"line_end":317,"column_start":12,"column_end":32},"name":"implicit_derivatives","qualname":"<crate::SampleLevel>::implicit_derivatives","value":"fn implicit_derivatives(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":460760,"byte_end":460771,"line_start":357,"line_end":357,"column_start":12,"column_end":23},"name":"to_built_in","qualname":"<crate::Binding>::to_built_in","value":"fn to_built_in(&Self) -> Option<crate::BuiltIn>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":461042,"byte_end":461044,"line_start":367,"line_end":367,"column_start":8,"column_end":10},"name":"eq","qualname":"<crate::ScalarValue as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":461475,"byte_end":461479,"line_start":379,"line_end":379,"column_start":8,"column_end":12},"name":"hash","qualname":"<crate::ScalarValue as std::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: std::hash::Hasher","parent":{"krate":2,"index":10122},"children":[],"decl_id":{"krate":2,"index":10123},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1348},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":461804,"byte_end":461808,"line_start":390,"line_end":390,"column_start":15,"column_end":19},"name":"XYZW","qualname":"::proc::<impl SwizzleComponent>::XYZW","value":"[Self; ]","parent":{"krate":0,"index":1347},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":461872,"byte_end":461877,"line_start":392,"line_end":392,"column_start":12,"column_end":17},"name":"index","qualname":"<super::SwizzleComponent>::index","value":"fn index(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":462047,"byte_end":462057,"line_start":400,"line_end":400,"column_start":12,"column_end":22},"name":"from_index","qualname":"<super::SwizzleComponent>::from_index","value":"fn from_index(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2806},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/span.rs","byte_start":518057,"byte_end":518061,"line_start":5,"line_end":5,"column_start":12,"column_end":16},"name":"Span","qualname":"::span::Span","value":"Span {  }","parent":null,"children":[{"krate":0,"index":2807},{"krate":0,"index":2808}],"decl_id":null,"docs":" A source code span, used for error reporting.\n","sig":null,"attributes":[{"value":"/ A source code span, used for error reporting.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/span.rs","byte_start":517946,"byte_end":517995,"line_start":3,"line_end":3,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/span.rs","byte_start":518250,"byte_end":518253,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<Span>::new","value":"fn new(u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Span` from a range of byte indices","sig":null,"attributes":[{"value":"/ Creates a new `Span` from a range of byte indices","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/span.rs","byte_start":518113,"byte_end":518166,"line_start":11,"line_end":11,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/span.rs","byte_start":518171,"byte_end":518174,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ Note: end is exclusive, it doesn't belong to the `Span`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/span.rs","byte_start":518179,"byte_end":518238,"line_start":13,"line_end":13,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/span.rs","byte_start":518442,"byte_end":518449,"line_start":20,"line_end":20,"column_start":12,"column_end":19},"name":"subsume","qualname":"<Span>::subsume","value":"fn subsume(&mut Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Modifies `self` to contain the smallest `Span` possible that\n contains both `self` and `other`\n","sig":null,"attributes":[{"value":"/ Modifies `self` to contain the smallest `Span` possible that","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/span.rs","byte_start":518325,"byte_end":518389,"line_start":18,"line_end":18,"column_start":5,"column_end":69}},{"value":"/ contains both `self` and `other`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/span.rs","byte_start":518394,"byte_end":518430,"line_start":19,"line_end":19,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/span.rs","byte_start":519081,"byte_end":519091,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"total_span","qualname":"<Span>::total_span","value":"fn total_span<T>(T) -> Self where T: Iterator<Item = Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest `Span` possible that contains all the `Span`s\n defined in the `from` iterator\n","sig":null,"attributes":[{"value":"/ Returns the smallest `Span` possible that contains all the `Span`s","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/span.rs","byte_start":518960,"byte_end":519030,"line_start":36,"line_end":36,"column_start":5,"column_end":75}},{"value":"/ defined in the `from` iterator","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/span.rs","byte_start":519035,"byte_end":519069,"line_start":37,"line_end":37,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/span.rs","byte_start":519350,"byte_end":519358,"line_start":47,"line_end":47,"column_start":12,"column_end":20},"name":"to_range","qualname":"<Span>::to_range","value":"fn to_range(Self) -> Option<Range<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` to a range if the span is not unknown\n","sig":null,"attributes":[{"value":"/ Converts `self` to a range if the span is not unknown","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/span.rs","byte_start":519281,"byte_end":519338,"line_start":46,"line_end":46,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/span.rs","byte_start":519610,"byte_end":519620,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"is_defined","qualname":"<Span>::is_defined","value":"fn is_defined(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check wether `self` was defined or is a default/unknown span\n","sig":null,"attributes":[{"value":"/ Check wether `self` was defined or is a default/unknown span","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/span.rs","byte_start":519534,"byte_end":519598,"line_start":55,"line_end":55,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/span.rs","byte_start":519722,"byte_end":519726,"line_start":62,"line_end":62,"column_start":8,"column_end":12},"name":"from","qualname":"<Span as std::convert::From>::from","value":"fn from(Range<usize>) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1365},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"valid","qualname":"::valid","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","parent":null,"children":[{"krate":0,"index":1366},{"krate":0,"index":1464},{"krate":0,"index":1484},{"krate":0,"index":1550},{"krate":0,"index":1622},{"krate":0,"index":1695},{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1729},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1740},{"krate":0,"index":1743},{"krate":0,"index":1746},{"krate":0,"index":1749},{"krate":0,"index":1752},{"krate":0,"index":1753},{"krate":0,"index":1756},{"krate":0,"index":1759},{"krate":0,"index":1762},{"krate":0,"index":1765},{"krate":0,"index":1768},{"krate":0,"index":1771},{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1778},{"krate":0,"index":1781},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1788},{"krate":0,"index":1791},{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1798},{"krate":0,"index":1801},{"krate":0,"index":3987},{"krate":0,"index":3989},{"krate":0,"index":3990},{"krate":0,"index":3991},{"krate":0,"index":3994},{"krate":0,"index":3995},{"krate":0,"index":3997},{"krate":0,"index":3999},{"krate":0,"index":4001},{"krate":0,"index":4003},{"krate":0,"index":4006},{"krate":0,"index":4015},{"krate":0,"index":4017},{"krate":0,"index":4019},{"krate":0,"index":4021},{"krate":0,"index":4023},{"krate":0,"index":4048},{"krate":0,"index":4051},{"krate":0,"index":4053},{"krate":0,"index":4056},{"krate":0,"index":4058},{"krate":0,"index":4061},{"krate":0,"index":4063},{"krate":0,"index":4066},{"krate":0,"index":4068},{"krate":0,"index":4071},{"krate":0,"index":4074},{"krate":0,"index":1804},{"krate":0,"index":4096},{"krate":0,"index":4098},{"krate":0,"index":4099},{"krate":0,"index":4100},{"krate":0,"index":4103},{"krate":0,"index":4104},{"krate":0,"index":4106},{"krate":0,"index":4108},{"krate":0,"index":4110},{"krate":0,"index":4112},{"krate":0,"index":4094},{"krate":0,"index":4115},{"krate":0,"index":4122},{"krate":0,"index":4124},{"krate":0,"index":4126},{"krate":0,"index":4128},{"krate":0,"index":4130},{"krate":0,"index":4153},{"krate":0,"index":4156},{"krate":0,"index":4158},{"krate":0,"index":4161},{"krate":0,"index":4163},{"krate":0,"index":4166},{"krate":0,"index":4168},{"krate":0,"index":4171},{"krate":0,"index":4173},{"krate":0,"index":4176},{"krate":0,"index":4179},{"krate":0,"index":4193},{"krate":0,"index":4195},{"krate":0,"index":4196},{"krate":0,"index":4197},{"krate":0,"index":4200},{"krate":0,"index":4201},{"krate":0,"index":4203},{"krate":0,"index":4205},{"krate":0,"index":4207},{"krate":0,"index":4209},{"krate":0,"index":4212},{"krate":0,"index":4219},{"krate":0,"index":4221},{"krate":0,"index":4223},{"krate":0,"index":4225},{"krate":0,"index":4227},{"krate":0,"index":4250},{"krate":0,"index":4253},{"krate":0,"index":4255},{"krate":0,"index":4258},{"krate":0,"index":4260},{"krate":0,"index":4263},{"krate":0,"index":4265},{"krate":0,"index":4268},{"krate":0,"index":4270},{"krate":0,"index":4273},{"krate":0,"index":4276},{"krate":0,"index":4290},{"krate":0,"index":4293},{"krate":0,"index":1806},{"krate":0,"index":4295},{"krate":0,"index":4305},{"krate":0,"index":4307},{"krate":0,"index":4308},{"krate":0,"index":4310},{"krate":0,"index":4312},{"krate":0,"index":4317},{"krate":0,"index":4319},{"krate":0,"index":4332},{"krate":0,"index":4333},{"krate":0,"index":4335},{"krate":0,"index":4337},{"krate":0,"index":4342},{"krate":0,"index":4351},{"krate":0,"index":1809},{"krate":0,"index":1812}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2820},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":531802,"byte_end":531824,"line_start":22,"line_end":22,"column_start":16,"column_end":38},"name":"UniformityRequirements","qualname":"::valid::analyzer::UniformityRequirements","value":"UniformityRequirements {  }","parent":null,"children":[{"krate":0,"index":2821}],"decl_id":null,"docs":" Kinds of expressions that require uniform control flow.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2855},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":531845,"byte_end":531863,"line_start":23,"line_end":23,"column_start":15,"column_end":33},"name":"WORK_GROUP_BARRIER","qualname":"::valid::analyzer::UniformityRequirements::WORK_GROUP_BARRIER","value":"Self","parent":{"krate":0,"index":2854},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2856},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":531885,"byte_end":531895,"line_start":24,"line_end":24,"column_start":15,"column_end":25},"name":"DERIVATIVE","qualname":"::valid::analyzer::UniformityRequirements::DERIVATIVE","value":"Self","parent":{"krate":0,"index":2854},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2857},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":531917,"byte_end":531931,"line_start":25,"line_end":25,"column_start":15,"column_end":29},"name":"IMPLICIT_LEVEL","qualname":"::valid::analyzer::UniformityRequirements::IMPLICIT_LEVEL","value":"Self","parent":{"krate":0,"index":2854},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2917},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":532188,"byte_end":532198,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"Uniformity","qualname":"::valid::analyzer::Uniformity","value":"Uniformity { non_uniform_result, requirements }","parent":null,"children":[{"krate":0,"index":2918},{"krate":0,"index":2919}],"decl_id":null,"docs":" Uniform control flow characteristics.\n","sig":null,"attributes":[{"value":"/ Uniform control flow characteristics.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":531948,"byte_end":531989,"line_start":29,"line_end":29,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":2918},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":532734,"byte_end":532752,"line_start":46,"line_end":46,"column_start":9,"column_end":27},"name":"non_uniform_result","qualname":"::valid::analyzer::Uniformity::non_uniform_result","value":"std::option::Option<arena::Handle<Expression>>","parent":{"krate":0,"index":2917},"children":[],"decl_id":null,"docs":" A child expression with non-uniform result.","sig":null,"attributes":[{"value":"/ A child expression with non-uniform result.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":532205,"byte_end":532252,"line_start":35,"line_end":35,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":532257,"byte_end":532260,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This means, when the relevant invocations are scheduled on a compute unit,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":532265,"byte_end":532343,"line_start":37,"line_end":37,"column_start":5,"column_end":83}},{"value":"/ they have to use vector registers to store an individual value","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":532348,"byte_end":532414,"line_start":38,"line_end":38,"column_start":5,"column_end":71}},{"value":"/ per invocation.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":532419,"byte_end":532438,"line_start":39,"line_end":39,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":532443,"byte_end":532446,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Whenever the control flow is conditioned on such value,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":532451,"byte_end":532510,"line_start":41,"line_end":41,"column_start":5,"column_end":64}},{"value":"/ the hardware needs to keep track of the mask of invocations,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":532515,"byte_end":532579,"line_start":42,"line_end":42,"column_start":5,"column_end":69}},{"value":"/ and process all branches of the control flow.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":532584,"byte_end":532633,"line_start":43,"line_end":43,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":532638,"byte_end":532641,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Any operations that depend on non-uniform results also produce non-uniform.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":532646,"byte_end":532725,"line_start":45,"line_end":45,"column_start":5,"column_end":84}}]},{"kind":"Field","id":{"krate":0,"index":2919},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":532861,"byte_end":532873,"line_start":48,"line_end":48,"column_start":9,"column_end":21},"name":"requirements","qualname":"::valid::analyzer::Uniformity::requirements","value":"valid::analyzer::UniformityRequirements","parent":{"krate":0,"index":2917},"children":[],"decl_id":null,"docs":" If this expression requires uniform control flow, store the reason here.\n","sig":null,"attributes":[{"value":"/ If this expression requires uniform control flow, store the reason here.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":532776,"byte_end":532852,"line_start":47,"line_end":47,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":3016},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":534975,"byte_end":534984,"line_start":119,"line_end":119,"column_start":16,"column_end":25},"name":"GlobalUse","qualname":"::valid::analyzer::GlobalUse","value":"GlobalUse {  }","parent":null,"children":[{"krate":0,"index":3017}],"decl_id":null,"docs":" Indicates how a global variable is used.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3051},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":535054,"byte_end":535058,"line_start":121,"line_end":121,"column_start":15,"column_end":19},"name":"READ","qualname":"::valid::analyzer::GlobalUse::READ","value":"Self","parent":{"krate":0,"index":3050},"children":[],"decl_id":null,"docs":" Data will be read from the variable.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3052},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":535130,"byte_end":535135,"line_start":123,"line_end":123,"column_start":15,"column_end":20},"name":"WRITE","qualname":"::valid::analyzer::GlobalUse::WRITE","value":"Self","parent":{"krate":0,"index":3050},"children":[],"decl_id":null,"docs":" Data will be written to the variable.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3053},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":535212,"byte_end":535217,"line_start":125,"line_end":125,"column_start":15,"column_end":20},"name":"QUERY","qualname":"::valid::analyzer::GlobalUse::QUERY","value":"Self","parent":{"krate":0,"index":3050},"children":[],"decl_id":null,"docs":" The information about the data is queried.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3113},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":535416,"byte_end":535427,"line_start":132,"line_end":132,"column_start":12,"column_end":23},"name":"SamplingKey","qualname":"::valid::analyzer::SamplingKey","value":"SamplingKey { image, sampler }","parent":null,"children":[{"krate":0,"index":3114},{"krate":0,"index":3115}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3114},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":535438,"byte_end":535443,"line_start":133,"line_end":133,"column_start":9,"column_end":14},"name":"image","qualname":"::valid::analyzer::SamplingKey::image","value":"arena::Handle<GlobalVariable>","parent":{"krate":0,"index":3113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3115},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":535484,"byte_end":535491,"line_start":134,"line_end":134,"column_start":9,"column_end":16},"name":"sampler","qualname":"::valid::analyzer::SamplingKey::sampler","value":"arena::Handle<GlobalVariable>","parent":{"krate":0,"index":3113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3130},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":535688,"byte_end":535702,"line_start":140,"line_end":140,"column_start":12,"column_end":26},"name":"ExpressionInfo","qualname":"::valid::analyzer::ExpressionInfo","value":"ExpressionInfo { uniformity, ref_count, ty }","parent":null,"children":[{"krate":0,"index":3131},{"krate":0,"index":3132},{"krate":0,"index":3133},{"krate":0,"index":3134}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3131},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":535713,"byte_end":535723,"line_start":141,"line_end":141,"column_start":9,"column_end":19},"name":"uniformity","qualname":"::valid::analyzer::ExpressionInfo::uniformity","value":"valid::analyzer::Uniformity","parent":{"krate":0,"index":3130},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3132},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":535745,"byte_end":535754,"line_start":142,"line_end":142,"column_start":9,"column_end":18},"name":"ref_count","qualname":"::valid::analyzer::ExpressionInfo::ref_count","value":"usize","parent":{"krate":0,"index":3130},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3134},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":535833,"byte_end":535835,"line_start":144,"line_end":144,"column_start":9,"column_end":11},"name":"ty","qualname":"::valid::analyzer::ExpressionInfo::ty","value":"proc::typifier::TypeResolution","parent":{"krate":0,"index":3130},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3178},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":537342,"byte_end":537354,"line_start":191,"line_end":191,"column_start":12,"column_end":24},"name":"FunctionInfo","qualname":"::valid::analyzer::FunctionInfo","value":"FunctionInfo { available_stages, uniformity, may_kill, sampling_set }","parent":null,"children":[{"krate":0,"index":3179},{"krate":0,"index":3180},{"krate":0,"index":3181},{"krate":0,"index":3182},{"krate":0,"index":3183},{"krate":0,"index":3184},{"krate":0,"index":3185},{"krate":0,"index":3186}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3180},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":537510,"byte_end":537526,"line_start":196,"line_end":196,"column_start":9,"column_end":25},"name":"available_stages","qualname":"::valid::analyzer::FunctionInfo::available_stages","value":"valid::ShaderStages","parent":{"krate":0,"index":3178},"children":[],"decl_id":null,"docs":" Set of shader stages where calling this function is valid.\n","sig":null,"attributes":[{"value":"/ Set of shader stages where calling this function is valid.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":537439,"byte_end":537501,"line_start":195,"line_end":195,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":3181},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":537586,"byte_end":537596,"line_start":198,"line_end":198,"column_start":9,"column_end":19},"name":"uniformity","qualname":"::valid::analyzer::FunctionInfo::uniformity","value":"valid::analyzer::Uniformity","parent":{"krate":0,"index":3178},"children":[],"decl_id":null,"docs":" Uniformity characteristics.\n","sig":null,"attributes":[{"value":"/ Uniformity characteristics.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":537546,"byte_end":537577,"line_start":197,"line_end":197,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3182},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":537660,"byte_end":537668,"line_start":200,"line_end":200,"column_start":9,"column_end":17},"name":"may_kill","qualname":"::valid::analyzer::FunctionInfo::may_kill","value":"bool","parent":{"krate":0,"index":3178},"children":[],"decl_id":null,"docs":" Function may kill the invocation.\n","sig":null,"attributes":[{"value":"/ Function may kill the invocation.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":537614,"byte_end":537651,"line_start":199,"line_end":199,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":3183},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":537738,"byte_end":537750,"line_start":202,"line_end":202,"column_start":9,"column_end":21},"name":"sampling_set","qualname":"::valid::analyzer::FunctionInfo::sampling_set","value":"std::collections::HashSet<valid::analyzer::SamplingKey, std::hash::BuildHasherDefault<fxhash::FxHasher>>","parent":{"krate":0,"index":3178},"children":[],"decl_id":null,"docs":" Set of image-sampler pais used with sampling.\n","sig":null,"attributes":[{"value":"/ Set of image-sampler pais used with sampling.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":537680,"byte_end":537729,"line_start":201,"line_end":201,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1421},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":538235,"byte_end":538256,"line_start":216,"line_end":216,"column_start":12,"column_end":33},"name":"global_variable_count","qualname":"<FunctionInfo>::global_variable_count","value":"fn global_variable_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1422},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":538323,"byte_end":538339,"line_start":219,"line_end":219,"column_start":12,"column_end":28},"name":"expression_count","qualname":"<FunctionInfo>::expression_count","value":"fn expression_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":538406,"byte_end":538426,"line_start":222,"line_end":222,"column_start":12,"column_end":32},"name":"dominates_global_use","qualname":"<FunctionInfo>::dominates_global_use","value":"fn dominates_global_use(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":538829,"byte_end":538834,"line_start":236,"line_end":236,"column_start":8,"column_end":13},"name":"index","qualname":"<FunctionInfo as std::ops::Index>::index","value":"fn index(&Self, Handle<crate::GlobalVariable>) -> &GlobalUse","parent":{"krate":2,"index":3454},"children":[],"decl_id":{"krate":2,"index":3457},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":539051,"byte_end":539056,"line_start":243,"line_end":243,"column_start":8,"column_end":13},"name":"index","qualname":"<FunctionInfo as std::ops::Index>::index","value":"fn index(&Self, Handle<crate::Expression>) -> &ExpressionInfo","parent":{"krate":2,"index":3454},"children":[],"decl_id":{"krate":2,"index":3457},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3198},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":539427,"byte_end":539437,"line_start":253,"line_end":253,"column_start":5,"column_end":15},"name":"Expression","qualname":"::valid::analyzer::UniformityDisruptor::Expression","value":"UniformityDisruptor::Expression(Handle<crate::Expression>)","parent":{"krate":0,"index":3189},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Expression {0:?} produced non-uniform result, and control flow depends on it\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":539334,"byte_end":539422,"line_start":252,"line_end":252,"column_start":5,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":3200},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":539438,"byte_end":539463,"line_start":253,"line_end":253,"column_start":16,"column_end":41},"name":"0","qualname":"::valid::analyzer::UniformityDisruptor::Expression::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3198},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3201},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":539548,"byte_end":539554,"line_start":255,"line_end":255,"column_start":5,"column_end":11},"name":"Return","qualname":"::valid::analyzer::UniformityDisruptor::Return","value":"UniformityDisruptor::Return","parent":{"krate":0,"index":3189},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"There is a Return earlier in the control flow of the function\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":539470,"byte_end":539543,"line_start":254,"line_end":254,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3203},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":539650,"byte_end":539657,"line_start":257,"line_end":257,"column_start":5,"column_end":12},"name":"Discard","qualname":"::valid::analyzer::UniformityDisruptor::Discard","value":"UniformityDisruptor::Discard","parent":{"krate":0,"index":3189},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"There is a Discard earlier in the entry point across all called functions\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":539560,"byte_end":539645,"line_start":256,"line_end":256,"column_start":5,"column_end":90}}]},{"kind":"Enum","id":{"krate":0,"index":3189},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":539308,"byte_end":539327,"line_start":251,"line_end":251,"column_start":10,"column_end":29},"name":"UniformityDisruptor","qualname":"::valid::analyzer::UniformityDisruptor","value":"enum UniformityDisruptor {\n    Expression(Handle<crate::Expression>),\n    Return,\n    Discard,\n}","parent":null,"children":[{"krate":0,"index":3198},{"krate":0,"index":3201},{"krate":0,"index":3203}],"decl_id":null,"docs":" Disruptor of the uniform control flow.\n","sig":null,"attributes":[{"value":"/ Disruptor of the uniform control flow.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":539171,"byte_end":539213,"line_start":248,"line_end":248,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":564722,"byte_end":564737,"line_start":853,"line_end":853,"column_start":12,"column_end":27},"name":"get_entry_point","qualname":"<ModuleInfo>::get_entry_point","value":"fn get_entry_point(&Self, usize) -> &FunctionInfo","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3220},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/compose.rs","byte_start":572200,"byte_end":572215,"line_start":13,"line_end":13,"column_start":5,"column_end":20},"name":"TypeDoesntExist","qualname":"::valid::compose::ComposeError::TypeDoesntExist","value":"ComposeError::TypeDoesntExist(Handle<crate::Type>)","parent":{"krate":0,"index":3205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Compose type {0:?} doesn't exist\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/compose.rs","byte_start":572151,"byte_end":572195,"line_start":12,"line_end":12,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3222},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/compose.rs","byte_start":572216,"byte_end":572235,"line_start":13,"line_end":13,"column_start":21,"column_end":40},"name":"0","qualname":"::valid::compose::ComposeError::TypeDoesntExist::0","value":"arena::Handle<Type>","parent":{"krate":0,"index":3220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3223},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/compose.rs","byte_start":572296,"byte_end":572300,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Type","qualname":"::valid::compose::ComposeError::Type","value":"ComposeError::Type(Handle<crate::Type>)","parent":{"krate":0,"index":3205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Composing of type {0:?} can't be done\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/compose.rs","byte_start":572242,"byte_end":572291,"line_start":14,"line_end":14,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3225},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/compose.rs","byte_start":572301,"byte_end":572320,"line_start":15,"line_end":15,"column_start":10,"column_end":29},"name":"0","qualname":"::valid::compose::ComposeError::Type::0","value":"arena::Handle<Type>","parent":{"krate":0,"index":3223},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3226},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/compose.rs","byte_start":572406,"byte_end":572420,"line_start":17,"line_end":17,"column_start":5,"column_end":19},"name":"ComponentCount","qualname":"::valid::compose::ComposeError::ComponentCount","value":"ComposeError::ComponentCount { given, expected }","parent":{"krate":0,"index":3205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Composing expects {expected} components but {given} were given\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/compose.rs","byte_start":572327,"byte_end":572401,"line_start":16,"line_end":16,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":3227},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/compose.rs","byte_start":572423,"byte_end":572428,"line_start":17,"line_end":17,"column_start":22,"column_end":27},"name":"given","qualname":"::valid::compose::ComposeError::ComponentCount::given","value":"u32","parent":{"krate":0,"index":3226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3228},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/compose.rs","byte_start":572435,"byte_end":572443,"line_start":17,"line_end":17,"column_start":34,"column_end":42},"name":"expected","qualname":"::valid::compose::ComposeError::ComponentCount::expected","value":"u32","parent":{"krate":0,"index":3226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3229},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/compose.rs","byte_start":572523,"byte_end":572536,"line_start":19,"line_end":19,"column_start":5,"column_end":18},"name":"ComponentType","qualname":"::valid::compose::ComposeError::ComponentType","value":"ComposeError::ComponentType { index }","parent":{"krate":0,"index":3205},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Composing {index}'s component type is not expected\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/compose.rs","byte_start":572456,"byte_end":572518,"line_start":18,"line_end":18,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":3230},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/compose.rs","byte_start":572539,"byte_end":572544,"line_start":19,"line_end":19,"column_start":21,"column_end":26},"name":"index","qualname":"::valid::compose::ComposeError::ComponentType::index","value":"u32","parent":{"krate":0,"index":3229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3205},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/compose.rs","byte_start":572132,"byte_end":572144,"line_start":11,"line_end":11,"column_start":10,"column_end":22},"name":"ComposeError","qualname":"::valid::compose::ComposeError","value":"enum ComposeError {\n    TypeDoesntExist(Handle<crate::Type>),\n    Type(Handle<crate::Type>),\n    ComponentCount {\n            given: u32,\n            expected: u32,\n        },\n    ComponentType {\n            index: u32,\n        },\n}","parent":null,"children":[{"krate":0,"index":3220},{"krate":0,"index":3223},{"krate":0,"index":3226},{"krate":0,"index":3229}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3256},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":577984,"byte_end":577995,"line_start":15,"line_end":15,"column_start":5,"column_end":16},"name":"DoesntExist","qualname":"::valid::expression::ExpressionError::DoesntExist","value":"ExpressionError::DoesntExist","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Doesn't exist\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":577954,"byte_end":577979,"line_start":14,"line_end":14,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3258},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578109,"byte_end":578119,"line_start":17,"line_end":17,"column_start":5,"column_end":15},"name":"NotInScope","qualname":"::valid::expression::ExpressionError::NotInScope","value":"ExpressionError::NotInScope","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Used by a statement before it was introduced into the scope by any of the dominating blocks\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578001,"byte_end":578104,"line_start":16,"line_end":16,"column_start":5,"column_end":108}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3260},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578192,"byte_end":578209,"line_start":19,"line_end":19,"column_start":5,"column_end":22},"name":"ForwardDependency","qualname":"::valid::expression::ExpressionError::ForwardDependency","value":"ExpressionError::ForwardDependency(Handle<crate::Expression>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Depends on {0:?}, which has not been processed yet\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578125,"byte_end":578187,"line_start":18,"line_end":18,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":3262},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578210,"byte_end":578235,"line_start":19,"line_end":19,"column_start":23,"column_end":48},"name":"0","qualname":"::valid::expression::ExpressionError::ForwardDependency::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3263},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578313,"byte_end":578328,"line_start":21,"line_end":21,"column_start":5,"column_end":20},"name":"InvalidBaseType","qualname":"::valid::expression::ExpressionError::InvalidBaseType","value":"ExpressionError::InvalidBaseType(Handle<crate::Expression>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Base type {0:?} is not compatible with this expression\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578242,"byte_end":578308,"line_start":20,"line_end":20,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":3265},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578329,"byte_end":578354,"line_start":21,"line_end":21,"column_start":21,"column_end":46},"name":"0","qualname":"::valid::expression::ExpressionError::InvalidBaseType::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3266},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578418,"byte_end":578434,"line_start":23,"line_end":23,"column_start":5,"column_end":21},"name":"InvalidIndexType","qualname":"::valid::expression::ExpressionError::InvalidIndexType","value":"ExpressionError::InvalidIndexType(Handle<crate::Expression>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Accessing with index {0:?} can't be done\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578361,"byte_end":578413,"line_start":22,"line_end":22,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":3268},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578435,"byte_end":578460,"line_start":23,"line_end":23,"column_start":22,"column_end":47},"name":"0","qualname":"::valid::expression::ExpressionError::InvalidIndexType::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3269},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578528,"byte_end":578544,"line_start":25,"line_end":25,"column_start":5,"column_end":21},"name":"IndexOutOfBounds","qualname":"::valid::expression::ExpressionError::IndexOutOfBounds","value":"ExpressionError::IndexOutOfBounds(Handle<crate::Expression>, crate::ScalarValue)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Accessing index {1:?} is out of {0:?} bounds\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578467,"byte_end":578523,"line_start":24,"line_end":24,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":3271},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578545,"byte_end":578570,"line_start":25,"line_end":25,"column_start":22,"column_end":47},"name":"0","qualname":"::valid::expression::ExpressionError::IndexOutOfBounds::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3269},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3272},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578572,"byte_end":578590,"line_start":25,"line_end":25,"column_start":49,"column_end":67},"name":"1","qualname":"::valid::expression::ExpressionError::IndexOutOfBounds::1","value":"ScalarValue","parent":{"krate":0,"index":3269},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3273},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578668,"byte_end":578687,"line_start":27,"line_end":27,"column_start":5,"column_end":24},"name":"IndexMustBeConstant","qualname":"::valid::expression::ExpressionError::IndexMustBeConstant","value":"ExpressionError::IndexMustBeConstant(Handle<crate::Expression>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The expression {0:?} may only be indexed by a constant\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578597,"byte_end":578663,"line_start":26,"line_end":26,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":3275},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578688,"byte_end":578713,"line_start":27,"line_end":27,"column_start":25,"column_end":50},"name":"0","qualname":"::valid::expression::ExpressionError::IndexMustBeConstant::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3273},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3276},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578774,"byte_end":578801,"line_start":29,"line_end":29,"column_start":5,"column_end":32},"name":"FunctionArgumentDoesntExist","qualname":"::valid::expression::ExpressionError::FunctionArgumentDoesntExist","value":"ExpressionError::FunctionArgumentDoesntExist(u32)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Function argument {0:?} doesn't exist\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578720,"byte_end":578769,"line_start":28,"line_end":28,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3278},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578802,"byte_end":578805,"line_start":29,"line_end":29,"column_start":33,"column_end":36},"name":"0","qualname":"::valid::expression::ExpressionError::FunctionArgumentDoesntExist::0","value":"u32","parent":{"krate":0,"index":3276},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3279},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578857,"byte_end":578876,"line_start":31,"line_end":31,"column_start":5,"column_end":24},"name":"ConstantDoesntExist","qualname":"::valid::expression::ExpressionError::ConstantDoesntExist","value":"ExpressionError::ConstantDoesntExist(Handle<crate::Constant>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Constant {0:?} doesn't exist\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578812,"byte_end":578852,"line_start":30,"line_end":30,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":3281},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578877,"byte_end":578900,"line_start":31,"line_end":31,"column_start":25,"column_end":48},"name":"0","qualname":"::valid::expression::ExpressionError::ConstantDoesntExist::0","value":"arena::Handle<Constant>","parent":{"krate":0,"index":3279},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3282},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578959,"byte_end":578979,"line_start":33,"line_end":33,"column_start":5,"column_end":25},"name":"GlobalVarDoesntExist","qualname":"::valid::expression::ExpressionError::GlobalVarDoesntExist","value":"ExpressionError::GlobalVarDoesntExist(Handle<crate::GlobalVariable>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Global variable {0:?} doesn't exist\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578907,"byte_end":578954,"line_start":32,"line_end":32,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3284},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":578980,"byte_end":579009,"line_start":33,"line_end":33,"column_start":26,"column_end":55},"name":"0","qualname":"::valid::expression::ExpressionError::GlobalVarDoesntExist::0","value":"arena::Handle<GlobalVariable>","parent":{"krate":0,"index":3282},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3285},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579067,"byte_end":579086,"line_start":35,"line_end":35,"column_start":5,"column_end":24},"name":"LocalVarDoesntExist","qualname":"::valid::expression::ExpressionError::LocalVarDoesntExist","value":"ExpressionError::LocalVarDoesntExist(Handle<crate::LocalVariable>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Local variable {0:?} doesn't exist\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579016,"byte_end":579062,"line_start":34,"line_end":34,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3287},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579087,"byte_end":579115,"line_start":35,"line_end":35,"column_start":25,"column_end":53},"name":"0","qualname":"::valid::expression::ExpressionError::LocalVarDoesntExist::0","value":"arena::Handle<LocalVariable>","parent":{"krate":0,"index":3285},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3288},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579169,"byte_end":579187,"line_start":37,"line_end":37,"column_start":5,"column_end":23},"name":"InvalidPointerType","qualname":"::valid::expression::ExpressionError::InvalidPointerType","value":"ExpressionError::InvalidPointerType(Handle<crate::Expression>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Loading of {0:?} can't be done\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579122,"byte_end":579164,"line_start":36,"line_end":36,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3290},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579188,"byte_end":579213,"line_start":37,"line_end":37,"column_start":24,"column_end":49},"name":"0","qualname":"::valid::expression::ExpressionError::InvalidPointerType::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3288},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3291},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579272,"byte_end":579288,"line_start":39,"line_end":39,"column_start":5,"column_end":21},"name":"InvalidArrayType","qualname":"::valid::expression::ExpressionError::InvalidArrayType","value":"ExpressionError::InvalidArrayType(Handle<crate::Expression>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Array length of {0:?} can't be done\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579220,"byte_end":579267,"line_start":38,"line_end":38,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3293},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579289,"byte_end":579314,"line_start":39,"line_end":39,"column_start":22,"column_end":47},"name":"0","qualname":"::valid::expression::ExpressionError::InvalidArrayType::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3291},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3294},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579367,"byte_end":579383,"line_start":41,"line_end":41,"column_start":5,"column_end":21},"name":"InvalidSplatType","qualname":"::valid::expression::ExpressionError::InvalidSplatType","value":"ExpressionError::InvalidSplatType(Handle<crate::Expression>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Splatting {0:?} can't be done\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579321,"byte_end":579362,"line_start":40,"line_end":40,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":3296},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579384,"byte_end":579409,"line_start":41,"line_end":41,"column_start":22,"column_end":47},"name":"0","qualname":"::valid::expression::ExpressionError::InvalidSplatType::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3297},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579462,"byte_end":579479,"line_start":43,"line_end":43,"column_start":5,"column_end":22},"name":"InvalidVectorType","qualname":"::valid::expression::ExpressionError::InvalidVectorType","value":"ExpressionError::InvalidVectorType(Handle<crate::Expression>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Swizzling {0:?} can't be done\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579416,"byte_end":579457,"line_start":42,"line_end":42,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":3299},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579480,"byte_end":579505,"line_start":43,"line_end":43,"column_start":23,"column_end":48},"name":"0","qualname":"::valid::expression::ExpressionError::InvalidVectorType::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3297},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3300},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579584,"byte_end":579607,"line_start":45,"line_end":45,"column_start":5,"column_end":28},"name":"InvalidSwizzleComponent","qualname":"::valid::expression::ExpressionError::InvalidSwizzleComponent","value":"ExpressionError::InvalidSwizzleComponent(crate::SwizzleComponent, crate::VectorSize)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Swizzle component {0:?} is outside of vector size {1:?}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579512,"byte_end":579579,"line_start":44,"line_end":44,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":3302},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579608,"byte_end":579631,"line_start":45,"line_end":45,"column_start":29,"column_end":52},"name":"0","qualname":"::valid::expression::ExpressionError::InvalidSwizzleComponent::0","value":"SwizzleComponent","parent":{"krate":0,"index":3300},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3303},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579633,"byte_end":579650,"line_start":45,"line_end":45,"column_start":54,"column_end":71},"name":"1","qualname":"::valid::expression::ExpressionError::InvalidSwizzleComponent::1","value":"VectorSize","parent":{"krate":0,"index":3300},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3304},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579683,"byte_end":579690,"line_start":47,"line_end":47,"column_start":5,"column_end":12},"name":"Compose","qualname":"::valid::expression::ExpressionError::Compose","value":"ExpressionError::Compose(super::ComposeError)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579657,"byte_end":579678,"line_start":46,"line_end":46,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":3306},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579699,"byte_end":579718,"line_start":47,"line_end":47,"column_start":21,"column_end":40},"name":"0","qualname":"::valid::expression::ExpressionError::Compose::0","value":"valid::compose::ComposeError","parent":{"krate":0,"index":3304},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579691,"byte_end":579698,"line_start":47,"line_end":47,"column_start":13,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3307},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579751,"byte_end":579755,"line_start":49,"line_end":49,"column_start":5,"column_end":9},"name":"Proc","qualname":"::valid::expression::ExpressionError::Proc","value":"ExpressionError::Proc(ProcError)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579725,"byte_end":579746,"line_start":48,"line_end":48,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":3309},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579764,"byte_end":579773,"line_start":49,"line_end":49,"column_start":18,"column_end":27},"name":"0","qualname":"::valid::expression::ExpressionError::Proc::0","value":"proc::ProcError","parent":{"krate":0,"index":3307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579756,"byte_end":579763,"line_start":49,"line_end":49,"column_start":10,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3310},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579834,"byte_end":579857,"line_start":51,"line_end":51,"column_start":5,"column_end":28},"name":"InvalidUnaryOperandType","qualname":"::valid::expression::ExpressionError::InvalidUnaryOperandType","value":"ExpressionError::InvalidUnaryOperandType(crate::UnaryOperator, Handle<crate::Expression>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Operation {0:?} can't work with {1:?}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579780,"byte_end":579829,"line_start":50,"line_end":50,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3312},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579858,"byte_end":579878,"line_start":51,"line_end":51,"column_start":29,"column_end":49},"name":"0","qualname":"::valid::expression::ExpressionError::InvalidUnaryOperandType::0","value":"UnaryOperator","parent":{"krate":0,"index":3310},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3313},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579880,"byte_end":579905,"line_start":51,"line_end":51,"column_start":51,"column_end":76},"name":"1","qualname":"::valid::expression::ExpressionError::InvalidUnaryOperandType::1","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3310},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3314},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579976,"byte_end":580001,"line_start":53,"line_end":53,"column_start":5,"column_end":30},"name":"InvalidBinaryOperandTypes","qualname":"::valid::expression::ExpressionError::InvalidBinaryOperandTypes","value":"ExpressionError::InvalidBinaryOperandTypes(crate::BinaryOperator, Handle<crate::Expression>, Handle<crate::Expression>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Operation {0:?} can't work with {1:?} and {2:?}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":579912,"byte_end":579971,"line_start":52,"line_end":52,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":3316},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580011,"byte_end":580032,"line_start":54,"line_end":54,"column_start":9,"column_end":30},"name":"0","qualname":"::valid::expression::ExpressionError::InvalidBinaryOperandTypes::0","value":"BinaryOperator","parent":{"krate":0,"index":3314},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3317},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580042,"byte_end":580067,"line_start":55,"line_end":55,"column_start":9,"column_end":34},"name":"1","qualname":"::valid::expression::ExpressionError::InvalidBinaryOperandTypes::1","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3314},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3318},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580077,"byte_end":580102,"line_start":56,"line_end":56,"column_start":9,"column_end":34},"name":"2","qualname":"::valid::expression::ExpressionError::InvalidBinaryOperandTypes::2","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3314},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3319},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580157,"byte_end":580175,"line_start":59,"line_end":59,"column_start":5,"column_end":23},"name":"InvalidSelectTypes","qualname":"::valid::expression::ExpressionError::InvalidSelectTypes","value":"ExpressionError::InvalidSelectTypes","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Selecting is not possible\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580115,"byte_end":580152,"line_start":58,"line_end":58,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3321},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580247,"byte_end":580267,"line_start":61,"line_end":61,"column_start":5,"column_end":25},"name":"InvalidBooleanVector","qualname":"::valid::expression::ExpressionError::InvalidBooleanVector","value":"ExpressionError::InvalidBooleanVector(Handle<crate::Expression>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Relational argument {0:?} is not a boolean vector\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580181,"byte_end":580242,"line_start":60,"line_end":60,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":3323},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580268,"byte_end":580293,"line_start":61,"line_end":61,"column_start":26,"column_end":51},"name":"0","qualname":"::valid::expression::ExpressionError::InvalidBooleanVector::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3321},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3324},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580357,"byte_end":580377,"line_start":63,"line_end":63,"column_start":5,"column_end":25},"name":"InvalidFloatArgument","qualname":"::valid::expression::ExpressionError::InvalidFloatArgument","value":"ExpressionError::InvalidFloatArgument(Handle<crate::Expression>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Relational argument {0:?} is not a float\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580300,"byte_end":580352,"line_start":62,"line_end":62,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":3326},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580378,"byte_end":580403,"line_start":63,"line_end":63,"column_start":26,"column_end":51},"name":"0","qualname":"::valid::expression::ExpressionError::InvalidFloatArgument::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3327},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580449,"byte_end":580453,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Type","qualname":"::valid::expression::ExpressionError::Type","value":"ExpressionError::Type(ResolveError)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Type resolution failed\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580410,"byte_end":580444,"line_start":64,"line_end":64,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":3329},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580462,"byte_end":580474,"line_start":65,"line_end":65,"column_start":18,"column_end":30},"name":"0","qualname":"::valid::expression::ExpressionError::Type::0","value":"proc::typifier::ResolveError","parent":{"krate":0,"index":3327},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580454,"byte_end":580461,"line_start":65,"line_end":65,"column_start":10,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3330},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580519,"byte_end":580541,"line_start":67,"line_end":67,"column_start":5,"column_end":27},"name":"ExpectedGlobalVariable","qualname":"::valid::expression::ExpressionError::ExpectedGlobalVariable","value":"ExpressionError::ExpectedGlobalVariable","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Not a global variable\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580481,"byte_end":580514,"line_start":66,"line_end":66,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3332},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580608,"byte_end":580632,"line_start":69,"line_end":69,"column_start":5,"column_end":29},"name":"ExpectedGlobalOrArgument","qualname":"::valid::expression::ExpressionError::ExpectedGlobalOrArgument","value":"ExpressionError::ExpectedGlobalOrArgument","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Not a global variable or a function argument\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580547,"byte_end":580603,"line_start":68,"line_end":68,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3334},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580691,"byte_end":580715,"line_start":71,"line_end":71,"column_start":5,"column_end":29},"name":"CallToUndeclaredFunction","qualname":"::valid::expression::ExpressionError::CallToUndeclaredFunction","value":"ExpressionError::CallToUndeclaredFunction(Handle<crate::Function>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Calling an undeclared function {0:?}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580638,"byte_end":580686,"line_start":70,"line_end":70,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":3336},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580716,"byte_end":580739,"line_start":71,"line_end":71,"column_start":30,"column_end":53},"name":"0","qualname":"::valid::expression::ExpressionError::CallToUndeclaredFunction::0","value":"arena::Handle<Function>","parent":{"krate":0,"index":3334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3337},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580800,"byte_end":580817,"line_start":73,"line_end":73,"column_start":5,"column_end":22},"name":"ExpectedImageType","qualname":"::valid::expression::ExpressionError::ExpectedImageType","value":"ExpressionError::ExpectedImageType(Handle<crate::Type>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Needs to be an image instead of {0:?}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580746,"byte_end":580795,"line_start":72,"line_end":72,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3339},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580818,"byte_end":580837,"line_start":73,"line_end":73,"column_start":23,"column_end":42},"name":"0","qualname":"::valid::expression::ExpressionError::ExpectedImageType::0","value":"arena::Handle<Type>","parent":{"krate":0,"index":3337},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3340},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580898,"byte_end":580917,"line_start":75,"line_end":75,"column_start":5,"column_end":24},"name":"ExpectedSamplerType","qualname":"::valid::expression::ExpressionError::ExpectedSamplerType","value":"ExpressionError::ExpectedSamplerType(Handle<crate::Type>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Needs to be an image instead of {0:?}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580844,"byte_end":580893,"line_start":74,"line_end":74,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3342},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580918,"byte_end":580937,"line_start":75,"line_end":75,"column_start":25,"column_end":44},"name":"0","qualname":"::valid::expression::ExpressionError::ExpectedSamplerType::0","value":"arena::Handle<Type>","parent":{"krate":0,"index":3340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3343},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580999,"byte_end":581016,"line_start":77,"line_end":77,"column_start":5,"column_end":22},"name":"InvalidImageClass","qualname":"::valid::expression::ExpressionError::InvalidImageClass","value":"ExpressionError::InvalidImageClass(crate::ImageClass)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Unable to operate on image class {0:?}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":580944,"byte_end":580994,"line_start":76,"line_end":76,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":3345},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":581017,"byte_end":581034,"line_start":77,"line_end":77,"column_start":23,"column_end":40},"name":"0","qualname":"::valid::expression::ExpressionError::InvalidImageClass::0","value":"ImageClass","parent":{"krate":0,"index":3343},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3346},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":581117,"byte_end":581134,"line_start":79,"line_end":79,"column_start":5,"column_end":22},"name":"InvalidDerivative","qualname":"::valid::expression::ExpressionError::InvalidDerivative","value":"ExpressionError::InvalidDerivative","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Derivatives can only be taken from scalar and vector floats\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":581041,"byte_end":581112,"line_start":78,"line_end":78,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3348},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":581197,"byte_end":581219,"line_start":81,"line_end":81,"column_start":5,"column_end":27},"name":"InvalidImageArrayIndex","qualname":"::valid::expression::ExpressionError::InvalidImageArrayIndex","value":"ExpressionError::InvalidImageArrayIndex","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Image array index parameter is misplaced\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":581140,"byte_end":581192,"line_start":80,"line_end":80,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3350},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":581282,"byte_end":581304,"line_start":83,"line_end":83,"column_start":5,"column_end":27},"name":"InvalidImageOtherIndex","qualname":"::valid::expression::ExpressionError::InvalidImageOtherIndex","value":"ExpressionError::InvalidImageOtherIndex","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Image other index parameter is misplaced\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":581225,"byte_end":581277,"line_start":82,"line_end":82,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3352},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":581383,"byte_end":581409,"line_start":85,"line_end":85,"column_start":5,"column_end":31},"name":"InvalidImageArrayIndexType","qualname":"::valid::expression::ExpressionError::InvalidImageArrayIndexType","value":"ExpressionError::InvalidImageArrayIndexType(Handle<crate::Expression>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Image array index type of {0:?} is not an integer scalar\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":581310,"byte_end":581378,"line_start":84,"line_end":84,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":3354},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":581410,"byte_end":581435,"line_start":85,"line_end":85,"column_start":32,"column_end":57},"name":"0","qualname":"::valid::expression::ExpressionError::InvalidImageArrayIndexType::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3352},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3355},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":581515,"byte_end":581541,"line_start":87,"line_end":87,"column_start":5,"column_end":31},"name":"InvalidImageOtherIndexType","qualname":"::valid::expression::ExpressionError::InvalidImageOtherIndexType","value":"ExpressionError::InvalidImageOtherIndexType(Handle<crate::Expression>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Image other index type of {0:?} is not an integer scalar\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":581442,"byte_end":581510,"line_start":86,"line_end":86,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":3357},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":581542,"byte_end":581567,"line_start":87,"line_end":87,"column_start":32,"column_end":57},"name":"0","qualname":"::valid::expression::ExpressionError::InvalidImageOtherIndexType::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3358},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":581652,"byte_end":581678,"line_start":89,"line_end":89,"column_start":5,"column_end":31},"name":"InvalidImageCoordinateType","qualname":"::valid::expression::ExpressionError::InvalidImageCoordinateType","value":"ExpressionError::InvalidImageCoordinateType(crate::ImageDimension, Handle<crate::Expression>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Image coordinate type of {1:?} does not match dimension {0:?}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":581574,"byte_end":581647,"line_start":88,"line_end":88,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":3360},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":581679,"byte_end":581700,"line_start":89,"line_end":89,"column_start":32,"column_end":53},"name":"0","qualname":"::valid::expression::ExpressionError::InvalidImageCoordinateType::0","value":"ImageDimension","parent":{"krate":0,"index":3358},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3361},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":581702,"byte_end":581727,"line_start":89,"line_end":89,"column_start":55,"column_end":80},"name":"1","qualname":"::valid::expression::ExpressionError::InvalidImageCoordinateType::1","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3358},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3362},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":581889,"byte_end":581915,"line_start":91,"line_end":91,"column_start":5,"column_end":31},"name":"ComparisonSamplingMismatch","qualname":"::valid::expression::ExpressionError::ComparisonSamplingMismatch","value":"ExpressionError::ComparisonSamplingMismatch { image, sampler, has_ref }","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Comparison sampling mismatch: image has class {image:?}, but the sampler is comparison={sampler}, and the reference was provided={has_ref}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":581734,"byte_end":581884,"line_start":90,"line_end":90,"column_start":5,"column_end":155}}]},{"kind":"Field","id":{"krate":0,"index":3363},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":581926,"byte_end":581931,"line_start":92,"line_end":92,"column_start":9,"column_end":14},"name":"image","qualname":"::valid::expression::ExpressionError::ComparisonSamplingMismatch::image","value":"ImageClass","parent":{"krate":0,"index":3362},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3364},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":581960,"byte_end":581967,"line_start":93,"line_end":93,"column_start":9,"column_end":16},"name":"sampler","qualname":"::valid::expression::ExpressionError::ComparisonSamplingMismatch::sampler","value":"bool","parent":{"krate":0,"index":3362},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3365},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":581983,"byte_end":581990,"line_start":94,"line_end":94,"column_start":9,"column_end":16},"name":"has_ref","qualname":"::valid::expression::ExpressionError::ComparisonSamplingMismatch::has_ref","value":"bool","parent":{"krate":0,"index":3362},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3366},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":582094,"byte_end":582113,"line_start":97,"line_end":97,"column_start":5,"column_end":24},"name":"InvalidSampleOffset","qualname":"::valid::expression::ExpressionError::InvalidSampleOffset","value":"ExpressionError::InvalidSampleOffset(crate::ImageDimension, Handle<crate::Constant>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Sample offset constant {1:?} doesn't match the image dimension {0:?}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":582009,"byte_end":582089,"line_start":96,"line_end":96,"column_start":5,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":3368},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":582114,"byte_end":582135,"line_start":97,"line_end":97,"column_start":25,"column_end":46},"name":"0","qualname":"::valid::expression::ExpressionError::InvalidSampleOffset::0","value":"ImageDimension","parent":{"krate":0,"index":3366},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3369},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":582137,"byte_end":582160,"line_start":97,"line_end":97,"column_start":48,"column_end":71},"name":"1","qualname":"::valid::expression::ExpressionError::InvalidSampleOffset::1","value":"arena::Handle<Constant>","parent":{"krate":0,"index":3366},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3370},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":582227,"byte_end":582248,"line_start":99,"line_end":99,"column_start":5,"column_end":26},"name":"InvalidDepthReference","qualname":"::valid::expression::ExpressionError::InvalidDepthReference","value":"ExpressionError::InvalidDepthReference(Handle<crate::Expression>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Depth reference {0:?} is not a scalar float\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":582167,"byte_end":582222,"line_start":98,"line_end":98,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":3372},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":582249,"byte_end":582274,"line_start":99,"line_end":99,"column_start":27,"column_end":52},"name":"0","qualname":"::valid::expression::ExpressionError::InvalidDepthReference::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3370},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3373},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":582341,"byte_end":582364,"line_start":101,"line_end":101,"column_start":5,"column_end":28},"name":"InvalidDepthSampleLevel","qualname":"::valid::expression::ExpressionError::InvalidDepthSampleLevel","value":"ExpressionError::InvalidDepthSampleLevel","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Depth sample level can only be Auto or Zero\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":582281,"byte_end":582336,"line_start":100,"line_end":100,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3375},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":582440,"byte_end":582467,"line_start":103,"line_end":103,"column_start":5,"column_end":32},"name":"InvalidSampleLevelExactType","qualname":"::valid::expression::ExpressionError::InvalidSampleLevelExactType","value":"ExpressionError::InvalidSampleLevelExactType(Handle<crate::Expression>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Sample level (exact) type {0:?} is not a scalar float\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":582370,"byte_end":582435,"line_start":102,"line_end":102,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":3377},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":582468,"byte_end":582493,"line_start":103,"line_end":103,"column_start":33,"column_end":58},"name":"0","qualname":"::valid::expression::ExpressionError::InvalidSampleLevelExactType::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3375},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3378},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":582569,"byte_end":582595,"line_start":105,"line_end":105,"column_start":5,"column_end":31},"name":"InvalidSampleLevelBiasType","qualname":"::valid::expression::ExpressionError::InvalidSampleLevelBiasType","value":"ExpressionError::InvalidSampleLevelBiasType(Handle<crate::Expression>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Sample level (bias) type {0:?} is not a scalar float\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":582500,"byte_end":582564,"line_start":104,"line_end":104,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":3380},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":582596,"byte_end":582621,"line_start":105,"line_end":105,"column_start":32,"column_end":57},"name":"0","qualname":"::valid::expression::ExpressionError::InvalidSampleLevelBiasType::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3378},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3381},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":582717,"byte_end":582747,"line_start":107,"line_end":107,"column_start":5,"column_end":35},"name":"InvalidSampleLevelGradientType","qualname":"::valid::expression::ExpressionError::InvalidSampleLevelGradientType","value":"ExpressionError::InvalidSampleLevelGradientType(crate::ImageDimension, Handle<crate::Expression>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Sample level (gradient) of {1:?} doesn't match the image dimension {0:?}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":582628,"byte_end":582712,"line_start":106,"line_end":106,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":3383},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":582748,"byte_end":582769,"line_start":107,"line_end":107,"column_start":36,"column_end":57},"name":"0","qualname":"::valid::expression::ExpressionError::InvalidSampleLevelGradientType::0","value":"ImageDimension","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3384},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":582771,"byte_end":582796,"line_start":107,"line_end":107,"column_start":59,"column_end":84},"name":"1","qualname":"::valid::expression::ExpressionError::InvalidSampleLevelGradientType::1","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3385},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":582834,"byte_end":582853,"line_start":109,"line_end":109,"column_start":5,"column_end":24},"name":"InvalidCastArgument","qualname":"::valid::expression::ExpressionError::InvalidCastArgument","value":"ExpressionError::InvalidCastArgument","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Unable to cast\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":582803,"byte_end":582829,"line_start":108,"line_end":108,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3387},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":582908,"byte_end":582926,"line_start":111,"line_end":111,"column_start":5,"column_end":23},"name":"WrongArgumentCount","qualname":"::valid::expression::ExpressionError::WrongArgumentCount","value":"ExpressionError::WrongArgumentCount(crate::MathFunction)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid argument count for {0:?}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":582859,"byte_end":582903,"line_start":110,"line_end":110,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3389},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":582927,"byte_end":582946,"line_start":111,"line_end":111,"column_start":24,"column_end":43},"name":"0","qualname":"::valid::expression::ExpressionError::WrongArgumentCount::0","value":"MathFunction","parent":{"krate":0,"index":3387},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3390},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":583034,"byte_end":583053,"line_start":113,"line_end":113,"column_start":5,"column_end":24},"name":"InvalidArgumentType","qualname":"::valid::expression::ExpressionError::InvalidArgumentType","value":"ExpressionError::InvalidArgumentType(crate::MathFunction, u32, Handle<crate::Expression>)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Argument [{1}] to {0:?} as expression {2:?} has an invalid type.\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":582953,"byte_end":583029,"line_start":112,"line_end":112,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":3392},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":583054,"byte_end":583073,"line_start":113,"line_end":113,"column_start":25,"column_end":44},"name":"0","qualname":"::valid::expression::ExpressionError::InvalidArgumentType::0","value":"MathFunction","parent":{"krate":0,"index":3390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3393},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":583075,"byte_end":583078,"line_start":113,"line_end":113,"column_start":46,"column_end":49},"name":"1","qualname":"::valid::expression::ExpressionError::InvalidArgumentType::1","value":"u32","parent":{"krate":0,"index":3390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3394},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":583080,"byte_end":583105,"line_start":113,"line_end":113,"column_start":51,"column_end":76},"name":"2","qualname":"::valid::expression::ExpressionError::InvalidArgumentType::2","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3390},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3395},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":583175,"byte_end":583198,"line_start":115,"line_end":115,"column_start":5,"column_end":28},"name":"InvalidAtomicResultType","qualname":"::valid::expression::ExpressionError::InvalidAtomicResultType","value":"ExpressionError::InvalidAtomicResultType(crate::ScalarKind, crate::Bytes)","parent":{"krate":0,"index":3231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Atomic result type can't be {0:?} of {1} bytes\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":583112,"byte_end":583170,"line_start":114,"line_end":114,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":3397},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":583199,"byte_end":583216,"line_start":115,"line_end":115,"column_start":29,"column_end":46},"name":"0","qualname":"::valid::expression::ExpressionError::InvalidAtomicResultType::0","value":"ScalarKind","parent":{"krate":0,"index":3395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3398},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":583218,"byte_end":583230,"line_start":115,"line_end":115,"column_start":48,"column_end":60},"name":"1","qualname":"::valid::expression::ExpressionError::InvalidAtomicResultType::1","value":"u8","parent":{"krate":0,"index":3395},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3231},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":577932,"byte_end":577947,"line_start":13,"line_end":13,"column_start":10,"column_end":25},"name":"ExpressionError","qualname":"::valid::expression::ExpressionError","value":"enum ExpressionError {\n    DoesntExist,\n    NotInScope,\n    ForwardDependency(Handle<crate::Expression>),\n    InvalidBaseType(Handle<crate::Expression>),\n    InvalidIndexType(Handle<crate::Expression>),\n    IndexOutOfBounds(Handle<crate::Expression>, crate::ScalarValue),\n    IndexMustBeConstant(Handle<crate::Expression>),\n    FunctionArgumentDoesntExist(u32),\n    ConstantDoesntExist(Handle<crate::Constant>),\n    GlobalVarDoesntExist(Handle<crate::GlobalVariable>),\n    LocalVarDoesntExist(Handle<crate::LocalVariable>),\n    InvalidPointerType(Handle<crate::Expression>),\n    InvalidArrayType(Handle<crate::Expression>),\n    InvalidSplatType(Handle<crate::Expression>),\n    InvalidVectorType(Handle<crate::Expression>),\n    InvalidSwizzleComponent(crate::SwizzleComponent, crate::VectorSize),\n    Compose(super::ComposeError),\n    Proc(ProcError),\n    InvalidUnaryOperandType(crate::UnaryOperator, Handle<crate::Expression>),\n    InvalidBinaryOperandTypes(crate::BinaryOperator,\n            Handle<crate::Expression>, Handle<crate::Expression>),\n    InvalidSelectTypes,\n    InvalidBooleanVector(Handle<crate::Expression>),\n    InvalidFloatArgument(Handle<crate::Expression>),\n    Type(ResolveError),\n    ExpectedGlobalVariable,\n    ExpectedGlobalOrArgument,\n    CallToUndeclaredFunction(Handle<crate::Function>),\n    ExpectedImageType(Handle<crate::Type>),\n    ExpectedSamplerType(Handle<crate::Type>),\n    InvalidImageClass(crate::ImageClass),\n    InvalidDerivative,\n    InvalidImageArrayIndex,\n    InvalidImageOtherIndex,\n    InvalidImageArrayIndexType(Handle<crate::Expression>),\n    InvalidImageOtherIndexType(Handle<crate::Expression>),\n    InvalidImageCoordinateType(crate::ImageDimension,\n            Handle<crate::Expression>),\n    ComparisonSamplingMismatch {\n            image: crate::ImageClass,\n            sampler: bool,\n            has_ref: bool,\n        },\n    InvalidSampleOffset(crate::ImageDimension, Handle<crate::Constant>),\n    InvalidDepthReference(Handle<crate::Expression>),\n    InvalidDepthSampleLevel,\n    InvalidSampleLevelExactType(Handle<crate::Expression>),\n    InvalidSampleLevelBiasType(Handle<crate::Expression>),\n    InvalidSampleLevelGradientType(crate::ImageDimension,\n            Handle<crate::Expression>),\n    InvalidCastArgument,\n    WrongArgumentCount(crate::MathFunction),\n    InvalidArgumentType(crate::MathFunction, u32, Handle<crate::Expression>),\n    InvalidAtomicResultType(crate::ScalarKind, crate::Bytes),\n}","parent":null,"children":[{"krate":0,"index":3256},{"krate":0,"index":3258},{"krate":0,"index":3260},{"krate":0,"index":3263},{"krate":0,"index":3266},{"krate":0,"index":3269},{"krate":0,"index":3273},{"krate":0,"index":3276},{"krate":0,"index":3279},{"krate":0,"index":3282},{"krate":0,"index":3285},{"krate":0,"index":3288},{"krate":0,"index":3291},{"krate":0,"index":3294},{"krate":0,"index":3297},{"krate":0,"index":3300},{"krate":0,"index":3304},{"krate":0,"index":3307},{"krate":0,"index":3310},{"krate":0,"index":3314},{"krate":0,"index":3319},{"krate":0,"index":3321},{"krate":0,"index":3324},{"krate":0,"index":3327},{"krate":0,"index":3330},{"krate":0,"index":3332},{"krate":0,"index":3334},{"krate":0,"index":3337},{"krate":0,"index":3340},{"krate":0,"index":3343},{"krate":0,"index":3346},{"krate":0,"index":3348},{"krate":0,"index":3350},{"krate":0,"index":3352},{"krate":0,"index":3355},{"krate":0,"index":3358},{"krate":0,"index":3362},{"krate":0,"index":3366},{"krate":0,"index":3370},{"krate":0,"index":3373},{"krate":0,"index":3375},{"krate":0,"index":3378},{"krate":0,"index":3381},{"krate":0,"index":3385},{"krate":0,"index":3387},{"krate":0,"index":3390},{"krate":0,"index":3395}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3418},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641170,"byte_end":641185,"line_start":17,"line_end":17,"column_start":5,"column_end":20},"name":"InvalidFunction","qualname":"::valid::function::CallError::InvalidFunction","value":"CallError::InvalidFunction","parent":{"krate":0,"index":3399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Bad function\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641141,"byte_end":641165,"line_start":16,"line_end":16,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3420},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641247,"byte_end":641270,"line_start":19,"line_end":19,"column_start":5,"column_end":28},"name":"ForwardDeclaredFunction","qualname":"::valid::function::CallError::ForwardDeclaredFunction","value":"CallError::ForwardDeclaredFunction","parent":{"krate":0,"index":3399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The callee is declared after the caller\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641191,"byte_end":641242,"line_start":18,"line_end":18,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":3422},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641331,"byte_end":641339,"line_start":21,"line_end":21,"column_start":5,"column_end":13},"name":"Argument","qualname":"::valid::function::CallError::Argument","value":"CallError::Argument { index, error }","parent":{"krate":0,"index":3399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Argument {index} expression is invalid\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641276,"byte_end":641326,"line_start":20,"line_end":20,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":3423},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641350,"byte_end":641355,"line_start":22,"line_end":22,"column_start":9,"column_end":14},"name":"index","qualname":"::valid::function::CallError::Argument::index","value":"usize","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3424},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641390,"byte_end":641395,"line_start":24,"line_end":24,"column_start":9,"column_end":14},"name":"error","qualname":"::valid::function::CallError::Argument::error","value":"valid::expression::ExpressionError","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"source","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641372,"byte_end":641381,"line_start":23,"line_end":23,"column_start":9,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3425},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641501,"byte_end":641521,"line_start":27,"line_end":27,"column_start":5,"column_end":25},"name":"ResultAlreadyInScope","qualname":"::valid::function::CallError::ResultAlreadyInScope","value":"CallError::ResultAlreadyInScope(Handle<crate::Expression>)","parent":{"krate":0,"index":3399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Result expression {0:?} has already been introduced earlier\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641425,"byte_end":641496,"line_start":26,"line_end":26,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":3427},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641522,"byte_end":641547,"line_start":27,"line_end":27,"column_start":26,"column_end":51},"name":"0","qualname":"::valid::function::CallError::ResultAlreadyInScope::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3425},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3428},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641594,"byte_end":641605,"line_start":29,"line_end":29,"column_start":5,"column_end":16},"name":"ResultValue","qualname":"::valid::function::CallError::ResultValue","value":"CallError::ResultValue(ExpressionError)","parent":{"krate":0,"index":3399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Result value is invalid\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641554,"byte_end":641589,"line_start":28,"line_end":28,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":3430},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641616,"byte_end":641631,"line_start":29,"line_end":29,"column_start":27,"column_end":42},"name":"0","qualname":"::valid::function::CallError::ResultValue::0","value":"valid::expression::ExpressionError","parent":{"krate":0,"index":3428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"source","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641606,"byte_end":641615,"line_start":29,"line_end":29,"column_start":17,"column_end":26}}]},{"kind":"StructVariant","id":{"krate":0,"index":3431},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641709,"byte_end":641722,"line_start":31,"line_end":31,"column_start":5,"column_end":18},"name":"ArgumentCount","qualname":"::valid::function::CallError::ArgumentCount","value":"CallError::ArgumentCount { required, seen }","parent":{"krate":0,"index":3399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Requires {required} arguments, but {seen} are provided\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641638,"byte_end":641704,"line_start":30,"line_end":30,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":3432},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641725,"byte_end":641733,"line_start":31,"line_end":31,"column_start":21,"column_end":29},"name":"required","qualname":"::valid::function::CallError::ArgumentCount::required","value":"usize","parent":{"krate":0,"index":3431},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3433},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641742,"byte_end":641746,"line_start":31,"line_end":31,"column_start":38,"column_end":42},"name":"seen","qualname":"::valid::function::CallError::ArgumentCount::seen","value":"usize","parent":{"krate":0,"index":3431},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3434},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641856,"byte_end":641868,"line_start":33,"line_end":33,"column_start":5,"column_end":17},"name":"ArgumentType","qualname":"::valid::function::CallError::ArgumentType","value":"CallError::ArgumentType { index, required, seen_expression }","parent":{"krate":0,"index":3399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Argument {index} value {seen_expression:?} doesn't match the type {required:?}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641761,"byte_end":641851,"line_start":32,"line_end":32,"column_start":5,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":3435},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641879,"byte_end":641884,"line_start":34,"line_end":34,"column_start":9,"column_end":14},"name":"index","qualname":"::valid::function::CallError::ArgumentType::index","value":"usize","parent":{"krate":0,"index":3434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3436},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641901,"byte_end":641909,"line_start":35,"line_end":35,"column_start":9,"column_end":17},"name":"required","qualname":"::valid::function::CallError::ArgumentType::required","value":"arena::Handle<Type>","parent":{"krate":0,"index":3434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3437},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641940,"byte_end":641955,"line_start":36,"line_end":36,"column_start":9,"column_end":24},"name":"seen_expression","qualname":"::valid::function::CallError::ArgumentType::seen_expression","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3434},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3438},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":642057,"byte_end":642075,"line_start":39,"line_end":39,"column_start":5,"column_end":23},"name":"ExpressionMismatch","qualname":"::valid::function::CallError::ExpressionMismatch","value":"CallError::ExpressionMismatch(Option<Handle<crate::Expression>>)","parent":{"krate":0,"index":3399},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The emitted expression doesn't match the call\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641995,"byte_end":642052,"line_start":38,"line_end":38,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":3440},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":642076,"byte_end":642109,"line_start":39,"line_end":39,"column_start":24,"column_end":57},"name":"0","qualname":"::valid::function::CallError::ExpressionMismatch::0","value":"std::option::Option<arena::Handle<Expression>>","parent":{"krate":0,"index":3438},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3399},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":641125,"byte_end":641134,"line_start":15,"line_end":15,"column_start":10,"column_end":19},"name":"CallError","qualname":"::valid::function::CallError","value":"enum CallError {\n    InvalidFunction,\n    ForwardDeclaredFunction,\n    Argument {\n            index: usize,\n            error: ExpressionError,\n        },\n    ResultAlreadyInScope(Handle<crate::Expression>),\n    ResultValue(ExpressionError),\n    ArgumentCount {\n            required: usize,\n            seen: usize,\n        },\n    ArgumentType {\n            index: usize,\n            required: Handle<crate::Type>,\n            seen_expression: Handle<crate::Expression>,\n        },\n    ExpressionMismatch(Option<Handle<crate::Expression>>),\n}","parent":null,"children":[{"krate":0,"index":3418},{"krate":0,"index":3420},{"krate":0,"index":3422},{"krate":0,"index":3425},{"krate":0,"index":3428},{"krate":0,"index":3431},{"krate":0,"index":3434},{"krate":0,"index":3438}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3449},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":642273,"byte_end":642287,"line_start":46,"line_end":46,"column_start":5,"column_end":19},"name":"InvalidPointer","qualname":"::valid::function::AtomicError::InvalidPointer","value":"AtomicError::InvalidPointer(Handle<crate::Expression>)","parent":{"krate":0,"index":3441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Pointer {0:?} to atomic is invalid.\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":642221,"byte_end":642268,"line_start":45,"line_end":45,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3451},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":642288,"byte_end":642313,"line_start":46,"line_end":46,"column_start":20,"column_end":45},"name":"0","qualname":"::valid::function::AtomicError::InvalidPointer::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3452},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":642368,"byte_end":642382,"line_start":48,"line_end":48,"column_start":5,"column_end":19},"name":"InvalidOperand","qualname":"::valid::function::AtomicError::InvalidOperand","value":"AtomicError::InvalidOperand(Handle<crate::Expression>)","parent":{"krate":0,"index":3441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Operand {0:?} has invalid type.\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":642320,"byte_end":642363,"line_start":47,"line_end":47,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":3454},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":642383,"byte_end":642408,"line_start":48,"line_end":48,"column_start":20,"column_end":45},"name":"0","qualname":"::valid::function::AtomicError::InvalidOperand::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3452},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3455},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":642491,"byte_end":642511,"line_start":50,"line_end":50,"column_start":5,"column_end":25},"name":"ResultAlreadyInScope","qualname":"::valid::function::AtomicError::ResultAlreadyInScope","value":"AtomicError::ResultAlreadyInScope(Handle<crate::Expression>)","parent":{"krate":0,"index":3441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Result expression {0:?} has already been introduced earlier\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":642415,"byte_end":642486,"line_start":49,"line_end":49,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":3457},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":642512,"byte_end":642537,"line_start":50,"line_end":50,"column_start":26,"column_end":51},"name":"0","qualname":"::valid::function::AtomicError::ResultAlreadyInScope::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3455},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3458},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":642610,"byte_end":642628,"line_start":52,"line_end":52,"column_start":5,"column_end":23},"name":"ResultTypeMismatch","qualname":"::valid::function::AtomicError::ResultTypeMismatch","value":"AtomicError::ResultTypeMismatch(Handle<crate::Expression>)","parent":{"krate":0,"index":3441},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Result type for {0:?} doesn't match the statement\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":642544,"byte_end":642605,"line_start":51,"line_end":51,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":3460},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":642629,"byte_end":642654,"line_start":52,"line_end":52,"column_start":24,"column_end":49},"name":"0","qualname":"::valid::function::AtomicError::ResultTypeMismatch::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3441},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":642203,"byte_end":642214,"line_start":44,"line_end":44,"column_start":10,"column_end":21},"name":"AtomicError","qualname":"::valid::function::AtomicError","value":"enum AtomicError {\n    InvalidPointer(Handle<crate::Expression>),\n    InvalidOperand(Handle<crate::Expression>),\n    ResultAlreadyInScope(Handle<crate::Expression>),\n    ResultTypeMismatch(Handle<crate::Expression>),\n}","parent":null,"children":[{"krate":0,"index":3449},{"krate":0,"index":3452},{"krate":0,"index":3455},{"krate":0,"index":3458}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3469},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":642863,"byte_end":642874,"line_start":59,"line_end":59,"column_start":5,"column_end":16},"name":"InvalidType","qualname":"::valid::function::LocalVariableError::InvalidType","value":"LocalVariableError::InvalidType(Handle<crate::Type>)","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Local variable has a type {0:?} that can't be stored in a local variable.\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":642773,"byte_end":642858,"line_start":58,"line_end":58,"column_start":5,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":3471},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":642875,"byte_end":642894,"line_start":59,"line_end":59,"column_start":17,"column_end":36},"name":"0","qualname":"::valid::function::LocalVariableError::InvalidType::0","value":"arena::Handle<Type>","parent":{"krate":0,"index":3469},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3472},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":642961,"byte_end":642976,"line_start":61,"line_end":61,"column_start":5,"column_end":20},"name":"InitializerType","qualname":"::valid::function::LocalVariableError::InitializerType","value":"LocalVariableError::InitializerType","parent":{"krate":0,"index":3461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Initializer doesn't match the variable type\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":642901,"byte_end":642956,"line_start":60,"line_end":60,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":3461},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":642748,"byte_end":642766,"line_start":57,"line_end":57,"column_start":10,"column_end":28},"name":"LocalVariableError","qualname":"::valid::function::LocalVariableError","value":"enum LocalVariableError { InvalidType(Handle<crate::Type>), InitializerType, }","parent":null,"children":[{"krate":0,"index":3469},{"krate":0,"index":3472}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3495},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":643138,"byte_end":643148,"line_start":68,"line_end":68,"column_start":5,"column_end":15},"name":"Expression","qualname":"::valid::function::FunctionError::Expression","value":"FunctionError::Expression { handle, error }","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Expression {handle:?} is invalid\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":643089,"byte_end":643133,"line_start":67,"line_end":67,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3496},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":643159,"byte_end":643165,"line_start":69,"line_end":69,"column_start":9,"column_end":15},"name":"handle","qualname":"::valid::function::FunctionError::Expression::handle","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3497},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":643220,"byte_end":643225,"line_start":71,"line_end":71,"column_start":9,"column_end":14},"name":"error","qualname":"::valid::function::FunctionError::Expression::error","value":"valid::expression::ExpressionError","parent":{"krate":0,"index":3495},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"source","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":643202,"byte_end":643211,"line_start":70,"line_end":70,"column_start":9,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3498},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":643332,"byte_end":643356,"line_start":74,"line_end":74,"column_start":5,"column_end":29},"name":"ExpressionAlreadyInScope","qualname":"::valid::function::FunctionError::ExpressionAlreadyInScope","value":"FunctionError::ExpressionAlreadyInScope(Handle<crate::Expression>)","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Expression {0:?} can't be introduced - it's already in scope\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":643255,"byte_end":643327,"line_start":73,"line_end":73,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":3500},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":643357,"byte_end":643382,"line_start":74,"line_end":74,"column_start":30,"column_end":55},"name":"0","qualname":"::valid::function::FunctionError::ExpressionAlreadyInScope::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3501},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":643451,"byte_end":643464,"line_start":76,"line_end":76,"column_start":5,"column_end":18},"name":"LocalVariable","qualname":"::valid::function::FunctionError::LocalVariable","value":"FunctionError::LocalVariable { handle, name, error }","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Local variable {handle:?} '{name}' is invalid\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":643389,"byte_end":643446,"line_start":75,"line_end":75,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":3502},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":643475,"byte_end":643481,"line_start":77,"line_end":77,"column_start":9,"column_end":15},"name":"handle","qualname":"::valid::function::FunctionError::LocalVariable::handle","value":"arena::Handle<LocalVariable>","parent":{"krate":0,"index":3501},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3503},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":643521,"byte_end":643525,"line_start":78,"line_end":78,"column_start":9,"column_end":13},"name":"name","qualname":"::valid::function::FunctionError::LocalVariable::name","value":"std::string::String","parent":{"krate":0,"index":3501},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3504},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":643561,"byte_end":643566,"line_start":80,"line_end":80,"column_start":9,"column_end":14},"name":"error","qualname":"::valid::function::FunctionError::LocalVariable::error","value":"valid::function::LocalVariableError","parent":{"krate":0,"index":3501},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"source","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":643543,"byte_end":643552,"line_start":79,"line_end":79,"column_start":9,"column_end":18}}]},{"kind":"StructVariant","id":{"krate":0,"index":3505},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":643698,"byte_end":643717,"line_start":83,"line_end":83,"column_start":5,"column_end":24},"name":"InvalidArgumentType","qualname":"::valid::function::FunctionError::InvalidArgumentType","value":"FunctionError::InvalidArgumentType { index, name }","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Argument '{name}' at index {index} has a type that can't be passed into functions.\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":643599,"byte_end":643693,"line_start":82,"line_end":82,"column_start":5,"column_end":99}}]},{"kind":"Field","id":{"krate":0,"index":3506},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":643720,"byte_end":643725,"line_start":83,"line_end":83,"column_start":27,"column_end":32},"name":"index","qualname":"::valid::function::FunctionError::InvalidArgumentType::index","value":"usize","parent":{"krate":0,"index":3505},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3507},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":643734,"byte_end":643738,"line_start":83,"line_end":83,"column_start":41,"column_end":45},"name":"name","qualname":"::valid::function::FunctionError::InvalidArgumentType::name","value":"std::string::String","parent":{"krate":0,"index":3505},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3508},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":643876,"byte_end":643903,"line_start":85,"line_end":85,"column_start":5,"column_end":32},"name":"InvalidArgumentPointerClass","qualname":"::valid::function::FunctionError::InvalidArgumentPointerClass","value":"FunctionError::InvalidArgumentPointerClass { index, name, class }","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Argument '{name}' at index {index} is a pointer of class {class:?}, which can't be passed into functions.\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":643754,"byte_end":643871,"line_start":84,"line_end":84,"column_start":5,"column_end":122}}]},{"kind":"Field","id":{"krate":0,"index":3509},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":643914,"byte_end":643919,"line_start":86,"line_end":86,"column_start":9,"column_end":14},"name":"index","qualname":"::valid::function::FunctionError::InvalidArgumentPointerClass::index","value":"usize","parent":{"krate":0,"index":3508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3510},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":643936,"byte_end":643940,"line_start":87,"line_end":87,"column_start":9,"column_end":13},"name":"name","qualname":"::valid::function::FunctionError::InvalidArgumentPointerClass::name","value":"std::string::String","parent":{"krate":0,"index":3508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3511},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":643958,"byte_end":643963,"line_start":88,"line_end":88,"column_start":9,"column_end":14},"name":"class","qualname":"::valid::function::FunctionError::InvalidArgumentPointerClass::class","value":"StorageClass","parent":{"krate":0,"index":3508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3512},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":644070,"byte_end":644093,"line_start":91,"line_end":91,"column_start":5,"column_end":28},"name":"InstructionsAfterReturn","qualname":"::valid::function::FunctionError::InstructionsAfterReturn","value":"FunctionError::InstructionsAfterReturn","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"There are instructions after `return`/`break`/`continue`\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":643997,"byte_end":644065,"line_start":90,"line_end":90,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3514},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":644175,"byte_end":644201,"line_start":93,"line_end":93,"column_start":5,"column_end":31},"name":"BreakOutsideOfLoopOrSwitch","qualname":"::valid::function::FunctionError::BreakOutsideOfLoopOrSwitch","value":"FunctionError::BreakOutsideOfLoopOrSwitch","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The `break` is used outside of a `loop` or `switch` context\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":644099,"byte_end":644170,"line_start":92,"line_end":92,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3516},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":644274,"byte_end":644295,"line_start":95,"line_end":95,"column_start":5,"column_end":26},"name":"ContinueOutsideOfLoop","qualname":"::valid::function::FunctionError::ContinueOutsideOfLoop","value":"FunctionError::ContinueOutsideOfLoop","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The `continue` is used outside of a `loop` context\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":644207,"byte_end":644269,"line_start":94,"line_end":94,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3518},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":644368,"byte_end":644385,"line_start":97,"line_end":97,"column_start":5,"column_end":22},"name":"InvalidReturnSpot","qualname":"::valid::function::FunctionError::InvalidReturnSpot","value":"FunctionError::InvalidReturnSpot","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The `return` is called within a `continuing` block\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":644301,"byte_end":644363,"line_start":96,"line_end":96,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3520},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":644473,"byte_end":644490,"line_start":99,"line_end":99,"column_start":5,"column_end":22},"name":"InvalidReturnType","qualname":"::valid::function::FunctionError::InvalidReturnType","value":"FunctionError::InvalidReturnType(Option<Handle<crate::Expression>>)","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The `return` value {0:?} does not match the function return value\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":644391,"byte_end":644468,"line_start":98,"line_end":98,"column_start":5,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":3522},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":644491,"byte_end":644524,"line_start":99,"line_end":99,"column_start":23,"column_end":56},"name":"0","qualname":"::valid::function::FunctionError::InvalidReturnType::0","value":"std::option::Option<arena::Handle<Expression>>","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3523},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":644596,"byte_end":644609,"line_start":101,"line_end":101,"column_start":5,"column_end":18},"name":"InvalidIfType","qualname":"::valid::function::FunctionError::InvalidIfType","value":"FunctionError::InvalidIfType(Handle<crate::Expression>)","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The `if` condition {0:?} is not a boolean scalar\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":644531,"byte_end":644591,"line_start":100,"line_end":100,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":3525},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":644610,"byte_end":644635,"line_start":101,"line_end":101,"column_start":19,"column_end":44},"name":"0","qualname":"::valid::function::FunctionError::InvalidIfType::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3523},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3526},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":644708,"byte_end":644725,"line_start":103,"line_end":103,"column_start":5,"column_end":22},"name":"InvalidSwitchType","qualname":"::valid::function::FunctionError::InvalidSwitchType","value":"FunctionError::InvalidSwitchType(Handle<crate::Expression>)","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The `switch` value {0:?} is not an integer scalar\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":644642,"byte_end":644703,"line_start":102,"line_end":102,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":3528},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":644726,"byte_end":644751,"line_start":103,"line_end":103,"column_start":23,"column_end":48},"name":"0","qualname":"::valid::function::FunctionError::InvalidSwitchType::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3526},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3529},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":644820,"byte_end":644841,"line_start":105,"line_end":105,"column_start":5,"column_end":26},"name":"ConflictingSwitchCase","qualname":"::valid::function::FunctionError::ConflictingSwitchCase","value":"FunctionError::ConflictingSwitchCase(i32)","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Multiple `switch` cases for {0:?} are present\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":644758,"byte_end":644815,"line_start":104,"line_end":104,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":3531},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":644842,"byte_end":644845,"line_start":105,"line_end":105,"column_start":27,"column_end":30},"name":"0","qualname":"::valid::function::FunctionError::ConflictingSwitchCase::0","value":"i32","parent":{"krate":0,"index":3529},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3532},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":644936,"byte_end":644955,"line_start":107,"line_end":107,"column_start":5,"column_end":24},"name":"InvalidStorePointer","qualname":"::valid::function::FunctionError::InvalidStorePointer","value":"FunctionError::InvalidStorePointer(Handle<crate::Expression>)","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The pointer {0:?} doesn't relate to a valid destination for a store\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":644852,"byte_end":644931,"line_start":106,"line_end":106,"column_start":5,"column_end":84}}]},{"kind":"Field","id":{"krate":0,"index":3534},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":644956,"byte_end":644981,"line_start":107,"line_end":107,"column_start":25,"column_end":50},"name":"0","qualname":"::valid::function::FunctionError::InvalidStorePointer::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3535},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645038,"byte_end":645055,"line_start":109,"line_end":109,"column_start":5,"column_end":22},"name":"InvalidStoreValue","qualname":"::valid::function::FunctionError::InvalidStoreValue","value":"FunctionError::InvalidStoreValue(Handle<crate::Expression>)","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The value {0:?} can not be stored\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":644988,"byte_end":645033,"line_start":108,"line_end":108,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3537},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645056,"byte_end":645081,"line_start":109,"line_end":109,"column_start":23,"column_end":48},"name":"0","qualname":"::valid::function::FunctionError::InvalidStoreValue::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3538},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645168,"byte_end":645185,"line_start":111,"line_end":111,"column_start":5,"column_end":22},"name":"InvalidStoreTypes","qualname":"::valid::function::FunctionError::InvalidStoreTypes","value":"FunctionError::InvalidStoreTypes { pointer, value }","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Store of {value:?} into {pointer:?} doesn't have matching types\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645088,"byte_end":645163,"line_start":110,"line_end":110,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":3539},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645196,"byte_end":645203,"line_start":112,"line_end":112,"column_start":9,"column_end":16},"name":"pointer","qualname":"::valid::function::FunctionError::InvalidStoreTypes::pointer","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3540},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645240,"byte_end":645245,"line_start":113,"line_end":113,"column_start":9,"column_end":14},"name":"value","qualname":"::valid::function::FunctionError::InvalidStoreTypes::value","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3541},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645335,"byte_end":645352,"line_start":116,"line_end":116,"column_start":5,"column_end":22},"name":"InvalidExpression","qualname":"::valid::function::FunctionError::InvalidExpression","value":"FunctionError::InvalidExpression(Handle<crate::Expression>)","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The expression {0:?} is currupted\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645285,"byte_end":645330,"line_start":115,"line_end":115,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3543},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645353,"byte_end":645378,"line_start":116,"line_end":116,"column_start":23,"column_end":48},"name":"0","qualname":"::valid::function::FunctionError::InvalidExpression::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3541},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3544},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645436,"byte_end":645453,"line_start":118,"line_end":118,"column_start":5,"column_end":22},"name":"InvalidImageStore","qualname":"::valid::function::FunctionError::InvalidImageStore","value":"FunctionError::InvalidImageStore(ExpressionError)","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Image store parameters are invalid\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645385,"byte_end":645431,"line_start":117,"line_end":117,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3546},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645464,"byte_end":645479,"line_start":118,"line_end":118,"column_start":33,"column_end":48},"name":"0","qualname":"::valid::function::FunctionError::InvalidImageStore::0","value":"valid::expression::ExpressionError","parent":{"krate":0,"index":3544},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"source","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645454,"byte_end":645463,"line_start":118,"line_end":118,"column_start":23,"column_end":32}}]},{"kind":"StructVariant","id":{"krate":0,"index":3547},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645534,"byte_end":645545,"line_start":120,"line_end":120,"column_start":5,"column_end":16},"name":"InvalidCall","qualname":"::valid::function::FunctionError::InvalidCall","value":"FunctionError::InvalidCall { function, error }","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Call to {function:?} is invalid\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645486,"byte_end":645529,"line_start":119,"line_end":119,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":3548},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645556,"byte_end":645564,"line_start":121,"line_end":121,"column_start":9,"column_end":17},"name":"function","qualname":"::valid::function::FunctionError::InvalidCall::function","value":"arena::Handle<Function>","parent":{"krate":0,"index":3547},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3549},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645617,"byte_end":645622,"line_start":123,"line_end":123,"column_start":9,"column_end":14},"name":"error","qualname":"::valid::function::FunctionError::InvalidCall::error","value":"valid::function::CallError","parent":{"krate":0,"index":3547},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"source","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645599,"byte_end":645608,"line_start":122,"line_end":122,"column_start":9,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3550},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645690,"byte_end":645703,"line_start":126,"line_end":126,"column_start":5,"column_end":18},"name":"InvalidAtomic","qualname":"::valid::function::FunctionError::InvalidAtomic","value":"FunctionError::InvalidAtomic(AtomicError)","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Atomic operation is invalid\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645646,"byte_end":645685,"line_start":125,"line_end":125,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3552},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645712,"byte_end":645723,"line_start":126,"line_end":126,"column_start":27,"column_end":38},"name":"0","qualname":"::valid::function::FunctionError::InvalidAtomic::0","value":"valid::function::AtomicError","parent":{"krate":0,"index":3550},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645704,"byte_end":645711,"line_start":126,"line_end":126,"column_start":19,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3553},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645849,"byte_end":645870,"line_start":130,"line_end":130,"column_start":5,"column_end":26},"name":"NonUniformControlFlow","qualname":"::valid::function::FunctionError::NonUniformControlFlow","value":"FunctionError::NonUniformControlFlow(UniformityRequirements, Handle<crate::Expression>, UniformityDisruptor)","parent":{"krate":0,"index":3474},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Required uniformity of control flow for {0:?} in {1:?} is not fulfilled because of {2:?}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645730,"byte_end":645844,"line_start":127,"line_end":129,"column_start":5,"column_end":7}}]},{"kind":"Field","id":{"krate":0,"index":3555},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645880,"byte_end":645902,"line_start":131,"line_end":131,"column_start":9,"column_end":31},"name":"0","qualname":"::valid::function::FunctionError::NonUniformControlFlow::0","value":"valid::analyzer::UniformityRequirements","parent":{"krate":0,"index":3553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3556},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645912,"byte_end":645937,"line_start":132,"line_end":132,"column_start":9,"column_end":34},"name":"1","qualname":"::valid::function::FunctionError::NonUniformControlFlow::1","value":"arena::Handle<Expression>","parent":{"krate":0,"index":3553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3557},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":645947,"byte_end":645966,"line_start":133,"line_end":133,"column_start":9,"column_end":28},"name":"2","qualname":"::valid::function::FunctionError::NonUniformControlFlow::2","value":"valid::analyzer::UniformityDisruptor","parent":{"krate":0,"index":3553},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3474},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":643069,"byte_end":643082,"line_start":66,"line_end":66,"column_start":10,"column_end":23},"name":"FunctionError","qualname":"::valid::function::FunctionError","value":"enum FunctionError {\n    Expression {\n            handle: Handle<crate::Expression>,\n            error: ExpressionError,\n        },\n    ExpressionAlreadyInScope(Handle<crate::Expression>),\n    LocalVariable {\n            handle: Handle<crate::LocalVariable>,\n            name: String,\n            error: LocalVariableError,\n        },\n    InvalidArgumentType {\n            index: usize,\n            name: String,\n        },\n    InvalidArgumentPointerClass {\n            index: usize,\n            name: String,\n            class: crate::StorageClass,\n        },\n    InstructionsAfterReturn,\n    BreakOutsideOfLoopOrSwitch,\n    ContinueOutsideOfLoop,\n    InvalidReturnSpot,\n    InvalidReturnType(Option<Handle<crate::Expression>>),\n    InvalidIfType(Handle<crate::Expression>),\n    InvalidSwitchType(Handle<crate::Expression>),\n    ConflictingSwitchCase(i32),\n    InvalidStorePointer(Handle<crate::Expression>),\n    InvalidStoreValue(Handle<crate::Expression>),\n    InvalidStoreTypes {\n            pointer: Handle<crate::Expression>,\n            value: Handle<crate::Expression>,\n        },\n    InvalidExpression(Handle<crate::Expression>),\n    InvalidImageStore(ExpressionError),\n    InvalidCall {\n            function: Handle<crate::Function>,\n            error: CallError,\n        },\n    InvalidAtomic(AtomicError),\n    NonUniformControlFlow(UniformityRequirements, Handle<crate::Expression>,\n            UniformityDisruptor),\n}","parent":null,"children":[{"krate":0,"index":3495},{"krate":0,"index":3498},{"krate":0,"index":3501},{"krate":0,"index":3505},{"krate":0,"index":3508},{"krate":0,"index":3512},{"krate":0,"index":3514},{"krate":0,"index":3516},{"krate":0,"index":3518},{"krate":0,"index":3520},{"krate":0,"index":3523},{"krate":0,"index":3526},{"krate":0,"index":3529},{"krate":0,"index":3532},{"krate":0,"index":3535},{"krate":0,"index":3538},{"krate":0,"index":3541},{"krate":0,"index":3544},{"krate":0,"index":3547},{"krate":0,"index":3550},{"krate":0,"index":3553}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3667},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":672698,"byte_end":672710,"line_start":15,"line_end":15,"column_start":5,"column_end":17},"name":"InvalidUsage","qualname":"::valid::interface::GlobalVariableError::InvalidUsage","value":"GlobalVariableError::InvalidUsage","parent":{"krate":0,"index":3655},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Usage isn't compatible with the storage class\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":672636,"byte_end":672693,"line_start":14,"line_end":14,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3669},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":672777,"byte_end":672788,"line_start":17,"line_end":17,"column_start":5,"column_end":16},"name":"InvalidType","qualname":"::valid::interface::GlobalVariableError::InvalidType","value":"GlobalVariableError::InvalidType","parent":{"krate":0,"index":3655},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Type isn't compatible with the storage class\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":672716,"byte_end":672772,"line_start":16,"line_end":16,"column_start":5,"column_end":61}}]},{"kind":"StructVariant","id":{"krate":0,"index":3671},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":672868,"byte_end":672884,"line_start":19,"line_end":19,"column_start":5,"column_end":21},"name":"MissingTypeFlags","qualname":"::valid::interface::GlobalVariableError::MissingTypeFlags","value":"GlobalVariableError::MissingTypeFlags { required, seen }","parent":{"krate":0,"index":3655},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Type flags {seen:?} do not meet the required {required:?}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":672794,"byte_end":672863,"line_start":18,"line_end":18,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":3672},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":672895,"byte_end":672903,"line_start":20,"line_end":20,"column_start":9,"column_end":17},"name":"required","qualname":"::valid::interface::GlobalVariableError::MissingTypeFlags::required","value":"valid::r#type::TypeFlags","parent":{"krate":0,"index":3671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3673},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":672931,"byte_end":672935,"line_start":21,"line_end":21,"column_start":9,"column_end":13},"name":"seen","qualname":"::valid::interface::GlobalVariableError::MissingTypeFlags::seen","value":"valid::r#type::TypeFlags","parent":{"krate":0,"index":3671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3674},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673016,"byte_end":673037,"line_start":24,"line_end":24,"column_start":5,"column_end":26},"name":"UnsupportedCapability","qualname":"::valid::interface::GlobalVariableError::UnsupportedCapability","value":"GlobalVariableError::UnsupportedCapability(Capabilities)","parent":{"krate":0,"index":3655},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Capability {0:?} is not supported\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":672966,"byte_end":673011,"line_start":23,"line_end":23,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3676},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673038,"byte_end":673050,"line_start":24,"line_end":24,"column_start":27,"column_end":39},"name":"0","qualname":"::valid::interface::GlobalVariableError::UnsupportedCapability::0","value":"valid::Capabilities","parent":{"krate":0,"index":3674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3677},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673121,"byte_end":673135,"line_start":26,"line_end":26,"column_start":5,"column_end":19},"name":"InvalidBinding","qualname":"::valid::interface::GlobalVariableError::InvalidBinding","value":"GlobalVariableError::InvalidBinding","parent":{"krate":0,"index":3655},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Binding decoration is missing or not applicable\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673057,"byte_end":673116,"line_start":25,"line_end":25,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3679},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673224,"byte_end":673233,"line_start":28,"line_end":28,"column_start":5,"column_end":14},"name":"Alignment","qualname":"::valid::interface::GlobalVariableError::Alignment","value":"GlobalVariableError::Alignment(Handle<crate::Type>, Disalignment)","parent":{"krate":0,"index":3655},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Alignment requirements for this storage class are not met by {0:?}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673141,"byte_end":673219,"line_start":27,"line_end":27,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":3681},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673234,"byte_end":673253,"line_start":28,"line_end":28,"column_start":15,"column_end":34},"name":"0","qualname":"::valid::interface::GlobalVariableError::Alignment::0","value":"arena::Handle<Type>","parent":{"krate":0,"index":3679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3682},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673265,"byte_end":673277,"line_start":28,"line_end":28,"column_start":46,"column_end":58},"name":"1","qualname":"::valid::interface::GlobalVariableError::Alignment::1","value":"valid::r#type::Disalignment","parent":{"krate":0,"index":3679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"source","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673255,"byte_end":673264,"line_start":28,"line_end":28,"column_start":36,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":3655},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":672610,"byte_end":672629,"line_start":13,"line_end":13,"column_start":10,"column_end":29},"name":"GlobalVariableError","qualname":"::valid::interface::GlobalVariableError","value":"enum GlobalVariableError {\n    InvalidUsage,\n    InvalidType,\n    MissingTypeFlags {\n            required: super::TypeFlags,\n            seen: super::TypeFlags,\n        },\n    UnsupportedCapability(Capabilities),\n    InvalidBinding,\n    Alignment(Handle<crate::Type>, Disalignment),\n}","parent":null,"children":[{"krate":0,"index":3667},{"krate":0,"index":3669},{"krate":0,"index":3671},{"krate":0,"index":3674},{"krate":0,"index":3677},{"krate":0,"index":3679}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3698},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673411,"byte_end":673422,"line_start":34,"line_end":34,"column_start":5,"column_end":16},"name":"InvalidType","qualname":"::valid::interface::VaryingError::InvalidType","value":"VaryingError::InvalidType(Handle<crate::Type>)","parent":{"krate":0,"index":3683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The type {0:?} does not match the varying\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673353,"byte_end":673406,"line_start":33,"line_end":33,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":3700},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673423,"byte_end":673442,"line_start":34,"line_end":34,"column_start":17,"column_end":36},"name":"0","qualname":"::valid::interface::VaryingError::InvalidType::0","value":"arena::Handle<Type>","parent":{"krate":0,"index":3698},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3701},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673492,"byte_end":673512,"line_start":36,"line_end":36,"column_start":5,"column_end":25},"name":"InvalidInterpolation","qualname":"::valid::interface::VaryingError::InvalidInterpolation","value":"VaryingError::InvalidInterpolation","parent":{"krate":0,"index":3683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Interpolation is not valid\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673449,"byte_end":673487,"line_start":35,"line_end":35,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3703},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673618,"byte_end":673638,"line_start":38,"line_end":38,"column_start":5,"column_end":25},"name":"MissingInterpolation","qualname":"::valid::interface::VaryingError::MissingInterpolation","value":"VaryingError::MissingInterpolation","parent":{"krate":0,"index":3683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Interpolation must be specified on vertex shader outputs and fragment shader inputs\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673518,"byte_end":673613,"line_start":37,"line_end":37,"column_start":5,"column_end":100}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3705},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673706,"byte_end":673725,"line_start":40,"line_end":40,"column_start":5,"column_end":24},"name":"InvalidBuiltInStage","qualname":"::valid::interface::VaryingError::InvalidBuiltInStage","value":"VaryingError::InvalidBuiltInStage(crate::BuiltIn)","parent":{"krate":0,"index":3683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Built-in {0:?} is not available at this stage\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673644,"byte_end":673701,"line_start":39,"line_end":39,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":3707},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673726,"byte_end":673740,"line_start":40,"line_end":40,"column_start":25,"column_end":39},"name":"0","qualname":"::valid::interface::VaryingError::InvalidBuiltInStage::0","value":"BuiltIn","parent":{"krate":0,"index":3705},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3708},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673798,"byte_end":673816,"line_start":42,"line_end":42,"column_start":5,"column_end":23},"name":"InvalidBuiltInType","qualname":"::valid::interface::VaryingError::InvalidBuiltInType","value":"VaryingError::InvalidBuiltInType(crate::BuiltIn)","parent":{"krate":0,"index":3683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Built-in type for {0:?} is invalid\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673747,"byte_end":673793,"line_start":41,"line_end":41,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3710},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673817,"byte_end":673831,"line_start":42,"line_end":42,"column_start":24,"column_end":38},"name":"0","qualname":"::valid::interface::VaryingError::InvalidBuiltInType::0","value":"BuiltIn","parent":{"krate":0,"index":3708},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3711},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673917,"byte_end":673931,"line_start":44,"line_end":44,"column_start":5,"column_end":19},"name":"MissingBinding","qualname":"::valid::interface::VaryingError::MissingBinding","value":"VaryingError::MissingBinding","parent":{"krate":0,"index":3683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Entry point arguments and return values must all have bindings\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673838,"byte_end":673912,"line_start":43,"line_end":43,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3713},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673992,"byte_end":674012,"line_start":46,"line_end":46,"column_start":5,"column_end":25},"name":"MemberMissingBinding","qualname":"::valid::interface::VaryingError::MemberMissingBinding","value":"VaryingError::MemberMissingBinding(u32)","parent":{"krate":0,"index":3683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Struct member {0} is missing a binding\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673937,"byte_end":673987,"line_start":45,"line_end":45,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":3715},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674013,"byte_end":674016,"line_start":46,"line_end":46,"column_start":26,"column_end":29},"name":"0","qualname":"::valid::interface::VaryingError::MemberMissingBinding::0","value":"u32","parent":{"krate":0,"index":3713},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3716},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674092,"byte_end":674108,"line_start":48,"line_end":48,"column_start":5,"column_end":21},"name":"BindingCollision","qualname":"::valid::interface::VaryingError::BindingCollision","value":"VaryingError::BindingCollision { location }","parent":{"krate":0,"index":3683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Multiple bindings at location {location} are present\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674023,"byte_end":674087,"line_start":47,"line_end":47,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":3717},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674111,"byte_end":674119,"line_start":48,"line_end":48,"column_start":24,"column_end":32},"name":"location","qualname":"::valid::interface::VaryingError::BindingCollision::location","value":"u32","parent":{"krate":0,"index":3716},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3718},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674189,"byte_end":674205,"line_start":50,"line_end":50,"column_start":5,"column_end":21},"name":"DuplicateBuiltIn","qualname":"::valid::interface::VaryingError::DuplicateBuiltIn","value":"VaryingError::DuplicateBuiltIn(crate::BuiltIn)","parent":{"krate":0,"index":3683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Built-in {0:?} is present more than once\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674132,"byte_end":674184,"line_start":49,"line_end":49,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":3720},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674206,"byte_end":674220,"line_start":50,"line_end":50,"column_start":22,"column_end":36},"name":"0","qualname":"::valid::interface::VaryingError::DuplicateBuiltIn::0","value":"BuiltIn","parent":{"krate":0,"index":3718},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3721},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674277,"byte_end":674298,"line_start":52,"line_end":52,"column_start":5,"column_end":26},"name":"UnsupportedCapability","qualname":"::valid::interface::VaryingError::UnsupportedCapability","value":"VaryingError::UnsupportedCapability(Capabilities)","parent":{"krate":0,"index":3683},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Capability {0:?} is not supported\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674227,"byte_end":674272,"line_start":51,"line_end":51,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3723},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674299,"byte_end":674311,"line_start":52,"line_end":52,"column_start":27,"column_end":39},"name":"0","qualname":"::valid::interface::VaryingError::UnsupportedCapability::0","value":"valid::Capabilities","parent":{"krate":0,"index":3721},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3683},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":673334,"byte_end":673346,"line_start":32,"line_end":32,"column_start":10,"column_end":22},"name":"VaryingError","qualname":"::valid::interface::VaryingError","value":"enum VaryingError {\n    InvalidType(Handle<crate::Type>),\n    InvalidInterpolation,\n    MissingInterpolation,\n    InvalidBuiltInStage(crate::BuiltIn),\n    InvalidBuiltInType(crate::BuiltIn),\n    MissingBinding,\n    MemberMissingBinding(u32),\n    BindingCollision {\n            location: u32,\n        },\n    DuplicateBuiltIn(crate::BuiltIn),\n    UnsupportedCapability(Capabilities),\n}","parent":null,"children":[{"krate":0,"index":3698},{"krate":0,"index":3701},{"krate":0,"index":3703},{"krate":0,"index":3705},{"krate":0,"index":3708},{"krate":0,"index":3711},{"krate":0,"index":3713},{"krate":0,"index":3716},{"krate":0,"index":3718},{"krate":0,"index":3721}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3745},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674440,"byte_end":674448,"line_start":58,"line_end":58,"column_start":5,"column_end":13},"name":"Conflict","qualname":"::valid::interface::EntryPointError::Conflict","value":"EntryPointError::Conflict","parent":{"krate":0,"index":3724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Multiple conflicting entry points\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674390,"byte_end":674435,"line_start":57,"line_end":57,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3747},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674505,"byte_end":674529,"line_start":60,"line_end":60,"column_start":5,"column_end":29},"name":"UnexpectedEarlyDepthTest","qualname":"::valid::interface::EntryPointError::UnexpectedEarlyDepthTest","value":"EntryPointError::UnexpectedEarlyDepthTest","parent":{"krate":0,"index":3724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Early depth test is not applicable\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674454,"byte_end":674500,"line_start":59,"line_end":59,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3749},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674584,"byte_end":674607,"line_start":62,"line_end":62,"column_start":5,"column_end":28},"name":"UnexpectedWorkgroupSize","qualname":"::valid::interface::EntryPointError::UnexpectedWorkgroupSize","value":"EntryPointError::UnexpectedWorkgroupSize","parent":{"krate":0,"index":3724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Workgroup size is not applicable\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674535,"byte_end":674579,"line_start":61,"line_end":61,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3751},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674660,"byte_end":674683,"line_start":64,"line_end":64,"column_start":5,"column_end":28},"name":"OutOfRangeWorkgroupSize","qualname":"::valid::interface::EntryPointError::OutOfRangeWorkgroupSize","value":"EntryPointError::OutOfRangeWorkgroupSize","parent":{"krate":0,"index":3724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Workgroup size is out of range\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674613,"byte_end":674655,"line_start":63,"line_end":63,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3753},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674745,"byte_end":674769,"line_start":66,"line_end":66,"column_start":5,"column_end":29},"name":"ForbiddenStageOperations","qualname":"::valid::interface::EntryPointError::ForbiddenStageOperations","value":"EntryPointError::ForbiddenStageOperations","parent":{"krate":0,"index":3724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Uses operations forbidden at this stage\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674689,"byte_end":674740,"line_start":65,"line_end":65,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3755},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674842,"byte_end":674860,"line_start":68,"line_end":68,"column_start":5,"column_end":23},"name":"InvalidGlobalUsage","qualname":"::valid::interface::EntryPointError::InvalidGlobalUsage","value":"EntryPointError::InvalidGlobalUsage(Handle<crate::GlobalVariable>, GlobalUse)","parent":{"krate":0,"index":3724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Global variable {0:?} is used incorrectly as {1:?}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674775,"byte_end":674837,"line_start":67,"line_end":67,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":3757},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674861,"byte_end":674890,"line_start":68,"line_end":68,"column_start":24,"column_end":53},"name":"0","qualname":"::valid::interface::EntryPointError::InvalidGlobalUsage::0","value":"arena::Handle<GlobalVariable>","parent":{"krate":0,"index":3755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3758},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674892,"byte_end":674901,"line_start":68,"line_end":68,"column_start":55,"column_end":64},"name":"1","qualname":"::valid::interface::EntryPointError::InvalidGlobalUsage::1","value":"valid::analyzer::GlobalUse","parent":{"krate":0,"index":3755},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3759},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674972,"byte_end":674988,"line_start":70,"line_end":70,"column_start":5,"column_end":21},"name":"BindingCollision","qualname":"::valid::interface::EntryPointError::BindingCollision","value":"EntryPointError::BindingCollision(Handle<crate::GlobalVariable>)","parent":{"krate":0,"index":3724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Bindings for {0:?} conflict with other resource\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674908,"byte_end":674967,"line_start":69,"line_end":69,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":3761},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674989,"byte_end":675018,"line_start":70,"line_end":70,"column_start":22,"column_end":51},"name":"0","qualname":"::valid::interface::EntryPointError::BindingCollision::0","value":"arena::Handle<GlobalVariable>","parent":{"krate":0,"index":3759},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3762},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":675068,"byte_end":675076,"line_start":72,"line_end":72,"column_start":5,"column_end":13},"name":"Argument","qualname":"::valid::interface::EntryPointError::Argument","value":"EntryPointError::Argument(u32, VaryingError)","parent":{"krate":0,"index":3724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Argument {0} varying error\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":675025,"byte_end":675063,"line_start":71,"line_end":71,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":3764},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":675077,"byte_end":675080,"line_start":72,"line_end":72,"column_start":14,"column_end":17},"name":"0","qualname":"::valid::interface::EntryPointError::Argument::0","value":"u32","parent":{"krate":0,"index":3762},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3765},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":675092,"byte_end":675104,"line_start":72,"line_end":72,"column_start":29,"column_end":41},"name":"1","qualname":"::valid::interface::EntryPointError::Argument::1","value":"valid::interface::VaryingError","parent":{"krate":0,"index":3762},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"source","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":675082,"byte_end":675091,"line_start":72,"line_end":72,"column_start":19,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3766},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":675148,"byte_end":675154,"line_start":74,"line_end":74,"column_start":5,"column_end":11},"name":"Result","qualname":"::valid::interface::EntryPointError::Result","value":"EntryPointError::Result(VaryingError)","parent":{"krate":0,"index":3724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Result varying error\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":675111,"byte_end":675143,"line_start":73,"line_end":73,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3768},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":675165,"byte_end":675177,"line_start":74,"line_end":74,"column_start":22,"column_end":34},"name":"0","qualname":"::valid::interface::EntryPointError::Result::0","value":"valid::interface::VaryingError","parent":{"krate":0,"index":3766},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"source","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":675155,"byte_end":675164,"line_start":74,"line_end":74,"column_start":12,"column_end":21}}]},{"kind":"StructVariant","id":{"krate":0,"index":3769},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":675263,"byte_end":675290,"line_start":76,"line_end":76,"column_start":5,"column_end":32},"name":"InvalidIntegerInterpolation","qualname":"::valid::interface::EntryPointError::InvalidIntegerInterpolation","value":"EntryPointError::InvalidIntegerInterpolation { location }","parent":{"krate":0,"index":3724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Location {location} onterpolation of an integer has to be flat\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":675184,"byte_end":675258,"line_start":75,"line_end":75,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":3770},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":675293,"byte_end":675301,"line_start":76,"line_end":76,"column_start":35,"column_end":43},"name":"location","qualname":"::valid::interface::EntryPointError::InvalidIntegerInterpolation::location","value":"u32","parent":{"krate":0,"index":3769},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3771},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":675340,"byte_end":675348,"line_start":78,"line_end":78,"column_start":5,"column_end":13},"name":"Function","qualname":"::valid::interface::EntryPointError::Function","value":"EntryPointError::Function(FunctionError)","parent":{"krate":0,"index":3724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":675314,"byte_end":675335,"line_start":77,"line_end":77,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":3773},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":675357,"byte_end":675370,"line_start":78,"line_end":78,"column_start":22,"column_end":35},"name":"0","qualname":"::valid::interface::EntryPointError::Function::0","value":"valid::function::FunctionError","parent":{"krate":0,"index":3771},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":675349,"byte_end":675356,"line_start":78,"line_end":78,"column_start":14,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":3724},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":674368,"byte_end":674383,"line_start":56,"line_end":56,"column_start":10,"column_end":25},"name":"EntryPointError","qualname":"::valid::interface::EntryPointError","value":"enum EntryPointError {\n    Conflict,\n    UnexpectedEarlyDepthTest,\n    UnexpectedWorkgroupSize,\n    OutOfRangeWorkgroupSize,\n    ForbiddenStageOperations,\n    InvalidGlobalUsage(Handle<crate::GlobalVariable>, GlobalUse),\n    BindingCollision(Handle<crate::GlobalVariable>),\n    Argument(u32, VaryingError),\n    Result(VaryingError),\n    InvalidIntegerInterpolation {\n            location: u32,\n        },\n    Function(FunctionError),\n}","parent":null,"children":[{"krate":0,"index":3745},{"krate":0,"index":3747},{"krate":0,"index":3749},{"krate":0,"index":3751},{"krate":0,"index":3753},{"krate":0,"index":3755},{"krate":0,"index":3759},{"krate":0,"index":3762},{"krate":0,"index":3766},{"krate":0,"index":3769},{"krate":0,"index":3771}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3774},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":692818,"byte_end":692827,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"TypeFlags","qualname":"::valid::r#type::TypeFlags","value":"TypeFlags {  }","parent":null,"children":[{"krate":0,"index":3775}],"decl_id":null,"docs":" Flags associated with [`Type`]s by [`Validator`].","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.3.2/src/lib.rs","byte_start":12962565,"byte_end":12962574,"line_start":362,"line_end":362,"column_start":11,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":3813},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":693148,"byte_end":693152,"line_start":21,"line_end":21,"column_start":15,"column_end":19},"name":"DATA","qualname":"::valid::r#type::TypeFlags::DATA","value":"Self","parent":{"krate":0,"index":3812},"children":[],"decl_id":null,"docs":" Can be used for data variables.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3814},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":693822,"byte_end":693827,"line_start":36,"line_end":36,"column_start":15,"column_end":20},"name":"SIZED","qualname":"::valid::r#type::TypeFlags::SIZED","value":"Self","parent":{"krate":0,"index":3812},"children":[],"decl_id":null,"docs":" The data type has a size known by pipeline creation time.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3815},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":693893,"byte_end":693897,"line_start":39,"line_end":39,"column_start":15,"column_end":19},"name":"COPY","qualname":"::valid::r#type::TypeFlags::COPY","value":"Self","parent":{"krate":0,"index":3812},"children":[],"decl_id":null,"docs":" The data can be copied around.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3816},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":694134,"byte_end":694143,"line_start":45,"line_end":45,"column_start":15,"column_end":24},"name":"INTERFACE","qualname":"::valid::r#type::TypeFlags::INTERFACE","value":"Self","parent":{"krate":0,"index":3812},"children":[],"decl_id":null,"docs":" Can be be used for interfacing between pipeline stages.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3817},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":694221,"byte_end":694232,"line_start":48,"line_end":48,"column_start":15,"column_end":26},"name":"HOST_SHARED","qualname":"::valid::r#type::TypeFlags::HOST_SHARED","value":"Self","parent":{"krate":0,"index":3812},"children":[],"decl_id":null,"docs":" Can be used for host-shareable structures.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3818},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":694309,"byte_end":694318,"line_start":51,"line_end":51,"column_start":15,"column_end":24},"name":"TOP_LEVEL","qualname":"::valid::r#type::TypeFlags::TOP_LEVEL","value":"Self","parent":{"krate":0,"index":3812},"children":[],"decl_id":null,"docs":" This is a top-level host-shareable type.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3819},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":694402,"byte_end":694410,"line_start":54,"line_end":54,"column_start":15,"column_end":23},"name":"ARGUMENT","qualname":"::valid::r#type::TypeFlags::ARGUMENT","value":"Self","parent":{"krate":0,"index":3812},"children":[],"decl_id":null,"docs":" This type can be passed as a function argument.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3907},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":694602,"byte_end":694613,"line_start":61,"line_end":61,"column_start":5,"column_end":16},"name":"ArrayStride","qualname":"::valid::r#type::Disalignment::ArrayStride","value":"Disalignment::ArrayStride { stride, alignment }","parent":{"krate":0,"index":3891},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The array stride {stride} is not a multiple of the required alignment {alignment}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":694504,"byte_end":694597,"line_start":60,"line_end":60,"column_start":5,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":3908},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":694616,"byte_end":694622,"line_start":61,"line_end":61,"column_start":19,"column_end":25},"name":"stride","qualname":"::valid::r#type::Disalignment::ArrayStride::stride","value":"u32","parent":{"krate":0,"index":3907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3909},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":694629,"byte_end":694638,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"name":"alignment","qualname":"::valid::r#type::Disalignment::ArrayStride::alignment","value":"u32","parent":{"krate":0,"index":3907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3910},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":694747,"byte_end":694757,"line_start":63,"line_end":63,"column_start":5,"column_end":15},"name":"StructSpan","qualname":"::valid::r#type::Disalignment::StructSpan","value":"Disalignment::StructSpan { span, alignment }","parent":{"krate":0,"index":3891},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The struct span {span}, is not a multiple of the required alignment {alignment}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":694651,"byte_end":694742,"line_start":62,"line_end":62,"column_start":5,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":3911},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":694760,"byte_end":694764,"line_start":63,"line_end":63,"column_start":18,"column_end":22},"name":"span","qualname":"::valid::r#type::Disalignment::StructSpan::span","value":"u32","parent":{"krate":0,"index":3910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3912},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":694771,"byte_end":694780,"line_start":63,"line_end":63,"column_start":29,"column_end":38},"name":"alignment","qualname":"::valid::r#type::Disalignment::StructSpan::alignment","value":"u32","parent":{"krate":0,"index":3910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3913},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":694908,"byte_end":694920,"line_start":65,"line_end":65,"column_start":5,"column_end":17},"name":"MemberOffset","qualname":"::valid::r#type::Disalignment::MemberOffset","value":"Disalignment::MemberOffset { index, offset, alignment }","parent":{"krate":0,"index":3891},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The struct member[{index}] offset {offset} is not a multiple of the required alignment {alignment}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":694793,"byte_end":694903,"line_start":64,"line_end":64,"column_start":5,"column_end":115}}]},{"kind":"Field","id":{"krate":0,"index":3914},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":694931,"byte_end":694936,"line_start":66,"line_end":66,"column_start":9,"column_end":14},"name":"index","qualname":"::valid::r#type::Disalignment::MemberOffset::index","value":"u32","parent":{"krate":0,"index":3913},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3915},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":694951,"byte_end":694957,"line_start":67,"line_end":67,"column_start":9,"column_end":15},"name":"offset","qualname":"::valid::r#type::Disalignment::MemberOffset::offset","value":"u32","parent":{"krate":0,"index":3913},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3916},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":694972,"byte_end":694981,"line_start":68,"line_end":68,"column_start":9,"column_end":18},"name":"alignment","qualname":"::valid::r#type::Disalignment::MemberOffset::alignment","value":"u32","parent":{"krate":0,"index":3913},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3917},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695066,"byte_end":695079,"line_start":71,"line_end":71,"column_start":5,"column_end":18},"name":"UnsizedMember","qualname":"::valid::r#type::Disalignment::UnsizedMember","value":"Disalignment::UnsizedMember { index }","parent":{"krate":0,"index":3891},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The struct member[{index}] is not statically sized\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":694999,"byte_end":695061,"line_start":70,"line_end":70,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":3918},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695082,"byte_end":695087,"line_start":71,"line_end":71,"column_start":21,"column_end":26},"name":"index","qualname":"::valid::r#type::Disalignment::UnsizedMember::index","value":"u32","parent":{"krate":0,"index":3917},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3919},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695147,"byte_end":695163,"line_start":73,"line_end":73,"column_start":5,"column_end":21},"name":"NonHostShareable","qualname":"::valid::r#type::Disalignment::NonHostShareable","value":"Disalignment::NonHostShareable","parent":{"krate":0,"index":3891},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The type is not host-shareable\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695100,"byte_end":695142,"line_start":72,"line_end":72,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":3891},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":694485,"byte_end":694497,"line_start":59,"line_end":59,"column_start":10,"column_end":22},"name":"Disalignment","qualname":"::valid::r#type::Disalignment","value":"enum Disalignment {\n    ArrayStride {\n            stride: u32,\n            alignment: u32,\n        },\n    StructSpan {\n            span: u32,\n            alignment: u32,\n        },\n    MemberOffset {\n            index: u32,\n            offset: u32,\n            alignment: u32,\n        },\n    UnsizedMember {\n            index: u32,\n        },\n    NonHostShareable,\n}","parent":null,"children":[{"krate":0,"index":3907},{"krate":0,"index":3910},{"krate":0,"index":3913},{"krate":0,"index":3917},{"krate":0,"index":3919}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3936},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695295,"byte_end":695307,"line_start":79,"line_end":79,"column_start":5,"column_end":17},"name":"InvalidWidth","qualname":"::valid::r#type::TypeError::InvalidWidth","value":"TypeError::InvalidWidth(crate::ScalarKind, crate::Bytes)","parent":{"krate":0,"index":3921},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The {0:?} scalar width {1} is not supported\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695235,"byte_end":695290,"line_start":78,"line_end":78,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":3938},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695308,"byte_end":695325,"line_start":79,"line_end":79,"column_start":18,"column_end":35},"name":"0","qualname":"::valid::r#type::TypeError::InvalidWidth::0","value":"ScalarKind","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3939},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695327,"byte_end":695339,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"name":"1","qualname":"::valid::r#type::TypeError::InvalidWidth::1","value":"u8","parent":{"krate":0,"index":3936},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3940},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695420,"byte_end":695438,"line_start":81,"line_end":81,"column_start":5,"column_end":23},"name":"InvalidAtomicWidth","qualname":"::valid::r#type::TypeError::InvalidAtomicWidth","value":"TypeError::InvalidAtomicWidth(crate::ScalarKind, crate::Bytes)","parent":{"krate":0,"index":3921},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The {0:?} scalar width {1} is not supported for an atomic\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695346,"byte_end":695415,"line_start":80,"line_end":80,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":3942},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695439,"byte_end":695456,"line_start":81,"line_end":81,"column_start":24,"column_end":41},"name":"0","qualname":"::valid::r#type::TypeError::InvalidAtomicWidth::0","value":"ScalarKind","parent":{"krate":0,"index":3940},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3943},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695458,"byte_end":695470,"line_start":81,"line_end":81,"column_start":43,"column_end":55},"name":"1","qualname":"::valid::r#type::TypeError::InvalidAtomicWidth::1","value":"u8","parent":{"krate":0,"index":3940},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3944},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695535,"byte_end":695549,"line_start":83,"line_end":83,"column_start":5,"column_end":19},"name":"UnresolvedBase","qualname":"::valid::r#type::TypeError::UnresolvedBase","value":"TypeError::UnresolvedBase(Handle<crate::Type>)","parent":{"krate":0,"index":3921},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The base handle {0:?} can not be resolved\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695477,"byte_end":695530,"line_start":82,"line_end":82,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":3946},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695550,"byte_end":695569,"line_start":83,"line_end":83,"column_start":20,"column_end":39},"name":"0","qualname":"::valid::r#type::TypeError::UnresolvedBase::0","value":"arena::Handle<Type>","parent":{"krate":0,"index":3944},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3947},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695630,"byte_end":695648,"line_start":85,"line_end":85,"column_start":5,"column_end":23},"name":"InvalidPointerBase","qualname":"::valid::r#type::TypeError::InvalidPointerBase","value":"TypeError::InvalidPointerBase(Handle<crate::Type>)","parent":{"krate":0,"index":3921},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid type for pointer target {0:?}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695576,"byte_end":695625,"line_start":84,"line_end":84,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3949},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695649,"byte_end":695668,"line_start":85,"line_end":85,"column_start":24,"column_end":43},"name":"0","qualname":"::valid::r#type::TypeError::InvalidPointerBase::0","value":"arena::Handle<Type>","parent":{"krate":0,"index":3947},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3950},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695723,"byte_end":695734,"line_start":87,"line_end":87,"column_start":5,"column_end":16},"name":"InvalidData","qualname":"::valid::r#type::TypeError::InvalidData","value":"TypeError::InvalidData(Handle<crate::Type>)","parent":{"krate":0,"index":3921},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Expected data type, found {0:?}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695675,"byte_end":695718,"line_start":86,"line_end":86,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":3952},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695735,"byte_end":695754,"line_start":87,"line_end":87,"column_start":17,"column_end":36},"name":"0","qualname":"::valid::r#type::TypeError::InvalidData::0","value":"arena::Handle<Type>","parent":{"krate":0,"index":3950},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3953},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695818,"byte_end":695838,"line_start":89,"line_end":89,"column_start":5,"column_end":25},"name":"InvalidArrayBaseType","qualname":"::valid::r#type::TypeError::InvalidArrayBaseType","value":"TypeError::InvalidArrayBaseType(Handle<crate::Type>)","parent":{"krate":0,"index":3921},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Base type {0:?} for the array is invalid\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695761,"byte_end":695813,"line_start":88,"line_end":88,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":3955},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695839,"byte_end":695858,"line_start":89,"line_end":89,"column_start":26,"column_end":45},"name":"0","qualname":"::valid::r#type::TypeError::InvalidArrayBaseType::0","value":"arena::Handle<Type>","parent":{"krate":0,"index":3953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3956},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695934,"byte_end":695958,"line_start":91,"line_end":91,"column_start":5,"column_end":29},"name":"InvalidArraySizeConstant","qualname":"::valid::r#type::TypeError::InvalidArraySizeConstant","value":"TypeError::InvalidArraySizeConstant(Handle<crate::Constant>)","parent":{"krate":0,"index":3921},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The constant {0:?} can not be used for an array size\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695865,"byte_end":695929,"line_start":90,"line_end":90,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":3958},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695959,"byte_end":695982,"line_start":91,"line_end":91,"column_start":30,"column_end":53},"name":"0","qualname":"::valid::r#type::TypeError::InvalidArraySizeConstant::0","value":"arena::Handle<Constant>","parent":{"krate":0,"index":3956},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3959},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":696056,"byte_end":696078,"line_start":93,"line_end":93,"column_start":5,"column_end":27},"name":"NonPositiveArrayLength","qualname":"::valid::r#type::TypeError::NonPositiveArrayLength","value":"TypeError::NonPositiveArrayLength(Handle<crate::Constant>)","parent":{"krate":0,"index":3921},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Array type {0:?} must have a length of one or more\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695989,"byte_end":696051,"line_start":92,"line_end":92,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":3961},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":696079,"byte_end":696102,"line_start":93,"line_end":93,"column_start":28,"column_end":51},"name":"0","qualname":"::valid::r#type::TypeError::NonPositiveArrayLength::0","value":"arena::Handle<Constant>","parent":{"krate":0,"index":3959},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3962},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":696197,"byte_end":696220,"line_start":95,"line_end":95,"column_start":5,"column_end":28},"name":"InsufficientArrayStride","qualname":"::valid::r#type::TypeError::InsufficientArrayStride","value":"TypeError::InsufficientArrayStride { stride, base_size }","parent":{"krate":0,"index":3921},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Array stride {stride} is smaller than the base element size {base_size}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":696109,"byte_end":696192,"line_start":94,"line_end":94,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":3963},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":696223,"byte_end":696229,"line_start":95,"line_end":95,"column_start":31,"column_end":37},"name":"stride","qualname":"::valid::r#type::TypeError::InsufficientArrayStride::stride","value":"u32","parent":{"krate":0,"index":3962},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3964},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":696236,"byte_end":696245,"line_start":95,"line_end":95,"column_start":44,"column_end":53},"name":"base_size","qualname":"::valid::r#type::TypeError::InsufficientArrayStride::base_size","value":"u32","parent":{"krate":0,"index":3962},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3965},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":696329,"byte_end":696348,"line_start":97,"line_end":97,"column_start":5,"column_end":24},"name":"InvalidDynamicArray","qualname":"::valid::r#type::TypeError::InvalidDynamicArray","value":"TypeError::InvalidDynamicArray(String, Handle<crate::Type>)","parent":{"krate":0,"index":3921},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Field '{0}' can't be dynamically-sized, has type {1:?}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":696258,"byte_end":696324,"line_start":96,"line_end":96,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":3967},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":696349,"byte_end":696355,"line_start":97,"line_end":97,"column_start":25,"column_end":31},"name":"0","qualname":"::valid::r#type::TypeError::InvalidDynamicArray::0","value":"std::string::String","parent":{"krate":0,"index":3965},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3968},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":696357,"byte_end":696376,"line_start":97,"line_end":97,"column_start":33,"column_end":52},"name":"1","qualname":"::valid::r#type::TypeError::InvalidDynamicArray::1","value":"arena::Handle<Type>","parent":{"krate":0,"index":3965},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3969},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":696466,"byte_end":696479,"line_start":99,"line_end":99,"column_start":5,"column_end":18},"name":"MemberOverlap","qualname":"::valid::r#type::TypeError::MemberOverlap","value":"TypeError::MemberOverlap { index, offset }","parent":{"krate":0,"index":3921},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Structure member[{index}] at {offset} overlaps the previous member\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":696383,"byte_end":696461,"line_start":98,"line_end":98,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":3970},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":696482,"byte_end":696487,"line_start":99,"line_end":99,"column_start":21,"column_end":26},"name":"index","qualname":"::valid::r#type::TypeError::MemberOverlap::index","value":"u32","parent":{"krate":0,"index":3969},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3971},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":696494,"byte_end":696500,"line_start":99,"line_end":99,"column_start":33,"column_end":39},"name":"offset","qualname":"::valid::r#type::TypeError::MemberOverlap::offset","value":"u32","parent":{"krate":0,"index":3969},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3972},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":696643,"byte_end":696660,"line_start":103,"line_end":103,"column_start":5,"column_end":22},"name":"MemberOutOfBounds","qualname":"::valid::r#type::TypeError::MemberOutOfBounds","value":"TypeError::MemberOutOfBounds { index, offset, size, span }","parent":{"krate":0,"index":3921},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Structure member[{index}] at {offset} and size {size} crosses the structure boundary of size {span}\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":696513,"byte_end":696638,"line_start":100,"line_end":102,"column_start":5,"column_end":7}}]},{"kind":"Field","id":{"krate":0,"index":3973},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":696671,"byte_end":696676,"line_start":104,"line_end":104,"column_start":9,"column_end":14},"name":"index","qualname":"::valid::r#type::TypeError::MemberOutOfBounds::index","value":"u32","parent":{"krate":0,"index":3972},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3974},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":696691,"byte_end":696697,"line_start":105,"line_end":105,"column_start":9,"column_end":15},"name":"offset","qualname":"::valid::r#type::TypeError::MemberOutOfBounds::offset","value":"u32","parent":{"krate":0,"index":3972},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3975},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":696712,"byte_end":696716,"line_start":106,"line_end":106,"column_start":9,"column_end":13},"name":"size","qualname":"::valid::r#type::TypeError::MemberOutOfBounds::size","value":"u32","parent":{"krate":0,"index":3972},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3976},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":696731,"byte_end":696735,"line_start":107,"line_end":107,"column_start":9,"column_end":13},"name":"span","qualname":"::valid::r#type::TypeError::MemberOutOfBounds::span","value":"u32","parent":{"krate":0,"index":3972},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3977},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":696819,"byte_end":696833,"line_start":110,"line_end":110,"column_start":5,"column_end":19},"name":"NestedTopLevel","qualname":"::valid::r#type::TypeError::NestedTopLevel","value":"TypeError::NestedTopLevel","parent":{"krate":0,"index":3921},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The composite type contains a top-level structure\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":696753,"byte_end":696814,"line_start":109,"line_end":109,"column_start":5,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":3921},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":695219,"byte_end":695228,"line_start":77,"line_end":77,"column_start":10,"column_end":19},"name":"TypeError","qualname":"::valid::r#type::TypeError","value":"enum TypeError {\n    InvalidWidth(crate::ScalarKind, crate::Bytes),\n    InvalidAtomicWidth(crate::ScalarKind, crate::Bytes),\n    UnresolvedBase(Handle<crate::Type>),\n    InvalidPointerBase(Handle<crate::Type>),\n    InvalidData(Handle<crate::Type>),\n    InvalidArrayBaseType(Handle<crate::Type>),\n    InvalidArraySizeConstant(Handle<crate::Constant>),\n    NonPositiveArrayLength(Handle<crate::Constant>),\n    InsufficientArrayStride {\n            stride: u32,\n            base_size: u32,\n        },\n    InvalidDynamicArray(String, Handle<crate::Type>),\n    MemberOverlap {\n            index: u32,\n            offset: u32,\n        },\n    MemberOutOfBounds {\n            index: u32,\n            offset: u32,\n            size: u32,\n            span: u32,\n        },\n    NestedTopLevel,\n}","parent":null,"children":[{"krate":0,"index":3936},{"krate":0,"index":3940},{"krate":0,"index":3944},{"krate":0,"index":3947},{"krate":0,"index":3950},{"krate":0,"index":3953},{"krate":0,"index":3956},{"krate":0,"index":3959},{"krate":0,"index":3962},{"krate":0,"index":3965},{"krate":0,"index":3969},{"krate":0,"index":3972},{"krate":0,"index":3977}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3987},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":520835,"byte_end":520850,"line_start":33,"line_end":33,"column_start":16,"column_end":31},"name":"ValidationFlags","qualname":"::valid::ValidationFlags","value":"ValidationFlags {  }","parent":null,"children":[{"krate":0,"index":3988}],"decl_id":null,"docs":" Validation flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4024},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":520933,"byte_end":520944,"line_start":36,"line_end":36,"column_start":15,"column_end":26},"name":"EXPRESSIONS","qualname":"::valid::ValidationFlags::EXPRESSIONS","value":"Self","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" Expressions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"validate\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.3.2/src/lib.rs","byte_start":12967784,"byte_end":12967802,"line_start":520,"line_end":520,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":4025},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":521046,"byte_end":521052,"line_start":39,"line_end":39,"column_start":15,"column_end":21},"name":"BLOCKS","qualname":"::valid::ValidationFlags::BLOCKS","value":"Self","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" Statements and blocks of them.\n","sig":null,"attributes":[{"value":"cfg(feature = \"validate\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.3.2/src/lib.rs","byte_start":12967784,"byte_end":12967802,"line_start":520,"line_end":520,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":4026},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":521182,"byte_end":521205,"line_start":42,"line_end":42,"column_start":15,"column_end":38},"name":"CONTROL_FLOW_UNIFORMITY","qualname":"::valid::ValidationFlags::CONTROL_FLOW_UNIFORMITY","value":"Self","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" Uniformity of control flow for operations that require it.\n","sig":null,"attributes":[{"value":"cfg(feature = \"validate\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.3.2/src/lib.rs","byte_start":12967784,"byte_end":12967802,"line_start":520,"line_end":520,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":4027},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":521310,"byte_end":521324,"line_start":45,"line_end":45,"column_start":15,"column_end":29},"name":"STRUCT_LAYOUTS","qualname":"::valid::ValidationFlags::STRUCT_LAYOUTS","value":"Self","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" Host-shareable structure layouts.\n","sig":null,"attributes":[{"value":"cfg(feature = \"validate\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.3.2/src/lib.rs","byte_start":12967784,"byte_end":12967802,"line_start":520,"line_end":520,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":4028},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":521406,"byte_end":521415,"line_start":48,"line_end":48,"column_start":15,"column_end":24},"name":"CONSTANTS","qualname":"::valid::ValidationFlags::CONSTANTS","value":"Self","parent":{"krate":0,"index":4023},"children":[],"decl_id":null,"docs":" Constants.\n","sig":null,"attributes":[{"value":"cfg(feature = \"validate\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.3.2/src/lib.rs","byte_start":12967784,"byte_end":12967802,"line_start":520,"line_end":520,"column_start":19,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1805},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":521475,"byte_end":521482,"line_start":53,"line_end":53,"column_start":8,"column_end":15},"name":"default","qualname":"<ValidationFlags as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4096},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":521767,"byte_end":521779,"line_start":64,"line_end":64,"column_start":16,"column_end":28},"name":"Capabilities","qualname":"::valid::Capabilities","value":"Capabilities {  }","parent":null,"children":[{"krate":0,"index":4097}],"decl_id":null,"docs":" Allowed IR capabilities.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/bitflags-1.3.2/src/lib.rs","byte_start":12962565,"byte_end":12962574,"line_start":362,"line_end":362,"column_start":11,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":4131},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":521853,"byte_end":521866,"line_start":66,"line_end":66,"column_start":15,"column_end":28},"name":"PUSH_CONSTANT","qualname":"::valid::Capabilities::PUSH_CONSTANT","value":"Self","parent":{"krate":0,"index":4130},"children":[],"decl_id":null,"docs":" Support for `StorageClass:PushConstant`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4132},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":521929,"byte_end":521936,"line_start":68,"line_end":68,"column_start":15,"column_end":22},"name":"FLOAT64","qualname":"::valid::Capabilities::FLOAT64","value":"Self","parent":{"krate":0,"index":4130},"children":[],"decl_id":null,"docs":" Float values with width = 8.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4133},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":522008,"byte_end":522023,"line_start":70,"line_end":70,"column_start":15,"column_end":30},"name":"PRIMITIVE_INDEX","qualname":"::valid::Capabilities::PRIMITIVE_INDEX","value":"Self","parent":{"krate":0,"index":4130},"children":[],"decl_id":null,"docs":" Support for `Builtin:PrimitiveIndex`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4193},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":522237,"byte_end":522249,"line_start":78,"line_end":78,"column_start":16,"column_end":28},"name":"ShaderStages","qualname":"::valid::ShaderStages","value":"ShaderStages {  }","parent":null,"children":[{"krate":0,"index":4194}],"decl_id":null,"docs":" Validation flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4228},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":522270,"byte_end":522276,"line_start":79,"line_end":79,"column_start":15,"column_end":21},"name":"VERTEX","qualname":"::valid::ShaderStages::VERTEX","value":"Self","parent":{"krate":0,"index":4227},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4229},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":522298,"byte_end":522306,"line_start":80,"line_end":80,"column_start":15,"column_end":23},"name":"FRAGMENT","qualname":"::valid::ShaderStages::FRAGMENT","value":"Self","parent":{"krate":0,"index":4227},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4230},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":522328,"byte_end":522335,"line_start":81,"line_end":81,"column_start":15,"column_end":22},"name":"COMPUTE","qualname":"::valid::ShaderStages::COMPUTE","value":"Self","parent":{"krate":0,"index":4227},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4290},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":522506,"byte_end":522516,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"ModuleInfo","qualname":"::valid::ModuleInfo","value":"ModuleInfo {  }","parent":null,"children":[{"krate":0,"index":4291},{"krate":0,"index":4292}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":522690,"byte_end":522695,"line_start":95,"line_end":95,"column_start":8,"column_end":13},"name":"index","qualname":"<ModuleInfo as std::ops::Index>::index","value":"fn index(&Self, Handle<crate::Function>) -> &Self::Output","parent":{"krate":2,"index":3454},"children":[],"decl_id":{"krate":2,"index":3457},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4295},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":522832,"byte_end":522841,"line_start":101,"line_end":101,"column_start":12,"column_end":21},"name":"Validator","qualname":"::valid::Validator","value":"Validator {  }","parent":null,"children":[{"krate":0,"index":4296},{"krate":0,"index":4297},{"krate":0,"index":4298},{"krate":0,"index":4299},{"krate":0,"index":4300},{"krate":0,"index":4301},{"krate":0,"index":4302},{"krate":0,"index":4303},{"krate":0,"index":4304}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4321},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523303,"byte_end":523314,"line_start":117,"line_end":117,"column_start":5,"column_end":16},"name":"InvalidType","qualname":"::valid::ConstantError::InvalidType","value":"ConstantError::InvalidType","parent":{"krate":0,"index":4307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The type doesn't match the constant\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523251,"byte_end":523298,"line_start":116,"line_end":116,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4323},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523383,"byte_end":523402,"line_start":119,"line_end":119,"column_start":5,"column_end":24},"name":"UnresolvedComponent","qualname":"::valid::ConstantError::UnresolvedComponent","value":"ConstantError::UnresolvedComponent(Handle<crate::Constant>)","parent":{"krate":0,"index":4307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The component handle {0:?} can not be resolved\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523320,"byte_end":523378,"line_start":118,"line_end":118,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":4325},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523403,"byte_end":523426,"line_start":119,"line_end":119,"column_start":25,"column_end":48},"name":"0","qualname":"::valid::ConstantError::UnresolvedComponent::0","value":"arena::Handle<Constant>","parent":{"krate":0,"index":4323},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4326},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523497,"byte_end":523511,"line_start":121,"line_end":121,"column_start":5,"column_end":19},"name":"UnresolvedSize","qualname":"::valid::ConstantError::UnresolvedSize","value":"ConstantError::UnresolvedSize(Handle<crate::Constant>)","parent":{"krate":0,"index":4307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The array size handle {0:?} can not be resolved\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523433,"byte_end":523492,"line_start":120,"line_end":120,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":4328},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523512,"byte_end":523535,"line_start":121,"line_end":121,"column_start":20,"column_end":43},"name":"0","qualname":"::valid::ConstantError::UnresolvedSize::0","value":"arena::Handle<Constant>","parent":{"krate":0,"index":4326},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4329},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523568,"byte_end":523575,"line_start":123,"line_end":123,"column_start":5,"column_end":12},"name":"Compose","qualname":"::valid::ConstantError::Compose","value":"ConstantError::Compose(ComposeError)","parent":{"krate":0,"index":4307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523542,"byte_end":523563,"line_start":122,"line_end":122,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":4331},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523584,"byte_end":523596,"line_start":123,"line_end":123,"column_start":21,"column_end":33},"name":"0","qualname":"::valid::ConstantError::Compose::0","value":"valid::compose::ComposeError","parent":{"krate":0,"index":4329},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523576,"byte_end":523583,"line_start":123,"line_end":123,"column_start":13,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":4307},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523231,"byte_end":523244,"line_start":115,"line_end":115,"column_start":10,"column_end":23},"name":"ConstantError","qualname":"::valid::ConstantError","value":"enum ConstantError {\n    InvalidType,\n    UnresolvedComponent(Handle<crate::Constant>),\n    UnresolvedSize(Handle<crate::Constant>),\n    Compose(ComposeError),\n}","parent":null,"children":[{"krate":0,"index":4321},{"krate":0,"index":4323},{"krate":0,"index":4326},{"krate":0,"index":4329}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4353},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523701,"byte_end":523709,"line_start":129,"line_end":129,"column_start":5,"column_end":13},"name":"Layouter","qualname":"::valid::ValidationError::Layouter","value":"ValidationError::Layouter(InvalidBaseType)","parent":{"krate":0,"index":4332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523675,"byte_end":523696,"line_start":128,"line_end":128,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":4355},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523718,"byte_end":523733,"line_start":129,"line_end":129,"column_start":22,"column_end":37},"name":"0","qualname":"::valid::ValidationError::Layouter::0","value":"proc::layouter::InvalidBaseType","parent":{"krate":0,"index":4353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523710,"byte_end":523717,"line_start":129,"line_end":129,"column_start":14,"column_end":21}}]},{"kind":"StructVariant","id":{"krate":0,"index":4356},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523792,"byte_end":523796,"line_start":131,"line_end":131,"column_start":5,"column_end":9},"name":"Type","qualname":"::valid::ValidationError::Type","value":"ValidationError::Type { handle, name, error }","parent":{"krate":0,"index":4332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Type {handle:?} '{name}' is invalid\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523740,"byte_end":523787,"line_start":130,"line_end":130,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4357},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523807,"byte_end":523813,"line_start":132,"line_end":132,"column_start":9,"column_end":15},"name":"handle","qualname":"::valid::ValidationError::Type::handle","value":"arena::Handle<Type>","parent":{"krate":0,"index":4356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4358},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523844,"byte_end":523848,"line_start":133,"line_end":133,"column_start":9,"column_end":13},"name":"name","qualname":"::valid::ValidationError::Type::name","value":"std::string::String","parent":{"krate":0,"index":4356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4359},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523884,"byte_end":523889,"line_start":135,"line_end":135,"column_start":9,"column_end":14},"name":"error","qualname":"::valid::ValidationError::Type::error","value":"valid::r#type::TypeError","parent":{"krate":0,"index":4356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"source","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523866,"byte_end":523875,"line_start":134,"line_end":134,"column_start":9,"column_end":18}}]},{"kind":"StructVariant","id":{"krate":0,"index":4360},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523969,"byte_end":523977,"line_start":138,"line_end":138,"column_start":5,"column_end":13},"name":"Constant","qualname":"::valid::ValidationError::Constant","value":"ValidationError::Constant { handle, name, error }","parent":{"krate":0,"index":4332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Constant {handle:?} '{name}' is invalid\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523913,"byte_end":523964,"line_start":137,"line_end":137,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":4361},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523988,"byte_end":523994,"line_start":139,"line_end":139,"column_start":9,"column_end":15},"name":"handle","qualname":"::valid::ValidationError::Constant::handle","value":"arena::Handle<Constant>","parent":{"krate":0,"index":4360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4362},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":524029,"byte_end":524033,"line_start":140,"line_end":140,"column_start":9,"column_end":13},"name":"name","qualname":"::valid::ValidationError::Constant::name","value":"std::string::String","parent":{"krate":0,"index":4360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4363},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":524069,"byte_end":524074,"line_start":142,"line_end":142,"column_start":9,"column_end":14},"name":"error","qualname":"::valid::ValidationError::Constant::error","value":"valid::ConstantError","parent":{"krate":0,"index":4360},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"source","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":524051,"byte_end":524060,"line_start":141,"line_end":141,"column_start":9,"column_end":18}}]},{"kind":"StructVariant","id":{"krate":0,"index":4364},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":524165,"byte_end":524179,"line_start":145,"line_end":145,"column_start":5,"column_end":19},"name":"GlobalVariable","qualname":"::valid::ValidationError::GlobalVariable","value":"ValidationError::GlobalVariable { handle, name, error }","parent":{"krate":0,"index":4332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Global variable {handle:?} '{name}' is invalid\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":524102,"byte_end":524160,"line_start":144,"line_end":144,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":4365},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":524190,"byte_end":524196,"line_start":146,"line_end":146,"column_start":9,"column_end":15},"name":"handle","qualname":"::valid::ValidationError::GlobalVariable::handle","value":"arena::Handle<GlobalVariable>","parent":{"krate":0,"index":4364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4366},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":524237,"byte_end":524241,"line_start":147,"line_end":147,"column_start":9,"column_end":13},"name":"name","qualname":"::valid::ValidationError::GlobalVariable::name","value":"std::string::String","parent":{"krate":0,"index":4364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4367},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":524277,"byte_end":524282,"line_start":149,"line_end":149,"column_start":9,"column_end":14},"name":"error","qualname":"::valid::ValidationError::GlobalVariable::error","value":"valid::interface::GlobalVariableError","parent":{"krate":0,"index":4364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"source","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":524259,"byte_end":524268,"line_start":148,"line_end":148,"column_start":9,"column_end":18}}]},{"kind":"StructVariant","id":{"krate":0,"index":4368},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":524372,"byte_end":524380,"line_start":152,"line_end":152,"column_start":5,"column_end":13},"name":"Function","qualname":"::valid::ValidationError::Function","value":"ValidationError::Function { handle, name, error }","parent":{"krate":0,"index":4332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Function {handle:?} '{name}' is invalid\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":524316,"byte_end":524367,"line_start":151,"line_end":151,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":4369},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":524391,"byte_end":524397,"line_start":153,"line_end":153,"column_start":9,"column_end":15},"name":"handle","qualname":"::valid::ValidationError::Function::handle","value":"arena::Handle<Function>","parent":{"krate":0,"index":4368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4370},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":524432,"byte_end":524436,"line_start":154,"line_end":154,"column_start":9,"column_end":13},"name":"name","qualname":"::valid::ValidationError::Function::name","value":"std::string::String","parent":{"krate":0,"index":4368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4371},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":524472,"byte_end":524477,"line_start":156,"line_end":156,"column_start":9,"column_end":14},"name":"error","qualname":"::valid::ValidationError::Function::error","value":"valid::function::FunctionError","parent":{"krate":0,"index":4368},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"source","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":524454,"byte_end":524463,"line_start":155,"line_end":155,"column_start":9,"column_end":18}}]},{"kind":"StructVariant","id":{"krate":0,"index":4372},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":524564,"byte_end":524574,"line_start":159,"line_end":159,"column_start":5,"column_end":15},"name":"EntryPoint","qualname":"::valid::ValidationError::EntryPoint","value":"ValidationError::EntryPoint { stage, name, error }","parent":{"krate":0,"index":4332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Entry point {name} at {stage:?} is invalid\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":524505,"byte_end":524559,"line_start":158,"line_end":158,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":4373},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":524585,"byte_end":524590,"line_start":160,"line_end":160,"column_start":9,"column_end":14},"name":"stage","qualname":"::valid::ValidationError::EntryPoint::stage","value":"ShaderStage","parent":{"krate":0,"index":4372},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4374},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":524620,"byte_end":524624,"line_start":161,"line_end":161,"column_start":9,"column_end":13},"name":"name","qualname":"::valid::ValidationError::EntryPoint::name","value":"std::string::String","parent":{"krate":0,"index":4372},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4375},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":524660,"byte_end":524665,"line_start":163,"line_end":163,"column_start":9,"column_end":14},"name":"error","qualname":"::valid::ValidationError::EntryPoint::error","value":"valid::interface::EntryPointError","parent":{"krate":0,"index":4372},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"source","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":524642,"byte_end":524651,"line_start":162,"line_end":162,"column_start":9,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4376},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":524731,"byte_end":524740,"line_start":166,"line_end":166,"column_start":5,"column_end":14},"name":"Corrupted","qualname":"::valid::ValidationError::Corrupted","value":"ValidationError::Corrupted","parent":{"krate":0,"index":4332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Module is corrupted\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":524695,"byte_end":524726,"line_start":165,"line_end":165,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":4332},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":523653,"byte_end":523668,"line_start":127,"line_end":127,"column_start":10,"column_end":25},"name":"ValidationError","qualname":"::valid::ValidationError","value":"enum ValidationError {\n    Layouter(InvalidBaseType),\n    Type {\n            handle: Handle<crate::Type>,\n            name: String,\n            error: TypeError,\n        },\n    Constant {\n            handle: Handle<crate::Constant>,\n            name: String,\n            error: ConstantError,\n        },\n    GlobalVariable {\n            handle: Handle<crate::GlobalVariable>,\n            name: String,\n            error: GlobalVariableError,\n        },\n    Function {\n            handle: Handle<crate::Function>,\n            name: String,\n            error: FunctionError,\n        },\n    EntryPoint {\n            stage: crate::ShaderStage,\n            name: String,\n            error: EntryPointError,\n        },\n    Corrupted,\n}","parent":null,"children":[{"krate":0,"index":4353},{"krate":0,"index":4356},{"krate":0,"index":4360},{"krate":0,"index":4364},{"krate":0,"index":4368},{"krate":0,"index":4372},{"krate":0,"index":4376}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1813},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":526172,"byte_end":526175,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"new","qualname":"<Validator>::new","value":"fn new(ValidationFlags, Capabilities) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new validator instance.\n","sig":null,"attributes":[{"value":"/ Construct a new validator instance.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":526121,"byte_end":526160,"line_start":212,"line_end":212,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1817},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":528182,"byte_end":528190,"line_start":268,"line_end":268,"column_start":12,"column_end":20},"name":"validate","qualname":"<Validator>::validate","value":"fn validate(&mut Self, &crate::Module) -> Result<ModuleInfo, ValidationError>","parent":null,"children":[],"decl_id":null,"docs":" Check the given module to be valid.\n","sig":null,"attributes":[{"value":"/ Check the given module to be valid.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":528131,"byte_end":528170,"line_start":267,"line_end":267,"column_start":5,"column_end":44}}]},{"kind":"Const","id":{"krate":0,"index":1848},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":9837,"byte_end":9847,"line_start":230,"line_end":230,"column_start":11,"column_end":21},"name":"BOOL_WIDTH","qualname":"::BOOL_WIDTH","value":"Bytes","parent":null,"children":[],"decl_id":null,"docs":" Width of a boolean type, in bytes.\n","sig":null,"attributes":[{"value":"/ Width of a boolean type, in bytes.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":9788,"byte_end":9826,"line_start":229,"line_end":229,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":1849},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":9932,"byte_end":9943,"line_start":233,"line_end":233,"column_start":10,"column_end":21},"name":"FastHashMap","qualname":"::FastHashMap","value":"HashMap<K, T, BuildHasherDefault<fxhash::FxHasher>>","parent":null,"children":[],"decl_id":null,"docs":" Hash map that is faster but not resilient to DoS attacks.\n","sig":null,"attributes":[{"value":"/ Hash map that is faster but not resilient to DoS attacks.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":9861,"byte_end":9922,"line_start":232,"line_end":232,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":1852},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":10076,"byte_end":10087,"line_start":235,"line_end":235,"column_start":10,"column_end":21},"name":"FastHashSet","qualname":"::FastHashSet","value":"HashSet<K, BuildHasherDefault<fxhash::FxHasher>>","parent":null,"children":[],"decl_id":null,"docs":" Hash set that is faster but not resilient to DoS attacks.\n","sig":null,"attributes":[{"value":"/ Hash set that is faster but not resilient to DoS attacks.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":10005,"byte_end":10066,"line_start":234,"line_end":234,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":4378},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":11130,"byte_end":11144,"line_start":255,"line_end":255,"column_start":12,"column_end":26},"name":"EarlyDepthTest","qualname":"::EarlyDepthTest","value":"EarlyDepthTest {  }","parent":null,"children":[{"krate":0,"index":4379}],"decl_id":null,"docs":" Early fragment tests. In a standard situation if a driver determines that it is possible to\n switch on early depth test it will. Typical situations when early depth test is switched off:\n   - Calling ```discard``` in a shader.\n   - Writing to the depth buffer, unless ConservativeDepth is enabled.","sig":null,"attributes":[{"value":"/ Early fragment tests. In a standard situation if a driver determines that it is possible to","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":10280,"byte_end":10375,"line_start":240,"line_end":240,"column_start":1,"column_end":96}},{"value":"/ switch on early depth test it will. Typical situations when early depth test is switched off:","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":10376,"byte_end":10473,"line_start":241,"line_end":241,"column_start":1,"column_end":98}},{"value":"/   - Calling ```discard``` in a shader.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":10474,"byte_end":10516,"line_start":242,"line_end":242,"column_start":1,"column_end":43}},{"value":"/   - Writing to the depth buffer, unless ConservativeDepth is enabled.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":10517,"byte_end":10590,"line_start":243,"line_end":243,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":10591,"byte_end":10594,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ SPIR-V: ExecutionMode EarlyFragmentTests","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":10595,"byte_end":10639,"line_start":245,"line_end":245,"column_start":1,"column_end":45}},{"value":"/ In GLSL: layout(early_fragment_tests) in;","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":10640,"byte_end":10685,"line_start":246,"line_end":246,"column_start":1,"column_end":46}},{"value":"/ HLSL: Attribute earlydepthstencil","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":10686,"byte_end":10723,"line_start":247,"line_end":247,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":10724,"byte_end":10727,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ For more, see:","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":10728,"byte_end":10746,"line_start":249,"line_end":249,"column_start":1,"column_end":19}},{"value":"/   - <https://www.khronos.org/opengl/wiki/Early_Fragment_Test#Explicit_specification>","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":10747,"byte_end":10835,"line_start":250,"line_end":250,"column_start":1,"column_end":89}},{"value":"/   - <https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/sm5-attributes-earlydepthstencil>","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":10836,"byte_end":10938,"line_start":251,"line_end":251,"column_start":1,"column_end":103}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4400},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":12060,"byte_end":12072,"line_start":273,"line_end":273,"column_start":5,"column_end":17},"name":"GreaterEqual","qualname":"::ConservativeDepth::GreaterEqual","value":"ConservativeDepth::GreaterEqual","parent":{"krate":0,"index":4399},"children":[],"decl_id":null,"docs":" Shader may rewrite depth only with a value greater than calculated;\n","sig":null,"attributes":[{"value":"/ Shader may rewrite depth only with a value greater than calculated;","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":11984,"byte_end":12055,"line_start":272,"line_end":272,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4402},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":12184,"byte_end":12193,"line_start":276,"line_end":276,"column_start":5,"column_end":14},"name":"LessEqual","qualname":"::ConservativeDepth::LessEqual","value":"ConservativeDepth::LessEqual","parent":{"krate":0,"index":4399},"children":[],"decl_id":null,"docs":" Shader may rewrite depth smaller than one that would have been written without the modification.\n","sig":null,"attributes":[{"value":"/ Shader may rewrite depth smaller than one that would have been written without the modification.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":12079,"byte_end":12179,"line_start":275,"line_end":275,"column_start":5,"column_end":105}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4404},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":12244,"byte_end":12253,"line_start":279,"line_end":279,"column_start":5,"column_end":14},"name":"Unchanged","qualname":"::ConservativeDepth::Unchanged","value":"ConservativeDepth::Unchanged","parent":{"krate":0,"index":4399},"children":[],"decl_id":null,"docs":" Shader may not rewrite depth value.\n","sig":null,"attributes":[{"value":"/ Shader may not rewrite depth value.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":12200,"byte_end":12239,"line_start":278,"line_end":278,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":4399},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":11960,"byte_end":11977,"line_start":271,"line_end":271,"column_start":10,"column_end":27},"name":"ConservativeDepth","qualname":"::ConservativeDepth","value":"enum ConservativeDepth { GreaterEqual, LessEqual, Unchanged, }","parent":null,"children":[{"krate":0,"index":4400},{"krate":0,"index":4402},{"krate":0,"index":4404}],"decl_id":null,"docs":" Enables adjusting depth without disabling early Z.","sig":null,"attributes":[{"value":"/ Enables adjusting depth without disabling early Z.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":11194,"byte_end":11248,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":11249,"byte_end":11252,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ SPIR-V: ExecutionMode DepthGreater/DepthLess/DepthUnchanged","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":11253,"byte_end":11316,"line_start":260,"line_end":260,"column_start":1,"column_end":64}},{"value":"/ GLSL: layout (depth_<greater/less/unchanged/any>) out float gl_FragDepth;","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":11317,"byte_end":11394,"line_start":261,"line_end":261,"column_start":1,"column_end":78}},{"value":"/   - ```depth_any``` option behaves as if the layout qualifier was not present.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":11395,"byte_end":11477,"line_start":262,"line_end":262,"column_start":1,"column_end":83}},{"value":"/ HLSL: SV_Depth/SV_DepthGreaterEqual/SV_DepthLessEqual","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":11478,"byte_end":11535,"line_start":263,"line_end":263,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":11536,"byte_end":11539,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ For more, see:","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":11540,"byte_end":11558,"line_start":265,"line_end":265,"column_start":1,"column_end":19}},{"value":"/   - <https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_conservative_depth.txt>","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":11559,"byte_end":11650,"line_start":266,"line_end":266,"column_start":1,"column_end":92}},{"value":"/   - <https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-semantics#system-value-semantics>","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":11651,"byte_end":11770,"line_start":267,"line_end":267,"column_start":1,"column_end":120}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4425},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":12558,"byte_end":12564,"line_start":288,"line_end":288,"column_start":5,"column_end":11},"name":"Vertex","qualname":"::ShaderStage::Vertex","value":"ShaderStage::Vertex","parent":{"krate":0,"index":4424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4427},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":12570,"byte_end":12578,"line_start":289,"line_end":289,"column_start":5,"column_end":13},"name":"Fragment","qualname":"::ShaderStage::Fragment","value":"ShaderStage::Fragment","parent":{"krate":0,"index":4424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4429},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":12584,"byte_end":12591,"line_start":290,"line_end":290,"column_start":5,"column_end":12},"name":"Compute","qualname":"::ShaderStage::Compute","value":"ShaderStage::Compute","parent":{"krate":0,"index":4424},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4424},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":12540,"byte_end":12551,"line_start":287,"line_end":287,"column_start":10,"column_end":21},"name":"ShaderStage","qualname":"::ShaderStage","value":"enum ShaderStage { Vertex, Fragment, Compute, }","parent":null,"children":[{"krate":0,"index":4425},{"krate":0,"index":4427},{"krate":0,"index":4429}],"decl_id":null,"docs":" Stage of the programmable pipeline.\n","sig":null,"attributes":[{"value":"/ Stage of the programmable pipeline.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":12258,"byte_end":12297,"line_start":282,"line_end":282,"column_start":1,"column_end":40}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":12478,"byte_end":12500,"line_start":286,"line_end":286,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4450},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":12865,"byte_end":12873,"line_start":299,"line_end":299,"column_start":5,"column_end":13},"name":"Function","qualname":"::StorageClass::Function","value":"StorageClass::Function","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Function locals.\n","sig":null,"attributes":[{"value":"/ Function locals.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":12840,"byte_end":12860,"line_start":298,"line_end":298,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4452},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":12926,"byte_end":12933,"line_start":301,"line_end":301,"column_start":5,"column_end":12},"name":"Private","qualname":"::StorageClass::Private","value":"StorageClass::Private","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Private data, per invocation, mutable.\n","sig":null,"attributes":[{"value":"/ Private data, per invocation, mutable.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":12879,"byte_end":12921,"line_start":300,"line_end":300,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4454},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":12979,"byte_end":12988,"line_start":303,"line_end":303,"column_start":5,"column_end":14},"name":"WorkGroup","qualname":"::StorageClass::WorkGroup","value":"StorageClass::WorkGroup","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Workgroup shared data, mutable.\n","sig":null,"attributes":[{"value":"/ Workgroup shared data, mutable.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":12939,"byte_end":12974,"line_start":302,"line_end":302,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4456},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13023,"byte_end":13030,"line_start":305,"line_end":305,"column_start":5,"column_end":12},"name":"Uniform","qualname":"::StorageClass::Uniform","value":"StorageClass::Uniform","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Uniform buffer data.\n","sig":null,"attributes":[{"value":"/ Uniform buffer data.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":12994,"byte_end":13018,"line_start":304,"line_end":304,"column_start":5,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":4458},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13086,"byte_end":13093,"line_start":307,"line_end":307,"column_start":5,"column_end":12},"name":"Storage","qualname":"::StorageClass::Storage","value":"StorageClass::Storage { access }","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Storage buffer data, potentially mutable.\n","sig":null,"attributes":[{"value":"/ Storage buffer data, potentially mutable.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13036,"byte_end":13081,"line_start":306,"line_end":306,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":4459},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13096,"byte_end":13102,"line_start":307,"line_end":307,"column_start":15,"column_end":21},"name":"access","qualname":"::StorageClass::Storage::access","value":"StorageAccess","parent":{"krate":0,"index":4458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4460},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13178,"byte_end":13184,"line_start":309,"line_end":309,"column_start":5,"column_end":11},"name":"Handle","qualname":"::StorageClass::Handle","value":"StorageClass::Handle","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Opaque handles, such as samplers and images.\n","sig":null,"attributes":[{"value":"/ Opaque handles, such as samplers and images.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13125,"byte_end":13173,"line_start":308,"line_end":308,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4462},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13214,"byte_end":13226,"line_start":311,"line_end":311,"column_start":5,"column_end":17},"name":"PushConstant","qualname":"::StorageClass::PushConstant","value":"StorageClass::PushConstant","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":" Push constants.\n","sig":null,"attributes":[{"value":"/ Push constants.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13190,"byte_end":13209,"line_start":310,"line_end":310,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":4449},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":12821,"byte_end":12833,"line_start":297,"line_end":297,"column_start":10,"column_end":22},"name":"StorageClass","qualname":"::StorageClass","value":"enum StorageClass {\n    Function,\n    Private,\n    WorkGroup,\n    Uniform,\n    Storage {\n            access: StorageAccess,\n        },\n    Handle,\n    PushConstant,\n}","parent":null,"children":[{"krate":0,"index":4450},{"krate":0,"index":4452},{"krate":0,"index":4454},{"krate":0,"index":4456},{"krate":0,"index":4458},{"krate":0,"index":4460},{"krate":0,"index":4462}],"decl_id":null,"docs":" Class of storage for variables.\n","sig":null,"attributes":[{"value":"/ Class of storage for variables.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":12596,"byte_end":12631,"line_start":293,"line_end":293,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4484},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13467,"byte_end":13475,"line_start":319,"line_end":319,"column_start":5,"column_end":13},"name":"Position","qualname":"::BuiltIn::Position","value":"BuiltIn::Position","parent":{"krate":0,"index":4483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4486},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13481,"byte_end":13490,"line_start":320,"line_end":320,"column_start":5,"column_end":14},"name":"ViewIndex","qualname":"::BuiltIn::ViewIndex","value":"BuiltIn::ViewIndex","parent":{"krate":0,"index":4483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4488},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13510,"byte_end":13522,"line_start":322,"line_end":322,"column_start":5,"column_end":17},"name":"BaseInstance","qualname":"::BuiltIn::BaseInstance","value":"BuiltIn::BaseInstance","parent":{"krate":0,"index":4483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4490},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13528,"byte_end":13538,"line_start":323,"line_end":323,"column_start":5,"column_end":15},"name":"BaseVertex","qualname":"::BuiltIn::BaseVertex","value":"BuiltIn::BaseVertex","parent":{"krate":0,"index":4483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4492},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13544,"byte_end":13556,"line_start":324,"line_end":324,"column_start":5,"column_end":17},"name":"ClipDistance","qualname":"::BuiltIn::ClipDistance","value":"BuiltIn::ClipDistance","parent":{"krate":0,"index":4483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4494},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13562,"byte_end":13574,"line_start":325,"line_end":325,"column_start":5,"column_end":17},"name":"CullDistance","qualname":"::BuiltIn::CullDistance","value":"BuiltIn::CullDistance","parent":{"krate":0,"index":4483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4496},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13580,"byte_end":13593,"line_start":326,"line_end":326,"column_start":5,"column_end":18},"name":"InstanceIndex","qualname":"::BuiltIn::InstanceIndex","value":"BuiltIn::InstanceIndex","parent":{"krate":0,"index":4483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4498},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13599,"byte_end":13608,"line_start":327,"line_end":327,"column_start":5,"column_end":14},"name":"PointSize","qualname":"::BuiltIn::PointSize","value":"BuiltIn::PointSize","parent":{"krate":0,"index":4483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4500},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13614,"byte_end":13625,"line_start":328,"line_end":328,"column_start":5,"column_end":16},"name":"VertexIndex","qualname":"::BuiltIn::VertexIndex","value":"BuiltIn::VertexIndex","parent":{"krate":0,"index":4483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4502},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13647,"byte_end":13656,"line_start":330,"line_end":330,"column_start":5,"column_end":14},"name":"FragDepth","qualname":"::BuiltIn::FragDepth","value":"BuiltIn::FragDepth","parent":{"krate":0,"index":4483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4504},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13662,"byte_end":13673,"line_start":331,"line_end":331,"column_start":5,"column_end":16},"name":"FrontFacing","qualname":"::BuiltIn::FrontFacing","value":"BuiltIn::FrontFacing","parent":{"krate":0,"index":4483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4506},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13679,"byte_end":13693,"line_start":332,"line_end":332,"column_start":5,"column_end":19},"name":"PrimitiveIndex","qualname":"::BuiltIn::PrimitiveIndex","value":"BuiltIn::PrimitiveIndex","parent":{"krate":0,"index":4483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4508},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13699,"byte_end":13710,"line_start":333,"line_end":333,"column_start":5,"column_end":16},"name":"SampleIndex","qualname":"::BuiltIn::SampleIndex","value":"BuiltIn::SampleIndex","parent":{"krate":0,"index":4483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4510},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13716,"byte_end":13726,"line_start":334,"line_end":334,"column_start":5,"column_end":15},"name":"SampleMask","qualname":"::BuiltIn::SampleMask","value":"BuiltIn::SampleMask","parent":{"krate":0,"index":4483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4512},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13747,"byte_end":13765,"line_start":336,"line_end":336,"column_start":5,"column_end":23},"name":"GlobalInvocationId","qualname":"::BuiltIn::GlobalInvocationId","value":"BuiltIn::GlobalInvocationId","parent":{"krate":0,"index":4483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4514},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13771,"byte_end":13788,"line_start":337,"line_end":337,"column_start":5,"column_end":22},"name":"LocalInvocationId","qualname":"::BuiltIn::LocalInvocationId","value":"BuiltIn::LocalInvocationId","parent":{"krate":0,"index":4483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4516},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13794,"byte_end":13814,"line_start":338,"line_end":338,"column_start":5,"column_end":25},"name":"LocalInvocationIndex","qualname":"::BuiltIn::LocalInvocationIndex","value":"BuiltIn::LocalInvocationIndex","parent":{"krate":0,"index":4483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4518},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13820,"byte_end":13831,"line_start":339,"line_end":339,"column_start":5,"column_end":16},"name":"WorkGroupId","qualname":"::BuiltIn::WorkGroupId","value":"BuiltIn::WorkGroupId","parent":{"krate":0,"index":4483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4520},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13837,"byte_end":13850,"line_start":340,"line_end":340,"column_start":5,"column_end":18},"name":"WorkGroupSize","qualname":"::BuiltIn::WorkGroupSize","value":"BuiltIn::WorkGroupSize","parent":{"krate":0,"index":4483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4522},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13856,"byte_end":13869,"line_start":341,"line_end":341,"column_start":5,"column_end":18},"name":"NumWorkGroups","qualname":"::BuiltIn::NumWorkGroups","value":"BuiltIn::NumWorkGroups","parent":{"krate":0,"index":4483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4483},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13453,"byte_end":13460,"line_start":318,"line_end":318,"column_start":10,"column_end":17},"name":"BuiltIn","qualname":"::BuiltIn","value":"enum BuiltIn {\n    Position,\n    ViewIndex,\n    BaseInstance,\n    BaseVertex,\n    ClipDistance,\n    CullDistance,\n    InstanceIndex,\n    PointSize,\n    VertexIndex,\n    FragDepth,\n    FrontFacing,\n    PrimitiveIndex,\n    SampleIndex,\n    SampleMask,\n    GlobalInvocationId,\n    LocalInvocationId,\n    LocalInvocationIndex,\n    WorkGroupId,\n    WorkGroupSize,\n    NumWorkGroups,\n}","parent":null,"children":[{"krate":0,"index":4484},{"krate":0,"index":4486},{"krate":0,"index":4488},{"krate":0,"index":4490},{"krate":0,"index":4492},{"krate":0,"index":4494},{"krate":0,"index":4496},{"krate":0,"index":4498},{"krate":0,"index":4500},{"krate":0,"index":4502},{"krate":0,"index":4504},{"krate":0,"index":4506},{"krate":0,"index":4508},{"krate":0,"index":4510},{"krate":0,"index":4512},{"krate":0,"index":4514},{"krate":0,"index":4516},{"krate":0,"index":4518},{"krate":0,"index":4520},{"krate":0,"index":4522}],"decl_id":null,"docs":" Built-in inputs and outputs.\n","sig":null,"attributes":[{"value":"/ Built-in inputs and outputs.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13231,"byte_end":13263,"line_start":314,"line_end":314,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":1855},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13915,"byte_end":13920,"line_start":345,"line_end":345,"column_start":10,"column_end":15},"name":"Bytes","qualname":"::Bytes","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Number of bytes per scalar.\n","sig":null,"attributes":[{"value":"/ Number of bytes per scalar.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13874,"byte_end":13905,"line_start":344,"line_end":344,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4543},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":14202,"byte_end":14204,"line_start":354,"line_end":354,"column_start":5,"column_end":7},"name":"Bi","qualname":"::VectorSize::Bi","value":"VectorSize::Bi","parent":{"krate":0,"index":4542},"children":[],"decl_id":null,"docs":" 2D vector\n","sig":null,"attributes":[{"value":"/ 2D vector","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":14184,"byte_end":14197,"line_start":353,"line_end":353,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4546},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":14232,"byte_end":14235,"line_start":356,"line_end":356,"column_start":5,"column_end":8},"name":"Tri","qualname":"::VectorSize::Tri","value":"VectorSize::Tri","parent":{"krate":0,"index":4542},"children":[],"decl_id":null,"docs":" 3D vector\n","sig":null,"attributes":[{"value":"/ 3D vector","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":14214,"byte_end":14227,"line_start":355,"line_end":355,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4549},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":14263,"byte_end":14267,"line_start":358,"line_end":358,"column_start":5,"column_end":9},"name":"Quad","qualname":"::VectorSize::Quad","value":"VectorSize::Quad","parent":{"krate":0,"index":4542},"children":[],"decl_id":null,"docs":" 4D vector\n","sig":null,"attributes":[{"value":"/ 4D vector","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":14245,"byte_end":14258,"line_start":357,"line_end":357,"column_start":5,"column_end":18}}]},{"kind":"Enum","id":{"krate":0,"index":4542},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":14167,"byte_end":14177,"line_start":352,"line_end":352,"column_start":10,"column_end":20},"name":"VectorSize","qualname":"::VectorSize","value":"enum VectorSize { Bi = , Tri = , Quad = , }","parent":null,"children":[{"krate":0,"index":4543},{"krate":0,"index":4546},{"krate":0,"index":4549}],"decl_id":null,"docs":" Number of components in a vector.\n","sig":null,"attributes":[{"value":"/ Number of components in a vector.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13928,"byte_end":13965,"line_start":347,"line_end":347,"column_start":1,"column_end":38}},{"value":"repr(u8)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":13966,"byte_end":13977,"line_start":348,"line_end":348,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4571},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":14556,"byte_end":14560,"line_start":368,"line_end":368,"column_start":5,"column_end":9},"name":"Sint","qualname":"::ScalarKind::Sint","value":"ScalarKind::Sint","parent":{"krate":0,"index":4570},"children":[],"decl_id":null,"docs":" Signed integer type.\n","sig":null,"attributes":[{"value":"/ Signed integer type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":14527,"byte_end":14551,"line_start":367,"line_end":367,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4573},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":14597,"byte_end":14601,"line_start":370,"line_end":370,"column_start":5,"column_end":9},"name":"Uint","qualname":"::ScalarKind::Uint","value":"ScalarKind::Uint","parent":{"krate":0,"index":4570},"children":[],"decl_id":null,"docs":" Unsigned integer type.\n","sig":null,"attributes":[{"value":"/ Unsigned integer type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":14566,"byte_end":14592,"line_start":369,"line_end":369,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4575},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":14636,"byte_end":14641,"line_start":372,"line_end":372,"column_start":5,"column_end":10},"name":"Float","qualname":"::ScalarKind::Float","value":"ScalarKind::Float","parent":{"krate":0,"index":4570},"children":[],"decl_id":null,"docs":" Floating point type.\n","sig":null,"attributes":[{"value":"/ Floating point type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":14607,"byte_end":14631,"line_start":371,"line_end":371,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4577},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":14669,"byte_end":14673,"line_start":374,"line_end":374,"column_start":5,"column_end":9},"name":"Bool","qualname":"::ScalarKind::Bool","value":"ScalarKind::Bool","parent":{"krate":0,"index":4570},"children":[],"decl_id":null,"docs":" Boolean type.\n","sig":null,"attributes":[{"value":"/ Boolean type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":14647,"byte_end":14664,"line_start":373,"line_end":373,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":4570},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":14510,"byte_end":14520,"line_start":366,"line_end":366,"column_start":10,"column_end":20},"name":"ScalarKind","qualname":"::ScalarKind","value":"enum ScalarKind { Sint, Uint, Float, Bool, }","parent":null,"children":[{"krate":0,"index":4571},{"krate":0,"index":4573},{"krate":0,"index":4575},{"krate":0,"index":4577}],"decl_id":null,"docs":" Primitive type for a scalar.\n","sig":null,"attributes":[{"value":"/ Primitive type for a scalar.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":14276,"byte_end":14308,"line_start":361,"line_end":361,"column_start":1,"column_end":33}},{"value":"repr(u8)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":14309,"byte_end":14320,"line_start":362,"line_end":362,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4598},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":14953,"byte_end":14961,"line_start":384,"line_end":384,"column_start":5,"column_end":13},"name":"Constant","qualname":"::ArraySize::Constant","value":"ArraySize::Constant(Handle<Constant>)","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":" The array size is constant.\n","sig":null,"attributes":[{"value":"/ The array size is constant.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":14917,"byte_end":14948,"line_start":383,"line_end":383,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":4600},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":14962,"byte_end":14978,"line_start":384,"line_end":384,"column_start":14,"column_end":30},"name":"0","qualname":"::ArraySize::Constant::0","value":"arena::Handle<Constant>","parent":{"krate":0,"index":4598},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4601},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":15031,"byte_end":15038,"line_start":386,"line_end":386,"column_start":5,"column_end":12},"name":"Dynamic","qualname":"::ArraySize::Dynamic","value":"ArraySize::Dynamic","parent":{"krate":0,"index":4597},"children":[],"decl_id":null,"docs":" The array size can change at runtime.\n","sig":null,"attributes":[{"value":"/ The array size can change at runtime.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":14985,"byte_end":15026,"line_start":385,"line_end":385,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":4597},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":14901,"byte_end":14910,"line_start":382,"line_end":382,"column_start":10,"column_end":19},"name":"ArraySize","qualname":"::ArraySize","value":"enum ArraySize { Constant(Handle<Constant>), Dynamic, }","parent":null,"children":[{"krate":0,"index":4598},{"krate":0,"index":4601}],"decl_id":null,"docs":" Size of an array.\n","sig":null,"attributes":[{"value":"/ Size of an array.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":14678,"byte_end":14699,"line_start":377,"line_end":377,"column_start":1,"column_end":22}},{"value":"repr(u8)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":14700,"byte_end":14711,"line_start":378,"line_end":378,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4623},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":15427,"byte_end":15438,"line_start":396,"line_end":396,"column_start":5,"column_end":16},"name":"Perspective","qualname":"::Interpolation::Perspective","value":"Interpolation::Perspective","parent":{"krate":0,"index":4622},"children":[],"decl_id":null,"docs":" The value will be interpolated in a perspective-correct fashion.\n Also known as \"smooth\" in glsl.\n","sig":null,"attributes":[{"value":"/ The value will be interpolated in a perspective-correct fashion.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":15314,"byte_end":15382,"line_start":394,"line_end":394,"column_start":5,"column_end":73}},{"value":"/ Also known as \"smooth\" in glsl.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":15387,"byte_end":15422,"line_start":395,"line_end":395,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4625},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":15584,"byte_end":15590,"line_start":400,"line_end":400,"column_start":5,"column_end":11},"name":"Linear","qualname":"::Interpolation::Linear","value":"Interpolation::Linear","parent":{"krate":0,"index":4622},"children":[],"decl_id":null,"docs":" Indicates that linear, non-perspective, correct\n interpolation must be used.\n Also known as \"no_perspective\" in glsl.\n","sig":null,"attributes":[{"value":"/ Indicates that linear, non-perspective, correct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":15444,"byte_end":15495,"line_start":397,"line_end":397,"column_start":5,"column_end":56}},{"value":"/ interpolation must be used.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":15500,"byte_end":15531,"line_start":398,"line_end":398,"column_start":5,"column_end":36}},{"value":"/ Also known as \"no_perspective\" in glsl.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":15536,"byte_end":15579,"line_start":399,"line_end":399,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4627},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":15655,"byte_end":15659,"line_start":402,"line_end":402,"column_start":5,"column_end":9},"name":"Flat","qualname":"::Interpolation::Flat","value":"Interpolation::Flat","parent":{"krate":0,"index":4622},"children":[],"decl_id":null,"docs":" Indicates that no interpolation will be performed.\n","sig":null,"attributes":[{"value":"/ Indicates that no interpolation will be performed.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":15596,"byte_end":15650,"line_start":401,"line_end":401,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":4622},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":15294,"byte_end":15307,"line_start":393,"line_end":393,"column_start":10,"column_end":23},"name":"Interpolation","qualname":"::Interpolation","value":"enum Interpolation { Perspective, Linear, Flat, }","parent":null,"children":[{"krate":0,"index":4623},{"krate":0,"index":4625},{"krate":0,"index":4627}],"decl_id":null,"docs":" The interpolation qualifier of a binding or struct field.\n","sig":null,"attributes":[{"value":"/ The interpolation qualifier of a binding or struct field.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":15043,"byte_end":15104,"line_start":389,"line_end":389,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4648},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":15984,"byte_end":15990,"line_start":411,"line_end":411,"column_start":5,"column_end":11},"name":"Center","qualname":"::Sampling::Center","value":"Sampling::Center","parent":{"krate":0,"index":4647},"children":[],"decl_id":null,"docs":" Interpolate the value at the center of the pixel.\n","sig":null,"attributes":[{"value":"/ Interpolate the value at the center of the pixel.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":15926,"byte_end":15979,"line_start":410,"line_end":410,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4650},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":16208,"byte_end":16216,"line_start":416,"line_end":416,"column_start":5,"column_end":13},"name":"Centroid","qualname":"::Sampling::Centroid","value":"Sampling::Centroid","parent":{"krate":0,"index":4647},"children":[],"decl_id":null,"docs":" Interpolate the value at a point that lies within all samples covered by\n the fragment within the current primitive. In multisampling, use a\n single value for all samples in the primitive.\n","sig":null,"attributes":[{"value":"/ Interpolate the value at a point that lies within all samples covered by","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":15997,"byte_end":16073,"line_start":413,"line_end":413,"column_start":5,"column_end":81}},{"value":"/ the fragment within the current primitive. In multisampling, use a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":16078,"byte_end":16148,"line_start":414,"line_end":414,"column_start":5,"column_end":75}},{"value":"/ single value for all samples in the primitive.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":16153,"byte_end":16203,"line_start":415,"line_end":415,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4652},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":16348,"byte_end":16354,"line_start":420,"line_end":420,"column_start":5,"column_end":11},"name":"Sample","qualname":"::Sampling::Sample","value":"Sampling::Sample","parent":{"krate":0,"index":4647},"children":[],"decl_id":null,"docs":" Interpolate the value at each sample location. In multisampling, invoke\n the fragment shader once per sample.\n","sig":null,"attributes":[{"value":"/ Interpolate the value at each sample location. In multisampling, invoke","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":16223,"byte_end":16298,"line_start":418,"line_end":418,"column_start":5,"column_end":80}},{"value":"/ the fragment shader once per sample.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":16303,"byte_end":16343,"line_start":419,"line_end":419,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":4647},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":15911,"byte_end":15919,"line_start":409,"line_end":409,"column_start":10,"column_end":18},"name":"Sampling","qualname":"::Sampling","value":"enum Sampling { Center, Centroid, Sample, }","parent":null,"children":[{"krate":0,"index":4648},{"krate":0,"index":4650},{"krate":0,"index":4652}],"decl_id":null,"docs":" The sampling qualifiers of a binding or struct field.\n","sig":null,"attributes":[{"value":"/ The sampling qualifiers of a binding or struct field.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":15664,"byte_end":15721,"line_start":405,"line_end":405,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":4672},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":16643,"byte_end":16655,"line_start":428,"line_end":428,"column_start":12,"column_end":24},"name":"StructMember","qualname":"::StructMember","value":"StructMember { name, ty, binding, offset }","parent":null,"children":[{"krate":0,"index":4673},{"krate":0,"index":4674},{"krate":0,"index":4675},{"krate":0,"index":4676}],"decl_id":null,"docs":" Member of a user-defined structure.\n","sig":null,"attributes":[{"value":"/ Member of a user-defined structure.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":16359,"byte_end":16398,"line_start":423,"line_end":423,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":4673},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":16666,"byte_end":16670,"line_start":429,"line_end":429,"column_start":9,"column_end":13},"name":"name","qualname":"::StructMember::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":4672},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4674},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":16723,"byte_end":16725,"line_start":431,"line_end":431,"column_start":9,"column_end":11},"name":"ty","qualname":"::StructMember::ty","value":"arena::Handle<Type>","parent":{"krate":0,"index":4672},"children":[],"decl_id":null,"docs":" Type of the field.\n","sig":null,"attributes":[{"value":"/ Type of the field.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":16692,"byte_end":16714,"line_start":430,"line_end":430,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":4675},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":16795,"byte_end":16802,"line_start":433,"line_end":433,"column_start":9,"column_end":16},"name":"binding","qualname":"::StructMember::binding","value":"std::option::Option<Binding>","parent":{"krate":0,"index":4672},"children":[],"decl_id":null,"docs":" For I/O structs, defines the binding.\n","sig":null,"attributes":[{"value":"/ For I/O structs, defines the binding.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":16745,"byte_end":16786,"line_start":432,"line_end":432,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":4676},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":16880,"byte_end":16886,"line_start":435,"line_end":435,"column_start":9,"column_end":15},"name":"offset","qualname":"::StructMember::offset","value":"u32","parent":{"krate":0,"index":4672},"children":[],"decl_id":null,"docs":" Offset from the beginning from the struct.\n","sig":null,"attributes":[{"value":"/ Offset from the beginning from the struct.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":16825,"byte_end":16871,"line_start":434,"line_end":434,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4692},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":17166,"byte_end":17168,"line_start":444,"line_end":444,"column_start":5,"column_end":7},"name":"D1","qualname":"::ImageDimension::D1","value":"ImageDimension::D1","parent":{"krate":0,"index":4691},"children":[],"decl_id":null,"docs":" 1D image\n","sig":null,"attributes":[{"value":"/ 1D image","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":17149,"byte_end":17161,"line_start":443,"line_end":443,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4694},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":17191,"byte_end":17193,"line_start":446,"line_end":446,"column_start":5,"column_end":7},"name":"D2","qualname":"::ImageDimension::D2","value":"ImageDimension::D2","parent":{"krate":0,"index":4691},"children":[],"decl_id":null,"docs":" 2D image\n","sig":null,"attributes":[{"value":"/ 2D image","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":17174,"byte_end":17186,"line_start":445,"line_end":445,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4696},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":17216,"byte_end":17218,"line_start":448,"line_end":448,"column_start":5,"column_end":7},"name":"D3","qualname":"::ImageDimension::D3","value":"ImageDimension::D3","parent":{"krate":0,"index":4691},"children":[],"decl_id":null,"docs":" 3D image\n","sig":null,"attributes":[{"value":"/ 3D image","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":17199,"byte_end":17211,"line_start":447,"line_end":447,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4698},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":17241,"byte_end":17245,"line_start":450,"line_end":450,"column_start":5,"column_end":9},"name":"Cube","qualname":"::ImageDimension::Cube","value":"ImageDimension::Cube","parent":{"krate":0,"index":4691},"children":[],"decl_id":null,"docs":" Cube map\n","sig":null,"attributes":[{"value":"/ Cube map","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":17224,"byte_end":17236,"line_start":449,"line_end":449,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":4691},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":17128,"byte_end":17142,"line_start":442,"line_end":442,"column_start":10,"column_end":24},"name":"ImageDimension","qualname":"::ImageDimension","value":"enum ImageDimension { D1, D2, D3, Cube, }","parent":null,"children":[{"krate":0,"index":4692},{"krate":0,"index":4694},{"krate":0,"index":4696},{"krate":0,"index":4698}],"decl_id":null,"docs":" The number of dimensions an image has.\n","sig":null,"attributes":[{"value":"/ The number of dimensions an image has.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":16896,"byte_end":16938,"line_start":438,"line_end":438,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":4720},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":17465,"byte_end":17478,"line_start":458,"line_end":458,"column_start":16,"column_end":29},"name":"StorageAccess","qualname":"::StorageAccess","value":"StorageAccess {  }","parent":null,"children":[{"krate":0,"index":4721}],"decl_id":null,"docs":" Flags describing an image.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4754},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":17558,"byte_end":17562,"line_start":460,"line_end":460,"column_start":15,"column_end":19},"name":"LOAD","qualname":"::StorageAccess::LOAD","value":"Self","parent":{"krate":0,"index":4753},"children":[],"decl_id":null,"docs":" Storage can be used as a source for load ops.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4755},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":17643,"byte_end":17648,"line_start":462,"line_end":462,"column_start":15,"column_end":20},"name":"STORE","qualname":"::StorageAccess::STORE","value":"Self","parent":{"krate":0,"index":4753},"children":[],"decl_id":null,"docs":" Storage can be used as a target for store ops.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4813},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":17920,"byte_end":17927,"line_start":472,"line_end":472,"column_start":5,"column_end":12},"name":"R8Unorm","qualname":"::StorageFormat::R8Unorm","value":"StorageFormat::R8Unorm","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4815},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":17933,"byte_end":17940,"line_start":473,"line_end":473,"column_start":5,"column_end":12},"name":"R8Snorm","qualname":"::StorageFormat::R8Snorm","value":"StorageFormat::R8Snorm","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4817},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":17946,"byte_end":17952,"line_start":474,"line_end":474,"column_start":5,"column_end":11},"name":"R8Uint","qualname":"::StorageFormat::R8Uint","value":"StorageFormat::R8Uint","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4819},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":17958,"byte_end":17964,"line_start":475,"line_end":475,"column_start":5,"column_end":11},"name":"R8Sint","qualname":"::StorageFormat::R8Sint","value":"StorageFormat::R8Sint","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4821},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":17993,"byte_end":18000,"line_start":478,"line_end":478,"column_start":5,"column_end":12},"name":"R16Uint","qualname":"::StorageFormat::R16Uint","value":"StorageFormat::R16Uint","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4823},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18006,"byte_end":18013,"line_start":479,"line_end":479,"column_start":5,"column_end":12},"name":"R16Sint","qualname":"::StorageFormat::R16Sint","value":"StorageFormat::R16Sint","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4825},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18019,"byte_end":18027,"line_start":480,"line_end":480,"column_start":5,"column_end":13},"name":"R16Float","qualname":"::StorageFormat::R16Float","value":"StorageFormat::R16Float","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4827},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18033,"byte_end":18041,"line_start":481,"line_end":481,"column_start":5,"column_end":13},"name":"Rg8Unorm","qualname":"::StorageFormat::Rg8Unorm","value":"StorageFormat::Rg8Unorm","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4829},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18047,"byte_end":18055,"line_start":482,"line_end":482,"column_start":5,"column_end":13},"name":"Rg8Snorm","qualname":"::StorageFormat::Rg8Snorm","value":"StorageFormat::Rg8Snorm","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4831},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18061,"byte_end":18068,"line_start":483,"line_end":483,"column_start":5,"column_end":12},"name":"Rg8Uint","qualname":"::StorageFormat::Rg8Uint","value":"StorageFormat::Rg8Uint","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4833},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18074,"byte_end":18081,"line_start":484,"line_end":484,"column_start":5,"column_end":12},"name":"Rg8Sint","qualname":"::StorageFormat::Rg8Sint","value":"StorageFormat::Rg8Sint","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4835},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18110,"byte_end":18117,"line_start":487,"line_end":487,"column_start":5,"column_end":12},"name":"R32Uint","qualname":"::StorageFormat::R32Uint","value":"StorageFormat::R32Uint","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4837},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18123,"byte_end":18130,"line_start":488,"line_end":488,"column_start":5,"column_end":12},"name":"R32Sint","qualname":"::StorageFormat::R32Sint","value":"StorageFormat::R32Sint","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4839},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18136,"byte_end":18144,"line_start":489,"line_end":489,"column_start":5,"column_end":13},"name":"R32Float","qualname":"::StorageFormat::R32Float","value":"StorageFormat::R32Float","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4841},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18150,"byte_end":18158,"line_start":490,"line_end":490,"column_start":5,"column_end":13},"name":"Rg16Uint","qualname":"::StorageFormat::Rg16Uint","value":"StorageFormat::Rg16Uint","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4843},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18164,"byte_end":18172,"line_start":491,"line_end":491,"column_start":5,"column_end":13},"name":"Rg16Sint","qualname":"::StorageFormat::Rg16Sint","value":"StorageFormat::Rg16Sint","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4845},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18178,"byte_end":18187,"line_start":492,"line_end":492,"column_start":5,"column_end":14},"name":"Rg16Float","qualname":"::StorageFormat::Rg16Float","value":"StorageFormat::Rg16Float","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4847},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18193,"byte_end":18203,"line_start":493,"line_end":493,"column_start":5,"column_end":15},"name":"Rgba8Unorm","qualname":"::StorageFormat::Rgba8Unorm","value":"StorageFormat::Rgba8Unorm","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4849},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18209,"byte_end":18219,"line_start":494,"line_end":494,"column_start":5,"column_end":15},"name":"Rgba8Snorm","qualname":"::StorageFormat::Rgba8Snorm","value":"StorageFormat::Rgba8Snorm","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4851},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18225,"byte_end":18234,"line_start":495,"line_end":495,"column_start":5,"column_end":14},"name":"Rgba8Uint","qualname":"::StorageFormat::Rgba8Uint","value":"StorageFormat::Rgba8Uint","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4853},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18240,"byte_end":18249,"line_start":496,"line_end":496,"column_start":5,"column_end":14},"name":"Rgba8Sint","qualname":"::StorageFormat::Rgba8Sint","value":"StorageFormat::Rgba8Sint","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4855},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18285,"byte_end":18297,"line_start":499,"line_end":499,"column_start":5,"column_end":17},"name":"Rgb10a2Unorm","qualname":"::StorageFormat::Rgb10a2Unorm","value":"StorageFormat::Rgb10a2Unorm","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4857},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18303,"byte_end":18315,"line_start":500,"line_end":500,"column_start":5,"column_end":17},"name":"Rg11b10Float","qualname":"::StorageFormat::Rg11b10Float","value":"StorageFormat::Rg11b10Float","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4859},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18344,"byte_end":18352,"line_start":503,"line_end":503,"column_start":5,"column_end":13},"name":"Rg32Uint","qualname":"::StorageFormat::Rg32Uint","value":"StorageFormat::Rg32Uint","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4861},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18358,"byte_end":18366,"line_start":504,"line_end":504,"column_start":5,"column_end":13},"name":"Rg32Sint","qualname":"::StorageFormat::Rg32Sint","value":"StorageFormat::Rg32Sint","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4863},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18372,"byte_end":18381,"line_start":505,"line_end":505,"column_start":5,"column_end":14},"name":"Rg32Float","qualname":"::StorageFormat::Rg32Float","value":"StorageFormat::Rg32Float","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4865},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18387,"byte_end":18397,"line_start":506,"line_end":506,"column_start":5,"column_end":15},"name":"Rgba16Uint","qualname":"::StorageFormat::Rgba16Uint","value":"StorageFormat::Rgba16Uint","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4867},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18403,"byte_end":18413,"line_start":507,"line_end":507,"column_start":5,"column_end":15},"name":"Rgba16Sint","qualname":"::StorageFormat::Rgba16Sint","value":"StorageFormat::Rgba16Sint","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4869},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18419,"byte_end":18430,"line_start":508,"line_end":508,"column_start":5,"column_end":16},"name":"Rgba16Float","qualname":"::StorageFormat::Rgba16Float","value":"StorageFormat::Rgba16Float","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4871},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18460,"byte_end":18470,"line_start":511,"line_end":511,"column_start":5,"column_end":15},"name":"Rgba32Uint","qualname":"::StorageFormat::Rgba32Uint","value":"StorageFormat::Rgba32Uint","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4873},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18476,"byte_end":18486,"line_start":512,"line_end":512,"column_start":5,"column_end":15},"name":"Rgba32Sint","qualname":"::StorageFormat::Rgba32Sint","value":"StorageFormat::Rgba32Sint","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4875},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18492,"byte_end":18503,"line_start":513,"line_end":513,"column_start":5,"column_end":16},"name":"Rgba32Float","qualname":"::StorageFormat::Rgba32Float","value":"StorageFormat::Rgba32Float","parent":{"krate":0,"index":4812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4812},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":17879,"byte_end":17892,"line_start":470,"line_end":470,"column_start":10,"column_end":23},"name":"StorageFormat","qualname":"::StorageFormat","value":"enum StorageFormat {\n    R8Unorm,\n    R8Snorm,\n    R8Uint,\n    R8Sint,\n    R16Uint,\n    R16Sint,\n    R16Float,\n    Rg8Unorm,\n    Rg8Snorm,\n    Rg8Uint,\n    Rg8Sint,\n    R32Uint,\n    R32Sint,\n    R32Float,\n    Rg16Uint,\n    Rg16Sint,\n    Rg16Float,\n    Rgba8Unorm,\n    Rgba8Snorm,\n    Rgba8Uint,\n    Rgba8Sint,\n    Rgb10a2Unorm,\n    Rg11b10Float,\n    Rg32Uint,\n    Rg32Sint,\n    Rg32Float,\n    Rgba16Uint,\n    Rgba16Sint,\n    Rgba16Float,\n    Rgba32Uint,\n    Rgba32Sint,\n    Rgba32Float,\n}","parent":null,"children":[{"krate":0,"index":4813},{"krate":0,"index":4815},{"krate":0,"index":4817},{"krate":0,"index":4819},{"krate":0,"index":4821},{"krate":0,"index":4823},{"krate":0,"index":4825},{"krate":0,"index":4827},{"krate":0,"index":4829},{"krate":0,"index":4831},{"krate":0,"index":4833},{"krate":0,"index":4835},{"krate":0,"index":4837},{"krate":0,"index":4839},{"krate":0,"index":4841},{"krate":0,"index":4843},{"krate":0,"index":4845},{"krate":0,"index":4847},{"krate":0,"index":4849},{"krate":0,"index":4851},{"krate":0,"index":4853},{"krate":0,"index":4855},{"krate":0,"index":4857},{"krate":0,"index":4859},{"krate":0,"index":4861},{"krate":0,"index":4863},{"krate":0,"index":4865},{"krate":0,"index":4867},{"krate":0,"index":4869},{"krate":0,"index":4871},{"krate":0,"index":4873},{"krate":0,"index":4875}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4896},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18778,"byte_end":18785,"line_start":522,"line_end":522,"column_start":5,"column_end":12},"name":"Sampled","qualname":"::ImageClass::Sampled","value":"ImageClass::Sampled { kind, multi }","parent":{"krate":0,"index":4895},"children":[],"decl_id":null,"docs":" Regular sampled image.\n","sig":null,"attributes":[{"value":"/ Regular sampled image.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18747,"byte_end":18773,"line_start":521,"line_end":521,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":4897},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18834,"byte_end":18838,"line_start":524,"line_end":524,"column_start":9,"column_end":13},"name":"kind","qualname":"::ImageClass::Sampled::kind","value":"ScalarKind","parent":{"krate":0,"index":4896},"children":[],"decl_id":null,"docs":" Kind of values to sample.\n","sig":null,"attributes":[{"value":"/ Kind of values to sample.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18796,"byte_end":18825,"line_start":523,"line_end":523,"column_start":9,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":4898},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":19026,"byte_end":19031,"line_start":529,"line_end":529,"column_start":9,"column_end":14},"name":"multi","qualname":"::ImageClass::Sampled::multi","value":"bool","parent":{"krate":0,"index":4896},"children":[],"decl_id":null,"docs":" Multi-sampled image.","sig":null,"attributes":[{"value":"/ Multi-sampled image.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18860,"byte_end":18884,"line_start":525,"line_end":525,"column_start":9,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18893,"byte_end":18896,"line_start":526,"line_end":526,"column_start":9,"column_end":12}},{"value":"/ A multi-sampled image holds several samples per texel. Multi-sampled","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18905,"byte_end":18977,"line_start":527,"line_end":527,"column_start":9,"column_end":81}},{"value":"/ images cannot have mipmaps.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18986,"byte_end":19017,"line_start":528,"line_end":528,"column_start":9,"column_end":40}}]},{"kind":"StructVariant","id":{"krate":0,"index":4899},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":19082,"byte_end":19087,"line_start":532,"line_end":532,"column_start":5,"column_end":10},"name":"Depth","qualname":"::ImageClass::Depth","value":"ImageClass::Depth { multi }","parent":{"krate":0,"index":4895},"children":[],"decl_id":null,"docs":" Depth comparison image.\n","sig":null,"attributes":[{"value":"/ Depth comparison image.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":19050,"byte_end":19077,"line_start":531,"line_end":531,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":4900},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":19137,"byte_end":19142,"line_start":534,"line_end":534,"column_start":9,"column_end":14},"name":"multi","qualname":"::ImageClass::Depth::multi","value":"bool","parent":{"krate":0,"index":4899},"children":[],"decl_id":null,"docs":" Multi-sampled depth image.\n","sig":null,"attributes":[{"value":"/ Multi-sampled depth image.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":19098,"byte_end":19128,"line_start":533,"line_end":533,"column_start":9,"column_end":39}}]},{"kind":"StructVariant","id":{"krate":0,"index":4901},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":19184,"byte_end":19191,"line_start":537,"line_end":537,"column_start":5,"column_end":12},"name":"Storage","qualname":"::ImageClass::Storage","value":"ImageClass::Storage { format, access }","parent":{"krate":0,"index":4895},"children":[],"decl_id":null,"docs":" Storage image.\n","sig":null,"attributes":[{"value":"/ Storage image.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":19161,"byte_end":19179,"line_start":536,"line_end":536,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":4902},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":19202,"byte_end":19208,"line_start":538,"line_end":538,"column_start":9,"column_end":15},"name":"format","qualname":"::ImageClass::Storage::format","value":"StorageFormat","parent":{"krate":0,"index":4901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4903},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":19233,"byte_end":19239,"line_start":539,"line_end":539,"column_start":9,"column_end":15},"name":"access","qualname":"::ImageClass::Storage::access","value":"StorageAccess","parent":{"krate":0,"index":4901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4895},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18730,"byte_end":18740,"line_start":520,"line_end":520,"column_start":10,"column_end":20},"name":"ImageClass","qualname":"::ImageClass","value":"enum ImageClass {\n    Sampled {\n            kind: ScalarKind,\n            multi: bool,\n        },\n    Depth {\n            multi: bool,\n        },\n    Storage {\n            format: StorageFormat,\n            access: StorageAccess,\n        },\n}","parent":null,"children":[{"krate":0,"index":4896},{"krate":0,"index":4899},{"krate":0,"index":4901}],"decl_id":null,"docs":" Sub-class of the image type.\n","sig":null,"attributes":[{"value":"/ Sub-class of the image type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":18508,"byte_end":18540,"line_start":516,"line_end":516,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":4923},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":19467,"byte_end":19471,"line_start":547,"line_end":547,"column_start":12,"column_end":16},"name":"Type","qualname":"::Type","value":"Type { name, inner }","parent":null,"children":[{"krate":0,"index":4924},{"krate":0,"index":4925}],"decl_id":null,"docs":" A data type declared in the module.\n","sig":null,"attributes":[{"value":"/ A data type declared in the module.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":19266,"byte_end":19305,"line_start":543,"line_end":543,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":4924},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":19520,"byte_end":19524,"line_start":549,"line_end":549,"column_start":9,"column_end":13},"name":"name","qualname":"::Type::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":4923},"children":[],"decl_id":null,"docs":" The name of the type, if any.\n","sig":null,"attributes":[{"value":"/ The name of the type, if any.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":19478,"byte_end":19511,"line_start":548,"line_end":548,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":4925},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":19612,"byte_end":19617,"line_start":551,"line_end":551,"column_start":9,"column_end":14},"name":"inner","qualname":"::Type::inner","value":"TypeInner","parent":{"krate":0,"index":4923},"children":[],"decl_id":null,"docs":" Inner structure that depends on the kind of the type.\n","sig":null,"attributes":[{"value":"/ Inner structure that depends on the kind of the type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":19546,"byte_end":19603,"line_start":550,"line_end":550,"column_start":5,"column_end":62}}]},{"kind":"StructVariant","id":{"krate":0,"index":4939},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":19928,"byte_end":19934,"line_start":560,"line_end":560,"column_start":5,"column_end":11},"name":"Scalar","qualname":"::TypeInner::Scalar","value":"TypeInner::Scalar { kind, width }","parent":{"krate":0,"index":4938},"children":[],"decl_id":null,"docs":" Number of integral or floating-point kind.\n","sig":null,"attributes":[{"value":"/ Number of integral or floating-point kind.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":19877,"byte_end":19923,"line_start":559,"line_end":559,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":4940},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":19937,"byte_end":19941,"line_start":560,"line_end":560,"column_start":14,"column_end":18},"name":"kind","qualname":"::TypeInner::Scalar::kind","value":"ScalarKind","parent":{"krate":0,"index":4939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4941},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":19955,"byte_end":19960,"line_start":560,"line_end":560,"column_start":32,"column_end":37},"name":"width","qualname":"::TypeInner::Scalar::width","value":"u8","parent":{"krate":0,"index":4939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4942},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20002,"byte_end":20008,"line_start":562,"line_end":562,"column_start":5,"column_end":11},"name":"Vector","qualname":"::TypeInner::Vector","value":"TypeInner::Vector { size, kind, width }","parent":{"krate":0,"index":4938},"children":[],"decl_id":null,"docs":" Vector of numbers.\n","sig":null,"attributes":[{"value":"/ Vector of numbers.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":19975,"byte_end":19997,"line_start":561,"line_end":561,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":4943},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20019,"byte_end":20023,"line_start":563,"line_end":563,"column_start":9,"column_end":13},"name":"size","qualname":"::TypeInner::Vector::size","value":"VectorSize","parent":{"krate":0,"index":4942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4944},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20045,"byte_end":20049,"line_start":564,"line_end":564,"column_start":9,"column_end":13},"name":"kind","qualname":"::TypeInner::Vector::kind","value":"ScalarKind","parent":{"krate":0,"index":4942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4945},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20071,"byte_end":20076,"line_start":565,"line_end":565,"column_start":9,"column_end":14},"name":"width","qualname":"::TypeInner::Vector::width","value":"u8","parent":{"krate":0,"index":4942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4946},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20122,"byte_end":20128,"line_start":568,"line_end":568,"column_start":5,"column_end":11},"name":"Matrix","qualname":"::TypeInner::Matrix","value":"TypeInner::Matrix { columns, rows, width }","parent":{"krate":0,"index":4938},"children":[],"decl_id":null,"docs":" Matrix of floats.\n","sig":null,"attributes":[{"value":"/ Matrix of floats.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20096,"byte_end":20117,"line_start":567,"line_end":567,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":4947},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20139,"byte_end":20146,"line_start":569,"line_end":569,"column_start":9,"column_end":16},"name":"columns","qualname":"::TypeInner::Matrix::columns","value":"VectorSize","parent":{"krate":0,"index":4946},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4948},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20168,"byte_end":20172,"line_start":570,"line_end":570,"column_start":9,"column_end":13},"name":"rows","qualname":"::TypeInner::Matrix::rows","value":"VectorSize","parent":{"krate":0,"index":4946},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4949},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20194,"byte_end":20199,"line_start":571,"line_end":571,"column_start":9,"column_end":14},"name":"width","qualname":"::TypeInner::Matrix::width","value":"u8","parent":{"krate":0,"index":4946},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4950},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20242,"byte_end":20248,"line_start":574,"line_end":574,"column_start":5,"column_end":11},"name":"Atomic","qualname":"::TypeInner::Atomic","value":"TypeInner::Atomic { kind, width }","parent":{"krate":0,"index":4938},"children":[],"decl_id":null,"docs":" Atomic scalar.\n","sig":null,"attributes":[{"value":"/ Atomic scalar.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20219,"byte_end":20237,"line_start":573,"line_end":573,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":4951},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20251,"byte_end":20255,"line_start":574,"line_end":574,"column_start":14,"column_end":18},"name":"kind","qualname":"::TypeInner::Atomic::kind","value":"ScalarKind","parent":{"krate":0,"index":4950},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4952},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20269,"byte_end":20274,"line_start":574,"line_end":574,"column_start":32,"column_end":37},"name":"width","qualname":"::TypeInner::Atomic::width","value":"u8","parent":{"krate":0,"index":4950},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4953},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":21555,"byte_end":21562,"line_start":601,"line_end":601,"column_start":5,"column_end":12},"name":"Pointer","qualname":"::TypeInner::Pointer","value":"TypeInner::Pointer { base, class }","parent":{"krate":0,"index":4938},"children":[],"decl_id":null,"docs":" Pointer to another type.","sig":null,"attributes":[{"value":"/ Pointer to another type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20289,"byte_end":20317,"line_start":575,"line_end":575,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20322,"byte_end":20325,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ Pointers to scalars and vectors should be treated as equivalent to","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20330,"byte_end":20400,"line_start":577,"line_end":577,"column_start":5,"column_end":75}},{"value":"/ [`ValuePointer`] types. Use the [`TypeInner::equivalent`] method to","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20405,"byte_end":20476,"line_start":578,"line_end":578,"column_start":5,"column_end":76}},{"value":"/ compare types in a way that treats pointers correctly.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20481,"byte_end":20539,"line_start":579,"line_end":579,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20544,"byte_end":20547,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ ## Pointers to non-`SIZED` types","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20552,"byte_end":20588,"line_start":581,"line_end":581,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20593,"byte_end":20596,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ The `base` type of a pointer may be a non-[`SIZED`] type like a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20601,"byte_end":20668,"line_start":583,"line_end":583,"column_start":5,"column_end":72}},{"value":"/ dynamically-sized [`Array`], or a [`Struct`] whose last member is a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20673,"byte_end":20744,"line_start":584,"line_end":584,"column_start":5,"column_end":76}},{"value":"/ dynamically sized array. Such pointers occur as the types of","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20749,"byte_end":20813,"line_start":585,"line_end":585,"column_start":5,"column_end":69}},{"value":"/ [`GlobalVariable`] or [`AccessIndex`] expressions referring to","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20818,"byte_end":20884,"line_start":586,"line_end":586,"column_start":5,"column_end":71}},{"value":"/ dynamically-sized arrays.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20889,"byte_end":20918,"line_start":587,"line_end":587,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20923,"byte_end":20926,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ However, among pointers to non-`SIZED` types, only pointers to `Struct`s","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":20931,"byte_end":21007,"line_start":589,"line_end":589,"column_start":5,"column_end":81}},{"value":"/ are [`DATA`]. Pointers to dynamically sized `Array`s cannot be passed as","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":21012,"byte_end":21088,"line_start":590,"line_end":590,"column_start":5,"column_end":81}},{"value":"/ arguments, stored in variables, or held in arrays or structures. Their","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":21093,"byte_end":21167,"line_start":591,"line_end":591,"column_start":5,"column_end":79}},{"value":"/ only use is as the types of `AccessIndex` expressions.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":21172,"byte_end":21230,"line_start":592,"line_end":592,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":21235,"byte_end":21238,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ [`SIZED`]: valid::TypeFlags::SIZED","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":21243,"byte_end":21281,"line_start":594,"line_end":594,"column_start":5,"column_end":43}},{"value":"/ [`DATA`]: valid::TypeFlags::DATA","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":21286,"byte_end":21322,"line_start":595,"line_end":595,"column_start":5,"column_end":41}},{"value":"/ [`Array`]: TypeInner::Array","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":21327,"byte_end":21358,"line_start":596,"line_end":596,"column_start":5,"column_end":36}},{"value":"/ [`Struct`]: TypeInner::Struct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":21363,"byte_end":21396,"line_start":597,"line_end":597,"column_start":5,"column_end":38}},{"value":"/ [`ValuePointer`]: TypeInner::ValuePointer","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":21401,"byte_end":21446,"line_start":598,"line_end":598,"column_start":5,"column_end":50}},{"value":"/ [`GlobalVariable`]: Expression::GlobalVariable","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":21451,"byte_end":21501,"line_start":599,"line_end":599,"column_start":5,"column_end":55}},{"value":"/ [`AccessIndex`]: Expression::AccessIndex","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":21506,"byte_end":21550,"line_start":600,"line_end":600,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":4954},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":21573,"byte_end":21577,"line_start":602,"line_end":602,"column_start":9,"column_end":13},"name":"base","qualname":"::TypeInner::Pointer::base","value":"arena::Handle<Type>","parent":{"krate":0,"index":4953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4955},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":21601,"byte_end":21606,"line_start":603,"line_end":603,"column_start":9,"column_end":14},"name":"class","qualname":"::TypeInner::Pointer::class","value":"StorageClass","parent":{"krate":0,"index":4953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4956},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":22228,"byte_end":22240,"line_start":618,"line_end":618,"column_start":5,"column_end":17},"name":"ValuePointer","qualname":"::TypeInner::ValuePointer","value":"TypeInner::ValuePointer { size, kind, width, class }","parent":{"krate":0,"index":4938},"children":[],"decl_id":null,"docs":" Pointer to a scalar or vector.","sig":null,"attributes":[{"value":"/ Pointer to a scalar or vector.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":21634,"byte_end":21668,"line_start":606,"line_end":606,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":21673,"byte_end":21676,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ A `ValuePointer` type is equivalent to a `Pointer` whose `base` is a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":21681,"byte_end":21753,"line_start":608,"line_end":608,"column_start":5,"column_end":77}},{"value":"/ `Scalar` or `Vector` type. This is for use in [`TypeResolution::Value`]","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":21758,"byte_end":21833,"line_start":609,"line_end":609,"column_start":5,"column_end":80}},{"value":"/ variants; see the documentation for [`TypeResolution`] for details.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":21838,"byte_end":21909,"line_start":610,"line_end":610,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":21914,"byte_end":21917,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ Use the [`TypeInner::equivalent`] method to compare types that could be","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":21922,"byte_end":21997,"line_start":612,"line_end":612,"column_start":5,"column_end":80}},{"value":"/ pointers, to ensure that `Pointer` and `ValuePointer` types are","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":22002,"byte_end":22069,"line_start":613,"line_end":613,"column_start":5,"column_end":72}},{"value":"/ recognized as equivalent.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":22074,"byte_end":22103,"line_start":614,"line_end":614,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":22108,"byte_end":22111,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ [`TypeResolution`]: proc::TypeResolution","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":22116,"byte_end":22160,"line_start":616,"line_end":616,"column_start":5,"column_end":49}},{"value":"/ [`TypeResolution::Value`]: proc::TypeResolution::Value","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":22165,"byte_end":22223,"line_start":617,"line_end":617,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":4957},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":22251,"byte_end":22255,"line_start":619,"line_end":619,"column_start":9,"column_end":13},"name":"size","qualname":"::TypeInner::ValuePointer::size","value":"std::option::Option<VectorSize>","parent":{"krate":0,"index":4956},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4958},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":22285,"byte_end":22289,"line_start":620,"line_end":620,"column_start":9,"column_end":13},"name":"kind","qualname":"::TypeInner::ValuePointer::kind","value":"ScalarKind","parent":{"krate":0,"index":4956},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4959},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":22311,"byte_end":22316,"line_start":621,"line_end":621,"column_start":9,"column_end":14},"name":"width","qualname":"::TypeInner::ValuePointer::width","value":"u8","parent":{"krate":0,"index":4956},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4960},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":22333,"byte_end":22338,"line_start":622,"line_end":622,"column_start":9,"column_end":14},"name":"class","qualname":"::TypeInner::ValuePointer::class","value":"StorageClass","parent":{"krate":0,"index":4956},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4961},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":23501,"byte_end":23506,"line_start":650,"line_end":650,"column_start":5,"column_end":10},"name":"Array","qualname":"::TypeInner::Array","value":"TypeInner::Array { base, size, stride }","parent":{"krate":0,"index":4938},"children":[],"decl_id":null,"docs":" Homogenous list of elements.","sig":null,"attributes":[{"value":"/ Homogenous list of elements.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":22366,"byte_end":22398,"line_start":625,"line_end":625,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":22403,"byte_end":22406,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ The `base` type must be a [`SIZED`], [`DATA`] type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":22411,"byte_end":22466,"line_start":627,"line_end":627,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":22471,"byte_end":22474,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ ## Dynamically sized arrays","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":22479,"byte_end":22510,"line_start":629,"line_end":629,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":22515,"byte_end":22518,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ An `Array` is [`SIZED`] unless its `size` is [`Dynamic`].","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":22523,"byte_end":22584,"line_start":631,"line_end":631,"column_start":5,"column_end":66}},{"value":"/ Dynamically-sized arrays may only appear in a few situations:","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":22589,"byte_end":22654,"line_start":632,"line_end":632,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":22659,"byte_end":22662,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ -   They may appear as the last member of a [`Struct`] whose `top_level`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":22667,"byte_end":22743,"line_start":634,"line_end":634,"column_start":5,"column_end":81}},{"value":"/     flag is set.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":22748,"byte_end":22768,"line_start":635,"line_end":635,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":22773,"byte_end":22776,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ -   They may appear as the base type of a [`Pointer`]. An","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":22781,"byte_end":22842,"line_start":637,"line_end":637,"column_start":5,"column_end":66}},{"value":"/     [`AccessIndex`] expression referring to a top-level struct's final","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":22847,"byte_end":22921,"line_start":638,"line_end":638,"column_start":5,"column_end":79}},{"value":"/     unsized array member would have such a pointer type. However, such","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":22926,"byte_end":23000,"line_start":639,"line_end":639,"column_start":5,"column_end":79}},{"value":"/     pointer types may only appear as the types of such intermediate","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":23005,"byte_end":23076,"line_start":640,"line_end":640,"column_start":5,"column_end":76}},{"value":"/     expressions. They are not [`DATA`], and cannot be stored in","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":23081,"byte_end":23148,"line_start":641,"line_end":641,"column_start":5,"column_end":72}},{"value":"/     variables, held in arrays or structs, or passed as parameters.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":23153,"byte_end":23223,"line_start":642,"line_end":642,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":23228,"byte_end":23231,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ [`SIZED`]: crate::valid::TypeFlags::SIZED","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":23236,"byte_end":23281,"line_start":644,"line_end":644,"column_start":5,"column_end":50}},{"value":"/ [`DATA`]: crate::valid::TypeFlags::DATA","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":23286,"byte_end":23329,"line_start":645,"line_end":645,"column_start":5,"column_end":48}},{"value":"/ [`Dynamic`]: ArraySize::Dynamic","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":23334,"byte_end":23369,"line_start":646,"line_end":646,"column_start":5,"column_end":40}},{"value":"/ [`Struct`]: TypeInner::Struct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":23374,"byte_end":23407,"line_start":647,"line_end":647,"column_start":5,"column_end":38}},{"value":"/ [`Pointer`]: TypeInner::Pointer","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":23412,"byte_end":23447,"line_start":648,"line_end":648,"column_start":5,"column_end":40}},{"value":"/ [`AccessIndex`]: Expression::AccessIndex","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":23452,"byte_end":23496,"line_start":649,"line_end":649,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":4962},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":23517,"byte_end":23521,"line_start":651,"line_end":651,"column_start":9,"column_end":13},"name":"base","qualname":"::TypeInner::Array::base","value":"arena::Handle<Type>","parent":{"krate":0,"index":4961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4963},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":23545,"byte_end":23549,"line_start":652,"line_end":652,"column_start":9,"column_end":13},"name":"size","qualname":"::TypeInner::Array::size","value":"ArraySize","parent":{"krate":0,"index":4961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4964},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":23570,"byte_end":23576,"line_start":653,"line_end":653,"column_start":9,"column_end":15},"name":"stride","qualname":"::TypeInner::Array::stride","value":"u32","parent":{"krate":0,"index":4961},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4965},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":24385,"byte_end":24391,"line_start":673,"line_end":673,"column_start":5,"column_end":11},"name":"Struct","qualname":"::TypeInner::Struct","value":"TypeInner::Struct { top_level, members, span }","parent":{"krate":0,"index":4938},"children":[],"decl_id":null,"docs":" User-defined structure.","sig":null,"attributes":[{"value":"/ User-defined structure.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":23595,"byte_end":23622,"line_start":656,"line_end":656,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":23627,"byte_end":23630,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ A `Struct` type is [`DATA`], and the types of its members must be","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":23635,"byte_end":23704,"line_start":658,"line_end":658,"column_start":5,"column_end":74}},{"value":"/ `DATA` as well.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":23709,"byte_end":23728,"line_start":659,"line_end":659,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":23733,"byte_end":23736,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ Member types must be [`SIZED`], except for the final member of a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":23741,"byte_end":23809,"line_start":661,"line_end":661,"column_start":5,"column_end":73}},{"value":"/ top-level struct, which may be a dynamically sized [`Array`]. The","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":23814,"byte_end":23883,"line_start":662,"line_end":662,"column_start":5,"column_end":74}},{"value":"/ `Struct` type itself is `SIZED` when all its members are `SIZED`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":23888,"byte_end":23957,"line_start":663,"line_end":663,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":23962,"byte_end":23965,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ When `top_level` is true, this `Struct` represents the contents of a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":23970,"byte_end":24042,"line_start":665,"line_end":665,"column_start":5,"column_end":77}},{"value":"/ buffer resource occupying a single binding slot in a shader's resource","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":24047,"byte_end":24121,"line_start":666,"line_end":666,"column_start":5,"column_end":79}},{"value":"/ interface. Top-level `Struct`s may not be used as members of any other","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":24126,"byte_end":24200,"line_start":667,"line_end":667,"column_start":5,"column_end":79}},{"value":"/ struct, or as array elements.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":24205,"byte_end":24238,"line_start":668,"line_end":668,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":24243,"byte_end":24246,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ [`DATA`]: crate::valid::TypeFlags::DATA","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":24251,"byte_end":24294,"line_start":670,"line_end":670,"column_start":5,"column_end":48}},{"value":"/ [`SIZED`]: crate::valid::TypeFlags::SIZED","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":24299,"byte_end":24344,"line_start":671,"line_end":671,"column_start":5,"column_end":50}},{"value":"/ [`Array`]: TypeInner::Array","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":24349,"byte_end":24380,"line_start":672,"line_end":672,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":4966},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":24497,"byte_end":24506,"line_start":675,"line_end":675,"column_start":9,"column_end":18},"name":"top_level","qualname":"::TypeInner::Struct::top_level","value":"bool","parent":{"krate":0,"index":4965},"children":[],"decl_id":null,"docs":" This struct serves as the type of a binding slot in a shader's resource interface.\n","sig":null,"attributes":[{"value":"/ This struct serves as the type of a binding slot in a shader's resource interface.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":24402,"byte_end":24488,"line_start":674,"line_end":674,"column_start":9,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":4967},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":24522,"byte_end":24529,"line_start":676,"line_end":676,"column_start":9,"column_end":16},"name":"members","qualname":"::TypeInner::Struct::members","value":"std::vec::Vec<StructMember>","parent":{"krate":0,"index":4965},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4968},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":24600,"byte_end":24604,"line_start":678,"line_end":678,"column_start":9,"column_end":13},"name":"span","qualname":"::TypeInner::Struct::span","value":"u32","parent":{"krate":0,"index":4965},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4969},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":24673,"byte_end":24678,"line_start":681,"line_end":681,"column_start":5,"column_end":10},"name":"Image","qualname":"::TypeInner::Image","value":"TypeInner::Image { dim, arrayed, class }","parent":{"krate":0,"index":4938},"children":[],"decl_id":null,"docs":" Possibly multidimensional array of texels.\n","sig":null,"attributes":[{"value":"/ Possibly multidimensional array of texels.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":24622,"byte_end":24668,"line_start":680,"line_end":680,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":4970},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":24689,"byte_end":24692,"line_start":682,"line_end":682,"column_start":9,"column_end":12},"name":"dim","qualname":"::TypeInner::Image::dim","value":"ImageDimension","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4971},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":24718,"byte_end":24725,"line_start":683,"line_end":683,"column_start":9,"column_end":16},"name":"arrayed","qualname":"::TypeInner::Image::arrayed","value":"bool","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4972},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":24798,"byte_end":24803,"line_start":685,"line_end":685,"column_start":9,"column_end":14},"name":"class","qualname":"::TypeInner::Image::class","value":"ImageClass","parent":{"krate":0,"index":4969},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4973},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":24878,"byte_end":24885,"line_start":688,"line_end":688,"column_start":5,"column_end":12},"name":"Sampler","qualname":"::TypeInner::Sampler","value":"TypeInner::Sampler { comparison }","parent":{"krate":0,"index":4938},"children":[],"decl_id":null,"docs":" Can be used to sample values from images.\n","sig":null,"attributes":[{"value":"/ Can be used to sample values from images.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":24828,"byte_end":24873,"line_start":687,"line_end":687,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":4974},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":24888,"byte_end":24898,"line_start":688,"line_end":688,"column_start":15,"column_end":25},"name":"comparison","qualname":"::TypeInner::Sampler::comparison","value":"bool","parent":{"krate":0,"index":4973},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4938},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":19861,"byte_end":19870,"line_start":558,"line_end":558,"column_start":10,"column_end":19},"name":"TypeInner","qualname":"::TypeInner","value":"enum TypeInner {\n    Scalar {\n            kind: ScalarKind,\n            width: Bytes,\n        },\n    Vector {\n            size: VectorSize,\n            kind: ScalarKind,\n            width: Bytes,\n        },\n    Matrix {\n            columns: VectorSize,\n            rows: VectorSize,\n            width: Bytes,\n        },\n    Atomic {\n            kind: ScalarKind,\n            width: Bytes,\n        },\n    Pointer {\n            base: Handle<Type>,\n            class: StorageClass,\n        },\n    ValuePointer {\n            size: Option<VectorSize>,\n            kind: ScalarKind,\n            width: Bytes,\n            class: StorageClass,\n        },\n    Array {\n            base: Handle<Type>,\n            size: ArraySize,\n            stride: u32,\n        },\n    Struct {\n            top_level: bool,\n            members: Vec<StructMember>,\n            span: u32,\n        },\n    Image {\n            dim: ImageDimension,\n            arrayed: bool,\n            class: ImageClass,\n        },\n    Sampler {\n            comparison: bool,\n        },\n}","parent":null,"children":[{"krate":0,"index":4939},{"krate":0,"index":4942},{"krate":0,"index":4946},{"krate":0,"index":4950},{"krate":0,"index":4953},{"krate":0,"index":4956},{"krate":0,"index":4961},{"krate":0,"index":4965},{"krate":0,"index":4969},{"krate":0,"index":4973}],"decl_id":null,"docs":" Enum with additional information, depending on the kind of type.\n","sig":null,"attributes":[{"value":"/ Enum with additional information, depending on the kind of type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":19633,"byte_end":19701,"line_start":554,"line_end":554,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":4987},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":25082,"byte_end":25090,"line_start":695,"line_end":695,"column_start":12,"column_end":20},"name":"Constant","qualname":"::Constant","value":"Constant { name, specialization, inner }","parent":null,"children":[{"krate":0,"index":4988},{"krate":0,"index":4989},{"krate":0,"index":4990}],"decl_id":null,"docs":" Constant value.\n","sig":null,"attributes":[{"value":"/ Constant value.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":24911,"byte_end":24930,"line_start":691,"line_end":691,"column_start":1,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":4988},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":25101,"byte_end":25105,"line_start":696,"line_end":696,"column_start":9,"column_end":13},"name":"name","qualname":"::Constant::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":4987},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4989},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":25131,"byte_end":25145,"line_start":697,"line_end":697,"column_start":9,"column_end":23},"name":"specialization","qualname":"::Constant::specialization","value":"std::option::Option<u32>","parent":{"krate":0,"index":4987},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4990},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":25168,"byte_end":25173,"line_start":698,"line_end":698,"column_start":9,"column_end":14},"name":"inner","qualname":"::Constant::inner","value":"ConstantInner","parent":{"krate":0,"index":4987},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4998},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":25421,"byte_end":25425,"line_start":706,"line_end":706,"column_start":5,"column_end":9},"name":"Sint","qualname":"::ScalarValue::Sint","value":"ScalarValue::Sint(i64)","parent":{"krate":0,"index":4997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5000},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":25426,"byte_end":25429,"line_start":706,"line_end":706,"column_start":10,"column_end":13},"name":"0","qualname":"::ScalarValue::Sint::0","value":"i64","parent":{"krate":0,"index":4998},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5001},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":25436,"byte_end":25440,"line_start":707,"line_end":707,"column_start":5,"column_end":9},"name":"Uint","qualname":"::ScalarValue::Uint","value":"ScalarValue::Uint(u64)","parent":{"krate":0,"index":4997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5003},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":25441,"byte_end":25444,"line_start":707,"line_end":707,"column_start":10,"column_end":13},"name":"0","qualname":"::ScalarValue::Uint::0","value":"u64","parent":{"krate":0,"index":5001},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5004},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":25451,"byte_end":25456,"line_start":708,"line_end":708,"column_start":5,"column_end":10},"name":"Float","qualname":"::ScalarValue::Float","value":"ScalarValue::Float(f64)","parent":{"krate":0,"index":4997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5006},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":25457,"byte_end":25460,"line_start":708,"line_end":708,"column_start":11,"column_end":14},"name":"0","qualname":"::ScalarValue::Float::0","value":"f64","parent":{"krate":0,"index":5004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5007},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":25467,"byte_end":25471,"line_start":709,"line_end":709,"column_start":5,"column_end":9},"name":"Bool","qualname":"::ScalarValue::Bool","value":"ScalarValue::Bool(bool)","parent":{"krate":0,"index":4997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5009},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":25472,"byte_end":25476,"line_start":709,"line_end":709,"column_start":10,"column_end":14},"name":"0","qualname":"::ScalarValue::Bool::0","value":"bool","parent":{"krate":0,"index":5007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4997},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":25403,"byte_end":25414,"line_start":705,"line_end":705,"column_start":10,"column_end":21},"name":"ScalarValue","qualname":"::ScalarValue","value":"enum ScalarValue { Sint(i64), Uint(u64), Float(f64), Bool(bool), }","parent":null,"children":[{"krate":0,"index":4998},{"krate":0,"index":5001},{"krate":0,"index":5004},{"krate":0,"index":5007}],"decl_id":null,"docs":" A literal scalar value, used in constants.\n","sig":null,"attributes":[{"value":"/ A literal scalar value, used in constants.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":25193,"byte_end":25239,"line_start":701,"line_end":701,"column_start":1,"column_end":47}}]},{"kind":"StructVariant","id":{"krate":0,"index":5018},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":25721,"byte_end":25727,"line_start":717,"line_end":717,"column_start":5,"column_end":11},"name":"Scalar","qualname":"::ConstantInner::Scalar","value":"ConstantInner::Scalar { width, value }","parent":{"krate":0,"index":5017},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5019},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":25738,"byte_end":25743,"line_start":718,"line_end":718,"column_start":9,"column_end":14},"name":"width","qualname":"::ConstantInner::Scalar::width","value":"u8","parent":{"krate":0,"index":5018},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5020},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":25760,"byte_end":25765,"line_start":719,"line_end":719,"column_start":9,"column_end":14},"name":"value","qualname":"::ConstantInner::Scalar::value","value":"ScalarValue","parent":{"krate":0,"index":5018},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5021},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":25791,"byte_end":25800,"line_start":721,"line_end":721,"column_start":5,"column_end":14},"name":"Composite","qualname":"::ConstantInner::Composite","value":"ConstantInner::Composite { ty, components }","parent":{"krate":0,"index":5017},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5022},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":25811,"byte_end":25813,"line_start":722,"line_end":722,"column_start":9,"column_end":11},"name":"ty","qualname":"::ConstantInner::Composite::ty","value":"arena::Handle<Type>","parent":{"krate":0,"index":5021},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5023},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":25837,"byte_end":25847,"line_start":723,"line_end":723,"column_start":9,"column_end":19},"name":"components","qualname":"::ConstantInner::Composite::components","value":"std::vec::Vec<arena::Handle<Constant>>","parent":{"krate":0,"index":5021},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5017},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":25701,"byte_end":25714,"line_start":716,"line_end":716,"column_start":10,"column_end":23},"name":"ConstantInner","qualname":"::ConstantInner","value":"enum ConstantInner {\n    Scalar {\n            width: Bytes,\n            value: ScalarValue,\n        },\n    Composite {\n            ty: Handle<Type>,\n            components: Vec<Handle<Constant>>,\n        },\n}","parent":null,"children":[{"krate":0,"index":5018},{"krate":0,"index":5021}],"decl_id":null,"docs":" Additional information, dependent on the kind of constant.\n","sig":null,"attributes":[{"value":"/ Additional information, dependent on the kind of constant.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":25482,"byte_end":25544,"line_start":712,"line_end":712,"column_start":1,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5033},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":26155,"byte_end":26162,"line_start":733,"line_end":733,"column_start":5,"column_end":12},"name":"BuiltIn","qualname":"::Binding::BuiltIn","value":"Binding::BuiltIn(BuiltIn)","parent":{"krate":0,"index":5032},"children":[],"decl_id":null,"docs":" Built-in shader variable.\n","sig":null,"attributes":[{"value":"/ Built-in shader variable.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":26121,"byte_end":26150,"line_start":732,"line_end":732,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":5035},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":26163,"byte_end":26170,"line_start":733,"line_end":733,"column_start":13,"column_end":20},"name":"0","qualname":"::Binding::BuiltIn::0","value":"BuiltIn","parent":{"krate":0,"index":5033},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5036},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":26951,"byte_end":26959,"line_start":751,"line_end":751,"column_start":5,"column_end":13},"name":"Location","qualname":"::Binding::Location","value":"Binding::Location { location, interpolation, sampling }","parent":{"krate":0,"index":5032},"children":[],"decl_id":null,"docs":" Indexed location.","sig":null,"attributes":[{"value":"/ Indexed location.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":26178,"byte_end":26199,"line_start":735,"line_end":735,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":26204,"byte_end":26207,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ Values passed from the [`Vertex`] stage to the [`Fragment`] stage must","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":26212,"byte_end":26286,"line_start":737,"line_end":737,"column_start":5,"column_end":79}},{"value":"/ have their `interpolation` defaulted (i.e. not `None`) by the front end","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":26291,"byte_end":26366,"line_start":738,"line_end":738,"column_start":5,"column_end":80}},{"value":"/ as appropriate for that language.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":26371,"byte_end":26408,"line_start":739,"line_end":739,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":26413,"byte_end":26416,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ For other stages, we permit interpolations even though they're ignored.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":26421,"byte_end":26496,"line_start":741,"line_end":741,"column_start":5,"column_end":80}},{"value":"/ When a front end is parsing a struct type, it usually doesn't know what","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":26501,"byte_end":26576,"line_start":742,"line_end":742,"column_start":5,"column_end":80}},{"value":"/ stages will be using it for IO, so it's easiest if it can apply the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":26581,"byte_end":26652,"line_start":743,"line_end":743,"column_start":5,"column_end":76}},{"value":"/ defaults to anything with a `Location` binding, just in case.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":26657,"byte_end":26722,"line_start":744,"line_end":744,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":26727,"byte_end":26730,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ For anything other than floating-point scalars and vectors, the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":26735,"byte_end":26802,"line_start":746,"line_end":746,"column_start":5,"column_end":72}},{"value":"/ interpolation must be `Flat`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":26807,"byte_end":26840,"line_start":747,"line_end":747,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":26845,"byte_end":26848,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ [`Vertex`]: crate::ShaderStage::Vertex","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":26853,"byte_end":26895,"line_start":749,"line_end":749,"column_start":5,"column_end":47}},{"value":"/ [`Fragment`]: crate::ShaderStage::Fragment","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":26900,"byte_end":26946,"line_start":750,"line_end":750,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":5037},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":26970,"byte_end":26978,"line_start":752,"line_end":752,"column_start":9,"column_end":17},"name":"location","qualname":"::Binding::Location::location","value":"u32","parent":{"krate":0,"index":5036},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5038},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":26993,"byte_end":27006,"line_start":753,"line_end":753,"column_start":9,"column_end":22},"name":"interpolation","qualname":"::Binding::Location::interpolation","value":"std::option::Option<Interpolation>","parent":{"krate":0,"index":5036},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5039},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":27039,"byte_end":27047,"line_start":754,"line_end":754,"column_start":9,"column_end":17},"name":"sampling","qualname":"::Binding::Location::sampling","value":"std::option::Option<Sampling>","parent":{"krate":0,"index":5036},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5032},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":26107,"byte_end":26114,"line_start":731,"line_end":731,"column_start":10,"column_end":17},"name":"Binding","qualname":"::Binding","value":"enum Binding {\n    BuiltIn(BuiltIn),\n    Location {\n            location: u32,\n            interpolation: Option<Interpolation>,\n            sampling: Option<Sampling>,\n        },\n}","parent":null,"children":[{"krate":0,"index":5033},{"krate":0,"index":5036}],"decl_id":null,"docs":" Describes how an input/output variable is to be bound.\n","sig":null,"attributes":[{"value":"/ Describes how an input/output variable is to be bound.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":25882,"byte_end":25940,"line_start":727,"line_end":727,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":5054},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":27317,"byte_end":27332,"line_start":762,"line_end":762,"column_start":12,"column_end":27},"name":"ResourceBinding","qualname":"::ResourceBinding","value":"ResourceBinding { group, binding }","parent":null,"children":[{"krate":0,"index":5055},{"krate":0,"index":5056}],"decl_id":null,"docs":" Pipeline binding information for global resources.\n","sig":null,"attributes":[{"value":"/ Pipeline binding information for global resources.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":27077,"byte_end":27131,"line_start":758,"line_end":758,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":5055},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":27373,"byte_end":27378,"line_start":764,"line_end":764,"column_start":9,"column_end":14},"name":"group","qualname":"::ResourceBinding::group","value":"u32","parent":{"krate":0,"index":5054},"children":[],"decl_id":null,"docs":" The bind group index.\n","sig":null,"attributes":[{"value":"/ The bind group index.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":27339,"byte_end":27364,"line_start":763,"line_end":763,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":5056},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":27434,"byte_end":27441,"line_start":766,"line_end":766,"column_start":9,"column_end":16},"name":"binding","qualname":"::ResourceBinding::binding","value":"u32","parent":{"krate":0,"index":5054},"children":[],"decl_id":null,"docs":" Binding number within the group.\n","sig":null,"attributes":[{"value":"/ Binding number within the group.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":27389,"byte_end":27425,"line_start":765,"line_end":765,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5075},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":27647,"byte_end":27661,"line_start":773,"line_end":773,"column_start":12,"column_end":26},"name":"GlobalVariable","qualname":"::GlobalVariable","value":"GlobalVariable { name, class, binding, ty, init }","parent":null,"children":[{"krate":0,"index":5076},{"krate":0,"index":5077},{"krate":0,"index":5078},{"krate":0,"index":5079},{"krate":0,"index":5080}],"decl_id":null,"docs":" Variable defined at module level.\n","sig":null,"attributes":[{"value":"/ Variable defined at module level.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":27451,"byte_end":27488,"line_start":769,"line_end":769,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":5076},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":27710,"byte_end":27714,"line_start":775,"line_end":775,"column_start":9,"column_end":13},"name":"name","qualname":"::GlobalVariable::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":5075},"children":[],"decl_id":null,"docs":" Name of the variable, if any.\n","sig":null,"attributes":[{"value":"/ Name of the variable, if any.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":27668,"byte_end":27701,"line_start":774,"line_end":774,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":5077},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":27783,"byte_end":27788,"line_start":777,"line_end":777,"column_start":9,"column_end":14},"name":"class","qualname":"::GlobalVariable::class","value":"StorageClass","parent":{"krate":0,"index":5075},"children":[],"decl_id":null,"docs":" How this variable is to be stored.\n","sig":null,"attributes":[{"value":"/ How this variable is to be stored.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":27736,"byte_end":27774,"line_start":776,"line_end":776,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":5078},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":27862,"byte_end":27869,"line_start":779,"line_end":779,"column_start":9,"column_end":16},"name":"binding","qualname":"::GlobalVariable::binding","value":"std::option::Option<ResourceBinding>","parent":{"krate":0,"index":5075},"children":[],"decl_id":null,"docs":" For resources, defines the binding point.\n","sig":null,"attributes":[{"value":"/ For resources, defines the binding point.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":27808,"byte_end":27853,"line_start":778,"line_end":778,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":5079},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":27939,"byte_end":27941,"line_start":781,"line_end":781,"column_start":9,"column_end":11},"name":"ty","qualname":"::GlobalVariable::ty","value":"arena::Handle<Type>","parent":{"krate":0,"index":5075},"children":[],"decl_id":null,"docs":" The type of this variable.\n","sig":null,"attributes":[{"value":"/ The type of this variable.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":27900,"byte_end":27930,"line_start":780,"line_end":780,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":5080},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":28006,"byte_end":28010,"line_start":783,"line_end":783,"column_start":9,"column_end":13},"name":"init","qualname":"::GlobalVariable::init","value":"std::option::Option<arena::Handle<Constant>>","parent":{"krate":0,"index":5075},"children":[],"decl_id":null,"docs":" Initial value for this variable.\n","sig":null,"attributes":[{"value":"/ Initial value for this variable.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":27961,"byte_end":27997,"line_start":782,"line_end":782,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":5089},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":28228,"byte_end":28241,"line_start":790,"line_end":790,"column_start":12,"column_end":25},"name":"LocalVariable","qualname":"::LocalVariable","value":"LocalVariable { name, ty, init }","parent":null,"children":[{"krate":0,"index":5090},{"krate":0,"index":5091},{"krate":0,"index":5092}],"decl_id":null,"docs":" Variable defined at function level.\n","sig":null,"attributes":[{"value":"/ Variable defined at function level.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":28041,"byte_end":28080,"line_start":786,"line_end":786,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":5090},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":28290,"byte_end":28294,"line_start":792,"line_end":792,"column_start":9,"column_end":13},"name":"name","qualname":"::LocalVariable::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":5089},"children":[],"decl_id":null,"docs":" Name of the variable, if any.\n","sig":null,"attributes":[{"value":"/ Name of the variable, if any.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":28248,"byte_end":28281,"line_start":791,"line_end":791,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":5091},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":28355,"byte_end":28357,"line_start":794,"line_end":794,"column_start":9,"column_end":11},"name":"ty","qualname":"::LocalVariable::ty","value":"arena::Handle<Type>","parent":{"krate":0,"index":5089},"children":[],"decl_id":null,"docs":" The type of this variable.\n","sig":null,"attributes":[{"value":"/ The type of this variable.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":28316,"byte_end":28346,"line_start":793,"line_end":793,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":5092},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":28422,"byte_end":28426,"line_start":796,"line_end":796,"column_start":9,"column_end":13},"name":"init","qualname":"::LocalVariable::init","value":"std::option::Option<arena::Handle<Constant>>","parent":{"krate":0,"index":5089},"children":[],"decl_id":null,"docs":" Initial value for this variable.\n","sig":null,"attributes":[{"value":"/ Initial value for this variable.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":28377,"byte_end":28413,"line_start":795,"line_end":795,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5098},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":28719,"byte_end":28725,"line_start":804,"line_end":804,"column_start":5,"column_end":11},"name":"Negate","qualname":"::UnaryOperator::Negate","value":"UnaryOperator::Negate","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5100},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":28731,"byte_end":28734,"line_start":805,"line_end":805,"column_start":5,"column_end":8},"name":"Not","qualname":"::UnaryOperator::Not","value":"UnaryOperator::Not","parent":{"krate":0,"index":5097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5097},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":28699,"byte_end":28712,"line_start":803,"line_end":803,"column_start":10,"column_end":23},"name":"UnaryOperator","qualname":"::UnaryOperator","value":"enum UnaryOperator { Negate, Not, }","parent":null,"children":[{"krate":0,"index":5098},{"krate":0,"index":5100}],"decl_id":null,"docs":" Operation that can be applied on a single value.\n","sig":null,"attributes":[{"value":"/ Operation that can be applied on a single value.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":28457,"byte_end":28509,"line_start":799,"line_end":799,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5121},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":28998,"byte_end":29001,"line_start":813,"line_end":813,"column_start":5,"column_end":8},"name":"Add","qualname":"::BinaryOperator::Add","value":"BinaryOperator::Add","parent":{"krate":0,"index":5120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5123},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29007,"byte_end":29015,"line_start":814,"line_end":814,"column_start":5,"column_end":13},"name":"Subtract","qualname":"::BinaryOperator::Subtract","value":"BinaryOperator::Subtract","parent":{"krate":0,"index":5120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5125},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29021,"byte_end":29029,"line_start":815,"line_end":815,"column_start":5,"column_end":13},"name":"Multiply","qualname":"::BinaryOperator::Multiply","value":"BinaryOperator::Multiply","parent":{"krate":0,"index":5120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5127},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29035,"byte_end":29041,"line_start":816,"line_end":816,"column_start":5,"column_end":11},"name":"Divide","qualname":"::BinaryOperator::Divide","value":"BinaryOperator::Divide","parent":{"krate":0,"index":5120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5129},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29114,"byte_end":29120,"line_start":818,"line_end":818,"column_start":5,"column_end":11},"name":"Modulo","qualname":"::BinaryOperator::Modulo","value":"BinaryOperator::Modulo","parent":{"krate":0,"index":5120},"children":[],"decl_id":null,"docs":" Equivalent of the WGSL's `%` operator or SPIR-V's `OpFRem`\n","sig":null,"attributes":[{"value":"/ Equivalent of the WGSL's `%` operator or SPIR-V's `OpFRem`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29047,"byte_end":29109,"line_start":817,"line_end":817,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5131},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29126,"byte_end":29131,"line_start":819,"line_end":819,"column_start":5,"column_end":10},"name":"Equal","qualname":"::BinaryOperator::Equal","value":"BinaryOperator::Equal","parent":{"krate":0,"index":5120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5133},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29137,"byte_end":29145,"line_start":820,"line_end":820,"column_start":5,"column_end":13},"name":"NotEqual","qualname":"::BinaryOperator::NotEqual","value":"BinaryOperator::NotEqual","parent":{"krate":0,"index":5120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5135},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29151,"byte_end":29155,"line_start":821,"line_end":821,"column_start":5,"column_end":9},"name":"Less","qualname":"::BinaryOperator::Less","value":"BinaryOperator::Less","parent":{"krate":0,"index":5120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5137},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29161,"byte_end":29170,"line_start":822,"line_end":822,"column_start":5,"column_end":14},"name":"LessEqual","qualname":"::BinaryOperator::LessEqual","value":"BinaryOperator::LessEqual","parent":{"krate":0,"index":5120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5139},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29176,"byte_end":29183,"line_start":823,"line_end":823,"column_start":5,"column_end":12},"name":"Greater","qualname":"::BinaryOperator::Greater","value":"BinaryOperator::Greater","parent":{"krate":0,"index":5120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5141},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29189,"byte_end":29201,"line_start":824,"line_end":824,"column_start":5,"column_end":17},"name":"GreaterEqual","qualname":"::BinaryOperator::GreaterEqual","value":"BinaryOperator::GreaterEqual","parent":{"krate":0,"index":5120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5143},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29207,"byte_end":29210,"line_start":825,"line_end":825,"column_start":5,"column_end":8},"name":"And","qualname":"::BinaryOperator::And","value":"BinaryOperator::And","parent":{"krate":0,"index":5120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5145},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29216,"byte_end":29227,"line_start":826,"line_end":826,"column_start":5,"column_end":16},"name":"ExclusiveOr","qualname":"::BinaryOperator::ExclusiveOr","value":"BinaryOperator::ExclusiveOr","parent":{"krate":0,"index":5120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5147},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29233,"byte_end":29244,"line_start":827,"line_end":827,"column_start":5,"column_end":16},"name":"InclusiveOr","qualname":"::BinaryOperator::InclusiveOr","value":"BinaryOperator::InclusiveOr","parent":{"krate":0,"index":5120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5149},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29250,"byte_end":29260,"line_start":828,"line_end":828,"column_start":5,"column_end":15},"name":"LogicalAnd","qualname":"::BinaryOperator::LogicalAnd","value":"BinaryOperator::LogicalAnd","parent":{"krate":0,"index":5120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5151},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29266,"byte_end":29275,"line_start":829,"line_end":829,"column_start":5,"column_end":14},"name":"LogicalOr","qualname":"::BinaryOperator::LogicalOr","value":"BinaryOperator::LogicalOr","parent":{"krate":0,"index":5120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5153},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29281,"byte_end":29290,"line_start":830,"line_end":830,"column_start":5,"column_end":14},"name":"ShiftLeft","qualname":"::BinaryOperator::ShiftLeft","value":"BinaryOperator::ShiftLeft","parent":{"krate":0,"index":5120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5155},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29358,"byte_end":29368,"line_start":832,"line_end":832,"column_start":5,"column_end":15},"name":"ShiftRight","qualname":"::BinaryOperator::ShiftRight","value":"BinaryOperator::ShiftRight","parent":{"krate":0,"index":5120},"children":[],"decl_id":null,"docs":" Right shift carries the sign of signed integers only.\n","sig":null,"attributes":[{"value":"/ Right shift carries the sign of signed integers only.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29296,"byte_end":29353,"line_start":831,"line_end":831,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":5120},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":28977,"byte_end":28991,"line_start":812,"line_end":812,"column_start":10,"column_end":24},"name":"BinaryOperator","qualname":"::BinaryOperator","value":"enum BinaryOperator {\n    Add,\n    Subtract,\n    Multiply,\n    Divide,\n    Modulo,\n    Equal,\n    NotEqual,\n    Less,\n    LessEqual,\n    Greater,\n    GreaterEqual,\n    And,\n    ExclusiveOr,\n    InclusiveOr,\n    LogicalAnd,\n    LogicalOr,\n    ShiftLeft,\n    ShiftRight,\n}","parent":null,"children":[{"krate":0,"index":5121},{"krate":0,"index":5123},{"krate":0,"index":5125},{"krate":0,"index":5127},{"krate":0,"index":5129},{"krate":0,"index":5131},{"krate":0,"index":5133},{"krate":0,"index":5135},{"krate":0,"index":5137},{"krate":0,"index":5139},{"krate":0,"index":5141},{"krate":0,"index":5143},{"krate":0,"index":5145},{"krate":0,"index":5147},{"krate":0,"index":5149},{"krate":0,"index":5151},{"krate":0,"index":5153},{"krate":0,"index":5155}],"decl_id":null,"docs":" Operation that can be applied on two values.\n","sig":null,"attributes":[{"value":"/ Operation that can be applied on two values.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":28739,"byte_end":28787,"line_start":808,"line_end":808,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5176},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29737,"byte_end":29740,"line_start":843,"line_end":843,"column_start":5,"column_end":8},"name":"Add","qualname":"::AtomicFunction::Add","value":"AtomicFunction::Add","parent":{"krate":0,"index":5175},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5178},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29746,"byte_end":29754,"line_start":844,"line_end":844,"column_start":5,"column_end":13},"name":"Subtract","qualname":"::AtomicFunction::Subtract","value":"AtomicFunction::Subtract","parent":{"krate":0,"index":5175},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5180},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29760,"byte_end":29763,"line_start":845,"line_end":845,"column_start":5,"column_end":8},"name":"And","qualname":"::AtomicFunction::And","value":"AtomicFunction::And","parent":{"krate":0,"index":5175},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5182},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29769,"byte_end":29780,"line_start":846,"line_end":846,"column_start":5,"column_end":16},"name":"ExclusiveOr","qualname":"::AtomicFunction::ExclusiveOr","value":"AtomicFunction::ExclusiveOr","parent":{"krate":0,"index":5175},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5184},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29786,"byte_end":29797,"line_start":847,"line_end":847,"column_start":5,"column_end":16},"name":"InclusiveOr","qualname":"::AtomicFunction::InclusiveOr","value":"AtomicFunction::InclusiveOr","parent":{"krate":0,"index":5175},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5186},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29803,"byte_end":29806,"line_start":848,"line_end":848,"column_start":5,"column_end":8},"name":"Min","qualname":"::AtomicFunction::Min","value":"AtomicFunction::Min","parent":{"krate":0,"index":5175},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5188},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29812,"byte_end":29815,"line_start":849,"line_end":849,"column_start":5,"column_end":8},"name":"Max","qualname":"::AtomicFunction::Max","value":"AtomicFunction::Max","parent":{"krate":0,"index":5175},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5190},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29821,"byte_end":29829,"line_start":850,"line_end":850,"column_start":5,"column_end":13},"name":"Exchange","qualname":"::AtomicFunction::Exchange","value":"AtomicFunction::Exchange { compare }","parent":{"krate":0,"index":5175},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5191},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29832,"byte_end":29839,"line_start":850,"line_end":850,"column_start":16,"column_end":23},"name":"compare","qualname":"::AtomicFunction::Exchange::compare","value":"std::option::Option<arena::Handle<Expression>>","parent":{"krate":0,"index":5190},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5175},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29716,"byte_end":29730,"line_start":842,"line_end":842,"column_start":10,"column_end":24},"name":"AtomicFunction","qualname":"::AtomicFunction","value":"enum AtomicFunction {\n    Add,\n    Subtract,\n    And,\n    ExclusiveOr,\n    InclusiveOr,\n    Min,\n    Max,\n    Exchange {\n            compare: Option<Handle<Expression>>,\n        },\n}","parent":null,"children":[{"krate":0,"index":5176},{"krate":0,"index":5178},{"krate":0,"index":5180},{"krate":0,"index":5182},{"krate":0,"index":5184},{"krate":0,"index":5186},{"krate":0,"index":5188},{"krate":0,"index":5190}],"decl_id":null,"docs":" Function on an atomic value.","sig":null,"attributes":[{"value":"/ Function on an atomic value.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29373,"byte_end":29405,"line_start":835,"line_end":835,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29406,"byte_end":29409,"line_start":836,"line_end":836,"column_start":1,"column_end":4}},{"value":"/ Note: these do not include load/store, which use the existing","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29410,"byte_end":29475,"line_start":837,"line_end":837,"column_start":1,"column_end":66}},{"value":"/ [`Expression::Load`] and [`Statement::Store`].","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29476,"byte_end":29526,"line_start":838,"line_end":838,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5212},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30127,"byte_end":30128,"line_start":858,"line_end":858,"column_start":5,"column_end":6},"name":"X","qualname":"::DerivativeAxis::X","value":"DerivativeAxis::X","parent":{"krate":0,"index":5211},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5214},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30134,"byte_end":30135,"line_start":859,"line_end":859,"column_start":5,"column_end":6},"name":"Y","qualname":"::DerivativeAxis::Y","value":"DerivativeAxis::Y","parent":{"krate":0,"index":5211},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5216},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30141,"byte_end":30146,"line_start":860,"line_end":860,"column_start":5,"column_end":10},"name":"Width","qualname":"::DerivativeAxis::Width","value":"DerivativeAxis::Width","parent":{"krate":0,"index":5211},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5211},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30106,"byte_end":30120,"line_start":857,"line_end":857,"column_start":10,"column_end":24},"name":"DerivativeAxis","qualname":"::DerivativeAxis","value":"enum DerivativeAxis { X, Y, Width, }","parent":null,"children":[{"krate":0,"index":5212},{"krate":0,"index":5214},{"krate":0,"index":5216}],"decl_id":null,"docs":" Axis on which to compute a derivative.\n","sig":null,"attributes":[{"value":"/ Axis on which to compute a derivative.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":29874,"byte_end":29916,"line_start":853,"line_end":853,"column_start":1,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5237},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30431,"byte_end":30434,"line_start":868,"line_end":868,"column_start":5,"column_end":8},"name":"All","qualname":"::RelationalFunction::All","value":"RelationalFunction::All","parent":{"krate":0,"index":5236},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5239},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30440,"byte_end":30443,"line_start":869,"line_end":869,"column_start":5,"column_end":8},"name":"Any","qualname":"::RelationalFunction::Any","value":"RelationalFunction::Any","parent":{"krate":0,"index":5236},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5241},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30449,"byte_end":30454,"line_start":870,"line_end":870,"column_start":5,"column_end":10},"name":"IsNan","qualname":"::RelationalFunction::IsNan","value":"RelationalFunction::IsNan","parent":{"krate":0,"index":5236},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5243},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30460,"byte_end":30465,"line_start":871,"line_end":871,"column_start":5,"column_end":10},"name":"IsInf","qualname":"::RelationalFunction::IsInf","value":"RelationalFunction::IsInf","parent":{"krate":0,"index":5236},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5245},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30471,"byte_end":30479,"line_start":872,"line_end":872,"column_start":5,"column_end":13},"name":"IsFinite","qualname":"::RelationalFunction::IsFinite","value":"RelationalFunction::IsFinite","parent":{"krate":0,"index":5236},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5247},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30485,"byte_end":30493,"line_start":873,"line_end":873,"column_start":5,"column_end":13},"name":"IsNormal","qualname":"::RelationalFunction::IsNormal","value":"RelationalFunction::IsNormal","parent":{"krate":0,"index":5236},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5236},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30406,"byte_end":30424,"line_start":867,"line_end":867,"column_start":10,"column_end":28},"name":"RelationalFunction","qualname":"::RelationalFunction","value":"enum RelationalFunction { All, Any, IsNan, IsInf, IsFinite, IsNormal, }","parent":null,"children":[{"krate":0,"index":5237},{"krate":0,"index":5239},{"krate":0,"index":5241},{"krate":0,"index":5243},{"krate":0,"index":5245},{"krate":0,"index":5247}],"decl_id":null,"docs":" Built-in shader function for testing relation between values.\n","sig":null,"attributes":[{"value":"/ Built-in shader function for testing relation between values.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30151,"byte_end":30216,"line_start":863,"line_end":863,"column_start":1,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5268},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30763,"byte_end":30766,"line_start":882,"line_end":882,"column_start":5,"column_end":8},"name":"Abs","qualname":"::MathFunction::Abs","value":"MathFunction::Abs","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5270},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30772,"byte_end":30775,"line_start":883,"line_end":883,"column_start":5,"column_end":8},"name":"Min","qualname":"::MathFunction::Min","value":"MathFunction::Min","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5272},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30781,"byte_end":30784,"line_start":884,"line_end":884,"column_start":5,"column_end":8},"name":"Max","qualname":"::MathFunction::Max","value":"MathFunction::Max","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5274},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30790,"byte_end":30795,"line_start":885,"line_end":885,"column_start":5,"column_end":10},"name":"Clamp","qualname":"::MathFunction::Clamp","value":"MathFunction::Clamp","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5276},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30821,"byte_end":30824,"line_start":887,"line_end":887,"column_start":5,"column_end":8},"name":"Cos","qualname":"::MathFunction::Cos","value":"MathFunction::Cos","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5278},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30830,"byte_end":30834,"line_start":888,"line_end":888,"column_start":5,"column_end":9},"name":"Cosh","qualname":"::MathFunction::Cosh","value":"MathFunction::Cosh","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5280},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30840,"byte_end":30843,"line_start":889,"line_end":889,"column_start":5,"column_end":8},"name":"Sin","qualname":"::MathFunction::Sin","value":"MathFunction::Sin","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5282},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30849,"byte_end":30853,"line_start":890,"line_end":890,"column_start":5,"column_end":9},"name":"Sinh","qualname":"::MathFunction::Sinh","value":"MathFunction::Sinh","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5284},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30859,"byte_end":30862,"line_start":891,"line_end":891,"column_start":5,"column_end":8},"name":"Tan","qualname":"::MathFunction::Tan","value":"MathFunction::Tan","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5286},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30868,"byte_end":30872,"line_start":892,"line_end":892,"column_start":5,"column_end":9},"name":"Tanh","qualname":"::MathFunction::Tanh","value":"MathFunction::Tanh","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5288},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30878,"byte_end":30882,"line_start":893,"line_end":893,"column_start":5,"column_end":9},"name":"Acos","qualname":"::MathFunction::Acos","value":"MathFunction::Acos","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5290},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30888,"byte_end":30892,"line_start":894,"line_end":894,"column_start":5,"column_end":9},"name":"Asin","qualname":"::MathFunction::Asin","value":"MathFunction::Asin","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5292},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30898,"byte_end":30902,"line_start":895,"line_end":895,"column_start":5,"column_end":9},"name":"Atan","qualname":"::MathFunction::Atan","value":"MathFunction::Atan","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5294},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30908,"byte_end":30913,"line_start":896,"line_end":896,"column_start":5,"column_end":10},"name":"Atan2","qualname":"::MathFunction::Atan2","value":"MathFunction::Atan2","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5296},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30919,"byte_end":30924,"line_start":897,"line_end":897,"column_start":5,"column_end":10},"name":"Asinh","qualname":"::MathFunction::Asinh","value":"MathFunction::Asinh","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5298},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30930,"byte_end":30935,"line_start":898,"line_end":898,"column_start":5,"column_end":10},"name":"Acosh","qualname":"::MathFunction::Acosh","value":"MathFunction::Acosh","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5300},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30941,"byte_end":30946,"line_start":899,"line_end":899,"column_start":5,"column_end":10},"name":"Atanh","qualname":"::MathFunction::Atanh","value":"MathFunction::Atanh","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5302},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30973,"byte_end":30977,"line_start":901,"line_end":901,"column_start":5,"column_end":9},"name":"Ceil","qualname":"::MathFunction::Ceil","value":"MathFunction::Ceil","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5304},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30983,"byte_end":30988,"line_start":902,"line_end":902,"column_start":5,"column_end":10},"name":"Floor","qualname":"::MathFunction::Floor","value":"MathFunction::Floor","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5306},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30994,"byte_end":30999,"line_start":903,"line_end":903,"column_start":5,"column_end":10},"name":"Round","qualname":"::MathFunction::Round","value":"MathFunction::Round","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5308},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31005,"byte_end":31010,"line_start":904,"line_end":904,"column_start":5,"column_end":10},"name":"Fract","qualname":"::MathFunction::Fract","value":"MathFunction::Fract","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5310},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31016,"byte_end":31021,"line_start":905,"line_end":905,"column_start":5,"column_end":10},"name":"Trunc","qualname":"::MathFunction::Trunc","value":"MathFunction::Trunc","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5312},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31027,"byte_end":31031,"line_start":906,"line_end":906,"column_start":5,"column_end":9},"name":"Modf","qualname":"::MathFunction::Modf","value":"MathFunction::Modf","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5314},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31037,"byte_end":31042,"line_start":907,"line_end":907,"column_start":5,"column_end":10},"name":"Frexp","qualname":"::MathFunction::Frexp","value":"MathFunction::Frexp","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5316},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31048,"byte_end":31053,"line_start":908,"line_end":908,"column_start":5,"column_end":10},"name":"Ldexp","qualname":"::MathFunction::Ldexp","value":"MathFunction::Ldexp","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5318},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31075,"byte_end":31078,"line_start":910,"line_end":910,"column_start":5,"column_end":8},"name":"Exp","qualname":"::MathFunction::Exp","value":"MathFunction::Exp","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5320},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31084,"byte_end":31088,"line_start":911,"line_end":911,"column_start":5,"column_end":9},"name":"Exp2","qualname":"::MathFunction::Exp2","value":"MathFunction::Exp2","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5322},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31094,"byte_end":31097,"line_start":912,"line_end":912,"column_start":5,"column_end":8},"name":"Log","qualname":"::MathFunction::Log","value":"MathFunction::Log","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5324},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31103,"byte_end":31107,"line_start":913,"line_end":913,"column_start":5,"column_end":9},"name":"Log2","qualname":"::MathFunction::Log2","value":"MathFunction::Log2","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5326},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31113,"byte_end":31116,"line_start":914,"line_end":914,"column_start":5,"column_end":8},"name":"Pow","qualname":"::MathFunction::Pow","value":"MathFunction::Pow","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5328},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31138,"byte_end":31141,"line_start":916,"line_end":916,"column_start":5,"column_end":8},"name":"Dot","qualname":"::MathFunction::Dot","value":"MathFunction::Dot","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5330},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31147,"byte_end":31152,"line_start":917,"line_end":917,"column_start":5,"column_end":10},"name":"Outer","qualname":"::MathFunction::Outer","value":"MathFunction::Outer","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5332},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31158,"byte_end":31163,"line_start":918,"line_end":918,"column_start":5,"column_end":10},"name":"Cross","qualname":"::MathFunction::Cross","value":"MathFunction::Cross","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5334},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31169,"byte_end":31177,"line_start":919,"line_end":919,"column_start":5,"column_end":13},"name":"Distance","qualname":"::MathFunction::Distance","value":"MathFunction::Distance","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5336},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31183,"byte_end":31189,"line_start":920,"line_end":920,"column_start":5,"column_end":11},"name":"Length","qualname":"::MathFunction::Length","value":"MathFunction::Length","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5338},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31195,"byte_end":31204,"line_start":921,"line_end":921,"column_start":5,"column_end":14},"name":"Normalize","qualname":"::MathFunction::Normalize","value":"MathFunction::Normalize","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5340},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31210,"byte_end":31221,"line_start":922,"line_end":922,"column_start":5,"column_end":16},"name":"FaceForward","qualname":"::MathFunction::FaceForward","value":"MathFunction::FaceForward","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5342},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31227,"byte_end":31234,"line_start":923,"line_end":923,"column_start":5,"column_end":12},"name":"Reflect","qualname":"::MathFunction::Reflect","value":"MathFunction::Reflect","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5344},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31240,"byte_end":31247,"line_start":924,"line_end":924,"column_start":5,"column_end":12},"name":"Refract","qualname":"::MathFunction::Refract","value":"MathFunction::Refract","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5346},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31274,"byte_end":31278,"line_start":926,"line_end":926,"column_start":5,"column_end":9},"name":"Sign","qualname":"::MathFunction::Sign","value":"MathFunction::Sign","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5348},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31284,"byte_end":31287,"line_start":927,"line_end":927,"column_start":5,"column_end":8},"name":"Fma","qualname":"::MathFunction::Fma","value":"MathFunction::Fma","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5350},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31293,"byte_end":31296,"line_start":928,"line_end":928,"column_start":5,"column_end":8},"name":"Mix","qualname":"::MathFunction::Mix","value":"MathFunction::Mix","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5352},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31302,"byte_end":31306,"line_start":929,"line_end":929,"column_start":5,"column_end":9},"name":"Step","qualname":"::MathFunction::Step","value":"MathFunction::Step","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5354},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31312,"byte_end":31322,"line_start":930,"line_end":930,"column_start":5,"column_end":15},"name":"SmoothStep","qualname":"::MathFunction::SmoothStep","value":"MathFunction::SmoothStep","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5356},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31328,"byte_end":31332,"line_start":931,"line_end":931,"column_start":5,"column_end":9},"name":"Sqrt","qualname":"::MathFunction::Sqrt","value":"MathFunction::Sqrt","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5358},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31338,"byte_end":31349,"line_start":932,"line_end":932,"column_start":5,"column_end":16},"name":"InverseSqrt","qualname":"::MathFunction::InverseSqrt","value":"MathFunction::InverseSqrt","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5360},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31355,"byte_end":31362,"line_start":933,"line_end":933,"column_start":5,"column_end":12},"name":"Inverse","qualname":"::MathFunction::Inverse","value":"MathFunction::Inverse","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5362},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31368,"byte_end":31377,"line_start":934,"line_end":934,"column_start":5,"column_end":14},"name":"Transpose","qualname":"::MathFunction::Transpose","value":"MathFunction::Transpose","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5364},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31383,"byte_end":31394,"line_start":935,"line_end":935,"column_start":5,"column_end":16},"name":"Determinant","qualname":"::MathFunction::Determinant","value":"MathFunction::Determinant","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5366},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31412,"byte_end":31424,"line_start":937,"line_end":937,"column_start":5,"column_end":17},"name":"CountOneBits","qualname":"::MathFunction::CountOneBits","value":"MathFunction::CountOneBits","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5368},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31430,"byte_end":31441,"line_start":938,"line_end":938,"column_start":5,"column_end":16},"name":"ReverseBits","qualname":"::MathFunction::ReverseBits","value":"MathFunction::ReverseBits","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5370},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31447,"byte_end":31458,"line_start":939,"line_end":939,"column_start":5,"column_end":16},"name":"ExtractBits","qualname":"::MathFunction::ExtractBits","value":"MathFunction::ExtractBits","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5372},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31464,"byte_end":31474,"line_start":940,"line_end":940,"column_start":5,"column_end":15},"name":"InsertBits","qualname":"::MathFunction::InsertBits","value":"MathFunction::InsertBits","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5374},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31500,"byte_end":31512,"line_start":942,"line_end":942,"column_start":5,"column_end":17},"name":"Pack4x8snorm","qualname":"::MathFunction::Pack4x8snorm","value":"MathFunction::Pack4x8snorm","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5376},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31518,"byte_end":31530,"line_start":943,"line_end":943,"column_start":5,"column_end":17},"name":"Pack4x8unorm","qualname":"::MathFunction::Pack4x8unorm","value":"MathFunction::Pack4x8unorm","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5378},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31536,"byte_end":31549,"line_start":944,"line_end":944,"column_start":5,"column_end":18},"name":"Pack2x16snorm","qualname":"::MathFunction::Pack2x16snorm","value":"MathFunction::Pack2x16snorm","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5380},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31555,"byte_end":31568,"line_start":945,"line_end":945,"column_start":5,"column_end":18},"name":"Pack2x16unorm","qualname":"::MathFunction::Pack2x16unorm","value":"MathFunction::Pack2x16unorm","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5382},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31574,"byte_end":31587,"line_start":946,"line_end":946,"column_start":5,"column_end":18},"name":"Pack2x16float","qualname":"::MathFunction::Pack2x16float","value":"MathFunction::Pack2x16float","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5384},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31615,"byte_end":31629,"line_start":948,"line_end":948,"column_start":5,"column_end":19},"name":"Unpack4x8snorm","qualname":"::MathFunction::Unpack4x8snorm","value":"MathFunction::Unpack4x8snorm","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5386},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31635,"byte_end":31649,"line_start":949,"line_end":949,"column_start":5,"column_end":19},"name":"Unpack4x8unorm","qualname":"::MathFunction::Unpack4x8unorm","value":"MathFunction::Unpack4x8unorm","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5388},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31655,"byte_end":31670,"line_start":950,"line_end":950,"column_start":5,"column_end":20},"name":"Unpack2x16snorm","qualname":"::MathFunction::Unpack2x16snorm","value":"MathFunction::Unpack2x16snorm","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5390},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31676,"byte_end":31691,"line_start":951,"line_end":951,"column_start":5,"column_end":20},"name":"Unpack2x16unorm","qualname":"::MathFunction::Unpack2x16unorm","value":"MathFunction::Unpack2x16unorm","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5392},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31697,"byte_end":31712,"line_start":952,"line_end":952,"column_start":5,"column_end":20},"name":"Unpack2x16float","qualname":"::MathFunction::Unpack2x16float","value":"MathFunction::Unpack2x16float","parent":{"krate":0,"index":5267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5267},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30726,"byte_end":30738,"line_start":880,"line_end":880,"column_start":10,"column_end":22},"name":"MathFunction","qualname":"::MathFunction","value":"enum MathFunction {\n    Abs,\n    Min,\n    Max,\n    Clamp,\n    Cos,\n    Cosh,\n    Sin,\n    Sinh,\n    Tan,\n    Tanh,\n    Acos,\n    Asin,\n    Atan,\n    Atan2,\n    Asinh,\n    Acosh,\n    Atanh,\n    Ceil,\n    Floor,\n    Round,\n    Fract,\n    Trunc,\n    Modf,\n    Frexp,\n    Ldexp,\n    Exp,\n    Exp2,\n    Log,\n    Log2,\n    Pow,\n    Dot,\n    Outer,\n    Cross,\n    Distance,\n    Length,\n    Normalize,\n    FaceForward,\n    Reflect,\n    Refract,\n    Sign,\n    Fma,\n    Mix,\n    Step,\n    SmoothStep,\n    Sqrt,\n    InverseSqrt,\n    Inverse,\n    Transpose,\n    Determinant,\n    CountOneBits,\n    ReverseBits,\n    ExtractBits,\n    InsertBits,\n    Pack4x8snorm,\n    Pack4x8unorm,\n    Pack2x16snorm,\n    Pack2x16unorm,\n    Pack2x16float,\n    Unpack4x8snorm,\n    Unpack4x8unorm,\n    Unpack2x16snorm,\n    Unpack2x16unorm,\n    Unpack2x16float,\n}","parent":null,"children":[{"krate":0,"index":5268},{"krate":0,"index":5270},{"krate":0,"index":5272},{"krate":0,"index":5274},{"krate":0,"index":5276},{"krate":0,"index":5278},{"krate":0,"index":5280},{"krate":0,"index":5282},{"krate":0,"index":5284},{"krate":0,"index":5286},{"krate":0,"index":5288},{"krate":0,"index":5290},{"krate":0,"index":5292},{"krate":0,"index":5294},{"krate":0,"index":5296},{"krate":0,"index":5298},{"krate":0,"index":5300},{"krate":0,"index":5302},{"krate":0,"index":5304},{"krate":0,"index":5306},{"krate":0,"index":5308},{"krate":0,"index":5310},{"krate":0,"index":5312},{"krate":0,"index":5314},{"krate":0,"index":5316},{"krate":0,"index":5318},{"krate":0,"index":5320},{"krate":0,"index":5322},{"krate":0,"index":5324},{"krate":0,"index":5326},{"krate":0,"index":5328},{"krate":0,"index":5330},{"krate":0,"index":5332},{"krate":0,"index":5334},{"krate":0,"index":5336},{"krate":0,"index":5338},{"krate":0,"index":5340},{"krate":0,"index":5342},{"krate":0,"index":5344},{"krate":0,"index":5346},{"krate":0,"index":5348},{"krate":0,"index":5350},{"krate":0,"index":5352},{"krate":0,"index":5354},{"krate":0,"index":5356},{"krate":0,"index":5358},{"krate":0,"index":5360},{"krate":0,"index":5362},{"krate":0,"index":5364},{"krate":0,"index":5366},{"krate":0,"index":5368},{"krate":0,"index":5370},{"krate":0,"index":5372},{"krate":0,"index":5374},{"krate":0,"index":5376},{"krate":0,"index":5378},{"krate":0,"index":5380},{"krate":0,"index":5382},{"krate":0,"index":5384},{"krate":0,"index":5386},{"krate":0,"index":5388},{"krate":0,"index":5390},{"krate":0,"index":5392}],"decl_id":null,"docs":" Built-in shader function for math.\n","sig":null,"attributes":[{"value":"/ Built-in shader function for math.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":30498,"byte_end":30536,"line_start":876,"line_end":876,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5413},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31951,"byte_end":31955,"line_start":960,"line_end":960,"column_start":5,"column_end":9},"name":"Auto","qualname":"::SampleLevel::Auto","value":"SampleLevel::Auto","parent":{"krate":0,"index":5412},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5415},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31961,"byte_end":31965,"line_start":961,"line_end":961,"column_start":5,"column_end":9},"name":"Zero","qualname":"::SampleLevel::Zero","value":"SampleLevel::Zero","parent":{"krate":0,"index":5412},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5417},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31971,"byte_end":31976,"line_start":962,"line_end":962,"column_start":5,"column_end":10},"name":"Exact","qualname":"::SampleLevel::Exact","value":"SampleLevel::Exact(Handle<Expression>)","parent":{"krate":0,"index":5412},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5419},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31977,"byte_end":31995,"line_start":962,"line_end":962,"column_start":11,"column_end":29},"name":"0","qualname":"::SampleLevel::Exact::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5417},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5420},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32002,"byte_end":32006,"line_start":963,"line_end":963,"column_start":5,"column_end":9},"name":"Bias","qualname":"::SampleLevel::Bias","value":"SampleLevel::Bias(Handle<Expression>)","parent":{"krate":0,"index":5412},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5422},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32007,"byte_end":32025,"line_start":963,"line_end":963,"column_start":10,"column_end":28},"name":"0","qualname":"::SampleLevel::Bias::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5423},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32032,"byte_end":32040,"line_start":964,"line_end":964,"column_start":5,"column_end":13},"name":"Gradient","qualname":"::SampleLevel::Gradient","value":"SampleLevel::Gradient { x, y }","parent":{"krate":0,"index":5412},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5424},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32051,"byte_end":32052,"line_start":965,"line_end":965,"column_start":9,"column_end":10},"name":"x","qualname":"::SampleLevel::Gradient::x","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5423},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5425},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32082,"byte_end":32083,"line_start":966,"line_end":966,"column_start":9,"column_end":10},"name":"y","qualname":"::SampleLevel::Gradient::y","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5423},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5412},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31933,"byte_end":31944,"line_start":959,"line_end":959,"column_start":10,"column_end":21},"name":"SampleLevel","qualname":"::SampleLevel","value":"enum SampleLevel {\n    Auto,\n    Zero,\n    Exact(Handle<Expression>),\n    Bias(Handle<Expression>),\n    Gradient {\n            x: Handle<Expression>,\n            y: Handle<Expression>,\n        },\n}","parent":null,"children":[{"krate":0,"index":5413},{"krate":0,"index":5415},{"krate":0,"index":5417},{"krate":0,"index":5420},{"krate":0,"index":5423}],"decl_id":null,"docs":" Sampling modifier to control the level of detail.\n","sig":null,"attributes":[{"value":"/ Sampling modifier to control the level of detail.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":31717,"byte_end":31770,"line_start":955,"line_end":955,"column_start":1,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":5436},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32367,"byte_end":32371,"line_start":976,"line_end":976,"column_start":5,"column_end":9},"name":"Size","qualname":"::ImageQuery::Size","value":"ImageQuery::Size { level }","parent":{"krate":0,"index":5435},"children":[],"decl_id":null,"docs":" Get the size at the specified level.\n","sig":null,"attributes":[{"value":"/ Get the size at the specified level.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32322,"byte_end":32362,"line_start":975,"line_end":975,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":5437},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32435,"byte_end":32440,"line_start":978,"line_end":978,"column_start":9,"column_end":14},"name":"level","qualname":"::ImageQuery::Size::level","value":"std::option::Option<arena::Handle<Expression>>","parent":{"krate":0,"index":5436},"children":[],"decl_id":null,"docs":" If `None`, the base level is considered.\n","sig":null,"attributes":[{"value":"/ If `None`, the base level is considered.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32382,"byte_end":32426,"line_start":977,"line_end":977,"column_start":9,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5438},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32522,"byte_end":32531,"line_start":981,"line_end":981,"column_start":5,"column_end":14},"name":"NumLevels","qualname":"::ImageQuery::NumLevels","value":"ImageQuery::NumLevels","parent":{"krate":0,"index":5435},"children":[],"decl_id":null,"docs":" Get the number of mipmap levels.\n","sig":null,"attributes":[{"value":"/ Get the number of mipmap levels.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32481,"byte_end":32517,"line_start":980,"line_end":980,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5440},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32577,"byte_end":32586,"line_start":983,"line_end":983,"column_start":5,"column_end":14},"name":"NumLayers","qualname":"::ImageQuery::NumLayers","value":"ImageQuery::NumLayers","parent":{"krate":0,"index":5435},"children":[],"decl_id":null,"docs":" Get the number of array layers.\n","sig":null,"attributes":[{"value":"/ Get the number of array layers.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32537,"byte_end":32572,"line_start":982,"line_end":982,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5442},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32627,"byte_end":32637,"line_start":985,"line_end":985,"column_start":5,"column_end":15},"name":"NumSamples","qualname":"::ImageQuery::NumSamples","value":"ImageQuery::NumSamples","parent":{"krate":0,"index":5435},"children":[],"decl_id":null,"docs":" Get the number of samples.\n","sig":null,"attributes":[{"value":"/ Get the number of samples.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32592,"byte_end":32622,"line_start":984,"line_end":984,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":5435},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32305,"byte_end":32315,"line_start":974,"line_end":974,"column_start":10,"column_end":20},"name":"ImageQuery","qualname":"::ImageQuery","value":"enum ImageQuery {\n    Size {\n            level: Option<Handle<Expression>>,\n        },\n    NumLevels,\n    NumLayers,\n    NumSamples,\n}","parent":null,"children":[{"krate":0,"index":5436},{"krate":0,"index":5438},{"krate":0,"index":5440},{"krate":0,"index":5442}],"decl_id":null,"docs":" Type of an image query.\n","sig":null,"attributes":[{"value":"/ Type of an image query.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32115,"byte_end":32142,"line_start":970,"line_end":970,"column_start":1,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5454},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32893,"byte_end":32894,"line_start":995,"line_end":995,"column_start":5,"column_end":6},"name":"X","qualname":"::SwizzleComponent::X","value":"SwizzleComponent::X","parent":{"krate":0,"index":5453},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32885,"byte_end":32888,"line_start":994,"line_end":994,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5457},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32912,"byte_end":32913,"line_start":997,"line_end":997,"column_start":5,"column_end":6},"name":"Y","qualname":"::SwizzleComponent::Y","value":"SwizzleComponent::Y","parent":{"krate":0,"index":5453},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32904,"byte_end":32907,"line_start":996,"line_end":996,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5460},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32931,"byte_end":32932,"line_start":999,"line_end":999,"column_start":5,"column_end":6},"name":"Z","qualname":"::SwizzleComponent::Z","value":"SwizzleComponent::Z","parent":{"krate":0,"index":5453},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32923,"byte_end":32926,"line_start":998,"line_end":998,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5463},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32950,"byte_end":32951,"line_start":1001,"line_end":1001,"column_start":5,"column_end":6},"name":"W","qualname":"::SwizzleComponent::W","value":"SwizzleComponent::W","parent":{"krate":0,"index":5453},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32942,"byte_end":32945,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}}]},{"kind":"Enum","id":{"krate":0,"index":5453},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32862,"byte_end":32878,"line_start":993,"line_end":993,"column_start":10,"column_end":26},"name":"SwizzleComponent","qualname":"::SwizzleComponent","value":"enum SwizzleComponent { X = , Y = , Z = , W = , }","parent":null,"children":[{"krate":0,"index":5454},{"krate":0,"index":5457},{"krate":0,"index":5460},{"krate":0,"index":5463}],"decl_id":null,"docs":" Component selection for a vector swizzle.\n","sig":null,"attributes":[{"value":"/ Component selection for a vector swizzle.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32642,"byte_end":32687,"line_start":988,"line_end":988,"column_start":1,"column_end":46}},{"value":"repr(u8)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":32688,"byte_end":32699,"line_start":989,"line_end":989,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5476},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":33170,"byte_end":33177,"line_start":1009,"line_end":1009,"column_start":16,"column_end":23},"name":"Barrier","qualname":"::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":5477}],"decl_id":null,"docs":" Memory barrier flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5510},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":33265,"byte_end":33272,"line_start":1011,"line_end":1011,"column_start":15,"column_end":22},"name":"STORAGE","qualname":"::Barrier::STORAGE","value":"Self","parent":{"krate":0,"index":5509},"children":[],"decl_id":null,"docs":" Barrier affects all `StorageClass::Storage` accesses.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5511},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":33362,"byte_end":33372,"line_start":1013,"line_end":1013,"column_start":15,"column_end":25},"name":"WORK_GROUP","qualname":"::Barrier::WORK_GROUP","value":"Self","parent":{"krate":0,"index":5509},"children":[],"decl_id":null,"docs":" Barrier affects all `StorageClass::WorkGroup` accesses.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5569},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":35970,"byte_end":35976,"line_start":1071,"line_end":1071,"column_start":5,"column_end":11},"name":"Access","qualname":"::Expression::Access","value":"Expression::Access { base, index }","parent":{"krate":0,"index":5568},"children":[],"decl_id":null,"docs":" Array access with a computed index.","sig":null,"attributes":[{"value":"/ Array access with a computed index.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":33722,"byte_end":33761,"line_start":1025,"line_end":1025,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":33766,"byte_end":33769,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ ## Typing rules","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":33774,"byte_end":33793,"line_start":1027,"line_end":1027,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":33798,"byte_end":33801,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ The `base` operand must be some composite type: [`Vector`], [`Matrix`],","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":33806,"byte_end":33881,"line_start":1029,"line_end":1029,"column_start":5,"column_end":80}},{"value":"/ [`Array`], a [`Pointer`] to one of those, or a [`ValuePointer`] with a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":33886,"byte_end":33960,"line_start":1030,"line_end":1030,"column_start":5,"column_end":79}},{"value":"/ `size`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":33965,"byte_end":33976,"line_start":1031,"line_end":1031,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":33981,"byte_end":33984,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ The `index` operand must be an integer, signed or unsigned.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":33989,"byte_end":34052,"line_start":1033,"line_end":1033,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":34057,"byte_end":34060,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ Indexing a [`Vector`] or [`Array`] produces a value of its element type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":34065,"byte_end":34141,"line_start":1035,"line_end":1035,"column_start":5,"column_end":81}},{"value":"/ Indexing a [`Matrix`] produces a [`Vector`].","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":34146,"byte_end":34194,"line_start":1036,"line_end":1036,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":34199,"byte_end":34202,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ Indexing a [`Pointer`] to any of the above produces a pointer to the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":34207,"byte_end":34279,"line_start":1038,"line_end":1038,"column_start":5,"column_end":77}},{"value":"/ element/component type, in the same [`class`]. In the case of [`Array`],","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":34284,"byte_end":34360,"line_start":1039,"line_end":1039,"column_start":5,"column_end":81}},{"value":"/ the result is an actual [`Pointer`], but for vectors and matrices, there","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":34365,"byte_end":34441,"line_start":1040,"line_end":1040,"column_start":5,"column_end":81}},{"value":"/ may not be any type in the arena representing the component's type, so","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":34446,"byte_end":34520,"line_start":1041,"line_end":1041,"column_start":5,"column_end":79}},{"value":"/ those produce [`ValuePointer`] types equivalent to the appropriate","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":34525,"byte_end":34595,"line_start":1042,"line_end":1042,"column_start":5,"column_end":75}},{"value":"/ [`Pointer`].","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":34600,"byte_end":34616,"line_start":1043,"line_end":1043,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":34621,"byte_end":34624,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ ## Dynamic indexing restrictions","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":34629,"byte_end":34665,"line_start":1045,"line_end":1045,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":34670,"byte_end":34673,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ To accommodate restrictions in some of the shader languages that Naga","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":34678,"byte_end":34751,"line_start":1047,"line_end":1047,"column_start":5,"column_end":78}},{"value":"/ targets, it is not permitted to subscript a matrix or array with a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":34756,"byte_end":34826,"line_start":1048,"line_end":1048,"column_start":5,"column_end":75}},{"value":"/ dynamically computed index unless that matrix or array appears behind a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":34831,"byte_end":34906,"line_start":1049,"line_end":1049,"column_start":5,"column_end":80}},{"value":"/ pointer. In other words, if the inner type of `base` is [`Array`] or","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":34911,"byte_end":34983,"line_start":1050,"line_end":1050,"column_start":5,"column_end":77}},{"value":"/ [`Matrix`], then `index` must be a constant. But if the type of `base`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":34988,"byte_end":35062,"line_start":1051,"line_end":1051,"column_start":5,"column_end":79}},{"value":"/ is a [`Pointer`] to an array or matrix or a [`ValuePointer`] with a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":35067,"byte_end":35138,"line_start":1052,"line_end":1052,"column_start":5,"column_end":76}},{"value":"/ `size`, then the index may be any expression of integer type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":35143,"byte_end":35208,"line_start":1053,"line_end":1053,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":35213,"byte_end":35216,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ You can use the [`Expression::is_dynamic_index`] method to determine","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":35221,"byte_end":35293,"line_start":1055,"line_end":1055,"column_start":5,"column_end":77}},{"value":"/ whether a given index expression requires matrix or array base operands","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":35298,"byte_end":35373,"line_start":1056,"line_end":1056,"column_start":5,"column_end":80}},{"value":"/ to be behind a pointer.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":35378,"byte_end":35405,"line_start":1057,"line_end":1057,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":35410,"byte_end":35413,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ (It would be simpler to always require the use of `AccessIndex` when","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":35418,"byte_end":35490,"line_start":1059,"line_end":1059,"column_start":5,"column_end":77}},{"value":"/ subscripting arrays and matrices that are not behind pointers, but to","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":35495,"byte_end":35568,"line_start":1060,"line_end":1060,"column_start":5,"column_end":78}},{"value":"/ accommodate existing front ends, Naga also permits `Access`, with a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":35573,"byte_end":35644,"line_start":1061,"line_end":1061,"column_start":5,"column_end":76}},{"value":"/ restricted `index`.)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":35649,"byte_end":35673,"line_start":1062,"line_end":1062,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":35678,"byte_end":35681,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ [`Vector`]: TypeInner::Vector","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":35686,"byte_end":35719,"line_start":1064,"line_end":1064,"column_start":5,"column_end":38}},{"value":"/ [`Matrix`]: TypeInner::Matrix","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":35724,"byte_end":35757,"line_start":1065,"line_end":1065,"column_start":5,"column_end":38}},{"value":"/ [`Array`]: TypeInner::Array","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":35762,"byte_end":35793,"line_start":1066,"line_end":1066,"column_start":5,"column_end":36}},{"value":"/ [`Pointer`]: TypeInner::Pointer","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":35798,"byte_end":35833,"line_start":1067,"line_end":1067,"column_start":5,"column_end":40}},{"value":"/ [`class`]: TypeInner::Pointer::class","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":35838,"byte_end":35878,"line_start":1068,"line_end":1068,"column_start":5,"column_end":45}},{"value":"/ [`ValuePointer`]: TypeInner::ValuePointer","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":35883,"byte_end":35928,"line_start":1069,"line_end":1069,"column_start":5,"column_end":50}},{"value":"/ [`Float`]: ScalarKind::Float","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":35933,"byte_end":35965,"line_start":1070,"line_end":1070,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5570},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":35987,"byte_end":35991,"line_start":1072,"line_end":1072,"column_start":9,"column_end":13},"name":"base","qualname":"::Expression::Access::base","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5569},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5571},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36021,"byte_end":36026,"line_start":1073,"line_end":1073,"column_start":9,"column_end":14},"name":"index","qualname":"::Expression::Access::index","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5569},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5572},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36100,"byte_end":36111,"line_start":1076,"line_end":1076,"column_start":5,"column_end":16},"name":"AccessIndex","qualname":"::Expression::AccessIndex","value":"Expression::AccessIndex { base, index }","parent":{"krate":0,"index":5568},"children":[],"decl_id":null,"docs":" Array access with a known index.\n","sig":null,"attributes":[{"value":"/ Array access with a known index.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36059,"byte_end":36095,"line_start":1075,"line_end":1075,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":5573},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36122,"byte_end":36126,"line_start":1077,"line_end":1077,"column_start":9,"column_end":13},"name":"base","qualname":"::Expression::AccessIndex::base","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5574},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36156,"byte_end":36161,"line_start":1078,"line_end":1078,"column_start":9,"column_end":14},"name":"index","qualname":"::Expression::AccessIndex::index","value":"u32","parent":{"krate":0,"index":5572},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5575},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36247,"byte_end":36255,"line_start":1083,"line_end":1083,"column_start":5,"column_end":13},"name":"Constant","qualname":"::Expression::Constant","value":"Expression::Constant(Handle<Constant>)","parent":{"krate":0,"index":5568},"children":[],"decl_id":null,"docs":" Constant value.","sig":null,"attributes":[{"value":"/ Constant value.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36179,"byte_end":36198,"line_start":1080,"line_end":1080,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36203,"byte_end":36206,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ Every `Constant` expression","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36211,"byte_end":36242,"line_start":1082,"line_end":1082,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5577},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36256,"byte_end":36272,"line_start":1083,"line_end":1083,"column_start":14,"column_end":30},"name":"0","qualname":"::Expression::Constant::0","value":"arena::Handle<Constant>","parent":{"krate":0,"index":5575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5578},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36315,"byte_end":36320,"line_start":1085,"line_end":1085,"column_start":5,"column_end":10},"name":"Splat","qualname":"::Expression::Splat","value":"Expression::Splat { size, value }","parent":{"krate":0,"index":5568},"children":[],"decl_id":null,"docs":" Splat scalar into a vector.\n","sig":null,"attributes":[{"value":"/ Splat scalar into a vector.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36279,"byte_end":36310,"line_start":1084,"line_end":1084,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5579},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36331,"byte_end":36335,"line_start":1086,"line_end":1086,"column_start":9,"column_end":13},"name":"size","qualname":"::Expression::Splat::size","value":"VectorSize","parent":{"krate":0,"index":5578},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5580},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36357,"byte_end":36362,"line_start":1087,"line_end":1087,"column_start":9,"column_end":14},"name":"value","qualname":"::Expression::Splat::value","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5578},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5581},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36419,"byte_end":36426,"line_start":1090,"line_end":1090,"column_start":5,"column_end":12},"name":"Swizzle","qualname":"::Expression::Swizzle","value":"Expression::Swizzle { size, vector, pattern }","parent":{"krate":0,"index":5568},"children":[],"decl_id":null,"docs":" Vector swizzle.\n","sig":null,"attributes":[{"value":"/ Vector swizzle.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36395,"byte_end":36414,"line_start":1089,"line_end":1089,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":5582},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36437,"byte_end":36441,"line_start":1091,"line_end":1091,"column_start":9,"column_end":13},"name":"size","qualname":"::Expression::Swizzle::size","value":"VectorSize","parent":{"krate":0,"index":5581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5583},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36463,"byte_end":36469,"line_start":1092,"line_end":1092,"column_start":9,"column_end":15},"name":"vector","qualname":"::Expression::Swizzle::vector","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5584},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36499,"byte_end":36506,"line_start":1093,"line_end":1093,"column_start":9,"column_end":16},"name":"pattern","qualname":"::Expression::Swizzle::pattern","value":"[SwizzleComponent; 4]","parent":{"krate":0,"index":5581},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5586},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36572,"byte_end":36579,"line_start":1096,"line_end":1096,"column_start":5,"column_end":12},"name":"Compose","qualname":"::Expression::Compose","value":"Expression::Compose { ty, components }","parent":{"krate":0,"index":5568},"children":[],"decl_id":null,"docs":" Composite expression.\n","sig":null,"attributes":[{"value":"/ Composite expression.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36542,"byte_end":36567,"line_start":1095,"line_end":1095,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":5587},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36590,"byte_end":36592,"line_start":1097,"line_end":1097,"column_start":9,"column_end":11},"name":"ty","qualname":"::Expression::Compose::ty","value":"arena::Handle<Type>","parent":{"krate":0,"index":5586},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5588},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36616,"byte_end":36626,"line_start":1098,"line_end":1098,"column_start":9,"column_end":19},"name":"components","qualname":"::Expression::Compose::components","value":"std::vec::Vec<arena::Handle<Expression>>","parent":{"krate":0,"index":5586},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5589},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":37019,"byte_end":37035,"line_start":1109,"line_end":1109,"column_start":5,"column_end":21},"name":"FunctionArgument","qualname":"::Expression::FunctionArgument","value":"Expression::FunctionArgument(u32)","parent":{"krate":0,"index":5568},"children":[],"decl_id":null,"docs":" Reference a function parameter, by its index.","sig":null,"attributes":[{"value":"/ Reference a function parameter, by its index.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36665,"byte_end":36714,"line_start":1101,"line_end":1101,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36719,"byte_end":36722,"line_start":1102,"line_end":1102,"column_start":5,"column_end":8}},{"value":"/ A `FunctionArgument` expression evaluates to a pointer to the argument's","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36727,"byte_end":36803,"line_start":1103,"line_end":1103,"column_start":5,"column_end":81}},{"value":"/ value. You must use a [`Load`] expression to retrieve its value, or a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36808,"byte_end":36881,"line_start":1104,"line_end":1104,"column_start":5,"column_end":78}},{"value":"/ [`Store`] statement to assign it a new value.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36886,"byte_end":36935,"line_start":1105,"line_end":1105,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36940,"byte_end":36943,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ [`Load`]: Expression::Load","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36948,"byte_end":36978,"line_start":1107,"line_end":1107,"column_start":5,"column_end":35}},{"value":"/ [`Store`]: Statement::Store","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":36983,"byte_end":37014,"line_start":1108,"line_end":1108,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5591},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":37036,"byte_end":37039,"line_start":1109,"line_end":1109,"column_start":22,"column_end":25},"name":"0","qualname":"::Expression::FunctionArgument::0","value":"u32","parent":{"krate":0,"index":5589},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5592},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":37719,"byte_end":37733,"line_start":1125,"line_end":1125,"column_start":5,"column_end":19},"name":"GlobalVariable","qualname":"::Expression::GlobalVariable","value":"Expression::GlobalVariable(Handle<GlobalVariable>)","parent":{"krate":0,"index":5568},"children":[],"decl_id":null,"docs":" Reference a global variable.","sig":null,"attributes":[{"value":"/ Reference a global variable.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":37047,"byte_end":37079,"line_start":1111,"line_end":1111,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":37084,"byte_end":37087,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ If the given `GlobalVariable`'s [`class`] is [`StorageClass::Handle`],","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":37092,"byte_end":37166,"line_start":1113,"line_end":1113,"column_start":5,"column_end":79}},{"value":"/ then the variable stores some opaque type like a sampler or an image,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":37171,"byte_end":37244,"line_start":1114,"line_end":1114,"column_start":5,"column_end":78}},{"value":"/ and a `GlobalVariable` expression referring to it produces the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":37249,"byte_end":37315,"line_start":1115,"line_end":1115,"column_start":5,"column_end":71}},{"value":"/ variable's value directly.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":37320,"byte_end":37350,"line_start":1116,"line_end":1116,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":37355,"byte_end":37358,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ For any other storage class, a `GlobalVariable` expression produces a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":37363,"byte_end":37436,"line_start":1118,"line_end":1118,"column_start":5,"column_end":78}},{"value":"/ pointer to the variable's value. You must use a [`Load`] expression to","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":37441,"byte_end":37515,"line_start":1119,"line_end":1119,"column_start":5,"column_end":79}},{"value":"/ retrieve its value, or a [`Store`] statement to assign it a new value.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":37520,"byte_end":37594,"line_start":1120,"line_end":1120,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":37599,"byte_end":37602,"line_start":1121,"line_end":1121,"column_start":5,"column_end":8}},{"value":"/ [`class`]: GlobalVariable::class","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":37607,"byte_end":37643,"line_start":1122,"line_end":1122,"column_start":5,"column_end":41}},{"value":"/ [`Load`]: Expression::Load","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":37648,"byte_end":37678,"line_start":1123,"line_end":1123,"column_start":5,"column_end":35}},{"value":"/ [`Store`]: Statement::Store","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":37683,"byte_end":37714,"line_start":1124,"line_end":1124,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5594},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":37734,"byte_end":37756,"line_start":1125,"line_end":1125,"column_start":20,"column_end":42},"name":"0","qualname":"::Expression::GlobalVariable::0","value":"arena::Handle<GlobalVariable>","parent":{"krate":0,"index":5592},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5595},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":38054,"byte_end":38067,"line_start":1132,"line_end":1132,"column_start":5,"column_end":18},"name":"LocalVariable","qualname":"::Expression::LocalVariable","value":"Expression::LocalVariable(Handle<LocalVariable>)","parent":{"krate":0,"index":5568},"children":[],"decl_id":null,"docs":" Reference a local variable.","sig":null,"attributes":[{"value":"/ Reference a local variable.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":37764,"byte_end":37795,"line_start":1127,"line_end":1127,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":37800,"byte_end":37803,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ A `LocalVariable` expression evaluates to a pointer to the variable's value.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":37808,"byte_end":37888,"line_start":1129,"line_end":1129,"column_start":5,"column_end":85}},{"value":"/ You must use a [`Load`](Expression::Load) expression to retrieve its value,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":37893,"byte_end":37972,"line_start":1130,"line_end":1130,"column_start":5,"column_end":84}},{"value":"/ or a [`Store`](Statement::Store) statement to assign it a new value.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":37977,"byte_end":38049,"line_start":1131,"line_end":1131,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":5597},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":38068,"byte_end":38089,"line_start":1132,"line_end":1132,"column_start":19,"column_end":40},"name":"0","qualname":"::Expression::LocalVariable::0","value":"arena::Handle<LocalVariable>","parent":{"krate":0,"index":5595},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5598},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":38274,"byte_end":38278,"line_start":1138,"line_end":1138,"column_start":5,"column_end":9},"name":"Load","qualname":"::Expression::Load","value":"Expression::Load { pointer }","parent":{"krate":0,"index":5568},"children":[],"decl_id":null,"docs":" Load a value indirectly.","sig":null,"attributes":[{"value":"/ Load a value indirectly.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":38097,"byte_end":38125,"line_start":1134,"line_end":1134,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":38130,"byte_end":38133,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ For [`TypeInner::Atomic`] the result is a corresponding scalar.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":38138,"byte_end":38205,"line_start":1136,"line_end":1136,"column_start":5,"column_end":72}},{"value":"/ For other types behind the pointer<T>, the result is T.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":38210,"byte_end":38269,"line_start":1137,"line_end":1137,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":5599},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":38281,"byte_end":38288,"line_start":1138,"line_end":1138,"column_start":12,"column_end":19},"name":"pointer","qualname":"::Expression::Load::pointer","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5598},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5600},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":38372,"byte_end":38383,"line_start":1140,"line_end":1140,"column_start":5,"column_end":16},"name":"ImageSample","qualname":"::Expression::ImageSample","value":"Expression::ImageSample { image, sampler, coordinate, array_index, offset, level, depth_ref }","parent":{"krate":0,"index":5568},"children":[],"decl_id":null,"docs":" Sample a point from a sampled or a depth image.\n","sig":null,"attributes":[{"value":"/ Sample a point from a sampled or a depth image.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":38316,"byte_end":38367,"line_start":1139,"line_end":1139,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":5601},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":38394,"byte_end":38399,"line_start":1141,"line_end":1141,"column_start":9,"column_end":14},"name":"image","qualname":"::Expression::ImageSample::image","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5600},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5602},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":38429,"byte_end":38436,"line_start":1142,"line_end":1142,"column_start":9,"column_end":16},"name":"sampler","qualname":"::Expression::ImageSample::sampler","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5600},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5603},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":38466,"byte_end":38476,"line_start":1143,"line_end":1143,"column_start":9,"column_end":19},"name":"coordinate","qualname":"::Expression::ImageSample::coordinate","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5600},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5604},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":38506,"byte_end":38517,"line_start":1144,"line_end":1144,"column_start":9,"column_end":20},"name":"array_index","qualname":"::Expression::ImageSample::array_index","value":"std::option::Option<arena::Handle<Expression>>","parent":{"krate":0,"index":5600},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5605},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":38555,"byte_end":38561,"line_start":1145,"line_end":1145,"column_start":9,"column_end":15},"name":"offset","qualname":"::Expression::ImageSample::offset","value":"std::option::Option<arena::Handle<Constant>>","parent":{"krate":0,"index":5600},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5606},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":38597,"byte_end":38602,"line_start":1146,"line_end":1146,"column_start":9,"column_end":14},"name":"level","qualname":"::Expression::ImageSample::level","value":"SampleLevel","parent":{"krate":0,"index":5600},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5607},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":38625,"byte_end":38634,"line_start":1147,"line_end":1147,"column_start":9,"column_end":18},"name":"depth_ref","qualname":"::Expression::ImageSample::depth_ref","value":"std::option::Option<arena::Handle<Expression>>","parent":{"krate":0,"index":5600},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5608},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":39343,"byte_end":39352,"line_start":1165,"line_end":1165,"column_start":5,"column_end":14},"name":"ImageLoad","qualname":"::Expression::ImageLoad","value":"Expression::ImageLoad { image, coordinate, array_index, index }","parent":{"krate":0,"index":5568},"children":[],"decl_id":null,"docs":" Load a texel from an image.","sig":null,"attributes":[{"value":"/ Load a texel from an image.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":38676,"byte_end":38707,"line_start":1150,"line_end":1150,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":38712,"byte_end":38715,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ For most images, this returns a four-element vector of the same","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":38720,"byte_end":38787,"line_start":1152,"line_end":1152,"column_start":5,"column_end":72}},{"value":"/ [`ScalarKind`] as the image. If the format of the image does not have","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":38792,"byte_end":38865,"line_start":1153,"line_end":1153,"column_start":5,"column_end":78}},{"value":"/ four components, default values are provided: the first three components","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":38870,"byte_end":38946,"line_start":1154,"line_end":1154,"column_start":5,"column_end":81}},{"value":"/ (typically R, G, and B) default to zero, and the final component","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":38951,"byte_end":39019,"line_start":1155,"line_end":1155,"column_start":5,"column_end":73}},{"value":"/ (typically alpha) defaults to one.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":39024,"byte_end":39062,"line_start":1156,"line_end":1156,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":39067,"byte_end":39070,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ However, if the image's [`class`] is [`Depth`], then this returns a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":39075,"byte_end":39146,"line_start":1158,"line_end":1158,"column_start":5,"column_end":76}},{"value":"/ [`Float`] scalar value.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":39151,"byte_end":39178,"line_start":1159,"line_end":1159,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":39183,"byte_end":39186,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ [`ScalarKind`]: ScalarKind","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":39191,"byte_end":39221,"line_start":1161,"line_end":1161,"column_start":5,"column_end":35}},{"value":"/ [`class`]: TypeInner::Image::class","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":39226,"byte_end":39264,"line_start":1162,"line_end":1162,"column_start":5,"column_end":43}},{"value":"/ [`Depth`]: ImageClass::Depth","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":39269,"byte_end":39301,"line_start":1163,"line_end":1163,"column_start":5,"column_end":37}},{"value":"/ [`Float`]: ScalarKind::Float","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":39306,"byte_end":39338,"line_start":1164,"line_end":1164,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5609},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":39790,"byte_end":39795,"line_start":1174,"line_end":1174,"column_start":9,"column_end":14},"name":"image","qualname":"::Expression::ImageLoad::image","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" The image to load a texel from. This must have type [`Image`]. (This\n will necessarily be a [`GlobalVariable`] or [`FunctionArgument`]\n expression, since no other expressions are allowed to have that\n type.)","sig":null,"attributes":[{"value":"/ The image to load a texel from. This must have type [`Image`]. (This","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":39363,"byte_end":39435,"line_start":1166,"line_end":1166,"column_start":9,"column_end":81}},{"value":"/ will necessarily be a [`GlobalVariable`] or [`FunctionArgument`]","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":39444,"byte_end":39512,"line_start":1167,"line_end":1167,"column_start":9,"column_end":77}},{"value":"/ expression, since no other expressions are allowed to have that","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":39521,"byte_end":39588,"line_start":1168,"line_end":1168,"column_start":9,"column_end":76}},{"value":"/ type.)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":39597,"byte_end":39607,"line_start":1169,"line_end":1169,"column_start":9,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":39616,"byte_end":39619,"line_start":1170,"line_end":1170,"column_start":9,"column_end":12}},{"value":"/ [`Image`]: TypeInner::Image","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":39628,"byte_end":39659,"line_start":1171,"line_end":1171,"column_start":9,"column_end":40}},{"value":"/ [`GlobalVariable`]: Expression::GlobalVariable","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":39668,"byte_end":39718,"line_start":1172,"line_end":1172,"column_start":9,"column_end":59}},{"value":"/ [`FunctionArgument`]: Expression::FunctionArgument","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":39727,"byte_end":39781,"line_start":1173,"line_end":1173,"column_start":9,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":5610},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":40418,"byte_end":40428,"line_start":1188,"line_end":1188,"column_start":9,"column_end":19},"name":"coordinate","qualname":"::Expression::ImageLoad::coordinate","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" The coordinate of the texel we wish to load. This must be a scalar\n for [`D1`] images, a [`Bi`] vector for [`D2`] images, and a [`Tri`]\n vector for [`D3`] images. (Array indices, sample indices, and\n explicit level-of-detail values are supplied separately.) Its\n component type must be [`Sint`].","sig":null,"attributes":[{"value":"/ The coordinate of the texel we wish to load. This must be a scalar","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":39826,"byte_end":39896,"line_start":1176,"line_end":1176,"column_start":9,"column_end":79}},{"value":"/ for [`D1`] images, a [`Bi`] vector for [`D2`] images, and a [`Tri`]","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":39905,"byte_end":39976,"line_start":1177,"line_end":1177,"column_start":9,"column_end":80}},{"value":"/ vector for [`D3`] images. (Array indices, sample indices, and","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":39985,"byte_end":40050,"line_start":1178,"line_end":1178,"column_start":9,"column_end":74}},{"value":"/ explicit level-of-detail values are supplied separately.) Its","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":40059,"byte_end":40124,"line_start":1179,"line_end":1179,"column_start":9,"column_end":74}},{"value":"/ component type must be [`Sint`].","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":40133,"byte_end":40169,"line_start":1180,"line_end":1180,"column_start":9,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":40178,"byte_end":40181,"line_start":1181,"line_end":1181,"column_start":9,"column_end":12}},{"value":"/ [`D1`]: ImageDimension::D1","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":40190,"byte_end":40220,"line_start":1182,"line_end":1182,"column_start":9,"column_end":39}},{"value":"/ [`D2`]: ImageDimension::D2","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":40229,"byte_end":40259,"line_start":1183,"line_end":1183,"column_start":9,"column_end":39}},{"value":"/ [`D3`]: ImageDimension::D3","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":40268,"byte_end":40298,"line_start":1184,"line_end":1184,"column_start":9,"column_end":39}},{"value":"/ [`Bi`]: VectorSize::Bi","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":40307,"byte_end":40333,"line_start":1185,"line_end":1185,"column_start":9,"column_end":35}},{"value":"/ [`Tri`]: VectorSize::Tri","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":40342,"byte_end":40370,"line_start":1186,"line_end":1186,"column_start":9,"column_end":37}},{"value":"/ [`Sint`]: ScalarKind::Sint","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":40379,"byte_end":40409,"line_start":1187,"line_end":1187,"column_start":9,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":5611},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":40780,"byte_end":40791,"line_start":1196,"line_end":1196,"column_start":9,"column_end":20},"name":"array_index","qualname":"::Expression::ImageLoad::array_index","value":"std::option::Option<arena::Handle<Expression>>","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" The index into an arrayed image. If the [`arrayed`] flag in\n `image`'s type is `true`, then this must be `Some(expr)`, where\n `expr` is a [`Sint`] scalar. Otherwise, it must be `None`.","sig":null,"attributes":[{"value":"/ The index into an arrayed image. If the [`arrayed`] flag in","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":40459,"byte_end":40522,"line_start":1190,"line_end":1190,"column_start":9,"column_end":72}},{"value":"/ `image`'s type is `true`, then this must be `Some(expr)`, where","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":40531,"byte_end":40598,"line_start":1191,"line_end":1191,"column_start":9,"column_end":76}},{"value":"/ `expr` is a [`Sint`] scalar. Otherwise, it must be `None`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":40607,"byte_end":40669,"line_start":1192,"line_end":1192,"column_start":9,"column_end":71}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":40678,"byte_end":40681,"line_start":1193,"line_end":1193,"column_start":9,"column_end":12}},{"value":"/ [`arrayed`]: TypeInner::Image::arrayed","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":40690,"byte_end":40732,"line_start":1194,"line_end":1194,"column_start":9,"column_end":51}},{"value":"/ [`Sint`]: ScalarKind::Sint","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":40741,"byte_end":40771,"line_start":1195,"line_end":1195,"column_start":9,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":5612},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42314,"byte_end":42319,"line_start":1228,"line_end":1228,"column_start":9,"column_end":14},"name":"index","qualname":"::Expression::ImageLoad::index","value":"std::option::Option<arena::Handle<Expression>>","parent":{"krate":0,"index":5608},"children":[],"decl_id":null,"docs":" The sample within a particular texel.","sig":null,"attributes":[{"value":"/ The sample within a particular texel.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":40830,"byte_end":40871,"line_start":1198,"line_end":1198,"column_start":9,"column_end":50}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":40880,"byte_end":40883,"line_start":1199,"line_end":1199,"column_start":9,"column_end":12}},{"value":"/ The meaning of this value depends on the [`class`] of `image`:","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":40892,"byte_end":40958,"line_start":1200,"line_end":1200,"column_start":9,"column_end":75}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":40967,"byte_end":40970,"line_start":1201,"line_end":1201,"column_start":9,"column_end":12}},{"value":"/ -   [`Storage`] images hold exactly one sample per texel, so `index` must","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":40979,"byte_end":41056,"line_start":1202,"line_end":1202,"column_start":9,"column_end":86}},{"value":"/     be `None`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":41065,"byte_end":41083,"line_start":1203,"line_end":1203,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":41092,"byte_end":41095,"line_start":1204,"line_end":1204,"column_start":9,"column_end":12}},{"value":"/ -   [`Depth`] and [`Sampled`] images may be multisampled or have","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":41104,"byte_end":41172,"line_start":1205,"line_end":1205,"column_start":9,"column_end":77}},{"value":"/     mipmaps, but not both. Which one is indicated by the variant's","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":41181,"byte_end":41251,"line_start":1206,"line_end":1206,"column_start":9,"column_end":79}},{"value":"/     [`multi`] field:","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":41260,"byte_end":41284,"line_start":1207,"line_end":1207,"column_start":9,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":41293,"byte_end":41296,"line_start":1208,"line_end":1208,"column_start":9,"column_end":12}},{"value":"/     - If `multi` is `true`, then the image has multiple samples per","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":41305,"byte_end":41376,"line_start":1209,"line_end":1209,"column_start":9,"column_end":80}},{"value":"/       texel, and `index` must be `Some(sample)`, where `sample` is","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":41385,"byte_end":41455,"line_start":1210,"line_end":1210,"column_start":9,"column_end":79}},{"value":"/       the index of the sample to retrieve.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":41464,"byte_end":41510,"line_start":1211,"line_end":1211,"column_start":9,"column_end":55}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":41519,"byte_end":41522,"line_start":1212,"line_end":1212,"column_start":9,"column_end":12}},{"value":"/     - If `multi` is `false`, then the image may have mipmaps. In","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":41531,"byte_end":41599,"line_start":1213,"line_end":1213,"column_start":9,"column_end":77}},{"value":"/       this case, `index` must be `Some(level)`, where `level`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":41608,"byte_end":41673,"line_start":1214,"line_end":1214,"column_start":9,"column_end":74}},{"value":"/       identifies the level of detail. Even if the image has only the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":41682,"byte_end":41754,"line_start":1215,"line_end":1215,"column_start":9,"column_end":81}},{"value":"/       full-sized version, `level` must still be present; its only","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":41763,"byte_end":41832,"line_start":1216,"line_end":1216,"column_start":9,"column_end":78}},{"value":"/       in-range value is zero.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":41841,"byte_end":41874,"line_start":1217,"line_end":1217,"column_start":9,"column_end":42}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":41883,"byte_end":41886,"line_start":1218,"line_end":1218,"column_start":9,"column_end":12}},{"value":"/ When `index` is `Some` the value must be a `Sint` scalar value. If","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":41895,"byte_end":41965,"line_start":1219,"line_end":1219,"column_start":9,"column_end":79}},{"value":"/ it identifes a level of detail, zero represents the full resolution","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":41974,"byte_end":42045,"line_start":1220,"line_end":1220,"column_start":9,"column_end":80}},{"value":"/ mipmap.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42054,"byte_end":42065,"line_start":1221,"line_end":1221,"column_start":9,"column_end":20}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42074,"byte_end":42077,"line_start":1222,"line_end":1222,"column_start":9,"column_end":12}},{"value":"/ [`class`]: TypeInner::Image::class","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42086,"byte_end":42124,"line_start":1223,"line_end":1223,"column_start":9,"column_end":47}},{"value":"/ [`Sampled`]: ImageClass::Sampled","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42133,"byte_end":42169,"line_start":1224,"line_end":1224,"column_start":9,"column_end":45}},{"value":"/ [`Storage`]: ImageClass::Storage","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42178,"byte_end":42214,"line_start":1225,"line_end":1225,"column_start":9,"column_end":45}},{"value":"/ [`Depth`]: ImageClass::Depth","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42223,"byte_end":42255,"line_start":1226,"line_end":1226,"column_start":9,"column_end":41}},{"value":"/ [`multi`]: ImageClass::Sampled::multi","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42264,"byte_end":42305,"line_start":1227,"line_end":1227,"column_start":9,"column_end":50}}]},{"kind":"StructVariant","id":{"krate":0,"index":5613},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42402,"byte_end":42412,"line_start":1232,"line_end":1232,"column_start":5,"column_end":15},"name":"ImageQuery","qualname":"::Expression::ImageQuery","value":"Expression::ImageQuery { image, query }","parent":{"krate":0,"index":5568},"children":[],"decl_id":null,"docs":" Query information from an image.\n","sig":null,"attributes":[{"value":"/ Query information from an image.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42361,"byte_end":42397,"line_start":1231,"line_end":1231,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":5614},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42423,"byte_end":42428,"line_start":1233,"line_end":1233,"column_start":9,"column_end":14},"name":"image","qualname":"::Expression::ImageQuery::image","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5613},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5615},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42458,"byte_end":42463,"line_start":1234,"line_end":1234,"column_start":9,"column_end":14},"name":"query","qualname":"::Expression::ImageQuery::query","value":"ImageQuery","parent":{"krate":0,"index":5613},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5616},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42521,"byte_end":42526,"line_start":1237,"line_end":1237,"column_start":5,"column_end":10},"name":"Unary","qualname":"::Expression::Unary","value":"Expression::Unary { op, expr }","parent":{"krate":0,"index":5568},"children":[],"decl_id":null,"docs":" Apply an unary operator.\n","sig":null,"attributes":[{"value":"/ Apply an unary operator.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42488,"byte_end":42516,"line_start":1236,"line_end":1236,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5617},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42537,"byte_end":42539,"line_start":1238,"line_end":1238,"column_start":9,"column_end":11},"name":"op","qualname":"::Expression::Unary::op","value":"UnaryOperator","parent":{"krate":0,"index":5616},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5618},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42564,"byte_end":42568,"line_start":1239,"line_end":1239,"column_start":9,"column_end":13},"name":"expr","qualname":"::Expression::Unary::expr","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5616},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5619},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42634,"byte_end":42640,"line_start":1242,"line_end":1242,"column_start":5,"column_end":11},"name":"Binary","qualname":"::Expression::Binary","value":"Expression::Binary { op, left, right }","parent":{"krate":0,"index":5568},"children":[],"decl_id":null,"docs":" Apply a binary operator.\n","sig":null,"attributes":[{"value":"/ Apply a binary operator.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42601,"byte_end":42629,"line_start":1241,"line_end":1241,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5620},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42651,"byte_end":42653,"line_start":1243,"line_end":1243,"column_start":9,"column_end":11},"name":"op","qualname":"::Expression::Binary::op","value":"BinaryOperator","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5621},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42679,"byte_end":42683,"line_start":1244,"line_end":1244,"column_start":9,"column_end":13},"name":"left","qualname":"::Expression::Binary::left","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5622},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42713,"byte_end":42718,"line_start":1245,"line_end":1245,"column_start":9,"column_end":14},"name":"right","qualname":"::Expression::Binary::right","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5623},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42949,"byte_end":42955,"line_start":1251,"line_end":1251,"column_start":5,"column_end":11},"name":"Select","qualname":"::Expression::Select","value":"Expression::Select { condition, accept, reject }","parent":{"krate":0,"index":5568},"children":[],"decl_id":null,"docs":" Select between two values based on a condition.","sig":null,"attributes":[{"value":"/ Select between two values based on a condition.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42751,"byte_end":42802,"line_start":1247,"line_end":1247,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42807,"byte_end":42810,"line_start":1248,"line_end":1248,"column_start":5,"column_end":8}},{"value":"/ Note that, because expressions have no side effects, it is unobservable","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42815,"byte_end":42890,"line_start":1249,"line_end":1249,"column_start":5,"column_end":80}},{"value":"/ whether the non-selected branch is evaluated.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42895,"byte_end":42944,"line_start":1250,"line_end":1250,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":5624},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42997,"byte_end":43006,"line_start":1253,"line_end":1253,"column_start":9,"column_end":18},"name":"condition","qualname":"::Expression::Select::condition","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5623},"children":[],"decl_id":null,"docs":" Boolean expression\n","sig":null,"attributes":[{"value":"/ Boolean expression","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":42966,"byte_end":42988,"line_start":1252,"line_end":1252,"column_start":9,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":5625},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43036,"byte_end":43042,"line_start":1254,"line_end":1254,"column_start":9,"column_end":15},"name":"accept","qualname":"::Expression::Select::accept","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5623},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5626},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43072,"byte_end":43078,"line_start":1255,"line_end":1255,"column_start":9,"column_end":15},"name":"reject","qualname":"::Expression::Select::reject","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5623},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5627},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43154,"byte_end":43164,"line_start":1258,"line_end":1258,"column_start":5,"column_end":15},"name":"Derivative","qualname":"::Expression::Derivative","value":"Expression::Derivative { axis, expr }","parent":{"krate":0,"index":5568},"children":[],"decl_id":null,"docs":" Compute the derivative on an axis.\n","sig":null,"attributes":[{"value":"/ Compute the derivative on an axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43111,"byte_end":43149,"line_start":1257,"line_end":1257,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":5628},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43175,"byte_end":43179,"line_start":1259,"line_end":1259,"column_start":9,"column_end":13},"name":"axis","qualname":"::Expression::Derivative::axis","value":"DerivativeAxis","parent":{"krate":0,"index":5627},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5629},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43225,"byte_end":43229,"line_start":1261,"line_end":1261,"column_start":9,"column_end":13},"name":"expr","qualname":"::Expression::Derivative::expr","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5627},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5630},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43298,"byte_end":43308,"line_start":1264,"line_end":1264,"column_start":5,"column_end":15},"name":"Relational","qualname":"::Expression::Relational","value":"Expression::Relational { fun, argument }","parent":{"krate":0,"index":5568},"children":[],"decl_id":null,"docs":" Call a relational function.\n","sig":null,"attributes":[{"value":"/ Call a relational function.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43262,"byte_end":43293,"line_start":1263,"line_end":1263,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5631},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43319,"byte_end":43322,"line_start":1265,"line_end":1265,"column_start":9,"column_end":12},"name":"fun","qualname":"::Expression::Relational::fun","value":"RelationalFunction","parent":{"krate":0,"index":5630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5632},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43352,"byte_end":43360,"line_start":1266,"line_end":1266,"column_start":9,"column_end":17},"name":"argument","qualname":"::Expression::Relational::argument","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5633},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43422,"byte_end":43426,"line_start":1269,"line_end":1269,"column_start":5,"column_end":9},"name":"Math","qualname":"::Expression::Math","value":"Expression::Math { fun, arg, arg1, arg2, arg3 }","parent":{"krate":0,"index":5568},"children":[],"decl_id":null,"docs":" Call a math function\n","sig":null,"attributes":[{"value":"/ Call a math function","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43393,"byte_end":43417,"line_start":1268,"line_end":1268,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":5634},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43437,"byte_end":43440,"line_start":1270,"line_end":1270,"column_start":9,"column_end":12},"name":"fun","qualname":"::Expression::Math::fun","value":"MathFunction","parent":{"krate":0,"index":5633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5635},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43464,"byte_end":43467,"line_start":1271,"line_end":1271,"column_start":9,"column_end":12},"name":"arg","qualname":"::Expression::Math::arg","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5636},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43497,"byte_end":43501,"line_start":1272,"line_end":1272,"column_start":9,"column_end":13},"name":"arg1","qualname":"::Expression::Math::arg1","value":"std::option::Option<arena::Handle<Expression>>","parent":{"krate":0,"index":5633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5637},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43539,"byte_end":43543,"line_start":1273,"line_end":1273,"column_start":9,"column_end":13},"name":"arg2","qualname":"::Expression::Math::arg2","value":"std::option::Option<arena::Handle<Expression>>","parent":{"krate":0,"index":5633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5638},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43581,"byte_end":43585,"line_start":1274,"line_end":1274,"column_start":9,"column_end":13},"name":"arg3","qualname":"::Expression::Math::arg3","value":"std::option::Option<arena::Handle<Expression>>","parent":{"krate":0,"index":5633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5639},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43670,"byte_end":43672,"line_start":1277,"line_end":1277,"column_start":5,"column_end":7},"name":"As","qualname":"::Expression::As","value":"Expression::As { expr, kind, convert }","parent":{"krate":0,"index":5568},"children":[],"decl_id":null,"docs":" Cast a simple type to another kind.\n","sig":null,"attributes":[{"value":"/ Cast a simple type to another kind.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43626,"byte_end":43665,"line_start":1276,"line_end":1276,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":5640},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43754,"byte_end":43758,"line_start":1279,"line_end":1279,"column_start":9,"column_end":13},"name":"expr","qualname":"::Expression::As::expr","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5639},"children":[],"decl_id":null,"docs":" Source expression, which can only be a scalar or a vector.\n","sig":null,"attributes":[{"value":"/ Source expression, which can only be a scalar or a vector.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43683,"byte_end":43745,"line_start":1278,"line_end":1278,"column_start":9,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":5641},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43820,"byte_end":43824,"line_start":1281,"line_end":1281,"column_start":9,"column_end":13},"name":"kind","qualname":"::Expression::As::kind","value":"ScalarKind","parent":{"krate":0,"index":5639},"children":[],"decl_id":null,"docs":" Target scalar kind.\n","sig":null,"attributes":[{"value":"/ Target scalar kind.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43788,"byte_end":43811,"line_start":1280,"line_end":1280,"column_start":9,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5642},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43941,"byte_end":43948,"line_start":1284,"line_end":1284,"column_start":9,"column_end":16},"name":"convert","qualname":"::Expression::As::convert","value":"std::option::Option<u8>","parent":{"krate":0,"index":5639},"children":[],"decl_id":null,"docs":" If provided, converts to the specified byte width.\n Otherwise, bitcast.\n","sig":null,"attributes":[{"value":"/ If provided, converts to the specified byte width.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43846,"byte_end":43900,"line_start":1282,"line_end":1282,"column_start":9,"column_end":63}},{"value":"/ Otherwise, bitcast.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43909,"byte_end":43932,"line_start":1283,"line_end":1283,"column_start":9,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5643},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":44020,"byte_end":44030,"line_start":1287,"line_end":1287,"column_start":5,"column_end":15},"name":"CallResult","qualname":"::Expression::CallResult","value":"Expression::CallResult(Handle<Function>)","parent":{"krate":0,"index":5568},"children":[],"decl_id":null,"docs":" Result of calling another function.\n","sig":null,"attributes":[{"value":"/ Result of calling another function.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":43976,"byte_end":44015,"line_start":1286,"line_end":1286,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":5645},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":44031,"byte_end":44047,"line_start":1287,"line_end":1287,"column_start":16,"column_end":32},"name":"0","qualname":"::Expression::CallResult::0","value":"arena::Handle<Function>","parent":{"krate":0,"index":5643},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5646},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":44093,"byte_end":44105,"line_start":1289,"line_end":1289,"column_start":5,"column_end":17},"name":"AtomicResult","qualname":"::Expression::AtomicResult","value":"Expression::AtomicResult { kind, width, comparison }","parent":{"krate":0,"index":5568},"children":[],"decl_id":null,"docs":" Result of an atomic operation.\n","sig":null,"attributes":[{"value":"/ Result of an atomic operation.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":44054,"byte_end":44088,"line_start":1288,"line_end":1288,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":5647},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":44116,"byte_end":44120,"line_start":1290,"line_end":1290,"column_start":9,"column_end":13},"name":"kind","qualname":"::Expression::AtomicResult::kind","value":"ScalarKind","parent":{"krate":0,"index":5646},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5648},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":44142,"byte_end":44147,"line_start":1291,"line_end":1291,"column_start":9,"column_end":14},"name":"width","qualname":"::Expression::AtomicResult::width","value":"u8","parent":{"krate":0,"index":5646},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5649},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":44164,"byte_end":44174,"line_start":1292,"line_end":1292,"column_start":9,"column_end":19},"name":"comparison","qualname":"::Expression::AtomicResult::comparison","value":"bool","parent":{"krate":0,"index":5646},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5650},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":44489,"byte_end":44500,"line_start":1299,"line_end":1299,"column_start":5,"column_end":16},"name":"ArrayLength","qualname":"::Expression::ArrayLength","value":"Expression::ArrayLength(Handle<Expression>)","parent":{"krate":0,"index":5568},"children":[],"decl_id":null,"docs":" Get the length of an array.\n The expression must resolve to a pointer to an array with a dynamic size.","sig":null,"attributes":[{"value":"/ Get the length of an array.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":44193,"byte_end":44224,"line_start":1294,"line_end":1294,"column_start":5,"column_end":36}},{"value":"/ The expression must resolve to a pointer to an array with a dynamic size.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":44229,"byte_end":44306,"line_start":1295,"line_end":1295,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":44311,"byte_end":44314,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ This doesn't match the semantics of spirv's `OpArrayLength`, which must be passed","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":44319,"byte_end":44404,"line_start":1297,"line_end":1297,"column_start":5,"column_end":90}},{"value":"/ a pointer to a structure containing a runtime array in its' last field.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":44409,"byte_end":44484,"line_start":1298,"line_end":1298,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":5652},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":44501,"byte_end":44519,"line_start":1299,"line_end":1299,"column_start":17,"column_end":35},"name":"0","qualname":"::Expression::ArrayLength::0","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5568},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":33705,"byte_end":33715,"line_start":1024,"line_end":1024,"column_start":10,"column_end":20},"name":"Expression","qualname":"::Expression","value":"enum Expression {\n    Access {\n            base: Handle<Expression>,\n            index: Handle<Expression>,\n        },\n    AccessIndex {\n            base: Handle<Expression>,\n            index: u32,\n        },\n    Constant(Handle<Constant>),\n    Splat {\n            size: VectorSize,\n            value: Handle<Expression>,\n        },\n    Swizzle {\n            size: VectorSize,\n            vector: Handle<Expression>,\n            pattern: [SwizzleComponent; ],\n        },\n    Compose {\n            ty: Handle<Type>,\n            components: Vec<Handle<Expression>>,\n        },\n    FunctionArgument(u32),\n    GlobalVariable(Handle<GlobalVariable>),\n    LocalVariable(Handle<LocalVariable>),\n    Load {\n            pointer: Handle<Expression>,\n        },\n    ImageSample {\n            image: Handle<Expression>,\n            sampler: Handle<Expression>,\n            coordinate: Handle<Expression>,\n            array_index: Option<Handle<Expression>>,\n            offset: Option<Handle<Constant>>,\n            level: SampleLevel,\n            depth_ref: Option<Handle<Expression>>,\n        },\n    ImageLoad {\n            image: Handle<Expression>,\n            coordinate: Handle<Expression>,\n            array_index: Option<Handle<Expression>>,\n            index: Option<Handle<Expression>>,\n        },\n    ImageQuery {\n            image: Handle<Expression>,\n            query: ImageQuery,\n        },\n    Unary {\n            op: UnaryOperator,\n            expr: Handle<Expression>,\n        },\n    Binary {\n            op: BinaryOperator,\n            left: Handle<Expression>,\n            right: Handle<Expression>,\n        },\n    Select {\n            condition: Handle<Expression>,\n            accept: Handle<Expression>,\n            reject: Handle<Expression>,\n        },\n    Derivative {\n            axis: DerivativeAxis,\n            expr: Handle<Expression>,\n        },\n    Relational {\n            fun: RelationalFunction,\n            argument: Handle<Expression>,\n        },\n    Math {\n            fun: MathFunction,\n            arg: Handle<Expression>,\n            arg1: Option<Handle<Expression>>,\n            arg2: Option<Handle<Expression>>,\n            arg3: Option<Handle<Expression>>,\n        },\n    As {\n            expr: Handle<Expression>,\n            kind: ScalarKind,\n            convert: Option<Bytes>,\n        },\n    CallResult(Handle<Function>),\n    AtomicResult {\n            kind: ScalarKind,\n            width: Bytes,\n            comparison: bool,\n        },\n    ArrayLength(Handle<Expression>),\n}","parent":null,"children":[{"krate":0,"index":5569},{"krate":0,"index":5572},{"krate":0,"index":5575},{"krate":0,"index":5578},{"krate":0,"index":5581},{"krate":0,"index":5586},{"krate":0,"index":5589},{"krate":0,"index":5592},{"krate":0,"index":5595},{"krate":0,"index":5598},{"krate":0,"index":5600},{"krate":0,"index":5608},{"krate":0,"index":5613},{"krate":0,"index":5616},{"krate":0,"index":5619},{"krate":0,"index":5623},{"krate":0,"index":5627},{"krate":0,"index":5630},{"krate":0,"index":5633},{"krate":0,"index":5639},{"krate":0,"index":5643},{"krate":0,"index":5646},{"krate":0,"index":5650}],"decl_id":null,"docs":" An expression that can be evaluated to obtain a value.","sig":null,"attributes":[{"value":"/ An expression that can be evaluated to obtain a value.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":33389,"byte_end":33447,"line_start":1017,"line_end":1017,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":33448,"byte_end":33451,"line_start":1018,"line_end":1018,"column_start":1,"column_end":4}},{"value":"/ This is a Single Static Assignment (SSA) scheme similar to SPIR-V.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":33452,"byte_end":33522,"line_start":1019,"line_end":1019,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":5657},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":44806,"byte_end":44816,"line_start":1309,"line_end":1309,"column_start":12,"column_end":22},"name":"SwitchCase","qualname":"::SwitchCase","value":"SwitchCase { value, body, fall_through }","parent":null,"children":[{"krate":0,"index":5658},{"krate":0,"index":5659},{"krate":0,"index":5660}],"decl_id":null,"docs":" A case for a switch statement.\n","sig":null,"attributes":[{"value":"/ A case for a switch statement.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":44548,"byte_end":44582,"line_start":1304,"line_end":1304,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":5658},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":44882,"byte_end":44887,"line_start":1311,"line_end":1311,"column_start":9,"column_end":14},"name":"value","qualname":"::SwitchCase::value","value":"i32","parent":{"krate":0,"index":5657},"children":[],"decl_id":null,"docs":" Value, upon which the case is considered true.\n","sig":null,"attributes":[{"value":"/ Value, upon which the case is considered true.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":44823,"byte_end":44873,"line_start":1310,"line_end":1310,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":5659},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":44928,"byte_end":44932,"line_start":1313,"line_end":1313,"column_start":9,"column_end":13},"name":"body","qualname":"::SwitchCase::body","value":"block::Block","parent":{"krate":0,"index":5657},"children":[],"decl_id":null,"docs":" Body of the case.\n","sig":null,"attributes":[{"value":"/ Body of the case.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":44898,"byte_end":44919,"line_start":1312,"line_end":1312,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":5660},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":45043,"byte_end":45055,"line_start":1316,"line_end":1316,"column_start":9,"column_end":21},"name":"fall_through","qualname":"::SwitchCase::fall_through","value":"bool","parent":{"krate":0,"index":5657},"children":[],"decl_id":null,"docs":" If true, the control flow continues to the next case in the list,\n or default.\n","sig":null,"attributes":[{"value":"/ If true, the control flow continues to the next case in the list,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":44945,"byte_end":45014,"line_start":1314,"line_end":1314,"column_start":5,"column_end":74}},{"value":"/ or default.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":45019,"byte_end":45034,"line_start":1315,"line_end":1315,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5666},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":45664,"byte_end":45668,"line_start":1331,"line_end":1331,"column_start":5,"column_end":9},"name":"Emit","qualname":"::Statement::Emit","value":"Statement::Emit(Range<Expression>)","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Emit a range of expressions, visible to all statements that follow in this block.","sig":null,"attributes":[{"value":"/ Emit a range of expressions, visible to all statements that follow in this block.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":45440,"byte_end":45525,"line_start":1326,"line_end":1326,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":45530,"byte_end":45533,"line_start":1327,"line_end":1327,"column_start":5,"column_end":8}},{"value":"/ See the [module-level documentation][emit] for details.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":45538,"byte_end":45597,"line_start":1328,"line_end":1328,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":45602,"byte_end":45605,"line_start":1329,"line_end":1329,"column_start":5,"column_end":8}},{"value":"/ [emit]: index.html#expression-evaluation-time","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":45610,"byte_end":45659,"line_start":1330,"line_end":1330,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":5668},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":45669,"byte_end":45686,"line_start":1331,"line_end":1331,"column_start":10,"column_end":27},"name":"0","qualname":"::Statement::Emit::0","value":"arena::Range<Expression>","parent":{"krate":0,"index":5666},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5669},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":45766,"byte_end":45771,"line_start":1333,"line_end":1333,"column_start":5,"column_end":10},"name":"Block","qualname":"::Statement::Block","value":"Statement::Block(Block)","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" A block containing more statements, to be executed sequentially.\n","sig":null,"attributes":[{"value":"/ A block containing more statements, to be executed sequentially.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":45693,"byte_end":45761,"line_start":1332,"line_end":1332,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":5671},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":45772,"byte_end":45777,"line_start":1333,"line_end":1333,"column_start":11,"column_end":16},"name":"0","qualname":"::Statement::Block::0","value":"block::Block","parent":{"krate":0,"index":5669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5672},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":45871,"byte_end":45873,"line_start":1335,"line_end":1335,"column_start":5,"column_end":7},"name":"If","qualname":"::Statement::If","value":"Statement::If { condition, accept, reject }","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Conditionally executes one of two blocks, based on the value of the condition.\n","sig":null,"attributes":[{"value":"/ Conditionally executes one of two blocks, based on the value of the condition.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":45784,"byte_end":45866,"line_start":1334,"line_end":1334,"column_start":5,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":5673},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":45884,"byte_end":45893,"line_start":1336,"line_end":1336,"column_start":9,"column_end":18},"name":"condition","qualname":"::Statement::If::condition","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5672},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5674},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":45930,"byte_end":45936,"line_start":1337,"line_end":1337,"column_start":9,"column_end":15},"name":"accept","qualname":"::Statement::If::accept","value":"block::Block","parent":{"krate":0,"index":5672},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5675},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":45953,"byte_end":45959,"line_start":1338,"line_end":1338,"column_start":9,"column_end":15},"name":"reject","qualname":"::Statement::If::reject","value":"block::Block","parent":{"krate":0,"index":5672},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5676},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":46070,"byte_end":46076,"line_start":1341,"line_end":1341,"column_start":5,"column_end":11},"name":"Switch","qualname":"::Statement::Switch","value":"Statement::Switch { selector, cases, default }","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Conditionally executes one of multiple blocks, based on the value of the selector.\n","sig":null,"attributes":[{"value":"/ Conditionally executes one of multiple blocks, based on the value of the selector.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":45979,"byte_end":46065,"line_start":1340,"line_end":1340,"column_start":5,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":5677},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":46087,"byte_end":46095,"line_start":1342,"line_end":1342,"column_start":9,"column_end":17},"name":"selector","qualname":"::Statement::Switch::selector","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5676},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5678},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":46131,"byte_end":46136,"line_start":1343,"line_end":1343,"column_start":9,"column_end":14},"name":"cases","qualname":"::Statement::Switch::cases","value":"std::vec::Vec<SwitchCase>","parent":{"krate":0,"index":5676},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5679},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":46163,"byte_end":46170,"line_start":1344,"line_end":1344,"column_start":9,"column_end":16},"name":"default","qualname":"::Statement::Switch::default","value":"block::Block","parent":{"krate":0,"index":5676},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5680},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47183,"byte_end":47187,"line_start":1368,"line_end":1368,"column_start":5,"column_end":9},"name":"Loop","qualname":"::Statement::Loop","value":"Statement::Loop { body, continuing }","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Executes a block repeatedly.","sig":null,"attributes":[{"value":"/ Executes a block repeatedly.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":46191,"byte_end":46223,"line_start":1347,"line_end":1347,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":46228,"byte_end":46231,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}},{"value":"/ Each iteration of the loop executes the `body` block, followed by the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":46236,"byte_end":46309,"line_start":1349,"line_end":1349,"column_start":5,"column_end":78}},{"value":"/ `continuing` block.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":46314,"byte_end":46337,"line_start":1350,"line_end":1350,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":46342,"byte_end":46345,"line_start":1351,"line_end":1351,"column_start":5,"column_end":8}},{"value":"/ Executing a [`Break`], [`Return`] or [`Kill`] statement exits the loop.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":46350,"byte_end":46425,"line_start":1352,"line_end":1352,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":46430,"byte_end":46433,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ A [`Continue`] statement in `body` jumps to the `continuing` block. The","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":46438,"byte_end":46513,"line_start":1354,"line_end":1354,"column_start":5,"column_end":80}},{"value":"/ `continuing` block is meant to be used to represent structures like the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":46518,"byte_end":46593,"line_start":1355,"line_end":1355,"column_start":5,"column_end":80}},{"value":"/ third expression of a C-style `for` loop head, to which `continue`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":46598,"byte_end":46668,"line_start":1356,"line_end":1356,"column_start":5,"column_end":75}},{"value":"/ statements in the loop's body jump.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":46673,"byte_end":46712,"line_start":1357,"line_end":1357,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":46717,"byte_end":46720,"line_start":1358,"line_end":1358,"column_start":5,"column_end":8}},{"value":"/ The `continuing` block and its substatements must not contain `Return`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":46725,"byte_end":46799,"line_start":1359,"line_end":1359,"column_start":5,"column_end":79}},{"value":"/ or `Kill` statements, or any `Break` or `Continue` statements targeting","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":46804,"byte_end":46879,"line_start":1360,"line_end":1360,"column_start":5,"column_end":80}},{"value":"/ this loop. (It may have `Break` and `Continue` statements targeting","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":46884,"byte_end":46955,"line_start":1361,"line_end":1361,"column_start":5,"column_end":76}},{"value":"/ loops or switches nested within the `continuing` block.)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":46960,"byte_end":47020,"line_start":1362,"line_end":1362,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47025,"byte_end":47028,"line_start":1363,"line_end":1363,"column_start":5,"column_end":8}},{"value":"/ [`Break`]: Statement::Break","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47033,"byte_end":47064,"line_start":1364,"line_end":1364,"column_start":5,"column_end":36}},{"value":"/ [`Continue`]: Statement::Continue","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47069,"byte_end":47106,"line_start":1365,"line_end":1365,"column_start":5,"column_end":42}},{"value":"/ [`Kill`]: Statement::Kill","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47111,"byte_end":47140,"line_start":1366,"line_end":1366,"column_start":5,"column_end":34}},{"value":"/ [`Return`]: Statement::Return","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47145,"byte_end":47178,"line_start":1367,"line_end":1367,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":5681},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47190,"byte_end":47194,"line_start":1368,"line_end":1368,"column_start":12,"column_end":16},"name":"body","qualname":"::Statement::Loop::body","value":"block::Block","parent":{"krate":0,"index":5680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5682},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47203,"byte_end":47213,"line_start":1368,"line_end":1368,"column_start":25,"column_end":35},"name":"continuing","qualname":"::Statement::Loop::continuing","value":"block::Block","parent":{"krate":0,"index":5680},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5683},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47560,"byte_end":47565,"line_start":1378,"line_end":1378,"column_start":5,"column_end":10},"name":"Break","qualname":"::Statement::Break","value":"Statement::Break","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Exits the innermost enclosing [`Loop`] or [`Switch`].","sig":null,"attributes":[{"value":"/ Exits the innermost enclosing [`Loop`] or [`Switch`].","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47229,"byte_end":47286,"line_start":1370,"line_end":1370,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47291,"byte_end":47294,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ A `Break` statement may only appear within a [`Loop`] or [`Switch`]","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47299,"byte_end":47370,"line_start":1372,"line_end":1372,"column_start":5,"column_end":76}},{"value":"/ statement. It may not break out of a [`Loop`] from within the loop's","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47375,"byte_end":47447,"line_start":1373,"line_end":1373,"column_start":5,"column_end":77}},{"value":"/ `continuing` block.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47452,"byte_end":47475,"line_start":1374,"line_end":1374,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47480,"byte_end":47483,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}},{"value":"/ [`Loop`]: Statement::Loop","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47488,"byte_end":47517,"line_start":1376,"line_end":1376,"column_start":5,"column_end":34}},{"value":"/ [`Switch`]: Statement::Switch","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47522,"byte_end":47555,"line_start":1377,"line_end":1377,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5685},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47891,"byte_end":47899,"line_start":1387,"line_end":1387,"column_start":5,"column_end":13},"name":"Continue","qualname":"::Statement::Continue","value":"Statement::Continue","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Skips to the `continuing` block of the innermost enclosing [`Loop`].","sig":null,"attributes":[{"value":"/ Skips to the `continuing` block of the innermost enclosing [`Loop`].","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47572,"byte_end":47644,"line_start":1380,"line_end":1380,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47649,"byte_end":47652,"line_start":1381,"line_end":1381,"column_start":5,"column_end":8}},{"value":"/ A `Continue` statement may only appear within the `body` block of the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47657,"byte_end":47730,"line_start":1382,"line_end":1382,"column_start":5,"column_end":78}},{"value":"/ innermost enclosing [`Loop`] statement. It must not appear within that","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47735,"byte_end":47809,"line_start":1383,"line_end":1383,"column_start":5,"column_end":79}},{"value":"/ loop's `continuing` block.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47814,"byte_end":47844,"line_start":1384,"line_end":1384,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47849,"byte_end":47852,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ [`Loop`]: Statement::Loop","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47857,"byte_end":47886,"line_start":1386,"line_end":1386,"column_start":5,"column_end":34}}]},{"kind":"StructVariant","id":{"krate":0,"index":5687},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48120,"byte_end":48126,"line_start":1395,"line_end":1395,"column_start":5,"column_end":11},"name":"Return","qualname":"::Statement::Return","value":"Statement::Return { value }","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Returns from the function (possibly with a value).","sig":null,"attributes":[{"value":"/ Returns from the function (possibly with a value).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47906,"byte_end":47960,"line_start":1389,"line_end":1389,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47965,"byte_end":47968,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ `Return` statements are forbidden within the `continuing` block of a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":47973,"byte_end":48045,"line_start":1391,"line_end":1391,"column_start":5,"column_end":77}},{"value":"/ [`Loop`] statement.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48050,"byte_end":48073,"line_start":1392,"line_end":1392,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48078,"byte_end":48081,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ [`Loop`]: Statement::Loop","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48086,"byte_end":48115,"line_start":1394,"line_end":1394,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":5688},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48129,"byte_end":48134,"line_start":1395,"line_end":1395,"column_start":14,"column_end":19},"name":"value","qualname":"::Statement::Return::value","value":"std::option::Option<arena::Handle<Expression>>","parent":{"krate":0,"index":5687},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5689},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48369,"byte_end":48373,"line_start":1403,"line_end":1403,"column_start":5,"column_end":9},"name":"Kill","qualname":"::Statement::Kill","value":"Statement::Kill","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Aborts the current shader execution.","sig":null,"attributes":[{"value":"/ Aborts the current shader execution.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48171,"byte_end":48211,"line_start":1397,"line_end":1397,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48216,"byte_end":48219,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ `Kill` statements are forbidden within the `continuing` block of a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48224,"byte_end":48294,"line_start":1399,"line_end":1399,"column_start":5,"column_end":75}},{"value":"/ [`Loop`] statement.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48299,"byte_end":48322,"line_start":1400,"line_end":1400,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48327,"byte_end":48330,"line_start":1401,"line_end":1401,"column_start":5,"column_end":8}},{"value":"/ [`Loop`]: Statement::Loop","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48335,"byte_end":48364,"line_start":1402,"line_end":1402,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5691},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48577,"byte_end":48584,"line_start":1408,"line_end":1408,"column_start":5,"column_end":12},"name":"Barrier","qualname":"::Statement::Barrier","value":"Statement::Barrier(Barrier)","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Synchronize invocations within the work group.\n The `Barrier` flags control which memory accesses should be synchronized.\n If empty, this becomes purely an execution barrier.\n","sig":null,"attributes":[{"value":"/ Synchronize invocations within the work group.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48380,"byte_end":48430,"line_start":1405,"line_end":1405,"column_start":5,"column_end":55}},{"value":"/ The `Barrier` flags control which memory accesses should be synchronized.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48435,"byte_end":48512,"line_start":1406,"line_end":1406,"column_start":5,"column_end":82}},{"value":"/ If empty, this becomes purely an execution barrier.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48517,"byte_end":48572,"line_start":1407,"line_end":1407,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":5693},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48585,"byte_end":48592,"line_start":1408,"line_end":1408,"column_start":13,"column_end":20},"name":"0","qualname":"::Statement::Barrier::0","value":"Barrier","parent":{"krate":0,"index":5691},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5694},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":49045,"byte_end":49050,"line_start":1419,"line_end":1419,"column_start":5,"column_end":10},"name":"Store","qualname":"::Statement::Store","value":"Statement::Store { pointer, value }","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Stores a value at an address.","sig":null,"attributes":[{"value":"/ Stores a value at an address.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48599,"byte_end":48632,"line_start":1409,"line_end":1409,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48637,"byte_end":48640,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/ For [`TypeInner::Atomic`] type behind the pointer, the value","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48645,"byte_end":48709,"line_start":1411,"line_end":1411,"column_start":5,"column_end":69}},{"value":"/ has to be a corresponding scalar.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48714,"byte_end":48751,"line_start":1412,"line_end":1412,"column_start":5,"column_end":42}},{"value":"/ For other types behind the pointer<T>, the value is T.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48756,"byte_end":48814,"line_start":1413,"line_end":1413,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48819,"byte_end":48822,"line_start":1414,"line_end":1414,"column_start":5,"column_end":8}},{"value":"/ This statement is a barrier for any operations on the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48827,"byte_end":48884,"line_start":1415,"line_end":1415,"column_start":5,"column_end":62}},{"value":"/ `Expression::LocalVariable` or `Expression::GlobalVariable`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48889,"byte_end":48952,"line_start":1416,"line_end":1416,"column_start":5,"column_end":68}},{"value":"/ that is the destination of an access chain, started","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":48957,"byte_end":49012,"line_start":1417,"line_end":1417,"column_start":5,"column_end":60}},{"value":"/ from the `pointer`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":49017,"byte_end":49040,"line_start":1418,"line_end":1418,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5695},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":49061,"byte_end":49068,"line_start":1420,"line_end":1420,"column_start":9,"column_end":16},"name":"pointer","qualname":"::Statement::Store::pointer","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5696},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":49098,"byte_end":49103,"line_start":1421,"line_end":1421,"column_start":9,"column_end":14},"name":"value","qualname":"::Statement::Store::value","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5697},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":49688,"byte_end":49698,"line_start":1434,"line_end":1434,"column_start":5,"column_end":15},"name":"ImageStore","qualname":"::Statement::ImageStore","value":"Statement::ImageStore { image, coordinate, array_index, value }","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Stores a texel value to an image.","sig":null,"attributes":[{"value":"/ Stores a texel value to an image.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":49136,"byte_end":49173,"line_start":1423,"line_end":1423,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":49178,"byte_end":49181,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ The `image`, `coordinate`, and `array_index` fields have the same","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":49186,"byte_end":49255,"line_start":1425,"line_end":1425,"column_start":5,"column_end":74}},{"value":"/ meanings as the corresponding operands of an [`ImageLoad`] expression;","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":49260,"byte_end":49334,"line_start":1426,"line_end":1426,"column_start":5,"column_end":79}},{"value":"/ see that documentation for details. Storing into multisampled images or","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":49339,"byte_end":49414,"line_start":1427,"line_end":1427,"column_start":5,"column_end":80}},{"value":"/ images with mipmaps is not supported, so there is no `index`operand.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":49419,"byte_end":49491,"line_start":1428,"line_end":1428,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":49496,"byte_end":49499,"line_start":1429,"line_end":1429,"column_start":5,"column_end":8}},{"value":"/ This statement is a barrier for any operations on the corresponding","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":49504,"byte_end":49575,"line_start":1430,"line_end":1430,"column_start":5,"column_end":76}},{"value":"/ [`Expression::GlobalVariable`] for this image.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":49580,"byte_end":49630,"line_start":1431,"line_end":1431,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":49635,"byte_end":49638,"line_start":1432,"line_end":1432,"column_start":5,"column_end":8}},{"value":"/ [`ImageLoad`]: Expression::ImageLoad","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":49643,"byte_end":49683,"line_start":1433,"line_end":1433,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":5698},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":49709,"byte_end":49714,"line_start":1435,"line_end":1435,"column_start":9,"column_end":14},"name":"image","qualname":"::Statement::ImageStore::image","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5699},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":49744,"byte_end":49754,"line_start":1436,"line_end":1436,"column_start":9,"column_end":19},"name":"coordinate","qualname":"::Statement::ImageStore::coordinate","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5700},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":49784,"byte_end":49795,"line_start":1437,"line_end":1437,"column_start":9,"column_end":20},"name":"array_index","qualname":"::Statement::ImageStore::array_index","value":"std::option::Option<arena::Handle<Expression>>","parent":{"krate":0,"index":5697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5701},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":49833,"byte_end":49838,"line_start":1438,"line_end":1438,"column_start":9,"column_end":14},"name":"value","qualname":"::Statement::ImageStore::value","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5702},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":49896,"byte_end":49902,"line_start":1441,"line_end":1441,"column_start":5,"column_end":11},"name":"Atomic","qualname":"::Statement::Atomic","value":"Statement::Atomic { pointer, fun, value, result }","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Atomic function.\n","sig":null,"attributes":[{"value":"/ Atomic function.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":49871,"byte_end":49891,"line_start":1440,"line_end":1440,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":5703},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":49953,"byte_end":49960,"line_start":1443,"line_end":1443,"column_start":9,"column_end":16},"name":"pointer","qualname":"::Statement::Atomic::pointer","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5702},"children":[],"decl_id":null,"docs":" Pointer to an atomic value.\n","sig":null,"attributes":[{"value":"/ Pointer to an atomic value.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":49913,"byte_end":49944,"line_start":1442,"line_end":1442,"column_start":9,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":5704},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":50033,"byte_end":50036,"line_start":1445,"line_end":1445,"column_start":9,"column_end":12},"name":"fun","qualname":"::Statement::Atomic::fun","value":"AtomicFunction","parent":{"krate":0,"index":5702},"children":[],"decl_id":null,"docs":" Function to run on the atomic.\n","sig":null,"attributes":[{"value":"/ Function to run on the atomic.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":49990,"byte_end":50024,"line_start":1444,"line_end":1444,"column_start":9,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":5705},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":50104,"byte_end":50109,"line_start":1447,"line_end":1447,"column_start":9,"column_end":14},"name":"value","qualname":"::Statement::Atomic::value","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5702},"children":[],"decl_id":null,"docs":" Value to use in the function.\n","sig":null,"attributes":[{"value":"/ Value to use in the function.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":50062,"byte_end":50095,"line_start":1446,"line_end":1446,"column_start":9,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":5706},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":50290,"byte_end":50296,"line_start":1451,"line_end":1451,"column_start":9,"column_end":15},"name":"result","qualname":"::Statement::Atomic::result","value":"arena::Handle<Expression>","parent":{"krate":0,"index":5702},"children":[],"decl_id":null,"docs":" [`AtomicResult`] expression representing this function's result.","sig":null,"attributes":[{"value":"/ [`AtomicResult`] expression representing this function's result.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":50139,"byte_end":50207,"line_start":1448,"line_end":1448,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":50216,"byte_end":50219,"line_start":1449,"line_end":1449,"column_start":9,"column_end":12}},{"value":"/ [`AtomicResult`]: crate::Expression::AtomicResult","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":50228,"byte_end":50281,"line_start":1450,"line_end":1450,"column_start":9,"column_end":62}}]},{"kind":"StructVariant","id":{"krate":0,"index":5707},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":50557,"byte_end":50561,"line_start":1458,"line_end":1458,"column_start":5,"column_end":9},"name":"Call","qualname":"::Statement::Call","value":"Statement::Call { function, arguments, result }","parent":{"krate":0,"index":5665},"children":[],"decl_id":null,"docs":" Calls a function.","sig":null,"attributes":[{"value":"/ Calls a function.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":50329,"byte_end":50350,"line_start":1453,"line_end":1453,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":50355,"byte_end":50358,"line_start":1454,"line_end":1454,"column_start":5,"column_end":8}},{"value":"/ If the `result` is `Some`, the corresponding expression has to be","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":50363,"byte_end":50432,"line_start":1455,"line_end":1455,"column_start":5,"column_end":74}},{"value":"/ `Expression::CallResult`, and this statement serves as a barrier for any","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":50437,"byte_end":50513,"line_start":1456,"line_end":1456,"column_start":5,"column_end":81}},{"value":"/ operations on that expression.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":50518,"byte_end":50552,"line_start":1457,"line_end":1457,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":5708},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":50572,"byte_end":50580,"line_start":1459,"line_end":1459,"column_start":9,"column_end":17},"name":"function","qualname":"::Statement::Call::function","value":"arena::Handle<Function>","parent":{"krate":0,"index":5707},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5709},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":50608,"byte_end":50617,"line_start":1460,"line_end":1460,"column_start":9,"column_end":18},"name":"arguments","qualname":"::Statement::Call::arguments","value":"std::vec::Vec<arena::Handle<Expression>>","parent":{"krate":0,"index":5707},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5710},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":50652,"byte_end":50658,"line_start":1461,"line_end":1461,"column_start":9,"column_end":15},"name":"result","qualname":"::Statement::Call::result","value":"std::option::Option<arena::Handle<Expression>>","parent":{"krate":0,"index":5707},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5665},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":45424,"byte_end":45433,"line_start":1325,"line_end":1325,"column_start":10,"column_end":19},"name":"Statement","qualname":"::Statement","value":"enum Statement {\n    Emit(Range<Expression>),\n    Block(Block),\n    If {\n            condition: Handle<Expression>,\n            accept: Block,\n            reject: Block,\n        },\n    Switch {\n            selector: Handle<Expression>,\n            cases: Vec<SwitchCase>,\n            default: Block,\n        },\n    Loop {\n            body: Block,\n            continuing: Block,\n        },\n    Break,\n    Continue,\n    Return {\n            value: Option<Handle<Expression>>,\n        },\n    Kill,\n    Barrier(Barrier),\n    Store {\n            pointer: Handle<Expression>,\n            value: Handle<Expression>,\n        },\n    ImageStore {\n            image: Handle<Expression>,\n            coordinate: Handle<Expression>,\n            array_index: Option<Handle<Expression>>,\n            value: Handle<Expression>,\n        },\n    Atomic {\n            pointer: Handle<Expression>,\n            fun: AtomicFunction,\n            value: Handle<Expression>,\n            result: Handle<Expression>,\n        },\n    Call {\n            function: Handle<Function>,\n            arguments: Vec<Handle<Expression>>,\n            result: Option<Handle<Expression>>,\n        },\n}","parent":null,"children":[{"krate":0,"index":5666},{"krate":0,"index":5669},{"krate":0,"index":5672},{"krate":0,"index":5676},{"krate":0,"index":5680},{"krate":0,"index":5683},{"krate":0,"index":5685},{"krate":0,"index":5687},{"krate":0,"index":5689},{"krate":0,"index":5691},{"krate":0,"index":5694},{"krate":0,"index":5697},{"krate":0,"index":5702},{"krate":0,"index":5707}],"decl_id":null,"docs":" Instructions which make up an executable block.\n","sig":null,"attributes":[{"value":"/ Instructions which make up an executable block.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":45151,"byte_end":45202,"line_start":1320,"line_end":1320,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":5715},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":50870,"byte_end":50886,"line_start":1469,"line_end":1469,"column_start":12,"column_end":28},"name":"FunctionArgument","qualname":"::FunctionArgument","value":"FunctionArgument { name, ty, binding }","parent":null,"children":[{"krate":0,"index":5716},{"krate":0,"index":5717},{"krate":0,"index":5718}],"decl_id":null,"docs":" A function argument.\n","sig":null,"attributes":[{"value":"/ A function argument.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":50698,"byte_end":50722,"line_start":1465,"line_end":1465,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":5716},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":50935,"byte_end":50939,"line_start":1471,"line_end":1471,"column_start":9,"column_end":13},"name":"name","qualname":"::FunctionArgument::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":5715},"children":[],"decl_id":null,"docs":" Name of the argument, if any.\n","sig":null,"attributes":[{"value":"/ Name of the argument, if any.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":50893,"byte_end":50926,"line_start":1470,"line_end":1470,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":5717},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":50995,"byte_end":50997,"line_start":1473,"line_end":1473,"column_start":9,"column_end":11},"name":"ty","qualname":"::FunctionArgument::ty","value":"arena::Handle<Type>","parent":{"krate":0,"index":5715},"children":[],"decl_id":null,"docs":" Type of the argument.\n","sig":null,"attributes":[{"value":"/ Type of the argument.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":50961,"byte_end":50986,"line_start":1472,"line_end":1472,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":5718},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":51114,"byte_end":51121,"line_start":1476,"line_end":1476,"column_start":9,"column_end":16},"name":"binding","qualname":"::FunctionArgument::binding","value":"std::option::Option<Binding>","parent":{"krate":0,"index":5715},"children":[],"decl_id":null,"docs":" For entry points, an argument has to have a binding\n unless it's a structure.\n","sig":null,"attributes":[{"value":"/ For entry points, an argument has to have a binding","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":51017,"byte_end":51072,"line_start":1474,"line_end":1474,"column_start":5,"column_end":60}},{"value":"/ unless it's a structure.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":51077,"byte_end":51105,"line_start":1475,"line_end":1475,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":5723},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":51290,"byte_end":51304,"line_start":1482,"line_end":1482,"column_start":12,"column_end":26},"name":"FunctionResult","qualname":"::FunctionResult","value":"FunctionResult { ty, binding }","parent":null,"children":[{"krate":0,"index":5724},{"krate":0,"index":5725}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5724},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":51343,"byte_end":51345,"line_start":1484,"line_end":1484,"column_start":9,"column_end":11},"name":"ty","qualname":"::FunctionResult::ty","value":"arena::Handle<Type>","parent":{"krate":0,"index":5723},"children":[],"decl_id":null,"docs":" Type of the result.\n","sig":null,"attributes":[{"value":"/ Type of the result.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":51311,"byte_end":51334,"line_start":1483,"line_end":1483,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":5725},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":51461,"byte_end":51468,"line_start":1487,"line_end":1487,"column_start":9,"column_end":16},"name":"binding","qualname":"::FunctionResult::binding","value":"std::option::Option<Binding>","parent":{"krate":0,"index":5723},"children":[],"decl_id":null,"docs":" For entry points, the result has to have a binding\n unless it's a structure.\n","sig":null,"attributes":[{"value":"/ For entry points, the result has to have a binding","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":51365,"byte_end":51419,"line_start":1485,"line_end":1485,"column_start":5,"column_end":59}},{"value":"/ unless it's a structure.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":51424,"byte_end":51452,"line_start":1486,"line_end":1486,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":5730},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":51677,"byte_end":51685,"line_start":1494,"line_end":1494,"column_start":12,"column_end":20},"name":"Function","qualname":"::Function","value":"Function { name, arguments, result, local_variables, expressions, named_expressions, body }","parent":null,"children":[{"krate":0,"index":5731},{"krate":0,"index":5732},{"krate":0,"index":5733},{"krate":0,"index":5734},{"krate":0,"index":5735},{"krate":0,"index":5736},{"krate":0,"index":5737}],"decl_id":null,"docs":" A function defined in the module.\n","sig":null,"attributes":[{"value":"/ A function defined in the module.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":51490,"byte_end":51527,"line_start":1490,"line_end":1490,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":5731},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":51734,"byte_end":51738,"line_start":1496,"line_end":1496,"column_start":9,"column_end":13},"name":"name","qualname":"::Function::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":5730},"children":[],"decl_id":null,"docs":" Name of the function, if any.\n","sig":null,"attributes":[{"value":"/ Name of the function, if any.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":51692,"byte_end":51725,"line_start":1495,"line_end":1495,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":5732},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":51809,"byte_end":51818,"line_start":1498,"line_end":1498,"column_start":9,"column_end":18},"name":"arguments","qualname":"::Function::arguments","value":"std::vec::Vec<FunctionArgument>","parent":{"krate":0,"index":5730},"children":[],"decl_id":null,"docs":" Information about function argument.\n","sig":null,"attributes":[{"value":"/ Information about function argument.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":51760,"byte_end":51800,"line_start":1497,"line_end":1497,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":5733},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":51896,"byte_end":51902,"line_start":1500,"line_end":1500,"column_start":9,"column_end":15},"name":"result","qualname":"::Function::result","value":"std::option::Option<FunctionResult>","parent":{"krate":0,"index":5730},"children":[],"decl_id":null,"docs":" The result of this function, if any.\n","sig":null,"attributes":[{"value":"/ The result of this function, if any.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":51847,"byte_end":51887,"line_start":1499,"line_end":1499,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":5734},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":51994,"byte_end":52009,"line_start":1502,"line_end":1502,"column_start":9,"column_end":24},"name":"local_variables","qualname":"::Function::local_variables","value":"arena::Arena<LocalVariable>","parent":{"krate":0,"index":5730},"children":[],"decl_id":null,"docs":" Local variables defined and used in the function.\n","sig":null,"attributes":[{"value":"/ Local variables defined and used in the function.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":51932,"byte_end":51985,"line_start":1501,"line_end":1501,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":5735},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":52190,"byte_end":52201,"line_start":1507,"line_end":1507,"column_start":9,"column_end":20},"name":"expressions","qualname":"::Function::expressions","value":"arena::Arena<Expression>","parent":{"krate":0,"index":5730},"children":[],"decl_id":null,"docs":" Expressions used inside this function.","sig":null,"attributes":[{"value":"/ Expressions used inside this function.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":52037,"byte_end":52079,"line_start":1503,"line_end":1503,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":52084,"byte_end":52087,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ An `Expression` must occur before all other `Expression`s that use its","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":52092,"byte_end":52166,"line_start":1505,"line_end":1505,"column_start":5,"column_end":79}},{"value":"/ value.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":52171,"byte_end":52181,"line_start":1506,"line_end":1506,"column_start":5,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":5736},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":52293,"byte_end":52310,"line_start":1509,"line_end":1509,"column_start":9,"column_end":26},"name":"named_expressions","qualname":"::Function::named_expressions","value":"std::collections::HashMap<arena::Handle<Expression>, std::string::String, std::hash::BuildHasherDefault<fxhash::FxHasher>>","parent":{"krate":0,"index":5730},"children":[],"decl_id":null,"docs":" Map of expressions that have associated variable names\n","sig":null,"attributes":[{"value":"/ Map of expressions that have associated variable names","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":52226,"byte_end":52284,"line_start":1508,"line_end":1508,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":5737},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":52405,"byte_end":52409,"line_start":1511,"line_end":1511,"column_start":9,"column_end":13},"name":"body","qualname":"::Function::body","value":"block::Block","parent":{"krate":0,"index":5730},"children":[],"decl_id":null,"docs":" Block of instructions comprising the body of the function.\n","sig":null,"attributes":[{"value":"/ Block of instructions comprising the body of the function.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":52334,"byte_end":52396,"line_start":1510,"line_end":1510,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":5742},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":54734,"byte_end":54744,"line_start":1557,"line_end":1557,"column_start":12,"column_end":22},"name":"EntryPoint","qualname":"::EntryPoint","value":"EntryPoint { name, stage, early_depth_test, workgroup_size, function }","parent":null,"children":[{"krate":0,"index":5743},{"krate":0,"index":5744},{"krate":0,"index":5745},{"krate":0,"index":5746},{"krate":0,"index":5748}],"decl_id":null,"docs":" The main function for a pipeline stage.","sig":null,"attributes":[{"value":"/ The main function for a pipeline stage.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":52421,"byte_end":52464,"line_start":1514,"line_end":1514,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":52465,"byte_end":52468,"line_start":1515,"line_end":1515,"column_start":1,"column_end":4}},{"value":"/ An [`EntryPoint`] is a [`Function`] that serves as the main function for a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":52469,"byte_end":52547,"line_start":1516,"line_end":1516,"column_start":1,"column_end":79}},{"value":"/ graphics or compute pipeline stage. For example, an `EntryPoint` whose","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":52548,"byte_end":52622,"line_start":1517,"line_end":1517,"column_start":1,"column_end":75}},{"value":"/ [`stage`] is [`ShaderStage::Vertex`] can serve as a graphics pipeline's","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":52623,"byte_end":52698,"line_start":1518,"line_end":1518,"column_start":1,"column_end":76}},{"value":"/ vertex shader.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":52699,"byte_end":52717,"line_start":1519,"line_end":1519,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":52718,"byte_end":52721,"line_start":1520,"line_end":1520,"column_start":1,"column_end":4}},{"value":"/ Since an entry point is called directly by the graphics or compute pipeline,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":52722,"byte_end":52802,"line_start":1521,"line_end":1521,"column_start":1,"column_end":81}},{"value":"/ not by other WGSL functions, you must specify what the pipeline should pass","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":52803,"byte_end":52882,"line_start":1522,"line_end":1522,"column_start":1,"column_end":80}},{"value":"/ as the entry point's arguments, and what values it will return. For example,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":52883,"byte_end":52963,"line_start":1523,"line_end":1523,"column_start":1,"column_end":81}},{"value":"/ a vertex shader needs a vertex's attributes as its arguments, but if it's","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":52964,"byte_end":53041,"line_start":1524,"line_end":1524,"column_start":1,"column_end":78}},{"value":"/ used for instanced draw calls, it will also want to know the instance id.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":53042,"byte_end":53119,"line_start":1525,"line_end":1525,"column_start":1,"column_end":78}},{"value":"/ The vertex shader's return value will usually include an output vertex","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":53120,"byte_end":53194,"line_start":1526,"line_end":1526,"column_start":1,"column_end":75}},{"value":"/ position, and possibly other attributes to be interpolated and passed along","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":53195,"byte_end":53274,"line_start":1527,"line_end":1527,"column_start":1,"column_end":80}},{"value":"/ to a fragment shader.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":53275,"byte_end":53300,"line_start":1528,"line_end":1528,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":53301,"byte_end":53304,"line_start":1529,"line_end":1529,"column_start":1,"column_end":4}},{"value":"/ To specify this, the arguments and result of an `EntryPoint`'s [`function`]","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":53305,"byte_end":53384,"line_start":1530,"line_end":1530,"column_start":1,"column_end":80}},{"value":"/ must each have a [`Binding`], or be structs whose members all have","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":53385,"byte_end":53455,"line_start":1531,"line_end":1531,"column_start":1,"column_end":71}},{"value":"/ `Binding`s. This associates every value passed to or returned from the entry","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":53456,"byte_end":53536,"line_start":1532,"line_end":1532,"column_start":1,"column_end":81}},{"value":"/ point with either a [`BuiltIn`] or a [`Location`]:","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":53537,"byte_end":53591,"line_start":1533,"line_end":1533,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":53592,"byte_end":53595,"line_start":1534,"line_end":1534,"column_start":1,"column_end":4}},{"value":"/ -   A [`BuiltIn`] has special semantics, usually specific to its pipeline","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":53596,"byte_end":53673,"line_start":1535,"line_end":1535,"column_start":1,"column_end":78}},{"value":"/     stage. For example, the result of a vertex shader can include a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":53674,"byte_end":53745,"line_start":1536,"line_end":1536,"column_start":1,"column_end":72}},{"value":"/     [`BuiltIn::Position`] value, which determines the position of a vertex","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":53746,"byte_end":53824,"line_start":1537,"line_end":1537,"column_start":1,"column_end":79}},{"value":"/     of a rendered primitive. Or, a compute shader might take an argument","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":53825,"byte_end":53901,"line_start":1538,"line_end":1538,"column_start":1,"column_end":77}},{"value":"/     whose binding is [`BuiltIn::WorkGroupSize`], through which the compute","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":53902,"byte_end":53980,"line_start":1539,"line_end":1539,"column_start":1,"column_end":79}},{"value":"/     pipeline would pass the number of invocations in your workgroup.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":53981,"byte_end":54053,"line_start":1540,"line_end":1540,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":54054,"byte_end":54057,"line_start":1541,"line_end":1541,"column_start":1,"column_end":4}},{"value":"/ -   A [`Location`] indicates user-defined IO to be passed from one pipeline","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":54058,"byte_end":54137,"line_start":1542,"line_end":1542,"column_start":1,"column_end":80}},{"value":"/     stage to the next. For example, a vertex shader might also produce a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":54138,"byte_end":54214,"line_start":1543,"line_end":1543,"column_start":1,"column_end":77}},{"value":"/     `uv` texture location as a user-defined IO value.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":54215,"byte_end":54272,"line_start":1544,"line_end":1544,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":54273,"byte_end":54276,"line_start":1545,"line_end":1545,"column_start":1,"column_end":4}},{"value":"/ In other words, the pipeline stage's input and output interface are","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":54277,"byte_end":54348,"line_start":1546,"line_end":1546,"column_start":1,"column_end":72}},{"value":"/ determined by the bindings of the arguments and result of the `EntryPoint`'s","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":54349,"byte_end":54429,"line_start":1547,"line_end":1547,"column_start":1,"column_end":81}},{"value":"/ [`function`].","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":54430,"byte_end":54447,"line_start":1548,"line_end":1548,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":54448,"byte_end":54451,"line_start":1549,"line_end":1549,"column_start":1,"column_end":4}},{"value":"/ [`Function`]: crate::Function","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":54452,"byte_end":54485,"line_start":1550,"line_end":1550,"column_start":1,"column_end":34}},{"value":"/ [`Location`]: Binding::Location","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":54486,"byte_end":54521,"line_start":1551,"line_end":1551,"column_start":1,"column_end":36}},{"value":"/ [`function`]: EntryPoint::function","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":54522,"byte_end":54560,"line_start":1552,"line_end":1552,"column_start":1,"column_end":39}},{"value":"/ [`stage`]: EntryPoint::stage","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":54561,"byte_end":54593,"line_start":1553,"line_end":1553,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5743},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":54897,"byte_end":54901,"line_start":1561,"line_end":1561,"column_start":9,"column_end":13},"name":"name","qualname":"::EntryPoint::name","value":"std::string::String","parent":{"krate":0,"index":5742},"children":[],"decl_id":null,"docs":" Name of this entry point, visible externally.","sig":null,"attributes":[{"value":"/ Name of this entry point, visible externally.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":54751,"byte_end":54800,"line_start":1558,"line_end":1558,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":54805,"byte_end":54808,"line_start":1559,"line_end":1559,"column_start":5,"column_end":8}},{"value":"/ Entry point names for a given `stage` must be distinct within a module.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":54813,"byte_end":54888,"line_start":1560,"line_end":1560,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":5744},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":54941,"byte_end":54946,"line_start":1563,"line_end":1563,"column_start":9,"column_end":14},"name":"stage","qualname":"::EntryPoint::stage","value":"ShaderStage","parent":{"krate":0,"index":5742},"children":[],"decl_id":null,"docs":" Shader stage.\n","sig":null,"attributes":[{"value":"/ Shader stage.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":54915,"byte_end":54932,"line_start":1562,"line_end":1562,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":5745},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":55015,"byte_end":55031,"line_start":1565,"line_end":1565,"column_start":9,"column_end":25},"name":"early_depth_test","qualname":"::EntryPoint::early_depth_test","value":"std::option::Option<EarlyDepthTest>","parent":{"krate":0,"index":5742},"children":[],"decl_id":null,"docs":" Early depth test for fragment stages.\n","sig":null,"attributes":[{"value":"/ Early depth test for fragment stages.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":54965,"byte_end":55006,"line_start":1564,"line_end":1564,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":5746},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":55107,"byte_end":55121,"line_start":1567,"line_end":1567,"column_start":9,"column_end":23},"name":"workgroup_size","qualname":"::EntryPoint::workgroup_size","value":"[u32; 3]","parent":{"krate":0,"index":5742},"children":[],"decl_id":null,"docs":" Workgroup size for compute stages\n","sig":null,"attributes":[{"value":"/ Workgroup size for compute stages","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":55061,"byte_end":55098,"line_start":1566,"line_end":1566,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":5748},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":55172,"byte_end":55180,"line_start":1569,"line_end":1569,"column_start":9,"column_end":17},"name":"function","qualname":"::EntryPoint::function","value":"Function","parent":{"krate":0,"index":5742},"children":[],"decl_id":null,"docs":" The entrance function.\n","sig":null,"attributes":[{"value":"/ The entrance function.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":55137,"byte_end":55163,"line_start":1568,"line_end":1568,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5751},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":55830,"byte_end":55836,"line_start":1586,"line_end":1586,"column_start":12,"column_end":18},"name":"Module","qualname":"::Module","value":"Module { types, constants, global_variables, functions, entry_points }","parent":null,"children":[{"krate":0,"index":5752},{"krate":0,"index":5753},{"krate":0,"index":5754},{"krate":0,"index":5755},{"krate":0,"index":5756}],"decl_id":null,"docs":" Shader module.","sig":null,"attributes":[{"value":"/ Shader module.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":55195,"byte_end":55213,"line_start":1572,"line_end":1572,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":55214,"byte_end":55217,"line_start":1573,"line_end":1573,"column_start":1,"column_end":4}},{"value":"/ A module is a set of constants, global variables and functions, as well as","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":55218,"byte_end":55296,"line_start":1574,"line_end":1574,"column_start":1,"column_end":79}},{"value":"/ the types required to define them.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":55297,"byte_end":55335,"line_start":1575,"line_end":1575,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":55336,"byte_end":55339,"line_start":1576,"line_end":1576,"column_start":1,"column_end":4}},{"value":"/ Some functions are marked as entry points, to be used in a certain shader stage.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":55340,"byte_end":55424,"line_start":1577,"line_end":1577,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":55425,"byte_end":55428,"line_start":1578,"line_end":1578,"column_start":1,"column_end":4}},{"value":"/ To create a new module, use the `Default` implementation.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":55429,"byte_end":55490,"line_start":1579,"line_end":1579,"column_start":1,"column_end":62}},{"value":"/ Alternatively, you can load an existing shader using one of the [available front ends][front].","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":55491,"byte_end":55589,"line_start":1580,"line_end":1580,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":55590,"byte_end":55593,"line_start":1581,"line_end":1581,"column_start":1,"column_end":4}},{"value":"/ When finished, you can export modules using one of the [available backends][back].","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":55594,"byte_end":55680,"line_start":1582,"line_end":1582,"column_start":1,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":5752},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":55901,"byte_end":55906,"line_start":1588,"line_end":1588,"column_start":9,"column_end":14},"name":"types","qualname":"::Module::types","value":"arena::UniqueArena<Type>","parent":{"krate":0,"index":5751},"children":[],"decl_id":null,"docs":" Storage for the types defined in this module.\n","sig":null,"attributes":[{"value":"/ Storage for the types defined in this module.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":55843,"byte_end":55892,"line_start":1587,"line_end":1587,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":5753},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":55993,"byte_end":56002,"line_start":1590,"line_end":1590,"column_start":9,"column_end":18},"name":"constants","qualname":"::Module::constants","value":"arena::Arena<Constant>","parent":{"krate":0,"index":5751},"children":[],"decl_id":null,"docs":" Storage for the constants defined in this module.\n","sig":null,"attributes":[{"value":"/ Storage for the constants defined in this module.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":55931,"byte_end":55984,"line_start":1589,"line_end":1589,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":5754},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":56094,"byte_end":56110,"line_start":1592,"line_end":1592,"column_start":9,"column_end":25},"name":"global_variables","qualname":"::Module::global_variables","value":"arena::Arena<GlobalVariable>","parent":{"krate":0,"index":5751},"children":[],"decl_id":null,"docs":" Storage for the global variables defined in this module.\n","sig":null,"attributes":[{"value":"/ Storage for the global variables defined in this module.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":56025,"byte_end":56085,"line_start":1591,"line_end":1591,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":5755},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":56326,"byte_end":56335,"line_start":1597,"line_end":1597,"column_start":9,"column_end":18},"name":"functions","qualname":"::Module::functions","value":"arena::Arena<Function>","parent":{"krate":0,"index":5751},"children":[],"decl_id":null,"docs":" Storage for the functions defined in this module.","sig":null,"attributes":[{"value":"/ Storage for the functions defined in this module.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":56139,"byte_end":56192,"line_start":1593,"line_end":1593,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":56197,"byte_end":56200,"line_start":1594,"line_end":1594,"column_start":5,"column_end":8}},{"value":"/ Each function must appear in this arena strictly before all its callers.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":56205,"byte_end":56281,"line_start":1595,"line_end":1595,"column_start":5,"column_end":81}},{"value":"/ Recursion is not supported.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":56286,"byte_end":56317,"line_start":1596,"line_end":1596,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5756},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":56384,"byte_end":56396,"line_start":1599,"line_end":1599,"column_start":9,"column_end":21},"name":"entry_points","qualname":"::Module::entry_points","value":"std::vec::Vec<EntryPoint>","parent":{"krate":0,"index":5751},"children":[],"decl_id":null,"docs":" Entry points.\n","sig":null,"attributes":[{"value":"/ Entry points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":56358,"byte_end":56375,"line_start":1598,"line_end":1598,"column_start":5,"column_end":22}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":57282,"byte_end":57288,"line_start":26,"line_end":26,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":57440,"byte_end":57446,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":57475,"byte_end":57481,"line_start":35,"line_end":35,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":57585,"byte_end":57591,"line_start":40,"line_end":40,"column_start":16,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":57621,"byte_end":57627,"line_start":41,"line_end":41,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":57764,"byte_end":57770,"line_start":46,"line_end":46,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":57890,"byte_end":57896,"line_start":51,"line_end":51,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":58046,"byte_end":58052,"line_start":56,"line_end":56,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":58161,"byte_end":58167,"line_start":62,"line_end":62,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":59608,"byte_end":59613,"line_start":112,"line_end":112,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":59778,"byte_end":59783,"line_start":120,"line_end":120,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":59961,"byte_end":59966,"line_start":125,"line_end":125,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":60967,"byte_end":60972,"line_start":157,"line_end":157,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":61068,"byte_end":61073,"line_start":162,"line_end":162,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":61207,"byte_end":61212,"line_start":168,"line_end":168,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":65578,"byte_end":65583,"line_start":316,"line_end":316,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":65738,"byte_end":65743,"line_start":323,"line_end":323,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":65889,"byte_end":65894,"line_start":329,"line_end":329,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":68378,"byte_end":68389,"line_start":404,"line_end":404,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":69774,"byte_end":69785,"line_start":454,"line_end":454,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":71898,"byte_end":71909,"line_start":514,"line_end":514,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":72024,"byte_end":72035,"line_start":520,"line_end":520,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":72195,"byte_end":72206,"line_start":526,"line_end":526,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":106001,"byte_end":106006,"line_start":15,"line_end":15,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":106075,"byte_end":106080,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":106536,"byte_end":106543,"line_start":41,"line_end":41,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":106613,"byte_end":106620,"line_start":47,"line_end":47,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":107216,"byte_end":107227,"line_start":68,"line_end":68,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":107302,"byte_end":107313,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":107771,"byte_end":107777,"line_start":92,"line_end":92,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":107959,"byte_end":107965,"line_start":101,"line_end":101,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":108336,"byte_end":108347,"line_start":121,"line_end":121,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":108411,"byte_end":108422,"line_start":127,"line_end":127,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":109328,"byte_end":109341,"line_start":157,"line_end":157,"column_start":13,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":109408,"byte_end":109421,"line_start":160,"line_end":160,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/writer.rs","byte_start":111052,"byte_end":111063,"line_start":34,"line_end":34,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/writer.rs","byte_start":117734,"byte_end":117753,"line_start":209,"line_end":209,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/writer.rs","byte_start":119624,"byte_end":119639,"line_start":268,"line_end":268,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/writer.rs","byte_start":123252,"byte_end":123264,"line_start":381,"line_end":381,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/writer.rs","byte_start":124403,"byte_end":124407,"line_start":412,"line_end":412,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/writer.rs","byte_start":125216,"byte_end":125224,"line_start":433,"line_end":433,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/writer.rs","byte_start":125826,"byte_end":125843,"line_start":456,"line_end":456,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/writer.rs","byte_start":126167,"byte_end":126173,"line_start":468,"line_end":468,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":88925,"byte_end":88936,"line_start":95,"line_end":95,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":91885,"byte_end":91892,"line_start":189,"line_end":189,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":92615,"byte_end":92630,"line_start":211,"line_end":211,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":92746,"byte_end":92753,"line_start":219,"line_end":219,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":96776,"byte_end":96791,"line_start":324,"line_end":324,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":100092,"byte_end":100113,"line_start":404,"line_end":404,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":73767,"byte_end":73772,"line_start":28,"line_end":28,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":73886,"byte_end":73891,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":74993,"byte_end":75004,"line_start":66,"line_end":66,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":82599,"byte_end":82616,"line_start":231,"line_end":231,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":82704,"byte_end":82714,"line_start":237,"line_end":237,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":85249,"byte_end":85258,"line_start":305,"line_end":305,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":223167,"byte_end":223172,"line_start":15,"line_end":15,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":504},{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":225526,"byte_end":225531,"line_start":100,"line_end":100,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":225649,"byte_end":225654,"line_start":107,"line_end":107,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":226246,"byte_end":226251,"line_start":132,"line_end":132,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":230657,"byte_end":230664,"line_start":3,"line_end":3,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/lexer.rs","byte_start":420025,"byte_end":420041,"line_start":48,"line_end":48,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/lexer.rs","byte_start":432093,"byte_end":432098,"line_start":397,"line_end":397,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237682,"byte_end":237687,"line_start":175,"line_end":175,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":252768,"byte_end":252781,"line_start":443,"line_end":443,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":254231,"byte_end":254240,"line_start":483,"line_end":483,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":261384,"byte_end":261394,"line_start":682,"line_end":682,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":262015,"byte_end":262026,"line_start":701,"line_end":701,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":262860,"byte_end":262876,"line_start":721,"line_end":721,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":264729,"byte_end":264746,"line_start":780,"line_end":780,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":271686,"byte_end":271701,"line_start":958,"line_end":958,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":271983,"byte_end":271994,"line_start":972,"line_end":972,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":912},{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":274143,"byte_end":274156,"line_start":1048,"line_end":1048,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":919},{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":276801,"byte_end":276811,"line_start":1122,"line_end":1122,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":278854,"byte_end":278864,"line_start":1177,"line_end":1177,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":279014,"byte_end":279024,"line_start":1183,"line_end":1183,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":279262,"byte_end":279268,"line_start":1195,"line_end":1195,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":955},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":976},{"krate":0,"index":978},{"krate":0,"index":980},{"krate":0,"index":985},{"krate":0,"index":989},{"krate":0,"index":991},{"krate":0,"index":1003},{"krate":0,"index":1005},{"krate":0,"index":1017},{"krate":0,"index":1019},{"krate":0,"index":1021},{"krate":0,"index":1025},{"krate":0,"index":1027},{"krate":0,"index":1029},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1038},{"krate":0,"index":1041},{"krate":0,"index":1055},{"krate":0,"index":1057},{"krate":0,"index":1059},{"krate":0,"index":1061},{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":409827,"byte_end":409844,"line_start":4160,"line_end":4160,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1069},{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":410024,"byte_end":410041,"line_start":4170,"line_end":4170,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":410250,"byte_end":410267,"line_start":4181,"line_end":4181,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":226813,"byte_end":226820,"line_start":26,"line_end":26,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":227713,"byte_end":227726,"line_start":55,"line_end":55,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":228057,"byte_end":228065,"line_start":70,"line_end":70,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":229905,"byte_end":229913,"line_start":126,"line_end":126,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1117},{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":462590,"byte_end":462599,"line_start":5,"line_end":5,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":464909,"byte_end":464918,"line_start":60,"line_end":60,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/layouter.rs","byte_start":466467,"byte_end":466475,"line_start":25,"line_end":25,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/layouter.rs","byte_start":466784,"byte_end":466792,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":471687,"byte_end":471692,"line_start":31,"line_end":31,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1191},{"krate":0,"index":1196},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":486581,"byte_end":486595,"line_start":99,"line_end":99,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1231}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":487105,"byte_end":487119,"line_start":116,"line_end":116,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":488229,"byte_end":488242,"line_start":151,"line_end":151,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":490140,"byte_end":490154,"line_start":207,"line_end":207,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":449120,"byte_end":449130,"line_start":25,"line_end":25,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":450547,"byte_end":450558,"line_start":65,"line_end":65,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":450919,"byte_end":450928,"line_start":78,"line_end":78,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":454848,"byte_end":454860,"line_start":187,"line_end":187,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":455389,"byte_end":455401,"line_start":202,"line_end":202,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1328}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":457743,"byte_end":457753,"line_start":281,"line_end":281,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1330},{"krate":0,"index":1331}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":459056,"byte_end":459067,"line_start":316,"line_end":316,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":459294,"byte_end":459302,"line_start":325,"line_end":325,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1335}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":460739,"byte_end":460746,"line_start":356,"line_end":356,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":461021,"byte_end":461032,"line_start":366,"line_end":366,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1342}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":461407,"byte_end":461418,"line_start":377,"line_end":377,"column_start":20,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":461454,"byte_end":461465,"line_start":378,"line_end":378,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":461771,"byte_end":461787,"line_start":389,"line_end":389,"column_start":13,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1348},{"krate":0,"index":1350},{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/span.rs","byte_start":518102,"byte_end":518106,"line_start":10,"line_end":10,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1361},{"krate":0,"index":1362}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/span.rs","byte_start":519708,"byte_end":519712,"line_start":61,"line_end":61,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1364}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":532907,"byte_end":532917,"line_start":51,"line_end":51,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":533716,"byte_end":533734,"line_start":79,"line_end":79,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1411},{"krate":0,"index":1412}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":534197,"byte_end":534215,"line_start":95,"line_end":95,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1414},{"krate":0,"index":1415}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":535861,"byte_end":535875,"line_start":147,"line_end":147,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":536553,"byte_end":536563,"line_start":170,"line_end":170,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1419}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":538209,"byte_end":538221,"line_start":215,"line_end":215,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":538778,"byte_end":538790,"line_start":234,"line_end":234,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1425},{"krate":0,"index":1426}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":538995,"byte_end":539007,"line_start":241,"line_end":241,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1428},{"krate":0,"index":1429}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":539667,"byte_end":539679,"line_start":260,"line_end":260,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1437},{"krate":0,"index":1456}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":562929,"byte_end":562939,"line_start":806,"line_end":806,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1462},{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":583448,"byte_end":583470,"line_start":126,"line_end":126,"column_start":10,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1519}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":583837,"byte_end":583846,"line_start":140,"line_end":140,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1521}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":646809,"byte_end":646821,"line_start":168,"line_end":168,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1596},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1603}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":648954,"byte_end":648963,"line_start":238,"line_end":238,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1605},{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1618},{"krate":0,"index":1619},{"krate":0,"index":1620}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":675984,"byte_end":675998,"line_start":103,"line_end":103,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1665},{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":684911,"byte_end":684920,"line_start":320,"line_end":320,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1684},{"krate":0,"index":1688}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":698075,"byte_end":698083,"line_start":151,"line_end":151,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1716},{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":698515,"byte_end":698524,"line_start":170,"line_end":170,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":521450,"byte_end":521465,"line_start":52,"line_end":52,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1805}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":522638,"byte_end":522648,"line_start":93,"line_end":93,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1807},{"krate":0,"index":1808}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":524757,"byte_end":524766,"line_start":169,"line_end":169,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1810},{"krate":0,"index":1811}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":526105,"byte_end":526114,"line_start":211,"line_end":211,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1817}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":9438,"byte_end":9442,"line_start":209,"line_end":209,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":154}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":73414,"byte_end":73417,"line_start":10,"line_end":10,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":155}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":86640,"byte_end":86647,"line_start":33,"line_end":33,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":176}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":9463,"byte_end":9468,"line_start":211,"line_end":211,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":518}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":226518,"byte_end":226522,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":522}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":9478,"byte_end":9482,"line_start":212,"line_end":212,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1120}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/lib.rs","byte_start":9502,"byte_end":9507,"line_start":214,"line_end":214,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1365}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":57282,"byte_end":57288,"line_start":26,"line_end":26,"column_start":19,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":57440,"byte_end":57446,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":57475,"byte_end":57481,"line_start":35,"line_end":35,"column_start":23,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":57585,"byte_end":57591,"line_start":40,"line_end":40,"column_start":16,"column_end":22},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2807}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":57621,"byte_end":57627,"line_start":41,"line_end":41,"column_start":24,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2848}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":57764,"byte_end":57770,"line_start":46,"line_end":46,"column_start":17,"column_end":23},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2838}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":57890,"byte_end":57896,"line_start":51,"line_end":51,"column_start":24,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":58046,"byte_end":58052,"line_start":56,"line_end":56,"column_start":24,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":10122}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":58161,"byte_end":58167,"line_start":62,"line_end":62,"column_start":9,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":30},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":59608,"byte_end":59613,"line_start":112,"line_end":112,"column_start":19,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":59778,"byte_end":59783,"line_start":120,"line_end":120,"column_start":24,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":59961,"byte_end":59966,"line_start":125,"line_end":125,"column_start":22,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":8193}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":60967,"byte_end":60972,"line_start":157,"line_end":157,"column_start":21,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":80},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":61068,"byte_end":61073,"line_start":162,"line_end":162,"column_start":36,"column_end":41},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":80},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":61207,"byte_end":61212,"line_start":168,"line_end":168,"column_start":9,"column_end":14},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":80},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":65578,"byte_end":65583,"line_start":316,"line_end":316,"column_start":35,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":80},"to":{"krate":2,"index":3454}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":65738,"byte_end":65743,"line_start":323,"line_end":323,"column_start":38,"column_end":43},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":80},"to":{"krate":2,"index":3458}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":65889,"byte_end":65894,"line_start":329,"line_end":329,"column_start":34,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":80},"to":{"krate":2,"index":3454}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":68378,"byte_end":68389,"line_start":404,"line_end":404,"column_start":9,"column_end":20},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":69774,"byte_end":69785,"line_start":454,"line_end":454,"column_start":26,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":125},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":71898,"byte_end":71909,"line_start":514,"line_end":514,"column_start":21,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":125},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":72024,"byte_end":72035,"line_start":520,"line_end":520,"column_start":54,"column_end":65},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":125},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/arena.rs","byte_start":72195,"byte_end":72206,"line_start":526,"line_end":526,"column_start":35,"column_end":46},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":125},"to":{"krate":2,"index":3454}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":106001,"byte_end":106006,"line_start":15,"line_end":15,"column_start":18,"column_end":23},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1859},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":106075,"byte_end":106080,"line_start":21,"line_end":21,"column_start":6,"column_end":11},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1859},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":106536,"byte_end":106543,"line_start":41,"line_end":41,"column_start":18,"column_end":25},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1878},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":106613,"byte_end":106620,"line_start":47,"line_end":47,"column_start":6,"column_end":13},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":107216,"byte_end":107227,"line_start":68,"line_end":68,"column_start":18,"column_end":29},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1903},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":107302,"byte_end":107313,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":107771,"byte_end":107777,"line_start":92,"line_end":92,"column_start":6,"column_end":12},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":107959,"byte_end":107965,"line_start":101,"line_end":101,"column_start":18,"column_end":24},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1924},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":108336,"byte_end":108347,"line_start":121,"line_end":121,"column_start":18,"column_end":29},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1943},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":108411,"byte_end":108422,"line_start":127,"line_end":127,"column_start":6,"column_end":17},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1943},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":109328,"byte_end":109341,"line_start":157,"line_end":157,"column_start":13,"column_end":26},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1974},"to":{"krate":2,"index":2807}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/sampler.rs","byte_start":109408,"byte_end":109421,"line_start":160,"line_end":160,"column_start":26,"column_end":39},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1974},"to":{"krate":2,"index":10122}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/writer.rs","byte_start":111052,"byte_end":111063,"line_start":34,"line_end":34,"column_start":22,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":276},"to":{"krate":2,"index":9916}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/writer.rs","byte_start":117734,"byte_end":117753,"line_start":209,"line_end":209,"column_start":10,"column_end":29},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":286},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/writer.rs","byte_start":119624,"byte_end":119639,"line_start":268,"line_end":268,"column_start":22,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":297},"to":{"krate":2,"index":9916}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/writer.rs","byte_start":123252,"byte_end":123264,"line_start":381,"line_end":381,"column_start":13,"column_end":25},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":4449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/writer.rs","byte_start":124403,"byte_end":124407,"line_start":412,"line_end":412,"column_start":13,"column_end":17},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":4923},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/writer.rs","byte_start":125216,"byte_end":125224,"line_start":433,"line_end":433,"column_start":13,"column_end":21},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":4987},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/writer.rs","byte_start":125826,"byte_end":125843,"line_start":456,"line_end":456,"column_start":10,"column_end":27},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/writer.rs","byte_start":126167,"byte_end":126173,"line_start":468,"line_end":468,"column_start":16,"column_end":22},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":88925,"byte_end":88936,"line_start":95,"line_end":95,"column_start":41,"column_end":52},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2057},"to":{"krate":2,"index":3454}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":91885,"byte_end":91892,"line_start":189,"line_end":189,"column_start":18,"column_end":25},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2173},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":92615,"byte_end":92630,"line_start":211,"line_end":211,"column_start":18,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2193},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":92746,"byte_end":92753,"line_start":219,"line_end":219,"column_start":6,"column_end":13},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2173},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":96776,"byte_end":96791,"line_start":324,"line_end":324,"column_start":6,"column_end":21},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/msl/mod.rs","byte_start":100092,"byte_end":100113,"line_start":404,"line_end":404,"column_start":6,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":73767,"byte_end":73772,"line_start":28,"line_end":28,"column_start":6,"column_end":11},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":73886,"byte_end":73891,"line_start":35,"line_end":35,"column_start":28,"column_end":33},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2209},"to":{"krate":2,"index":9916}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":74993,"byte_end":75004,"line_start":66,"line_end":66,"column_start":10,"column_end":21},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":82599,"byte_end":82616,"line_start":231,"line_end":231,"column_start":18,"column_end":35},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2215},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":82704,"byte_end":82714,"line_start":237,"line_end":237,"column_start":13,"column_end":23},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":5568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/back/mod.rs","byte_start":85249,"byte_end":85258,"line_start":305,"line_end":305,"column_start":13,"column_end":22},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":4938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":223167,"byte_end":223172,"line_start":15,"line_end":15,"column_start":6,"column_end":11},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":225526,"byte_end":225531,"line_start":100,"line_end":100,"column_start":16,"column_end":21},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2238},"to":{"krate":2,"index":3369}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":225649,"byte_end":225654,"line_start":107,"line_end":107,"column_start":19,"column_end":24},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2238},"to":{"krate":2,"index":3382}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/block.rs","byte_start":226246,"byte_end":226251,"line_start":132,"line_end":132,"column_start":31,"column_end":36},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2238},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/interpolator.rs","byte_start":230657,"byte_end":230664,"line_start":3,"line_end":3,"column_start":13,"column_end":20},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":5032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/lexer.rs","byte_start":420025,"byte_end":420041,"line_start":48,"line_end":48,"column_start":6,"column_end":22},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/lexer.rs","byte_start":432093,"byte_end":432098,"line_start":397,"line_end":397,"column_start":10,"column_end":15},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":237682,"byte_end":237687,"line_start":175,"line_end":175,"column_start":10,"column_end":15},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":252768,"byte_end":252781,"line_start":443,"line_end":443,"column_start":13,"column_end":26},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":4812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":254231,"byte_end":254240,"line_start":483,"line_end":483,"column_start":13,"column_end":22},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":4938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":261384,"byte_end":261394,"line_start":682,"line_end":682,"column_start":13,"column_end":23},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":4570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":262015,"byte_end":262026,"line_start":701,"line_end":701,"column_start":36,"column_end":47},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1849},"to":{"krate":0,"index":837}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":262860,"byte_end":262876,"line_start":721,"line_end":721,"column_start":17,"column_end":33},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":845},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":264729,"byte_end":264746,"line_start":780,"line_end":780,"column_start":10,"column_end":27},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":271686,"byte_end":271701,"line_start":958,"line_end":958,"column_start":6,"column_end":21},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2565},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":271983,"byte_end":271994,"line_start":972,"line_end":972,"column_start":6,"column_end":17},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":898},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":274143,"byte_end":274156,"line_start":1048,"line_end":1048,"column_start":6,"column_end":19},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":276801,"byte_end":276811,"line_start":1122,"line_end":1122,"column_start":6,"column_end":16},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":278854,"byte_end":278864,"line_start":1177,"line_end":1177,"column_start":28,"column_end":38},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2616},"to":{"krate":2,"index":9916}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":279014,"byte_end":279024,"line_start":1183,"line_end":1183,"column_start":28,"column_end":38},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2616},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":279262,"byte_end":279268,"line_start":1195,"line_end":1195,"column_start":6,"column_end":12},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":409827,"byte_end":409844,"line_start":4160,"line_end":4160,"column_start":6,"column_end":23},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1066},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":410024,"byte_end":410041,"line_start":4170,"line_end":4170,"column_start":16,"column_end":33},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1066},"to":{"krate":1,"index":4566}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/wgsl/mod.rs","byte_start":410250,"byte_end":410267,"line_start":4181,"line_end":4181,"column_start":21,"column_end":38},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1066},"to":{"krate":24,"index":29}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":226813,"byte_end":226820,"line_start":26,"line_end":26,"column_start":6,"column_end":13},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":227713,"byte_end":227726,"line_start":55,"line_end":55,"column_start":13,"column_end":26},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":5017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":228057,"byte_end":228065,"line_start":70,"line_end":70,"column_start":6,"column_end":14},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/front/mod.rs","byte_start":229905,"byte_end":229913,"line_start":126,"line_end":126,"column_start":48,"column_end":56},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2631},"to":{"krate":2,"index":3454}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":462590,"byte_end":462599,"line_start":5,"line_end":5,"column_start":13,"column_end":22},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":4938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/index.rs","byte_start":464909,"byte_end":464918,"line_start":60,"line_end":60,"column_start":13,"column_end":22},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":4597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/layouter.rs","byte_start":466467,"byte_end":466475,"line_start":25,"line_end":25,"column_start":42,"column_end":50},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2652},"to":{"krate":2,"index":3454}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/layouter.rs","byte_start":466784,"byte_end":466792,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/namer.rs","byte_start":471687,"byte_end":471692,"line_start":31,"line_end":31,"column_start":6,"column_end":11},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":486581,"byte_end":486595,"line_start":99,"line_end":99,"column_start":6,"column_end":20},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":487105,"byte_end":487119,"line_start":116,"line_end":116,"column_start":16,"column_end":30},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2727},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":488229,"byte_end":488242,"line_start":151,"line_end":151,"column_start":13,"column_end":26},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":5017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/typifier.rs","byte_start":490140,"byte_end":490154,"line_start":207,"line_end":207,"column_start":10,"column_end":24},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":449120,"byte_end":449130,"line_start":25,"line_end":25,"column_start":44,"column_end":54},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":4570},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":450547,"byte_end":450558,"line_start":65,"line_end":65,"column_start":13,"column_end":24},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":4997},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":450919,"byte_end":450928,"line_start":78,"line_end":78,"column_start":13,"column_end":22},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":4938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":454848,"byte_end":454860,"line_start":187,"line_end":187,"column_start":13,"column_end":25},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":4449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":455389,"byte_end":455401,"line_start":202,"line_end":202,"column_start":13,"column_end":25},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":5267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":457743,"byte_end":457753,"line_start":281,"line_end":281,"column_start":13,"column_end":23},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":5568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":459056,"byte_end":459067,"line_start":316,"line_end":316,"column_start":13,"column_end":24},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":5412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":459294,"byte_end":459302,"line_start":325,"line_end":325,"column_start":13,"column_end":21},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4987},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":460739,"byte_end":460746,"line_start":356,"line_end":356,"column_start":13,"column_end":20},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":5032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":461021,"byte_end":461032,"line_start":366,"line_end":366,"column_start":27,"column_end":38},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4997},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":461407,"byte_end":461418,"line_start":377,"line_end":377,"column_start":20,"column_end":31},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":4997},"to":{"krate":2,"index":2807}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":461454,"byte_end":461465,"line_start":378,"line_end":378,"column_start":33,"column_end":44},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":4997},"to":{"krate":2,"index":10122}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/proc/mod.rs","byte_start":461771,"byte_end":461787,"line_start":389,"line_end":389,"column_start":13,"column_end":29},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":5453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/span.rs","byte_start":518102,"byte_end":518106,"line_start":10,"line_end":10,"column_start":6,"column_end":10},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/span.rs","byte_start":519708,"byte_end":519712,"line_start":61,"line_end":61,"column_start":29,"column_end":33},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2806},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":532907,"byte_end":532917,"line_start":51,"line_end":51,"column_start":6,"column_end":16},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":533716,"byte_end":533734,"line_start":79,"line_end":79,"column_start":21,"column_end":39},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1407},"to":{"krate":2,"index":3282}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":534197,"byte_end":534215,"line_start":95,"line_end":95,"column_start":6,"column_end":24},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":535861,"byte_end":535875,"line_start":147,"line_end":147,"column_start":6,"column_end":20},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":536553,"byte_end":536563,"line_start":170,"line_end":170,"column_start":13,"column_end":23},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":5568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":538209,"byte_end":538221,"line_start":215,"line_end":215,"column_start":6,"column_end":18},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":538778,"byte_end":538790,"line_start":234,"line_end":234,"column_start":52,"column_end":64},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3178},"to":{"krate":2,"index":3454}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":538995,"byte_end":539007,"line_start":241,"line_end":241,"column_start":48,"column_end":60},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3178},"to":{"krate":2,"index":3454}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":539667,"byte_end":539679,"line_start":260,"line_end":260,"column_start":6,"column_end":18},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/analyzer.rs","byte_start":562929,"byte_end":562939,"line_start":806,"line_end":806,"column_start":6,"column_end":16},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":4290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":583448,"byte_end":583470,"line_start":126,"line_end":126,"column_start":10,"column_end":32},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1512},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/expression.rs","byte_start":583837,"byte_end":583846,"line_start":140,"line_end":140,"column_start":13,"column_end":22},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":4295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":646809,"byte_end":646821,"line_start":168,"line_end":168,"column_start":10,"column_end":22},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/function.rs","byte_start":648954,"byte_end":648963,"line_start":238,"line_end":238,"column_start":13,"column_end":22},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":4295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":675984,"byte_end":675998,"line_start":103,"line_end":103,"column_start":6,"column_end":20},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/interface.rs","byte_start":684911,"byte_end":684920,"line_start":320,"line_end":320,"column_start":13,"column_end":22},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":698075,"byte_end":698083,"line_start":151,"line_end":151,"column_start":6,"column_end":14},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/type.rs","byte_start":698515,"byte_end":698524,"line_start":170,"line_end":170,"column_start":13,"column_end":22},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":4295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":521450,"byte_end":521465,"line_start":52,"line_end":52,"column_start":18,"column_end":33},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3987},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":522638,"byte_end":522648,"line_start":93,"line_end":93,"column_start":46,"column_end":56},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":4290},"to":{"krate":2,"index":3454}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":524757,"byte_end":524766,"line_start":169,"line_end":169,"column_start":13,"column_end":22},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":4938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/naga-0.7.3/src/valid/mod.rs","byte_start":526105,"byte_end":526114,"line_start":211,"line_end":211,"column_start":6,"column_end":15},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":4295},"to":{"krate":4294967295,"index":4294967295}}]}