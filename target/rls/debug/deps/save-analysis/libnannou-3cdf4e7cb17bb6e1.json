{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1","program":"/Users/thomas/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","nannou","--edition=2018","/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"notosans\"","-C","metadata=3cdf4e7cb17bb6e1","-C","extra-filename=-3cdf4e7cb17bb6e1","--out-dir","/Users/thomas/Documents/paisley_generator/target/rls/debug/deps","-L","dependency=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps","--extern","find_folder=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libfind_folder-7c0cc0e6c171d7c2.rmeta","--extern","futures=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libfutures-cb705c554c293562.rmeta","--extern","image=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libimage-a72fe7d02390f0d5.rmeta","--extern","instant=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libinstant-63b33c0059f7329d.rmeta","--extern","lyon=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/liblyon-dfcc005f0249fa40.rmeta","--extern","nannou_core=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libnannou_core-22e72591a1c14b85.rmeta","--extern","nannou_mesh=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libnannou_mesh-80eae8a28ecb2a7d.rmeta","--extern","nannou_wgpu=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libnannou_wgpu-c404b250c0d16936.rmeta","--extern","noise=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libnoise-7aaf0029fe5d13ca.rmeta","--extern","notosans=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libnotosans-b3a8c1287677ad3b.rmeta","--extern","num_cpus=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libnum_cpus-25f6131f6190519e.rmeta","--extern","pennereq=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libpennereq-2372d0bdee5c8104.rmeta","--extern","rusttype=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/librusttype-f2afc76cc5cbff87.rmeta","--extern","serde=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libserde-04829c4c131c620c.rmeta","--extern","serde_derive=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libserde_derive-4c0cceec9034874c.dylib","--extern","serde_json=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libserde_json-8eecac433bbe8463.rmeta","--extern","toml=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libtoml-cee68e560b72313f.rmeta","--extern","walkdir=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libwalkdir-a6eb211e050b4a76.rmeta","--extern","wgpu_upstream=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libwgpu-4a0eb6d1a335c045.rmeta","--extern","winit=/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libwinit-23b1a66aec0ed143.rmeta","--cap-lints","allow","-L","native=/Users/thomas/Documents/paisley_generator/target/rls/debug/build/objc_exception-96a7d88ee72c8702/out","--error-format=json","--sysroot","/Users/thomas/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/thomas/Documents/paisley_generator/target/rls/debug/deps/libnannou-3cdf4e7cb17bb6e1.rmeta"},"prelude":{"crate_id":{"name":"nannou","disambiguator":[1246174768586298596,0]},"crate_root":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src","external_crates":[{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15669064323078341672,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11357169968938206655,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6602629803563781521,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[2747590458918256217,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6815800062292248865,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[14026126844841210853,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13025574654435908178,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[403676507750728715,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[11825504258628139003,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8663771689581725210,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[272349061558676930,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5692889037134661409,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[5672900006326178645,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[841089355853614604,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[5460130759259714783,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[16094886774496469189,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[6939062005183097301,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[11967481065853628164,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[9698159609188568189,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":20,"id":{"name":"find_folder","disambiguator":[1707871208142131024,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":21,"id":{"name":"lyon","disambiguator":[7600511661054206734,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":22,"id":{"name":"lyon_algorithms","disambiguator":[14677444056696645075,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":23,"id":{"name":"lyon_path","disambiguator":[18168157746238629192,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":24,"id":{"name":"lyon_geom","disambiguator":[3493410143289275863,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":25,"id":{"name":"arrayvec","disambiguator":[10758921020756792197,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":26,"id":{"name":"euclid","disambiguator":[3248559459014422827,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":27,"id":{"name":"num_traits","disambiguator":[6383093801725391283,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":28,"id":{"name":"sid","disambiguator":[12083856553649127352,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":29,"id":{"name":"lyon_tessellation","disambiguator":[2424071061864432360,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":30,"id":{"name":"float_next_after","disambiguator":[11226458044361621465,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":31,"id":{"name":"winit","disambiguator":[16699836019133016237,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":32,"id":{"name":"lazy_static","disambiguator":[10986218709166996466,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":33,"id":{"name":"log","disambiguator":[214507524855141354,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":34,"id":{"name":"cfg_if","disambiguator":[1532999587704713044,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":35,"id":{"name":"bitflags","disambiguator":[7262393479806847890,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":36,"id":{"name":"objc","disambiguator":[1392072282072935638,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":37,"id":{"name":"malloc_buf","disambiguator":[10806793016975552050,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":38,"id":{"name":"libc","disambiguator":[14025568204636576964,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","num":39,"id":{"name":"instant","disambiguator":[15092475789386982192,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":40,"id":{"name":"cocoa","disambiguator":[9659320156837266587,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":41,"id":{"name":"block","disambiguator":[11214381659389107927,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":42,"id":{"name":"core_foundation","disambiguator":[3728389998663149140,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":43,"id":{"name":"core_foundation_sys","disambiguator":[12927155636125741001,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":44,"id":{"name":"core_graphics","disambiguator":[17476438501707852277,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":45,"id":{"name":"foreign_types","disambiguator":[6616835413742456287,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":46,"id":{"name":"foreign_types_shared","disambiguator":[10310815075786728804,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":47,"id":{"name":"core_graphics_types","disambiguator":[15627500995996102954,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":48,"id":{"name":"cocoa_foundation","disambiguator":[14954666738301411132,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":49,"id":{"name":"scopeguard","disambiguator":[2405963607262032944,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":50,"id":{"name":"core_video_sys","disambiguator":[17707578616806459317,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":51,"id":{"name":"cfg_if","disambiguator":[16325870560114320018,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":52,"id":{"name":"core_foundation_sys","disambiguator":[15374912580092830517,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":53,"id":{"name":"core_graphics","disambiguator":[3037645854381528402,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":54,"id":{"name":"core_foundation","disambiguator":[10982783917946277214,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":55,"id":{"name":"dispatch","disambiguator":[119031256004569138,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":56,"id":{"name":"raw_window_handle","disambiguator":[6237852021160639590,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":57,"id":{"name":"raw_window_handle","disambiguator":[529366960855095724,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":58,"id":{"name":"cty","disambiguator":[13193218580164472929,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":59,"id":{"name":"nannou_core","disambiguator":[13214653311129078747,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":60,"id":{"name":"palette","disambiguator":[10879864258228906389,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":61,"id":{"name":"approx","disambiguator":[2147285391691533077,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":62,"id":{"name":"palette_derive","disambiguator":[5978379392253406905,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","num":63,"id":{"name":"serde","disambiguator":[8725424077687319202,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":64,"id":{"name":"serde_derive","disambiguator":[432563321260813973,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":65,"id":{"name":"glam","disambiguator":[11142335047148667942,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":66,"id":{"name":"rand","disambiguator":[3287833566829780578,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":67,"id":{"name":"rand_core","disambiguator":[9219217047788681759,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":68,"id":{"name":"getrandom","disambiguator":[6500902014684788916,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":69,"id":{"name":"rand_chacha","disambiguator":[8159220689434009979,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":70,"id":{"name":"ppv_lite86","disambiguator":[14069894982095105994,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":71,"id":{"name":"nannou_mesh","disambiguator":[14280562826672015376,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":72,"id":{"name":"nannou_wgpu","disambiguator":[16706718652415315152,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":73,"id":{"name":"wgpu","disambiguator":[4573921112367650094,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":74,"id":{"name":"arrayvec","disambiguator":[13698634848980893977,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":75,"id":{"name":"parking_lot","disambiguator":[12610170232669051162,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":76,"id":{"name":"lock_api","disambiguator":[12238352494439139924,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":77,"id":{"name":"parking_lot_core","disambiguator":[12700130619706278880,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":78,"id":{"name":"smallvec","disambiguator":[3740042186809250398,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":79,"id":{"name":"wgpu_core","disambiguator":[12066795065487040032,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":80,"id":{"name":"thiserror","disambiguator":[15542646773361714037,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":81,"id":{"name":"thiserror_impl","disambiguator":[13031522780857654795,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":82,"id":{"name":"wgpu_hal","disambiguator":[11433502860504945842,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":83,"id":{"name":"metal","disambiguator":[18258992573364330056,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":84,"id":{"name":"wgpu_types","disambiguator":[11602157592782449899,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":85,"id":{"name":"naga","disambiguator":[2531074786142501699,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":86,"id":{"name":"indexmap","disambiguator":[1983690657070588579,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":87,"id":{"name":"hashbrown","disambiguator":[904530418460872825,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":88,"id":{"name":"hexf_parse","disambiguator":[5291958407558009653,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":89,"id":{"name":"codespan_reporting","disambiguator":[5514962816486700682,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":90,"id":{"name":"termcolor","disambiguator":[8470383241876327988,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":91,"id":{"name":"unicode_width","disambiguator":[10944563205308491406,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":92,"id":{"name":"bit_set","disambiguator":[10667176914064565522,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":93,"id":{"name":"bit_vec","disambiguator":[10686831324226811821,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":94,"id":{"name":"fxhash","disambiguator":[17667361322542672079,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":95,"id":{"name":"byteorder","disambiguator":[15294300342439398120,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":96,"id":{"name":"copyless","disambiguator":[16249815927898731463,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":97,"id":{"name":"profiling","disambiguator":[15263632664836556848,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/image.rs","num":98,"id":{"name":"image","disambiguator":[15745865471883269783,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":99,"id":{"name":"tiff","disambiguator":[5563910228003937724,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":100,"id":{"name":"jpeg_decoder","disambiguator":[11140318918758873605,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":101,"id":{"name":"rayon","disambiguator":[5518779970554383592,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":102,"id":{"name":"either","disambiguator":[13083959299533749919,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":103,"id":{"name":"rayon_core","disambiguator":[13678114568759931687,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":104,"id":{"name":"crossbeam_channel","disambiguator":[235186718591270276,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":105,"id":{"name":"crossbeam_utils","disambiguator":[16046394629504324365,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":106,"id":{"name":"once_cell","disambiguator":[10147020066483783222,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":107,"id":{"name":"crossbeam_deque","disambiguator":[6187013800967130863,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":108,"id":{"name":"crossbeam_epoch","disambiguator":[1210219562826672461,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":109,"id":{"name":"memoffset","disambiguator":[1349071767043558872,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","num":110,"id":{"name":"num_cpus","disambiguator":[5806204711662619975,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":111,"id":{"name":"miniz_oxide","disambiguator":[13814257162099131600,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":112,"id":{"name":"adler","disambiguator":[6740557045479900502,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":113,"id":{"name":"weezl","disambiguator":[9476795982332916597,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":114,"id":{"name":"gif","disambiguator":[5991200007947835241,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":115,"id":{"name":"color_quant","disambiguator":[10570135451863453677,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":116,"id":{"name":"num_rational","disambiguator":[12478646899725242448,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":117,"id":{"name":"num_integer","disambiguator":[10861589656636926181,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":118,"id":{"name":"scoped_threadpool","disambiguator":[10903118758750399547,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":119,"id":{"name":"num_iter","disambiguator":[7659027267229294533,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":120,"id":{"name":"png","disambiguator":[15277909485927557823,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":121,"id":{"name":"deflate","disambiguator":[908869530627688433,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":122,"id":{"name":"adler32","disambiguator":[6706271312698605067,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":123,"id":{"name":"crc32fast","disambiguator":[16751721406435732002,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":124,"id":{"name":"miniz_oxide","disambiguator":[6957105182948179122,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":125,"id":{"name":"bytemuck","disambiguator":[11014132769507499884,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":126,"id":{"name":"futures","disambiguator":[12143291661858116380,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":127,"id":{"name":"futures_core","disambiguator":[14899656029411873959,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":128,"id":{"name":"futures_util","disambiguator":[412554106619489065,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":129,"id":{"name":"pin_utils","disambiguator":[14356074882058651629,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":130,"id":{"name":"futures_macro","disambiguator":[6538870702310983016,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":131,"id":{"name":"futures_task","disambiguator":[156734006746381725,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":132,"id":{"name":"futures_sink","disambiguator":[9770415296993459118,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":133,"id":{"name":"pin_project_lite","disambiguator":[2497167663037998749,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":134,"id":{"name":"futures_channel","disambiguator":[5499850101997937331,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":135,"id":{"name":"slab","disambiguator":[17364402509430366444,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":136,"id":{"name":"futures_io","disambiguator":[1156715157474641352,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":137,"id":{"name":"memchr","disambiguator":[6756054297585735174,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","num":138,"id":{"name":"futures_executor","disambiguator":[10382958356561368395,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/ease.rs","num":139,"id":{"name":"pennereq","disambiguator":[9853236107312077603,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","num":140,"id":{"name":"serde_json","disambiguator":[9091213045052071171,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","num":141,"id":{"name":"itoa","disambiguator":[1642523832146098569,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","num":142,"id":{"name":"ryu","disambiguator":[12295846882571852482,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","num":143,"id":{"name":"toml","disambiguator":[1623152017012462582,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/noise.rs","num":144,"id":{"name":"noise","disambiguator":[8815374935270899181,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/noise.rs","num":145,"id":{"name":"rand","disambiguator":[11706274792173163244,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/noise.rs","num":146,"id":{"name":"rand_core","disambiguator":[4357091061822106847,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/noise.rs","num":147,"id":{"name":"getrandom","disambiguator":[2588363320363010011,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/noise.rs","num":148,"id":{"name":"rand_chacha","disambiguator":[1269746647044262236,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/noise.rs","num":149,"id":{"name":"rand_xorshift","disambiguator":[5343814493721388437,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","num":150,"id":{"name":"rusttype","disambiguator":[1715416540078852665,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","num":151,"id":{"name":"ordered_float","disambiguator":[15028895052589280750,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","num":152,"id":{"name":"linked_hash_map","disambiguator":[11802096672810351784,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","num":153,"id":{"name":"rustc_hash","disambiguator":[12869321881226231489,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","num":154,"id":{"name":"crossbeam_deque","disambiguator":[16390862542782056817,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","num":155,"id":{"name":"crossbeam_epoch","disambiguator":[6869343197860006067,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","num":156,"id":{"name":"maybe_uninit","disambiguator":[13082861267328459167,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","num":157,"id":{"name":"crossbeam_utils","disambiguator":[16015827429541979448,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","num":158,"id":{"name":"memoffset","disambiguator":[9015141335535891005,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","num":159,"id":{"name":"stb_truetype","disambiguator":[14472299815599537535,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","num":160,"id":{"name":"walkdir","disambiguator":[14298212707062297031,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","num":161,"id":{"name":"same_file","disambiguator":[17447381075544865612,0]}},{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","num":162,"id":{"name":"notosans","disambiguator":[3586526345442173925,0]}}],"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":0,"byte_end":2245,"line_start":1,"line_end":68,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":719,"byte_end":730,"line_start":16,"line_end":16,"column_start":9,"column_end":20},"alias_span":null,"name":"find_folder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":0},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":740,"byte_end":744,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"alias_span":null,"name":"lyon","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":31,"index":0},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":754,"byte_end":759,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"alias_span":null,"name":"winit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":178},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":782,"byte_end":785,"line_start":20,"line_end":20,"column_start":21,"column_end":24},"alias_span":null,"name":"App","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4536},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":787,"byte_end":795,"line_start":20,"line_end":20,"column_start":26,"column_end":34},"alias_span":null,"name":"LoopMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5154},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":818,"byte_end":822,"line_start":21,"line_end":21,"column_start":21,"column_end":25},"alias_span":null,"name":"Draw","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5242},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":845,"byte_end":850,"line_start":22,"line_end":22,"column_start":22,"column_end":27},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3196},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":873,"byte_end":878,"line_start":23,"line_end":23,"column_start":22,"column_end":27},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":59,"index":4},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":917,"byte_end":922,"line_start":25,"line_end":25,"column_start":23,"column_end":28},"alias_span":null,"name":"color","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":65,"index":0},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":924,"byte_end":928,"line_start":25,"line_end":25,"column_start":30,"column_end":34},"alias_span":null,"name":"glam","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":59,"index":1322},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":930,"byte_end":934,"line_start":25,"line_end":25,"column_start":36,"column_end":40},"alias_span":null,"name":"math","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":59,"index":1724},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":936,"byte_end":940,"line_start":25,"line_end":25,"column_start":42,"column_end":46},"alias_span":null,"name":"rand","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":71,"index":0},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":966,"byte_end":977,"line_start":27,"line_end":27,"column_start":9,"column_end":20},"alias_span":null,"name":"mesh","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":72,"index":0},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1010,"byte_end":1021,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"alias_span":null,"name":"wgpu","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":426},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":72985,"byte_end":72995,"line_start":15,"line_end":15,"column_start":27,"column_end":37},"alias_span":null,"name":"Background","value":"","parent":{"krate":0,"index":321}},{"kind":"Use","ref_id":{"krate":0,"index":4629},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":73021,"byte_end":73028,"line_start":16,"line_end":16,"column_start":25,"column_end":32},"alias_span":null,"name":"Drawing","value":"","parent":{"krate":0,"index":321}},{"kind":"Use","ref_id":{"krate":0,"index":520},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":73030,"byte_end":73044,"line_start":16,"line_end":16,"column_start":34,"column_end":48},"alias_span":null,"name":"DrawingContext","value":"","parent":{"krate":0,"index":321}},{"kind":"Use","ref_id":{"krate":0,"index":4669},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":73111,"byte_end":73115,"line_start":18,"line_end":18,"column_start":21,"column_end":25},"alias_span":null,"name":"Mesh","value":"","parent":{"krate":0,"index":321}},{"kind":"Use","ref_id":{"krate":0,"index":5031},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":73174,"byte_end":73181,"line_start":20,"line_end":20,"column_start":26,"column_end":33},"alias_span":null,"name":"RendererBuilder","value":"","parent":{"krate":0,"index":321}},{"kind":"Use","ref_id":{"krate":0,"index":5005},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":73202,"byte_end":73210,"line_start":20,"line_end":20,"column_start":54,"column_end":62},"alias_span":null,"name":"Renderer","value":"","parent":{"krate":0,"index":321}},{"kind":"Use","ref_id":{"krate":0,"index":5101},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":73234,"byte_end":73239,"line_start":21,"line_end":21,"column_start":22,"column_end":27},"alias_span":null,"name":"Theme","value":"","parent":{"krate":0,"index":321}},{"kind":"Use","ref_id":{"krate":0,"index":782},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":126113,"byte_end":126124,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"MeshBuilder","value":"","parent":{"krate":0,"index":719}},{"kind":"Use","ref_id":{"krate":0,"index":862},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":126148,"byte_end":126154,"line_start":11,"line_end":11,"column_start":23,"column_end":29},"alias_span":null,"name":"Vertex","value":"","parent":{"krate":0,"index":719}},{"kind":"Use","ref_id":{"krate":0,"index":4675},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":146881,"byte_end":146886,"line_start":13,"line_end":13,"column_start":22,"column_end":27},"alias_span":null,"name":"Arrow","value":"","parent":{"krate":0,"index":972}},{"kind":"Use","ref_id":{"krate":0,"index":4683},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":146911,"byte_end":146918,"line_start":14,"line_end":14,"column_start":24,"column_end":31},"alias_span":null,"name":"Ellipse","value":"","parent":{"krate":0,"index":972}},{"kind":"Use","ref_id":{"krate":0,"index":4693},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":146940,"byte_end":146944,"line_start":15,"line_end":15,"column_start":21,"column_end":25},"alias_span":null,"name":"Line","value":"","parent":{"krate":0,"index":972}},{"kind":"Use","ref_id":{"krate":0,"index":4711},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":146966,"byte_end":146970,"line_start":16,"line_end":16,"column_start":21,"column_end":25},"alias_span":null,"name":"Mesh","value":"","parent":{"krate":0,"index":972}},{"kind":"Use","ref_id":{"krate":0,"index":4769},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":146993,"byte_end":146997,"line_start":17,"line_end":17,"column_start":22,"column_end":26},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":972}},{"kind":"Use","ref_id":{"krate":0,"index":1568},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":146999,"byte_end":147007,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"alias_span":null,"name":"PathFill","value":"","parent":{"krate":0,"index":972}},{"kind":"Use","ref_id":{"krate":0,"index":4746},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147009,"byte_end":147017,"line_start":17,"line_end":17,"column_start":38,"column_end":46},"alias_span":null,"name":"PathInit","value":"","parent":{"krate":0,"index":972}},{"kind":"Use","ref_id":{"krate":0,"index":4747},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147009,"byte_end":147017,"line_start":17,"line_end":17,"column_start":38,"column_end":46},"alias_span":null,"name":"PathInit","value":"","parent":{"krate":0,"index":972}},{"kind":"Use","ref_id":{"krate":0,"index":1569},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147019,"byte_end":147029,"line_start":17,"line_end":17,"column_start":48,"column_end":58},"alias_span":null,"name":"PathStroke","value":"","parent":{"krate":0,"index":972}},{"kind":"Use","ref_id":{"krate":0,"index":4813},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147056,"byte_end":147063,"line_start":18,"line_end":18,"column_start":25,"column_end":32},"alias_span":null,"name":"Polygon","value":"","parent":{"krate":0,"index":972}},{"kind":"Use","ref_id":{"krate":0,"index":4792},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147065,"byte_end":147076,"line_start":18,"line_end":18,"column_start":34,"column_end":45},"alias_span":null,"name":"PolygonInit","value":"","parent":{"krate":0,"index":972}},{"kind":"Use","ref_id":{"krate":0,"index":4821},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147099,"byte_end":147103,"line_start":19,"line_end":19,"column_start":21,"column_end":25},"alias_span":null,"name":"Quad","value":"","parent":{"krate":0,"index":972}},{"kind":"Use","ref_id":{"krate":0,"index":4829},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147125,"byte_end":147129,"line_start":20,"line_end":20,"column_start":21,"column_end":25},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":972}},{"kind":"Use","ref_id":{"krate":0,"index":4836},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147151,"byte_end":147155,"line_start":21,"line_end":21,"column_start":21,"column_end":25},"alias_span":null,"name":"Text","value":"","parent":{"krate":0,"index":972}},{"kind":"Use","ref_id":{"krate":0,"index":4854},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147180,"byte_end":147187,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"alias_span":null,"name":"Texture","value":"","parent":{"krate":0,"index":972}},{"kind":"Use","ref_id":{"krate":0,"index":4862},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147208,"byte_end":147211,"line_start":23,"line_end":23,"column_start":20,"column_end":23},"alias_span":null,"name":"Tri","value":"","parent":{"krate":0,"index":972}},{"kind":"Use","ref_id":{"krate":0,"index":2596},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":278906,"byte_end":278919,"line_start":5,"line_end":5,"column_start":26,"column_end":39},"alias_span":null,"name":"SetDimensions","value":"","parent":{"krate":0,"index":2587}},{"kind":"Use","ref_id":{"krate":0,"index":2637},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":278948,"byte_end":278962,"line_start":6,"line_end":6,"column_start":28,"column_end":42},"alias_span":null,"name":"SetOrientation","value":"","parent":{"krate":0,"index":2587}},{"kind":"Use","ref_id":{"krate":0,"index":2674},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":278988,"byte_end":278999,"line_start":7,"line_end":7,"column_start":25,"column_end":36},"alias_span":null,"name":"SetPosition","value":"","parent":{"krate":0,"index":2587}},{"kind":"Use","ref_id":{"krate":0,"index":2554},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/mod.rs","byte_start":271394,"byte_end":271402,"line_start":14,"line_end":14,"column_start":22,"column_end":30},"alias_span":null,"name":"SetColor","value":"","parent":{"krate":0,"index":2534}},{"kind":"Use","ref_id":{"krate":0,"index":2578},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/mod.rs","byte_start":271424,"byte_end":271431,"line_start":15,"line_end":15,"column_start":21,"column_end":28},"alias_span":null,"name":"SetFill","value":"","parent":{"krate":0,"index":2534}},{"kind":"Use","ref_id":{"krate":0,"index":2596},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/mod.rs","byte_start":271467,"byte_end":271480,"line_start":16,"line_end":16,"column_start":35,"column_end":48},"alias_span":null,"name":"SetDimensions","value":"","parent":{"krate":0,"index":2534}},{"kind":"Use","ref_id":{"krate":0,"index":2637},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/mod.rs","byte_start":271518,"byte_end":271532,"line_start":17,"line_end":17,"column_start":37,"column_end":51},"alias_span":null,"name":"SetOrientation","value":"","parent":{"krate":0,"index":2534}},{"kind":"Use","ref_id":{"krate":0,"index":2674},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/mod.rs","byte_start":271567,"byte_end":271578,"line_start":18,"line_end":18,"column_start":34,"column_end":45},"alias_span":null,"name":"SetPosition","value":"","parent":{"krate":0,"index":2534}},{"kind":"Use","ref_id":{"krate":0,"index":2720},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/mod.rs","byte_start":271602,"byte_end":271611,"line_start":19,"line_end":19,"column_start":23,"column_end":32},"alias_span":null,"name":"SetStroke","value":"","parent":{"krate":0,"index":2534}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/ease.rs","byte_start":345893,"byte_end":345894,"line_start":4,"line_end":4,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":3064}},{"kind":"Use","ref_id":{"krate":31,"index":3223},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":346506,"byte_end":346518,"line_start":17,"line_end":17,"column_start":5,"column_end":17},"alias_span":null,"name":"ElementState","value":"","parent":{"krate":0,"index":3066}},{"kind":"Use","ref_id":{"krate":31,"index":3148},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":346520,"byte_end":346533,"line_start":17,"line_end":17,"column_start":19,"column_end":32},"alias_span":null,"name":"KeyboardInput","value":"","parent":{"krate":0,"index":3066}},{"kind":"Use","ref_id":{"krate":31,"index":3631},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":346535,"byte_end":346549,"line_start":17,"line_end":17,"column_start":34,"column_end":48},"alias_span":null,"name":"ModifiersState","value":"","parent":{"krate":0,"index":3066}},{"kind":"Use","ref_id":{"krate":31,"index":3242},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":346551,"byte_end":346562,"line_start":17,"line_end":17,"column_start":50,"column_end":61},"alias_span":null,"name":"MouseButton","value":"","parent":{"krate":0,"index":3066}},{"kind":"Use","ref_id":{"krate":31,"index":3267},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":346564,"byte_end":346580,"line_start":17,"line_end":17,"column_start":63,"column_end":79},"alias_span":null,"name":"MouseScrollDelta","value":"","parent":{"krate":0,"index":3066}},{"kind":"Use","ref_id":{"krate":31,"index":3168},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":346582,"byte_end":346592,"line_start":17,"line_end":17,"column_start":81,"column_end":91},"alias_span":null,"name":"TouchPhase","value":"","parent":{"krate":0,"index":3066}},{"kind":"Use","ref_id":{"krate":31,"index":3284},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":346598,"byte_end":346612,"line_start":18,"line_end":18,"column_start":5,"column_end":19},"alias_span":null,"name":"Key","value":"","parent":{"krate":0,"index":3066}},{"kind":"Use","ref_id":{"krate":0,"index":3167},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":359353,"byte_end":359361,"line_start":12,"line_end":12,"column_start":20,"column_end":28},"alias_span":null,"name":"RawFrame","value":"","parent":{"krate":0,"index":3128}},{"kind":"Use","ref_id":{"krate":0,"index":3305},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/mod.rs","byte_start":379792,"byte_end":379796,"line_start":14,"line_end":14,"column_start":22,"column_end":26},"alias_span":null,"name":"path","value":"","parent":{"krate":0,"index":3240}},{"kind":"Use","ref_id":{"krate":0,"index":3245},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/mod.rs","byte_start":379798,"byte_end":379802,"line_start":14,"line_end":14,"column_start":28,"column_end":32},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":3240}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/mod.rs","byte_start":379832,"byte_end":379833,"line_start":15,"line_end":15,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"Tri, vec2, Ellipse, Rect, pt2, scalar, Quad, Range, Vec3, Point3, Point2","parent":{"krate":0,"index":3240}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/image.rs","byte_start":387580,"byte_end":387581,"line_start":5,"line_end":5,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":3316}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/noise.rs","byte_start":393240,"byte_end":393241,"line_start":4,"line_end":4,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":3389}},{"kind":"Use","ref_id":{"krate":0,"index":47},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393345,"byte_end":393348,"line_start":3,"line_end":3,"column_start":16,"column_end":19},"alias_span":null,"name":"app","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":0,"index":178},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393357,"byte_end":393360,"line_start":3,"line_end":3,"column_start":28,"column_end":31},"alias_span":null,"name":"App","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":0,"index":4536},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393362,"byte_end":393370,"line_start":3,"line_end":3,"column_start":33,"column_end":41},"alias_span":null,"name":"LoopMode","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":0,"index":5154},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393394,"byte_end":393398,"line_start":4,"line_end":4,"column_start":22,"column_end":26},"alias_span":null,"name":"Draw","value":"","parent":{"krate":0,"index":3391}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393435,"byte_end":393436,"line_start":5,"line_end":5,"column_start":36,"column_end":37},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":0,"index":5285},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393466,"byte_end":393476,"line_start":7,"line_end":7,"column_start":5,"column_end":15},"alias_span":null,"name":"AxisMotion","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":0,"index":5242},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393478,"byte_end":393483,"line_start":7,"line_end":7,"column_start":17,"column_end":22},"alias_span":null,"name":"Event","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":31,"index":3284},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393485,"byte_end":393488,"line_start":7,"line_end":7,"column_start":24,"column_end":27},"alias_span":null,"name":"Key","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":31,"index":3242},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393490,"byte_end":393501,"line_start":7,"line_end":7,"column_start":29,"column_end":40},"alias_span":null,"name":"MouseButton","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":31,"index":3267},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393503,"byte_end":393519,"line_start":7,"line_end":7,"column_start":42,"column_end":58},"alias_span":null,"name":"MouseScrollDelta","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":0,"index":5259},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393521,"byte_end":393531,"line_start":7,"line_end":7,"column_start":60,"column_end":70},"alias_span":null,"name":"TouchEvent","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":31,"index":3168},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393533,"byte_end":393543,"line_start":7,"line_end":7,"column_start":72,"column_end":82},"alias_span":null,"name":"TouchPhase","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":0,"index":5272},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393549,"byte_end":393565,"line_start":8,"line_end":8,"column_start":5,"column_end":21},"alias_span":null,"name":"TouchpadPressure","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":0,"index":5224},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393567,"byte_end":393573,"line_start":8,"line_end":8,"column_start":23,"column_end":29},"alias_span":null,"name":"Update","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":0,"index":5298},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393575,"byte_end":393586,"line_start":8,"line_end":8,"column_start":31,"column_end":42},"alias_span":null,"name":"WindowEvent","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":0,"index":3196},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393614,"byte_end":393619,"line_start":10,"line_end":10,"column_start":24,"column_end":29},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":0,"index":3167},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393621,"byte_end":393629,"line_start":10,"line_end":10,"column_start":31,"column_end":39},"alias_span":null,"name":"RawFrame","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":0,"index":3374},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393652,"byte_end":393666,"line_start":11,"line_end":11,"column_start":21,"column_end":35},"alias_span":null,"name":"load_from_json","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":0,"index":3382},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393668,"byte_end":393682,"line_start":11,"line_end":11,"column_start":37,"column_end":51},"alias_span":null,"name":"load_from_toml","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":0,"index":3369},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393684,"byte_end":393698,"line_start":11,"line_end":11,"column_start":53,"column_end":67},"alias_span":null,"name":"safe_file_save","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":0,"index":3371},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393700,"byte_end":393712,"line_start":11,"line_end":11,"column_start":69,"column_end":81},"alias_span":null,"name":"save_to_json","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":0,"index":3379},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393714,"byte_end":393726,"line_start":11,"line_end":11,"column_start":83,"column_end":95},"alias_span":null,"name":"save_to_toml","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":0,"index":3598},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393744,"byte_end":393748,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"alias_span":null,"name":"text","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":0,"index":4183},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393757,"byte_end":393761,"line_start":12,"line_end":12,"column_start":29,"column_end":33},"alias_span":null,"name":"text","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":0,"index":4185},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393785,"byte_end":393796,"line_start":13,"line_end":13,"column_start":22,"column_end":33},"alias_span":null,"name":"DurationF64","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":72,"index":0},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393813,"byte_end":393817,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"alias_span":null,"name":"wgpu","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":72,"index":37},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393853,"byte_end":393856,"line_start":16,"line_end":16,"column_start":5,"column_end":8},"alias_span":null,"name":"BLEND_ADD","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":72,"index":40},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393871,"byte_end":393878,"line_start":16,"line_end":16,"column_start":23,"column_end":30},"alias_span":null,"name":"BLEND_DARKEST","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":72,"index":41},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393897,"byte_end":393905,"line_start":16,"line_end":16,"column_start":49,"column_end":57},"alias_span":null,"name":"BLEND_LIGHTEST","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":72,"index":36},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393925,"byte_end":393931,"line_start":16,"line_end":16,"column_start":77,"column_end":83},"alias_span":null,"name":"BLEND_NORMAL","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":72,"index":39},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393953,"byte_end":393969,"line_start":17,"line_end":17,"column_start":5,"column_end":21},"alias_span":null,"name":"BLEND_REVERSE_SUBTRACT","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":72,"index":38},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393997,"byte_end":394005,"line_start":17,"line_end":17,"column_start":49,"column_end":57},"alias_span":null,"name":"BLEND_SUBTRACT","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":73,"index":1485},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":394056,"byte_end":394076,"line_start":19,"line_end":19,"column_start":29,"column_end":49},"alias_span":null,"name":"BufferInitDescriptor","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":73,"index":536},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":394078,"byte_end":394087,"line_start":19,"line_end":19,"column_start":51,"column_end":60},"alias_span":null,"name":"DeviceExt","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":0,"index":4194},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":394105,"byte_end":394111,"line_start":20,"line_end":20,"column_start":16,"column_end":22},"alias_span":null,"name":"window","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":31,"index":4562},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":394120,"byte_end":394122,"line_start":20,"line_end":20,"column_start":31,"column_end":33},"alias_span":null,"name":"WindowId","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":31,"index":4694},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":394161,"byte_end":394171,"line_start":21,"line_end":21,"column_start":25,"column_end":35},"alias_span":null,"name":"Fullscreen","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":0,"index":6020},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":394173,"byte_end":394179,"line_start":21,"line_end":21,"column_start":37,"column_end":43},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":3391}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":394212,"byte_end":394213,"line_start":22,"line_end":22,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":3391}},{"kind":"Use","ref_id":{"krate":0,"index":5400},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":394389,"byte_end":394393,"line_start":4,"line_end":4,"column_start":21,"column_end":25},"alias_span":null,"name":"Keys","value":"","parent":{"krate":0,"index":3514}},{"kind":"Use","ref_id":{"krate":0,"index":5417},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":394416,"byte_end":394421,"line_start":5,"line_end":5,"column_start":22,"column_end":27},"alias_span":null,"name":"Mouse","value":"","parent":{"krate":0,"index":3514}},{"kind":"Use","ref_id":{"krate":0,"index":5455},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":394443,"byte_end":394447,"line_start":6,"line_end":6,"column_start":21,"column_end":25},"alias_span":null,"name":"Time","value":"","parent":{"krate":0,"index":3514}},{"kind":"Use","ref_id":{"krate":0,"index":5389},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":394471,"byte_end":394477,"line_start":7,"line_end":7,"column_start":23,"column_end":29},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":3514}},{"kind":"Use","ref_id":{"krate":31,"index":3242},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":396204,"byte_end":396215,"line_start":73,"line_end":73,"column_start":27,"column_end":38},"alias_span":null,"name":"Button","value":"","parent":{"krate":0,"index":3555}},{"kind":"Use","ref_id":{"krate":150,"index":152},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402191,"byte_end":402200,"line_start":13,"line_end":13,"column_start":24,"column_end":33},"alias_span":null,"name":"gpu_cache","value":"","parent":{"krate":0,"index":3996}},{"kind":"Use","ref_id":{"krate":150,"index":8},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402202,"byte_end":402207,"line_start":13,"line_end":13,"column_start":35,"column_end":40},"alias_span":null,"name":"point","value":"","parent":{"krate":0,"index":3996}},{"kind":"Use","ref_id":{"krate":150,"index":10},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402209,"byte_end":402215,"line_start":13,"line_end":13,"column_start":42,"column_end":48},"alias_span":null,"name":"vector","value":"","parent":{"krate":0,"index":3996}},{"kind":"Use","ref_id":{"krate":150,"index":478},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402217,"byte_end":402222,"line_start":13,"line_end":13,"column_start":50,"column_end":55},"alias_span":null,"name":"Point","value":"","parent":{"krate":0,"index":3996}},{"kind":"Use","ref_id":{"krate":150,"index":584},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402224,"byte_end":402228,"line_start":13,"line_end":13,"column_start":57,"column_end":61},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":3996}},{"kind":"Use","ref_id":{"krate":150,"index":514},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402230,"byte_end":402236,"line_start":13,"line_end":13,"column_start":63,"column_end":69},"alias_span":null,"name":"Vector","value":"","parent":{"krate":0,"index":3996}},{"kind":"Use","ref_id":{"krate":0,"index":5565},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402311,"byte_end":402317,"line_start":17,"line_end":17,"column_start":23,"column_end":29},"alias_span":null,"name":"Layout","value":"","parent":{"krate":0,"index":3598}},{"kind":"Use","ref_id":{"krate":150,"index":226},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402348,"byte_end":402353,"line_start":18,"line_end":18,"column_start":30,"column_end":35},"alias_span":null,"name":"GlyphCache","value":"","parent":{"krate":0,"index":3598}},{"kind":"Use","ref_id":{"krate":150,"index":841},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402388,"byte_end":402393,"line_start":19,"line_end":19,"column_start":20,"column_end":25},"alias_span":null,"name":"Glyph","value":"","parent":{"krate":0,"index":3598}},{"kind":"Use","ref_id":{"krate":150,"index":819},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402395,"byte_end":402402,"line_start":19,"line_end":19,"column_start":27,"column_end":34},"alias_span":null,"name":"GlyphId","value":"","parent":{"krate":0,"index":3598}},{"kind":"Use","ref_id":{"krate":150,"index":820},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402395,"byte_end":402402,"line_start":19,"line_end":19,"column_start":27,"column_end":34},"alias_span":null,"name":"GlyphId","value":"","parent":{"krate":0,"index":3598}},{"kind":"Use","ref_id":{"krate":150,"index":926},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402404,"byte_end":402413,"line_start":19,"line_end":19,"column_start":36,"column_end":45},"alias_span":null,"name":"GlyphIter","value":"","parent":{"krate":0,"index":3598}},{"kind":"Use","ref_id":{"krate":150,"index":937},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402415,"byte_end":402425,"line_start":19,"line_end":19,"column_start":47,"column_end":57},"alias_span":null,"name":"LayoutIter","value":"","parent":{"krate":0,"index":3598}},{"kind":"Use","ref_id":{"krate":150,"index":912},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402427,"byte_end":402432,"line_start":19,"line_end":19,"column_start":59,"column_end":64},"alias_span":null,"name":"Scale","value":"","parent":{"krate":0,"index":3598}},{"kind":"Use","ref_id":{"krate":150,"index":896},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402434,"byte_end":402445,"line_start":19,"line_end":19,"column_start":66,"column_end":77},"alias_span":null,"name":"ScaledGlyph","value":"","parent":{"krate":0,"index":3598}},{"kind":"Use","ref_id":{"krate":31,"index":4694},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":492458,"byte_end":492468,"line_start":23,"line_end":23,"column_start":24,"column_end":34},"alias_span":null,"name":"Fullscreen","value":"","parent":{"krate":0,"index":4194}},{"kind":"Use","ref_id":{"krate":31,"index":4562},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":492493,"byte_end":492501,"line_start":24,"line_end":24,"column_start":24,"column_end":32},"alias_span":null,"name":"Id","value":"","parent":{"krate":0,"index":4194}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":0,"byte_end":2245,"line_start":1,"line_end":68,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":321},{"krate":0,"index":3064},{"krate":0,"index":3066},{"krate":0,"index":3128},{"krate":0,"index":3240},{"krate":0,"index":3316},{"krate":0,"index":3318},{"krate":0,"index":3389},{"krate":0,"index":3391},{"krate":0,"index":3514},{"krate":0,"index":3598},{"krate":0,"index":4184},{"krate":0,"index":4194},{"krate":0,"index":4517},{"krate":0,"index":4519}],"decl_id":null,"docs":" An open-source creative-coding toolkit for Rust.","sig":null,"attributes":[{"value":"/ An open-source creative-coding toolkit for Rust.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":116,"byte_end":168,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":169,"byte_end":172,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [**Nannou**](http://nannou.cc) is a collection of code aimed at making it easy for artists to","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":173,"byte_end":270,"line_start":7,"line_end":7,"column_start":1,"column_end":98}},{"value":"/ express themselves with simple, fast, reliable, portable code. Whether working on a 12-month","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":271,"byte_end":367,"line_start":8,"line_end":8,"column_start":1,"column_end":97}},{"value":"/ laser installation or a 5 minute sketch, this framework aims to give artists easy access to the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":368,"byte_end":467,"line_start":9,"line_end":9,"column_start":1,"column_end":100}},{"value":"/ tools they need.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":468,"byte_end":488,"line_start":10,"line_end":10,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":489,"byte_end":492,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you're new to nannou, we recommend checking out [the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":493,"byte_end":552,"line_start":12,"line_end":12,"column_start":1,"column_end":60}},{"value":"/ examples](https://github.com/nannou-org/nannou/tree/master/examples) to get an idea of how","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":553,"byte_end":647,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ nannou applications are structured and how the API works.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":648,"byte_end":709,"line_start":14,"line_end":14,"column_start":1,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":47},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"app","qualname":"::app","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":154},{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":4520},{"krate":0,"index":4524},{"krate":0,"index":4526},{"krate":0,"index":4529},{"krate":0,"index":4531},{"krate":0,"index":4534},{"krate":0,"index":195},{"krate":0,"index":4536},{"krate":0,"index":4545},{"krate":0,"index":4547},{"krate":0,"index":4549},{"krate":0,"index":4550},{"krate":0,"index":200},{"krate":0,"index":206},{"krate":0,"index":221},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":281},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":306}],"decl_id":null,"docs":" Items related to the `App` type and the application context in general.","sig":null,"attributes":[{"value":"/ Items related to the `App` type and the application context in general.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":2247,"byte_end":2322,"line_start":1,"line_end":1,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":2323,"byte_end":2326,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See here for items relating to the event loop, device access, creating and managing windows,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":2327,"byte_end":2423,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"/ streams and more.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":2424,"byte_end":2445,"line_start":4,"line_end":4,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":2446,"byte_end":2449,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - [**App**](./struct.App.html) - provides a context and API for windowing, devices, etc.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":2450,"byte_end":2542,"line_start":6,"line_end":6,"column_start":1,"column_end":93}},{"value":"/ - [**Proxy**](./struct.Proxy.html) - a handle to an **App** that may be used from a non-main","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":2543,"byte_end":2639,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"/   thread.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":2640,"byte_end":2653,"line_start":8,"line_end":8,"column_start":1,"column_end":14}},{"value":"/ - [**LoopMode**](./enum.LoopMode.html) - describes the behaviour of the application event loop.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":2654,"byte_end":2753,"line_start":9,"line_end":9,"column_start":1,"column_end":100}}]},{"kind":"Type","id":{"krate":0,"index":134},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":3322,"byte_end":3329,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"name":"ModelFn","qualname":"::app::ModelFn","value":"fn(: &App) -> Model","parent":null,"children":[],"decl_id":null,"docs":" The user function type for initialising their model.\n","sig":null,"attributes":[{"value":"/ The user function type for initialising their model.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":3256,"byte_end":3312,"line_start":31,"line_end":31,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":136},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":3451,"byte_end":3458,"line_start":35,"line_end":35,"column_start":10,"column_end":17},"name":"EventFn","qualname":"::app::EventFn","value":"fn(: &App, : &mut Model, : Event)","parent":null,"children":[],"decl_id":null,"docs":" The user function type for updating their model in accordance with some event.\n","sig":null,"attributes":[{"value":"/ The user function type for updating their model in accordance with some event.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":3359,"byte_end":3441,"line_start":34,"line_end":34,"column_start":1,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":139},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":3598,"byte_end":3606,"line_start":38,"line_end":38,"column_start":10,"column_end":18},"name":"UpdateFn","qualname":"::app::UpdateFn","value":"fn(: &App, : &mut Model, : Update)","parent":null,"children":[],"decl_id":null,"docs":" The user function type for updating the user model within the application loop.\n","sig":null,"attributes":[{"value":"/ The user function type for updating the user model within the application loop.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":3505,"byte_end":3588,"line_start":37,"line_end":37,"column_start":1,"column_end":84}}]},{"kind":"Type","id":{"krate":0,"index":141},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":3742,"byte_end":3748,"line_start":41,"line_end":41,"column_start":10,"column_end":16},"name":"ViewFn","qualname":"::app::ViewFn","value":"fn(: &App, : &Model, : Frame)","parent":null,"children":[],"decl_id":null,"docs":" The user function type for drawing their model to the surface of a single window.\n","sig":null,"attributes":[{"value":"/ The user function type for drawing their model to the surface of a single window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":3647,"byte_end":3732,"line_start":40,"line_end":40,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":143},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":3880,"byte_end":3892,"line_start":44,"line_end":44,"column_start":10,"column_end":22},"name":"SketchViewFn","qualname":"::app::SketchViewFn","value":"fn(: &App, : Frame)","parent":null,"children":[],"decl_id":null,"docs":" A shorthand version of `ViewFn` for sketches where the user does not need a model.\n","sig":null,"attributes":[{"value":"/ A shorthand version of `ViewFn` for sketches where the user does not need a model.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":3784,"byte_end":3870,"line_start":43,"line_end":43,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":144},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":4014,"byte_end":4020,"line_start":47,"line_end":47,"column_start":10,"column_end":16},"name":"ExitFn","qualname":"::app::ExitFn","value":"fn(: &App, : Model)","parent":null,"children":[],"decl_id":null,"docs":" The user function type allowing them to consume the `model` when the application exits.\n","sig":null,"attributes":[{"value":"/ The user function type allowing them to consume the `model` when the application exits.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":3913,"byte_end":4004,"line_start":46,"line_end":46,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":154},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":4358,"byte_end":4365,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"Builder","qualname":"::app::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"decl_id":null,"docs":" A nannou `App` builder.\n","sig":null,"attributes":[{"value":"/ A nannou `App` builder.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":4319,"byte_end":4346,"line_start":57,"line_end":57,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":168},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":4815,"byte_end":4828,"line_start":73,"line_end":73,"column_start":12,"column_end":25},"name":"SketchBuilder","qualname":"::app::SketchBuilder","value":"SketchBuilder {  }","parent":null,"children":[{"krate":0,"index":170}],"decl_id":null,"docs":" A nannou `Sketch` builder.\n","sig":null,"attributes":[{"value":"/ A nannou `Sketch` builder.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":4773,"byte_end":4803,"line_start":72,"line_end":72,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":178},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":5966,"byte_end":5969,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"App","qualname":"::app::App","value":"App { mouse, keys, duration, time }","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194}],"decl_id":null,"docs":" Each nannou application has a single **App** instance. This **App** represents the entire\n context of the application.","sig":null,"attributes":[{"value":"/ Each nannou application has a single **App** instance. This **App** represents the entire","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":5217,"byte_end":5310,"line_start":89,"line_end":89,"column_start":1,"column_end":94}},{"value":"/ context of the application.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":5311,"byte_end":5342,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":5343,"byte_end":5346,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ The **App** provides access to most application, windowing and \"IO\" related APIs. In other","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":5347,"byte_end":5441,"line_start":92,"line_end":92,"column_start":1,"column_end":95}},{"value":"/ words, if you need access to windowing, the active wgpu devices, etc, the **App** will provide","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":5442,"byte_end":5540,"line_start":93,"line_end":93,"column_start":1,"column_end":99}},{"value":"/ access to this.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":5541,"byte_end":5560,"line_start":94,"line_end":94,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":5561,"byte_end":5564,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ The **App** owns and manages:","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":5565,"byte_end":5598,"line_start":96,"line_end":96,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":5599,"byte_end":5602,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ - The **window and input event loop** used to drive the application forward.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":5603,"byte_end":5683,"line_start":98,"line_end":98,"column_start":1,"column_end":81}},{"value":"/ - **All windows** for graphics and user input. Windows can be referenced via their IDs.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":5684,"byte_end":5775,"line_start":99,"line_end":99,"column_start":1,"column_end":92}},{"value":"/ - The sharing of wgpu devices between windows.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":5776,"byte_end":5826,"line_start":100,"line_end":100,"column_start":1,"column_end":51}},{"value":"/ - A default **Draw** instance for ease of use.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":5827,"byte_end":5877,"line_start":101,"line_end":101,"column_start":1,"column_end":51}},{"value":"/ - A map of channels for submitting user input updates to active **Ui**s.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":5878,"byte_end":5954,"line_start":102,"line_end":102,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":191},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":6713,"byte_end":6718,"line_start":121,"line_end":121,"column_start":9,"column_end":14},"name":"mouse","qualname":"::app::App::mouse","value":"state::mouse::Mouse","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" The current state of the `Mouse`.\n","sig":null,"attributes":[{"value":"/ The current state of the `Mouse`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":6667,"byte_end":6704,"line_start":120,"line_end":120,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":192},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":7262,"byte_end":7266,"line_start":132,"line_end":132,"column_start":9,"column_end":13},"name":"keys","qualname":"::app::App::keys","value":"state::keys::Keys","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" State of the keyboard keys.","sig":null,"attributes":[{"value":"/ State of the keyboard keys.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":6738,"byte_end":6769,"line_start":122,"line_end":122,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":6774,"byte_end":6777,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ `mods` provides state of each of the modifier keys: `shift`, `ctrl`, `alt`, `logo`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":6782,"byte_end":6869,"line_start":124,"line_end":124,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":6874,"byte_end":6877,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ `down` is the set of keys that are currently pressed.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":6882,"byte_end":6939,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":6944,"byte_end":6947,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ NOTE: `down` this is tracked by the nannou `App` so issues might occur if e.g. a key is","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":6952,"byte_end":7043,"line_start":128,"line_end":128,"column_start":5,"column_end":96}},{"value":"/ pressed while the app is in focus and then released when out of focus. Eventually we should","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":7048,"byte_end":7143,"line_start":129,"line_end":129,"column_start":5,"column_end":100}},{"value":"/ change this to query the OS somehow, but I don't think `winit` provides a way to do this","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":7148,"byte_end":7240,"line_start":130,"line_end":130,"column_start":5,"column_end":97}},{"value":"/ yet.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":7245,"byte_end":7253,"line_start":131,"line_end":131,"column_start":5,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":193},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":7533,"byte_end":7541,"line_start":138,"line_end":138,"column_start":9,"column_end":17},"name":"duration","qualname":"::app::App::duration","value":"state::time::Time","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Key time measurements tracked by the App.","sig":null,"attributes":[{"value":"/ Key time measurements tracked by the App.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":7285,"byte_end":7330,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":7335,"byte_end":7338,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ `duration.since_start` specifies the duration since the app started running.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":7343,"byte_end":7423,"line_start":135,"line_end":135,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":7428,"byte_end":7431,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ `duration.since_prev_update` specifies the duration since the previous update event.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":7436,"byte_end":7524,"line_start":137,"line_end":137,"column_start":5,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":194},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":8689,"byte_end":8693,"line_start":155,"line_end":155,"column_start":9,"column_end":13},"name":"time","qualname":"::app::App::time","value":"f32","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" The time in seconds since the `App` started running.","sig":null,"attributes":[{"value":"/ The time in seconds since the `App` started running.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":7560,"byte_end":7616,"line_start":139,"line_end":139,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":7621,"byte_end":7624,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Primarily, this field is a convenience that removes the need to call","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":7629,"byte_end":7701,"line_start":141,"line_end":141,"column_start":5,"column_end":77}},{"value":"/ `app.duration.since_start.secs()`. Normally we would try to avoid using such an ambiguous","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":7706,"byte_end":7799,"line_start":142,"line_end":142,"column_start":5,"column_end":98}},{"value":"/ field name, however due to the sheer amount of use that this value has we feel it is","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":7804,"byte_end":7892,"line_start":143,"line_end":143,"column_start":5,"column_end":93}},{"value":"/ beneficial to provide easier access.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":7897,"byte_end":7937,"line_start":144,"line_end":144,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":7942,"byte_end":7945,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ This value is of the same type as the scalar value used for describing space in animations.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":7950,"byte_end":8045,"line_start":146,"line_end":146,"column_start":5,"column_end":100}},{"value":"/ This makes it very easy to animate graphics and create changes over time without having to","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":8050,"byte_end":8144,"line_start":147,"line_end":147,"column_start":5,"column_end":99}},{"value":"/ cast values or repeatedly calculate it from a `Duration` type. A small example might be","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":8149,"byte_end":8240,"line_start":148,"line_end":148,"column_start":5,"column_end":96}},{"value":"/ `app.time.sin()` for simple oscillation behaviour.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":8245,"byte_end":8299,"line_start":149,"line_end":149,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":8304,"byte_end":8307,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ **Note:** This is suitable for use in short sketches, however should be avoided in long","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":8312,"byte_end":8403,"line_start":151,"line_end":151,"column_start":5,"column_end":96}},{"value":"/ running installations. This is because the \"resolution\" of floating point values reduces as","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":8408,"byte_end":8503,"line_start":152,"line_end":152,"column_start":5,"column_end":100}},{"value":"/ the number becomes higher. Instead, we recommend using `app.duration.since_start` or","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":8508,"byte_end":8596,"line_start":153,"line_end":153,"column_start":5,"column_end":93}},{"value":"/ `app.duration.since_prev_update` to access a more precise form of app time.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":8601,"byte_end":8680,"line_start":154,"line_end":154,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":4531},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":9207,"byte_end":9212,"line_start":176,"line_end":176,"column_start":12,"column_end":17},"name":"Proxy","qualname":"::app::Proxy","value":"Proxy {  }","parent":null,"children":[{"krate":0,"index":4532},{"krate":0,"index":4533}],"decl_id":null,"docs":" A handle to the **App** that can be shared across threads. This may be used to \"wake up\" the\n **App**'s inner event loop.\n","sig":null,"attributes":[{"value":"/ A handle to the **App** that can be shared across threads. This may be used to \"wake up\" the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":9050,"byte_end":9146,"line_start":173,"line_end":173,"column_start":1,"column_end":97}},{"value":"/ **App**'s inner event loop.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":9147,"byte_end":9178,"line_start":174,"line_end":174,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4537},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":10239,"byte_end":10250,"line_start":201,"line_end":201,"column_start":5,"column_end":16},"name":"RefreshSync","qualname":"::app::LoopMode::RefreshSync","value":"LoopMode::RefreshSync","parent":{"krate":0,"index":4536},"children":[],"decl_id":null,"docs":" Synchronises `Update` events with requests for a new frame for the surface.","sig":null,"attributes":[{"value":"/ Synchronises `Update` events with requests for a new frame for the surface.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":9860,"byte_end":9939,"line_start":196,"line_end":196,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":9944,"byte_end":9947,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The result of using this loop mode is similar to using vsync in traditional applications.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":9952,"byte_end":10045,"line_start":198,"line_end":198,"column_start":5,"column_end":98}},{"value":"/ E.g. if you have one window running on a monitor with a 60hz refresh rate, your update will","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":10050,"byte_end":10145,"line_start":199,"line_end":199,"column_start":5,"column_end":100}},{"value":"/ get called at a fairly consistent interval that is close to 60 times per second.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":10150,"byte_end":10234,"line_start":200,"line_end":200,"column_start":5,"column_end":89}}]},{"kind":"StructVariant","id":{"krate":0,"index":4539},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":10501,"byte_end":10505,"line_start":207,"line_end":207,"column_start":5,"column_end":9},"name":"Rate","qualname":"::app::LoopMode::Rate","value":"LoopMode::Rate { update_interval }","parent":{"krate":0,"index":4536},"children":[],"decl_id":null,"docs":" Specifies that the application is continuously looping at a consistent rate.","sig":null,"attributes":[{"value":"/ Specifies that the application is continuously looping at a consistent rate.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":10257,"byte_end":10337,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":10342,"byte_end":10345,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This currently behaves the same as `RefreshSync`. Need to upate this to handled a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":10350,"byte_end":10445,"line_start":205,"line_end":205,"column_start":5,"column_end":100}},{"value":"/ fix step properly in the future. See #456.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":10450,"byte_end":10496,"line_start":206,"line_end":206,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":4540},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":10574,"byte_end":10589,"line_start":209,"line_end":209,"column_start":9,"column_end":24},"name":"update_interval","qualname":"::app::LoopMode::Rate::update_interval","value":"instant::Duration","parent":{"krate":0,"index":4539},"children":[],"decl_id":null,"docs":" The minimum interval between emitted updates.\n","sig":null,"attributes":[{"value":"/ The minimum interval between emitted updates.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":10516,"byte_end":10565,"line_start":208,"line_end":208,"column_start":9,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4541},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":11014,"byte_end":11018,"line_start":218,"line_end":218,"column_start":5,"column_end":9},"name":"Wait","qualname":"::app::LoopMode::Wait","value":"LoopMode::Wait","parent":{"krate":0,"index":4536},"children":[],"decl_id":null,"docs":" Waits for user input, window, device and wake-up events to occur before producing `Update`\n events.","sig":null,"attributes":[{"value":"/ Waits for user input, window, device and wake-up events to occur before producing `Update`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":10613,"byte_end":10707,"line_start":212,"line_end":212,"column_start":5,"column_end":99}},{"value":"/ events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":10712,"byte_end":10723,"line_start":213,"line_end":213,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":10728,"byte_end":10731,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ This is particularly useful for low-energy GUIs that only need to update when some sort of","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":10736,"byte_end":10830,"line_start":215,"line_end":215,"column_start":5,"column_end":99}},{"value":"/ input has occurred. The benefit of using this mode is that you don't waste CPU cycles","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":10835,"byte_end":10924,"line_start":216,"line_end":216,"column_start":5,"column_end":94}},{"value":"/ looping or updating when you know nothing is changing in your model or view.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":10929,"byte_end":11009,"line_start":217,"line_end":217,"column_start":5,"column_end":85}}]},{"kind":"StructVariant","id":{"krate":0,"index":4543},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":11496,"byte_end":11502,"line_start":228,"line_end":228,"column_start":5,"column_end":11},"name":"NTimes","qualname":"::app::LoopMode::NTimes","value":"LoopMode::NTimes { number_of_updates }","parent":{"krate":0,"index":4536},"children":[],"decl_id":null,"docs":" Loops for the given number of updates and then finishes.","sig":null,"attributes":[{"value":"/ Loops for the given number of updates and then finishes.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":11025,"byte_end":11085,"line_start":220,"line_end":220,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":11090,"byte_end":11093,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ This is similar to the **Wait** loop mode, except that windowing, application and input","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":11098,"byte_end":11189,"line_start":222,"line_end":222,"column_start":5,"column_end":96}},{"value":"/ events will not cause the loop to update or view again after the initial","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":11194,"byte_end":11270,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ `number_of_updates` have already been applied.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":11275,"byte_end":11325,"line_start":224,"line_end":224,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":11330,"byte_end":11333,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This is useful for sketches where you only want to draw one frame, or if you know exactly","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":11338,"byte_end":11431,"line_start":226,"line_end":226,"column_start":5,"column_end":98}},{"value":"/ how many updates you require for an animation, etc.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":11436,"byte_end":11491,"line_start":227,"line_end":227,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":4544},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":11599,"byte_end":11616,"line_start":230,"line_end":230,"column_start":9,"column_end":26},"name":"number_of_updates","qualname":"::app::LoopMode::NTimes::number_of_updates","value":"usize","parent":{"krate":0,"index":4543},"children":[],"decl_id":null,"docs":" The number of updates that must be emited regardless of non-update events\n","sig":null,"attributes":[{"value":"/ The number of updates that must be emited regardless of non-update events","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":11513,"byte_end":11590,"line_start":229,"line_end":229,"column_start":9,"column_end":86}}]},{"kind":"Enum","id":{"krate":0,"index":4536},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":9845,"byte_end":9853,"line_start":195,"line_end":195,"column_start":10,"column_end":18},"name":"LoopMode","qualname":"::app::LoopMode","value":"enum LoopMode {\n    RefreshSync,\n    Rate {\n            update_interval: Duration,\n        },\n    Wait,\n    NTimes {\n            number_of_updates: usize,\n        },\n}","parent":null,"children":[{"krate":0,"index":4537},{"krate":0,"index":4539},{"krate":0,"index":4541},{"krate":0,"index":4543}],"decl_id":null,"docs":" The mode in which the **App** is currently running the event loop and emitting `Update` events.\n","sig":null,"attributes":[{"value":"/ The mode in which the **App** is currently running the event loop and emitting `Update` events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":9701,"byte_end":9800,"line_start":193,"line_end":193,"column_start":1,"column_end":100}}]},{"kind":"Const","id":{"krate":0,"index":202},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":11746,"byte_end":11762,"line_start":239,"line_end":239,"column_start":15,"column_end":31},"name":"DEFAULT_BACKENDS","qualname":"::app::Builder::<M>::DEFAULT_BACKENDS","value":"wgpu::Backends","parent":{"krate":0,"index":200},"children":[],"decl_id":null,"docs":" The default set of backends requested.\n","sig":null,"attributes":[{"value":"/ The default set of backends requested.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":11689,"byte_end":11731,"line_start":238,"line_end":238,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":12362,"byte_end":12365,"line_start":252,"line_end":252,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder<M, Event>>::new","value":"fn new(ModelFn<M>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Begin building the `App`.","sig":null,"attributes":[{"value":"/ Begin building the `App`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":11810,"byte_end":11839,"line_start":241,"line_end":241,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":11844,"byte_end":11847,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ The `model` argument is the function that the App will call to initialise your Model.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":11852,"byte_end":11941,"line_start":243,"line_end":243,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":11946,"byte_end":11949,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The Model can be thought of as the state that you would like to track throughout the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":11954,"byte_end":12042,"line_start":245,"line_end":245,"column_start":5,"column_end":93}},{"value":"/ lifetime of your nannou program from start to exit.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":12047,"byte_end":12102,"line_start":246,"line_end":246,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":12107,"byte_end":12110,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The given function is called before any event processing begins within the application.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":12115,"byte_end":12206,"line_start":248,"line_end":248,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":12211,"byte_end":12214,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ The Model that is returned by the function is the same model that will be passed to the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":12219,"byte_end":12310,"line_start":250,"line_end":250,"column_start":5,"column_end":96}},{"value":"/ given event and view functions.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":12315,"byte_end":12350,"line_start":251,"line_end":251,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":13397,"byte_end":13402,"line_start":276,"line_end":276,"column_start":12,"column_end":17},"name":"event","qualname":"<Builder<M, Event>>::event","value":"fn event<E>(Self, EventFn<M, E>) -> Builder<M, E> where E: LoopEvent","parent":null,"children":[],"decl_id":null,"docs":" The function that the app will call to allow you to update your Model on events.","sig":null,"attributes":[{"value":"/ The function that the app will call to allow you to update your Model on events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":12809,"byte_end":12893,"line_start":268,"line_end":268,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":12898,"byte_end":12901,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ The `event` function allows you to expect any event type that implements `LoopEvent`,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":12906,"byte_end":12995,"line_start":270,"line_end":270,"column_start":5,"column_end":94}},{"value":"/ however nannou also provides a default `Event` type that should cover most use cases. This","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":13000,"byte_end":13094,"line_start":271,"line_end":271,"column_start":5,"column_end":99}},{"value":"/ event type is an `enum` that describes all the different kinds of I/O events that might","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":13099,"byte_end":13190,"line_start":272,"line_end":272,"column_start":5,"column_end":96}},{"value":"/ occur during the life of the program. These include things like `Update`s and","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":13195,"byte_end":13276,"line_start":273,"line_end":273,"column_start":5,"column_end":86}},{"value":"/ `WindowEvent`s such as `KeyPressed`, `MouseMoved`, and so on.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":13281,"byte_end":13346,"line_start":274,"line_end":274,"column_start":5,"column_end":70}}]},{"kind":"Const","id":{"krate":0,"index":209},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":14438,"byte_end":14467,"line_start":317,"line_end":317,"column_start":15,"column_end":44},"name":"DEFAULT_CAPTURE_FRAME_TIMEOUT","qualname":"::app::Builder::<M, E>::DEFAULT_CAPTURE_FRAME_TIMEOUT","value":"Duration","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":" By default, we timeout if waiting for a frame capture job takes longer than 5 seconds. This\n is to avoid hanging forever in the case the frame writing process encounters an\n unrecoverable error.\n","sig":null,"attributes":[{"value":"/ By default, we timeout if waiting for a frame capture job takes longer than 5 seconds. This","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":14211,"byte_end":14306,"line_start":314,"line_end":314,"column_start":5,"column_end":100}},{"value":"/ is to avoid hanging forever in the case the frame writing process encounters an","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":14311,"byte_end":14394,"line_start":315,"line_end":315,"column_start":5,"column_end":88}},{"value":"/ unrecoverable error.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":14399,"byte_end":14423,"line_start":316,"line_end":316,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":15018,"byte_end":15022,"line_start":327,"line_end":327,"column_start":12,"column_end":16},"name":"view","qualname":"<Builder<M, E>>::view","value":"fn view(Self, ViewFn<M>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The default `view` function that the app will call to allow you to present your Model to\n the surface of a window on your display.","sig":null,"attributes":[{"value":"/ The default `view` function that the app will call to allow you to present your Model to","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":14510,"byte_end":14602,"line_start":319,"line_end":319,"column_start":5,"column_end":97}},{"value":"/ the surface of a window on your display.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":14607,"byte_end":14651,"line_start":320,"line_end":320,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":14656,"byte_end":14659,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ This function will be used in the case that a window-specific view function has not been","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":14664,"byte_end":14756,"line_start":322,"line_end":322,"column_start":5,"column_end":97}},{"value":"/ provided, e.g. via `window::Builder::view` or `window::Builder::sketch`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":14761,"byte_end":14837,"line_start":323,"line_end":323,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":14842,"byte_end":14845,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Note that when working with more than one window, you can use `frame.window_id()` to","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":14850,"byte_end":14938,"line_start":325,"line_end":325,"column_start":5,"column_end":93}},{"value":"/ determine which window the current call is associated with.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":14943,"byte_end":15006,"line_start":326,"line_end":326,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":15664,"byte_end":15670,"line_start":340,"line_end":340,"column_start":12,"column_end":18},"name":"update","qualname":"<Builder<M, E>>::update","value":"fn update(Self, UpdateFn<M>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A function for updating the model within the application loop.","sig":null,"attributes":[{"value":"/ A function for updating the model within the application loop.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":15141,"byte_end":15207,"line_start":332,"line_end":332,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":15212,"byte_end":15215,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ See the `LoopMode` documentation for more information about the different kinds of","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":15220,"byte_end":15306,"line_start":334,"line_end":334,"column_start":5,"column_end":91}},{"value":"/ application loop modes available in nannou and how they behave.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":15311,"byte_end":15378,"line_start":335,"line_end":335,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":15383,"byte_end":15386,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ Update events are also emitted as a variant of the `event` function. Note that if you","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":15391,"byte_end":15480,"line_start":337,"line_end":337,"column_start":5,"column_end":94}},{"value":"/ specify both an `event` function and an `update` function, the `event` function will always","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":15485,"byte_end":15580,"line_start":338,"line_end":338,"column_start":5,"column_end":100}},{"value":"/ be called with an update event prior to this `update` function.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":15585,"byte_end":15652,"line_start":339,"line_end":339,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":16727,"byte_end":16740,"line_start":358,"line_end":358,"column_start":12,"column_end":25},"name":"simple_window","qualname":"<Builder<M, E>>::simple_window","value":"fn simple_window(Self, ViewFn<M>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tell the app that you would like it to create a single, simple, default window just before\n it calls your model function.","sig":null,"attributes":[{"value":"/ Tell the app that you would like it to create a single, simple, default window just before","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":15772,"byte_end":15866,"line_start":345,"line_end":345,"column_start":5,"column_end":99}},{"value":"/ it calls your model function.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":15871,"byte_end":15904,"line_start":346,"line_end":346,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":15909,"byte_end":15912,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The given `view` function will play the same role as if passed to the `view` builder","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":15917,"byte_end":16005,"line_start":348,"line_end":348,"column_start":5,"column_end":93}},{"value":"/ method. Note that the `view` function passed to this method will overwrite any pre-existing","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":16010,"byte_end":16105,"line_start":349,"line_end":349,"column_start":5,"column_end":100}},{"value":"/ view function specified by any preceding call to the `view`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":16110,"byte_end":16173,"line_start":350,"line_end":350,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":16178,"byte_end":16181,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ Note that calling this multiple times will not give you multiple windows, but instead will","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":16186,"byte_end":16280,"line_start":352,"line_end":352,"column_start":5,"column_end":99}},{"value":"/ simply overwrite pre-existing calls to the method. If you would like to create multiple","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":16285,"byte_end":16376,"line_start":353,"line_end":353,"column_start":5,"column_end":96}},{"value":"/ windows or would like more flexibility in your window creation process, please see the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":16381,"byte_end":16471,"line_start":354,"line_end":354,"column_start":5,"column_end":95}},{"value":"/ `App::new_window` method. The role of this `simple_window` method is to provide a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":16476,"byte_end":16561,"line_start":355,"line_end":355,"column_start":5,"column_end":90}},{"value":"/ quick-and-easy way to start with a simple window. This can be very useful for quick ideas,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":16566,"byte_end":16660,"line_start":356,"line_end":356,"column_start":5,"column_end":99}},{"value":"/ small single-window applications and examples.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":16665,"byte_end":16715,"line_start":357,"line_end":357,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":17109,"byte_end":17113,"line_start":368,"line_end":368,"column_start":12,"column_end":16},"name":"exit","qualname":"<Builder<M, E>>::exit","value":"fn exit(Self, ExitFn<M>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify an `exit` function to be called when the application exits.","sig":null,"attributes":[{"value":"/ Specify an `exit` function to be called when the application exits.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":16902,"byte_end":16973,"line_start":364,"line_end":364,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":16978,"byte_end":16981,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ The exit function gives ownership of the model back to you for any cleanup that might be","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":16986,"byte_end":17078,"line_start":366,"line_end":366,"column_start":5,"column_end":97}},{"value":"/ necessary.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":17083,"byte_end":17097,"line_start":367,"line_end":367,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":17359,"byte_end":17363,"line_start":376,"line_end":376,"column_start":12,"column_end":16},"name":"size","qualname":"<Builder<M, E>>::size","value":"fn size(Self, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the default window size in points.","sig":null,"attributes":[{"value":"/ Specify the default window size in points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":17207,"byte_end":17253,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":17258,"byte_end":17261,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ If a window is created and its size is not specified, this size will be used.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":17266,"byte_end":17347,"line_start":375,"line_end":375,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":17659,"byte_end":17669,"line_start":383,"line_end":383,"column_start":12,"column_end":22},"name":"fullscreen","qualname":"<Builder<M, E>>::fullscreen","value":"fn fullscreen(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify that windows should be created on the primary monitor by default.\n","sig":null,"attributes":[{"value":"/ Specify that windows should be created on the primary monitor by default.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":17570,"byte_end":17647,"line_start":382,"line_end":382,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":17853,"byte_end":17862,"line_start":389,"line_end":389,"column_start":12,"column_end":21},"name":"loop_mode","qualname":"<Builder<M, E>>::loop_mode","value":"fn loop_mode(Self, LoopMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the default initial loop mode for this app.\n","sig":null,"attributes":[{"value":"/ Specify the default initial loop mode for this app.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":17786,"byte_end":17841,"line_start":388,"line_end":388,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":18895,"byte_end":18917,"line_start":408,"line_end":408,"column_start":12,"column_end":34},"name":"max_capture_frame_jobs","qualname":"<Builder<M, E>>::max_capture_frame_jobs","value":"fn max_capture_frame_jobs(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The maximum number of simultaneous capture frame jobs that can be run per window before we\n block and wait for the existing jobs to complete.","sig":null,"attributes":[{"value":"/ The maximum number of simultaneous capture frame jobs that can be run per window before we","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":17961,"byte_end":18055,"line_start":394,"line_end":394,"column_start":5,"column_end":99}},{"value":"/ block and wait for the existing jobs to complete.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":18060,"byte_end":18113,"line_start":395,"line_end":395,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":18118,"byte_end":18121,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ A \"capture frame job\" refers to the combind process of waiting to read a frame from the GPU","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":18126,"byte_end":18221,"line_start":397,"line_end":397,"column_start":5,"column_end":100}},{"value":"/ and then writing that frame to an image file on the disk. Each call to","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":18226,"byte_end":18300,"line_start":398,"line_end":398,"column_start":5,"column_end":79}},{"value":"/ `window.capture_frame(path)` spawns a new \"capture frame job\" on an internal thread pool.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":18305,"byte_end":18398,"line_start":399,"line_end":399,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":18403,"byte_end":18406,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ By default, this value is equal to the number of physical cpu threads available on the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":18411,"byte_end":18501,"line_start":401,"line_end":401,"column_start":5,"column_end":95}},{"value":"/ system. However, keep in mind that this means there must be room in both RAM and VRAM for","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":18506,"byte_end":18599,"line_start":402,"line_end":402,"column_start":5,"column_end":98}},{"value":"/ this number of textures to exist per window at any moment in time. If you run into an \"out","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":18604,"byte_end":18698,"line_start":403,"line_end":403,"column_start":5,"column_end":99}},{"value":"/ of memory\" error, try reducing the number of max jobs to a lower value, though never lower","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":18703,"byte_end":18797,"line_start":404,"line_end":404,"column_start":5,"column_end":99}},{"value":"/ than `1`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":18802,"byte_end":18815,"line_start":405,"line_end":405,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":18820,"byte_end":18823,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the specified value is less than `1`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":18828,"byte_end":18883,"line_start":407,"line_end":407,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":19699,"byte_end":19720,"line_start":425,"line_end":425,"column_start":12,"column_end":33},"name":"capture_frame_timeout","qualname":"<Builder<M, E>>::capture_frame_timeout","value":"fn capture_frame_timeout(Self, Option<std::time::Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" In the case that `max_capture_frame_jobs` is reached and the main thread must block, this\n specifies how long to wait for a running capture job to complete. See the\n `max_capture_frame_jobs` docs for more details.","sig":null,"attributes":[{"value":"/ In the case that `max_capture_frame_jobs` is reached and the main thread must block, this","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":19156,"byte_end":19249,"line_start":417,"line_end":417,"column_start":5,"column_end":98}},{"value":"/ specifies how long to wait for a running capture job to complete. See the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":19254,"byte_end":19331,"line_start":418,"line_end":418,"column_start":5,"column_end":82}},{"value":"/ `max_capture_frame_jobs` docs for more details.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":19336,"byte_end":19387,"line_start":419,"line_end":419,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":19392,"byte_end":19395,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ By default, the timeout used is equal to `app::Builder::DEFAULT_CAPTURE_FRAME_TIMEOUT`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":19400,"byte_end":19491,"line_start":421,"line_end":421,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":19496,"byte_end":19499,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified, the capture process will never time out. This may be necessary on","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":19504,"byte_end":19597,"line_start":423,"line_end":423,"column_start":5,"column_end":98}},{"value":"/ extremely low-powered machines that take a long time to write each frame to disk.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":19602,"byte_end":19687,"line_start":424,"line_end":424,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":19977,"byte_end":19985,"line_start":433,"line_end":433,"column_start":12,"column_end":20},"name":"backends","qualname":"<Builder<M, E>>::backends","value":"fn backends(Self, wgpu::Backends) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the set of preferred WGPU backends.","sig":null,"attributes":[{"value":"/ Specify the set of preferred WGPU backends.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":19855,"byte_end":19902,"line_start":430,"line_end":430,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":19907,"byte_end":19910,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ By default, this is `wgpu::Backends::PRIMARY`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":19915,"byte_end":19965,"line_start":432,"line_end":432,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":20477,"byte_end":20480,"line_start":445,"line_end":445,"column_start":12,"column_end":15},"name":"run","qualname":"<Builder<M, E>>::run","value":"fn run(Self)","parent":null,"children":[],"decl_id":null,"docs":" Build and run an `App` with the specified parameters.","sig":null,"attributes":[{"value":"/ Build and run an `App` with the specified parameters.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":20090,"byte_end":20147,"line_start":438,"line_end":438,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":20152,"byte_end":20155,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ This function will not return until the application has exited.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":20160,"byte_end":20227,"line_start":440,"line_end":440,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":20232,"byte_end":20235,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ If you wish to remain cross-platform friendly, we recommend that you call this on the main","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":20240,"byte_end":20334,"line_start":442,"line_end":442,"column_start":5,"column_end":99}},{"value":"/ thread as some platforms require that their application event loop and windows are","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":20339,"byte_end":20425,"line_start":443,"line_end":443,"column_start":5,"column_end":91}},{"value":"/ initialised on the main thread.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":20430,"byte_end":20465,"line_start":444,"line_end":444,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":22617,"byte_end":22626,"line_start":512,"line_end":512,"column_start":12,"column_end":21},"name":"loop_mode","qualname":"<SketchBuilder<E>>::loop_mode","value":"fn loop_mode(Self, LoopMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the default initial loop mode for this sketch.","sig":null,"attributes":[{"value":"/ Specify the default initial loop mode for this sketch.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":22484,"byte_end":22542,"line_start":509,"line_end":509,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":22547,"byte_end":22550,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ This method delegates to `Builder::loop_mode`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":22555,"byte_end":22605,"line_start":511,"line_end":511,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":22786,"byte_end":22790,"line_start":518,"line_end":518,"column_start":12,"column_end":16},"name":"size","qualname":"<SketchBuilder<E>>::size","value":"fn size(Self, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The size of the sketch window.\n","sig":null,"attributes":[{"value":"/ The size of the sketch window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":22740,"byte_end":22774,"line_start":517,"line_end":517,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":23067,"byte_end":23070,"line_start":526,"line_end":526,"column_start":12,"column_end":15},"name":"run","qualname":"<SketchBuilder<E>>::run","value":"fn run(Self)","parent":null,"children":[],"decl_id":null,"docs":" Build and run a `Sketch` with the specified parameters.","sig":null,"attributes":[{"value":"/ Build and run a `Sketch` with the specified parameters.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":22917,"byte_end":22976,"line_start":523,"line_end":523,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":22981,"byte_end":22984,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ This calls `App::run` internally. See that method for details!","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":22989,"byte_end":23055,"line_start":525,"line_end":525,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":23471,"byte_end":23477,"line_start":537,"line_end":537,"column_start":12,"column_end":18},"name":"sketch","qualname":"<Builder<(), Event>>::sketch","value":"fn sketch(SketchViewFn) -> SketchBuilder<Event>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for building a simple app that has no model, handles no events and simply draws\n to a single window.","sig":null,"attributes":[{"value":"/ Shorthand for building a simple app that has no model, handles no events and simply draws","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":23145,"byte_end":23238,"line_start":532,"line_end":532,"column_start":5,"column_end":98}},{"value":"/ to a single window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":23243,"byte_end":23266,"line_start":533,"line_end":533,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":23271,"byte_end":23274,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ This is useful for late night hack sessions where you just don't care about all that other","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":23279,"byte_end":23373,"line_start":535,"line_end":535,"column_start":5,"column_end":99}},{"value":"/ stuff, you just want to play around with some ideas or make something pretty.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":23378,"byte_end":23459,"line_start":536,"line_end":536,"column_start":5,"column_end":86}}]},{"kind":"Const","id":{"krate":0,"index":231},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":24174,"byte_end":24190,"line_start":556,"line_end":556,"column_start":15,"column_end":31},"name":"DEFAULT_RATE_FPS","qualname":"::app::LoopMode::DEFAULT_RATE_FPS","value":"f64","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":232},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":24327,"byte_end":24349,"line_start":559,"line_end":559,"column_start":15,"column_end":37},"name":"UPDATES_PER_WAIT_EVENT","qualname":"::app::LoopMode::UPDATES_PER_WAIT_EVENT","value":"u32","parent":{"krate":0,"index":230},"children":[],"decl_id":null,"docs":" The minimum number of updates that will be emitted after an event is triggered in Wait\n mode.\n","sig":null,"attributes":[{"value":"/ The minimum number of updates that will be emitted after an event is triggered in Wait","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":24208,"byte_end":24298,"line_start":557,"line_end":557,"column_start":5,"column_end":95}},{"value":"/ mode.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":24303,"byte_end":24312,"line_start":558,"line_end":558,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":24609,"byte_end":24621,"line_start":565,"line_end":565,"column_start":12,"column_end":24},"name":"refresh_sync","qualname":"<LoopMode>::refresh_sync","value":"fn refresh_sync() -> Self","parent":null,"children":[],"decl_id":null,"docs":" A simplified constructor for the default `RefreshSync` loop mode.","sig":null,"attributes":[{"value":"/ A simplified constructor for the default `RefreshSync` loop mode.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":24365,"byte_end":24434,"line_start":561,"line_end":561,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":24439,"byte_end":24442,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ Assumes a display refresh rate of ~60hz and in turn specifies a `minimum_update_latency` of","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":24447,"byte_end":24542,"line_start":563,"line_end":563,"column_start":5,"column_end":100}},{"value":"/ ~8.33ms. The `windows` field is set to `None`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":24547,"byte_end":24597,"line_start":564,"line_end":564,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":24750,"byte_end":24758,"line_start":570,"line_end":570,"column_start":12,"column_end":20},"name":"rate_fps","qualname":"<LoopMode>::rate_fps","value":"fn rate_fps(f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the **Rate** mode with the given frames-per-second.\n","sig":null,"attributes":[{"value":"/ Specify the **Rate** mode with the given frames-per-second.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":24675,"byte_end":24738,"line_start":569,"line_end":569,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":24927,"byte_end":24931,"line_start":576,"line_end":576,"column_start":12,"column_end":16},"name":"wait","qualname":"<LoopMode>::wait","value":"fn wait() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the **Wait** mode.\n","sig":null,"attributes":[{"value":"/ Specify the **Wait** mode.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":24885,"byte_end":24915,"line_start":575,"line_end":575,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":25142,"byte_end":25153,"line_start":583,"line_end":583,"column_start":12,"column_end":23},"name":"loop_ntimes","qualname":"<LoopMode>::loop_ntimes","value":"fn loop_ntimes(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the **Ntimes** mode with one update","sig":null,"attributes":[{"value":"/ Specify the **Ntimes** mode with one update","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":24978,"byte_end":25025,"line_start":580,"line_end":580,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":25030,"byte_end":25033,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ Waits long enough to ensure loop iteration never occurs faster than the given `max_fps`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":25038,"byte_end":25130,"line_start":582,"line_end":582,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":25307,"byte_end":25316,"line_start":588,"line_end":588,"column_start":12,"column_end":21},"name":"loop_once","qualname":"<LoopMode>::loop_once","value":"fn loop_once() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the **Ntimes** mode with one update\n","sig":null,"attributes":[{"value":"/ Specify the **Ntimes** mode with one update","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":25248,"byte_end":25295,"line_start":587,"line_end":587,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":25402,"byte_end":25409,"line_start":594,"line_end":594,"column_start":8,"column_end":15},"name":"default","qualname":"<LoopMode as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":243},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":25841,"byte_end":25862,"line_start":613,"line_end":613,"column_start":15,"column_end":36},"name":"ASSETS_DIRECTORY_NAME","qualname":"::app::App::ASSETS_DIRECTORY_NAME","value":"&'static str","parent":{"krate":0,"index":242},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":244},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":25903,"byte_end":25925,"line_start":614,"line_end":614,"column_start":15,"column_end":37},"name":"DEFAULT_EXIT_ON_ESCAPE","qualname":"::app::App::DEFAULT_EXIT_ON_ESCAPE","value":"bool","parent":{"krate":0,"index":242},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":245},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":25954,"byte_end":25984,"line_start":615,"line_end":615,"column_start":15,"column_end":45},"name":"DEFAULT_FULLSCREEN_ON_SHORTCUT","qualname":"::app::App::DEFAULT_FULLSCREEN_ON_SHORTCUT","value":"bool","parent":{"krate":0,"index":242},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":27491,"byte_end":27509,"line_start":661,"line_end":661,"column_start":12,"column_end":30},"name":"available_monitors","qualname":"<App>::available_monitors","value":"fn available_monitors(&Self) -> Vec<winit::monitor::MonitorHandle>","parent":null,"children":[],"decl_id":null,"docs":" Returns the list of all the monitors available on the system.\n","sig":null,"attributes":[{"value":"/ Returns the list of all the monitors available on the system.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":27414,"byte_end":27479,"line_start":660,"line_end":660,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":28214,"byte_end":28229,"line_start":679,"line_end":679,"column_start":12,"column_end":27},"name":"primary_monitor","qualname":"<App>::primary_monitor","value":"fn primary_monitor(&Self) -> Option<winit::monitor::MonitorHandle>","parent":null,"children":[],"decl_id":null,"docs":" Returns the primary monitor of the system.\n May return None if none can be detected. For example, this can happen when running on Linux\n with Wayland.\n","sig":null,"attributes":[{"value":"/ Returns the primary monitor of the system.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":28034,"byte_end":28080,"line_start":676,"line_end":676,"column_start":5,"column_end":51}},{"value":"/ May return None if none can be detected. For example, this can happen when running on Linux","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":28085,"byte_end":28180,"line_start":677,"line_end":677,"column_start":5,"column_end":100}},{"value":"/ with Wayland.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":28185,"byte_end":28202,"line_start":678,"line_end":678,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":29278,"byte_end":29289,"line_start":702,"line_end":702,"column_start":12,"column_end":23},"name":"assets_path","qualname":"<App>::assets_path","value":"fn assets_path(&Self) -> Result<PathBuf, find_folder::Error>","parent":null,"children":[],"decl_id":null,"docs":" Find and return the absolute path to the project's `assets` directory.","sig":null,"attributes":[{"value":"/ Find and return the absolute path to the project's `assets` directory.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":28887,"byte_end":28961,"line_start":695,"line_end":695,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":28966,"byte_end":28969,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ This method looks for the assets directory in the following order:","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":28974,"byte_end":29044,"line_start":697,"line_end":697,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":29049,"byte_end":29052,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ 1. Checks the same directory as the executable.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":29057,"byte_end":29108,"line_start":699,"line_end":699,"column_start":5,"column_end":56}},{"value":"/ 2. Recursively checks exe's parent directories (to a max depth of 5).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":29113,"byte_end":29186,"line_start":700,"line_end":700,"column_start":5,"column_end":78}},{"value":"/ 3. Recursively checks exe's children directories (to a max depth of 3).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":29191,"byte_end":29266,"line_start":701,"line_end":701,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":29783,"byte_end":29795,"line_start":713,"line_end":713,"column_start":12,"column_end":24},"name":"project_path","qualname":"<App>::project_path","value":"fn project_path(&Self) -> Result<PathBuf, find_folder::Error>","parent":null,"children":[],"decl_id":null,"docs":" The path to the current project directory.","sig":null,"attributes":[{"value":"/ The path to the current project directory.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":29376,"byte_end":29422,"line_start":706,"line_end":706,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":29427,"byte_end":29430,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ The current project directory is considered to be the directory containing the cargo","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":29435,"byte_end":29523,"line_start":708,"line_end":708,"column_start":5,"column_end":93}},{"value":"/ manifest (aka the `Cargo.toml` file).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":29528,"byte_end":29569,"line_start":709,"line_end":709,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":29574,"byte_end":29577,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ **Note:** Be careful not to rely on this directory for apps or sketches that you wish to","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":29582,"byte_end":29674,"line_start":711,"line_end":711,"column_start":5,"column_end":97}},{"value":"/ distribute! This directory is mostly useful for local sketches, experiments and testing.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":29679,"byte_end":29771,"line_start":712,"line_end":712,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":29927,"byte_end":29937,"line_start":718,"line_end":718,"column_start":12,"column_end":22},"name":"new_window","qualname":"<App>::new_window","value":"fn new_window(&Self) -> window::Builder","parent":null,"children":[],"decl_id":null,"docs":" Begin building a new window.\n","sig":null,"attributes":[{"value":"/ Begin building a new window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":29883,"byte_end":29915,"line_start":717,"line_end":717,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":30499,"byte_end":30511,"line_start":731,"line_end":731,"column_start":12,"column_end":24},"name":"window_count","qualname":"<App>::window_count","value":"fn window_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of windows currently in the application.\n","sig":null,"attributes":[{"value":"/ The number of windows currently in the application.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":30432,"byte_end":30487,"line_start":730,"line_end":730,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":30639,"byte_end":30645,"line_start":736,"line_end":736,"column_start":12,"column_end":18},"name":"window","qualname":"<App>::window","value":"fn window(&Self, window::Id) -> Option<std::cell::Ref<, Window>>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the window with the given `Id`.\n","sig":null,"attributes":[{"value":"/ A reference to the window with the given `Id`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":30577,"byte_end":30627,"line_start":735,"line_end":735,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":31053,"byte_end":31062,"line_start":748,"line_end":748,"column_start":12,"column_end":21},"name":"window_id","qualname":"<App>::window_id","value":"fn window_id(&Self) -> window::Id","parent":null,"children":[],"decl_id":null,"docs":" Return the **Id** of the currently focused window.","sig":null,"attributes":[{"value":"/ Return the **Id** of the currently focused window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":30907,"byte_end":30961,"line_start":745,"line_end":745,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":30966,"byte_end":30969,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ **Panics** if there are no windows or if no window is in focus.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":30974,"byte_end":31041,"line_start":747,"line_end":747,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":31360,"byte_end":31370,"line_start":756,"line_end":756,"column_start":12,"column_end":22},"name":"window_ids","qualname":"<App>::window_ids","value":"fn window_ids(&Self) -> Vec<window::Id>","parent":null,"children":[],"decl_id":null,"docs":" Return a `Vec` containing a unique `window::Id` for each currently open window managed by\n the `App`.\n","sig":null,"attributes":[{"value":"/ Return a `Vec` containing a unique `window::Id` for each currently open window managed by","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":31236,"byte_end":31329,"line_start":754,"line_end":754,"column_start":5,"column_end":98}},{"value":"/ the `App`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":31334,"byte_end":31348,"line_start":755,"line_end":755,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":31746,"byte_end":31757,"line_start":766,"line_end":766,"column_start":12,"column_end":23},"name":"window_rect","qualname":"<App>::window_rect","value":"fn window_rect(&Self) -> geom::Rect<f32>","parent":null,"children":[],"decl_id":null,"docs":" Return the **Rect** for the currently focused window.","sig":null,"attributes":[{"value":"/ Return the **Rect** for the currently focused window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":31497,"byte_end":31554,"line_start":761,"line_end":761,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":31559,"byte_end":31562,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ The **Rect** coords are described in \"points\" (pixels divided by the hidpi factor).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":31567,"byte_end":31654,"line_start":763,"line_end":763,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":31659,"byte_end":31662,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ **Panics** if there are no windows or if no window is in focus.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":31667,"byte_end":31734,"line_start":765,"line_end":765,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":32208,"byte_end":32219,"line_start":778,"line_end":778,"column_start":12,"column_end":23},"name":"main_window","qualname":"<App>::main_window","value":"fn main_window(&Self) -> std::cell::Ref<, Window>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the window currently in focus.","sig":null,"attributes":[{"value":"/ A reference to the window currently in focus.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":31831,"byte_end":31880,"line_start":770,"line_end":770,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":31885,"byte_end":31888,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ **Panics** if their are no windows open in the **App**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":31893,"byte_end":31952,"line_start":772,"line_end":772,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":31957,"byte_end":31960,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ Uses the **App::window** method internally.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":31965,"byte_end":32012,"line_start":774,"line_end":774,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":32017,"byte_end":32020,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ TODO: Currently this produces a reference to the *focused* window, but this behaviour","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":32025,"byte_end":32114,"line_start":776,"line_end":776,"column_start":5,"column_end":94}},{"value":"/ should be changed to track the \"main\" window (the first window created?).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":32119,"byte_end":32196,"line_start":777,"line_end":777,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":32402,"byte_end":32410,"line_start":784,"line_end":784,"column_start":12,"column_end":20},"name":"backends","qualname":"<App>::backends","value":"fn backends(&Self) -> wgpu::Backends","parent":null,"children":[],"decl_id":null,"docs":" Return the wgpu `Backends` in use.\n","sig":null,"attributes":[{"value":"/ Return the wgpu `Backends` in use.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":32352,"byte_end":32390,"line_start":783,"line_end":783,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":32604,"byte_end":32612,"line_start":791,"line_end":791,"column_start":12,"column_end":20},"name":"instance","qualname":"<App>::instance","value":"fn instance(&Self) -> &wgpu::Instance","parent":null,"children":[],"decl_id":null,"docs":" Return the main wgpu `Instance` in use.","sig":null,"attributes":[{"value":"/ Return the main wgpu `Instance` in use.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":32471,"byte_end":32514,"line_start":788,"line_end":788,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":32519,"byte_end":32522,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ This must be passed into the various methods on `AdapterMap`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":32527,"byte_end":32592,"line_start":790,"line_end":790,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":33473,"byte_end":33486,"line_start":808,"line_end":808,"column_start":12,"column_end":25},"name":"wgpu_adapters","qualname":"<App>::wgpu_adapters","value":"fn wgpu_adapters(&Self) -> &wgpu::AdapterMap","parent":null,"children":[],"decl_id":null,"docs":" Access to the **App**'s inner map of wgpu adapters representing access to physical GPU\n devices.","sig":null,"attributes":[{"value":"/ Access to the **App**'s inner map of wgpu adapters representing access to physical GPU","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":32675,"byte_end":32765,"line_start":795,"line_end":795,"column_start":5,"column_end":95}},{"value":"/ devices.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":32770,"byte_end":32782,"line_start":796,"line_end":796,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":32787,"byte_end":32790,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ By maintaining a map of active adapters and their established devices, nannou allows for","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":32795,"byte_end":32887,"line_start":798,"line_end":798,"column_start":5,"column_end":97}},{"value":"/ devices to be shared based on the desired `RequestAdapterOptions` and `DeviceDescriptor`s.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":32892,"byte_end":32986,"line_start":799,"line_end":799,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":32991,"byte_end":32994,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ For example, when creating new windows with the same set of `RequestAdapterOptions` and","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":32999,"byte_end":33090,"line_start":801,"line_end":801,"column_start":5,"column_end":96}},{"value":"/ `DeviceDescriptor`s, nannou will automatically share devices between windows where","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":33095,"byte_end":33181,"line_start":802,"line_end":802,"column_start":5,"column_end":91}},{"value":"/ possible. This allows for sharing GPU resources like **Texture**s and **Buffer**s between","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":33186,"byte_end":33279,"line_start":803,"line_end":803,"column_start":5,"column_end":98}},{"value":"/ windows.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":33284,"byte_end":33296,"line_start":804,"line_end":804,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":33301,"byte_end":33304,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ All methods on `AdapterMap` that take a `wgpu::Instance` must be passed the main instance","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":33309,"byte_end":33402,"line_start":806,"line_end":806,"column_start":5,"column_end":98}},{"value":"/ in use by the app, accessed via `App::instance()`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":33407,"byte_end":33461,"line_start":807,"line_end":807,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":33657,"byte_end":33671,"line_start":813,"line_end":813,"column_start":12,"column_end":26},"name":"exit_on_escape","qualname":"<App>::exit_on_escape","value":"fn exit_on_escape(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return whether or not the `App` is currently set to exit when the `Escape` key is pressed.\n","sig":null,"attributes":[{"value":"/ Return whether or not the `App` is currently set to exit when the `Escape` key is pressed.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":33551,"byte_end":33645,"line_start":812,"line_end":812,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":33880,"byte_end":33898,"line_start":820,"line_end":820,"column_start":12,"column_end":30},"name":"set_exit_on_escape","qualname":"<App>::set_exit_on_escape","value":"fn set_exit_on_escape(&Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Specify whether or not the app should close when the `Escape` key is pressed.","sig":null,"attributes":[{"value":"/ Specify whether or not the app should close when the `Escape` key is pressed.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":33744,"byte_end":33825,"line_start":817,"line_end":817,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":33830,"byte_end":33833,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ By default this is `true`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":33838,"byte_end":33868,"line_start":819,"line_end":819,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":34255,"byte_end":34277,"line_start":830,"line_end":830,"column_start":12,"column_end":34},"name":"fullscreen_on_shortcut","qualname":"<App>::fullscreen_on_shortcut","value":"fn fullscreen_on_shortcut(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not the `App` is currently allows the focused window to enter or exit\n fullscreen via typical platform-specific shortcuts.","sig":null,"attributes":[{"value":"/ Returns whether or not the `App` is currently allows the focused window to enter or exit","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":33981,"byte_end":34073,"line_start":824,"line_end":824,"column_start":5,"column_end":97}},{"value":"/ fullscreen via typical platform-specific shortcuts.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":34078,"byte_end":34133,"line_start":825,"line_end":825,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":34138,"byte_end":34141,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ - Linux uses F11.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":34146,"byte_end":34167,"line_start":827,"line_end":827,"column_start":5,"column_end":26}},{"value":"/ - macOS uses apple key + f.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":34172,"byte_end":34203,"line_start":828,"line_end":828,"column_start":5,"column_end":36}},{"value":"/ - Windows uses windows key + f.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":34208,"byte_end":34243,"line_start":829,"line_end":829,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":34621,"byte_end":34647,"line_start":840,"line_end":840,"column_start":12,"column_end":38},"name":"set_fullscreen_on_shortcut","qualname":"<App>::set_fullscreen_on_shortcut","value":"fn set_fullscreen_on_shortcut(&Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set whether or not the `App` should allow the focused window to enter or exit fullscreen\n via typical platform-specific shortcuts.","sig":null,"attributes":[{"value":"/ Set whether or not the `App` should allow the focused window to enter or exit fullscreen","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":34358,"byte_end":34450,"line_start":834,"line_end":834,"column_start":5,"column_end":97}},{"value":"/ via typical platform-specific shortcuts.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":34455,"byte_end":34499,"line_start":835,"line_end":835,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":34504,"byte_end":34507,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ - Linux uses F11.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":34512,"byte_end":34533,"line_start":837,"line_end":837,"column_start":5,"column_end":26}},{"value":"/ - macOS uses apple key + f.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":34538,"byte_end":34569,"line_start":838,"line_end":838,"column_start":5,"column_end":36}},{"value":"/ - Windows uses windows key + f.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":34574,"byte_end":34609,"line_start":839,"line_end":839,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":34863,"byte_end":34872,"line_start":847,"line_end":847,"column_start":12,"column_end":21},"name":"loop_mode","qualname":"<App>::loop_mode","value":"fn loop_mode(&Self) -> LoopMode","parent":null,"children":[],"decl_id":null,"docs":" Returns the **App**'s current **LoopMode**.","sig":null,"attributes":[{"value":"/ Returns the **App**'s current **LoopMode**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":34738,"byte_end":34785,"line_start":844,"line_end":844,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":34790,"byte_end":34793,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ The default loop mode is `LoopMode::RefreshSync`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":34798,"byte_end":34851,"line_start":846,"line_end":846,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":35227,"byte_end":35240,"line_start":856,"line_end":856,"column_start":12,"column_end":25},"name":"set_loop_mode","qualname":"<App>::set_loop_mode","value":"fn set_loop_mode(&Self, LoopMode)","parent":null,"children":[],"decl_id":null,"docs":" Sets the loop mode of the **App**.","sig":null,"attributes":[{"value":"/ Sets the loop mode of the **App**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":34952,"byte_end":34990,"line_start":851,"line_end":851,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":34995,"byte_end":34998,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ Note: Setting the loop mode will not affect anything until the end of the current loop","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":35003,"byte_end":35093,"line_start":853,"line_end":853,"column_start":5,"column_end":95}},{"value":"/ iteration. The behaviour of a single loop iteration is described under each of the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":35098,"byte_end":35184,"line_start":854,"line_end":854,"column_start":5,"column_end":91}},{"value":"/ **LoopMode** variants.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":35189,"byte_end":35215,"line_start":855,"line_end":855,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":35480,"byte_end":35492,"line_start":863,"line_end":863,"column_start":12,"column_end":24},"name":"create_proxy","qualname":"<App>::create_proxy","value":"fn create_proxy(&Self) -> Proxy","parent":null,"children":[],"decl_id":null,"docs":" A handle to the **App** that can be shared across threads.","sig":null,"attributes":[{"value":"/ A handle to the **App** that can be shared across threads.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":35328,"byte_end":35390,"line_start":860,"line_end":860,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":35395,"byte_end":35398,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ This can be used to \"wake up\" the **App**'s inner event loop.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":35403,"byte_end":35468,"line_start":862,"line_end":862,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":35931,"byte_end":35935,"line_start":872,"line_end":872,"column_start":12,"column_end":16},"name":"draw","qualname":"<App>::draw","value":"fn draw(&Self) -> draw::Draw","parent":null,"children":[],"decl_id":null,"docs":" Produce the **App**'s **Draw** API for drawing geometry and text with colors and textures.","sig":null,"attributes":[{"value":"/ Produce the **App**'s **Draw** API for drawing geometry and text with colors and textures.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":35560,"byte_end":35654,"line_start":867,"line_end":867,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":35659,"byte_end":35662,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ **Note:** You can also create your own **Draw** instances via `Draw::new()`! This method","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":35667,"byte_end":35759,"line_start":869,"line_end":869,"column_start":5,"column_end":97}},{"value":"/ makes it a tiny bit easier as the **App** stores the **Draw** instance for you and","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":35764,"byte_end":35850,"line_start":870,"line_end":870,"column_start":5,"column_end":91}},{"value":"/ automatically resets the state on each call to `app.draw()`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":35855,"byte_end":35919,"line_start":871,"line_end":871,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":36197,"byte_end":36211,"line_start":880,"line_end":880,"column_start":12,"column_end":26},"name":"elapsed_frames","qualname":"<App>::elapsed_frames","value":"fn elapsed_frames(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The number of times the focused window's **view** function has been called since the start\n of the program.\n","sig":null,"attributes":[{"value":"/ The number of times the focused window's **view** function has been called since the start","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":36067,"byte_end":36161,"line_start":878,"line_end":878,"column_start":5,"column_end":99}},{"value":"/ of the program.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":36166,"byte_end":36185,"line_start":879,"line_end":879,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":36355,"byte_end":36358,"line_start":885,"line_end":885,"column_start":12,"column_end":15},"name":"fps","qualname":"<App>::fps","value":"fn fps(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The number of frames that can currently be displayed a second\n","sig":null,"attributes":[{"value":"/ The number of frames that can currently be displayed a second","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":36278,"byte_end":36343,"line_start":884,"line_end":884,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":36505,"byte_end":36513,"line_start":890,"line_end":890,"column_start":12,"column_end":20},"name":"exe_name","qualname":"<App>::exe_name","value":"fn exe_name(&Self) -> std::io::Result<String>","parent":null,"children":[],"decl_id":null,"docs":" The name of the nannou executable that is currently running.\n","sig":null,"attributes":[{"value":"/ The name of the nannou executable that is currently running.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":36429,"byte_end":36493,"line_start":889,"line_end":889,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":36819,"byte_end":36823,"line_start":900,"line_end":900,"column_start":12,"column_end":16},"name":"quit","qualname":"<App>::quit","value":"fn quit(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Quits the currently running application.\n","sig":null,"attributes":[{"value":"/ Quits the currently running application.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":36763,"byte_end":36807,"line_start":899,"line_end":899,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":37595,"byte_end":37601,"line_start":917,"line_end":917,"column_start":12,"column_end":18},"name":"wakeup","qualname":"<Proxy>::wakeup","value":"fn wakeup(&Self) -> Result<(), winit::event_loop::EventLoopClosed<()>>","parent":null,"children":[],"decl_id":null,"docs":" Wake up the application!","sig":null,"attributes":[{"value":"/ Wake up the application!","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":36902,"byte_end":36930,"line_start":906,"line_end":906,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":36935,"byte_end":36938,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ This wakes up the **App**'s inner event loop and causes a user event to be emitted by the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":36943,"byte_end":37036,"line_start":908,"line_end":908,"column_start":5,"column_end":98}},{"value":"/ event loop.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":37041,"byte_end":37056,"line_start":909,"line_end":909,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":37061,"byte_end":37064,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ The `app::Proxy` stores a flag in order to track whether or not the `EventLoop` is","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":37069,"byte_end":37155,"line_start":911,"line_end":911,"column_start":5,"column_end":91}},{"value":"/ currently blocking and waiting for events. This method will only call the underlying","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":37160,"byte_end":37248,"line_start":912,"line_end":912,"column_start":5,"column_end":93}},{"value":"/ `winit::event_loop::EventLoopProxy::send_event` method if this flag is set to true and will","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":37253,"byte_end":37348,"line_start":913,"line_end":913,"column_start":5,"column_end":100}},{"value":"/ immediately set the flag to false afterwards. This makes it safe to call the `wakeup`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":37353,"byte_end":37442,"line_start":914,"line_end":914,"column_start":5,"column_end":94}},{"value":"/ method as frequently as necessary across methods without causing any underlying OS methods","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":37447,"byte_end":37541,"line_start":915,"line_end":915,"column_start":5,"column_end":99}},{"value":"/ to be called more than necessary.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":37546,"byte_end":37583,"line_start":916,"line_end":916,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":38064,"byte_end":38072,"line_start":930,"line_end":930,"column_start":12,"column_end":20},"name":"to_frame","qualname":"<draw::Draw>::to_frame","value":"fn to_frame(&Self, &App, &Frame) -> Result<(), draw::renderer::DrawError>","parent":null,"children":[],"decl_id":null,"docs":" Render the **Draw**'s inner list of commands to the texture associated with the **Frame**.","sig":null,"attributes":[{"value":"/ Render the **Draw**'s inner list of commands to the texture associated with the **Frame**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":37906,"byte_end":38000,"line_start":927,"line_end":927,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":38005,"byte_end":38008,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ The **App** stores a unique render.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":38013,"byte_end":38052,"line_start":929,"line_end":929,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":39490,"byte_end":39512,"line_start":964,"line_end":964,"column_start":8,"column_end":30},"name":"with_device_queue_pair","qualname":"<&'a crate::app::App as nannou_wgpu::WithDeviceQueuePair>::with_device_queue_pair","value":"fn with_device_queue_pair<F, O>(Self, F) -> O where\nF: FnOnce(&wgpu::Device, &wgpu::Queue) -> O","parent":{"krate":72,"index":443},"children":[],"decl_id":{"krate":72,"index":444},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":286},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":39757,"byte_end":39773,"line_start":973,"line_end":973,"column_start":8,"column_end":24},"name":"find_assets_path","qualname":"::app::find_assets_path","value":"fn find_assets_path() -> Result<PathBuf, find_folder::Error>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to find the assets directory path relative to the executable location.\n","sig":null,"attributes":[{"value":"/ Attempt to find the assets directory path relative to the executable location.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":39667,"byte_end":39749,"line_start":972,"line_end":972,"column_start":1,"column_end":83}}]},{"kind":"Function","id":{"krate":0,"index":287},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":40182,"byte_end":40199,"line_start":984,"line_end":984,"column_start":8,"column_end":25},"name":"find_project_path","qualname":"::app::find_project_path","value":"fn find_project_path() -> Result<PathBuf, find_folder::Error>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to find the assets directory path relative to the executable location.\n","sig":null,"attributes":[{"value":"/ Attempt to find the assets directory path relative to the executable location.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":40092,"byte_end":40174,"line_start":983,"line_end":983,"column_start":1,"column_end":83}}]},{"kind":"Mod","id":{"krate":0,"index":321},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"draw","qualname":"::draw","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":441},{"krate":0,"index":719},{"krate":0,"index":972},{"krate":0,"index":2534},{"krate":0,"index":2766},{"krate":0,"index":2965},{"krate":0,"index":5154},{"krate":0,"index":5157},{"krate":0,"index":5159},{"krate":0,"index":5161},{"krate":0,"index":5167},{"krate":0,"index":5169},{"krate":0,"index":5171},{"krate":0,"index":5172},{"krate":0,"index":5175},{"krate":0,"index":5182},{"krate":0,"index":5184},{"krate":0,"index":5186},{"krate":0,"index":5194},{"krate":0,"index":5196},{"krate":0,"index":5197},{"krate":0,"index":5199},{"krate":0,"index":5200},{"krate":0,"index":5203},{"krate":0,"index":5210},{"krate":0,"index":5212},{"krate":0,"index":5214},{"krate":0,"index":5220},{"krate":0,"index":5222},{"krate":0,"index":2985},{"krate":0,"index":2987},{"krate":0,"index":2992},{"krate":0,"index":3056},{"krate":0,"index":3058},{"krate":0,"index":3060},{"krate":0,"index":3062}],"decl_id":null,"docs":" A simple API for drawing 2D and 3D graphics.","sig":null,"attributes":[{"value":"/ A simple API for drawing 2D and 3D graphics.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":72571,"byte_end":72619,"line_start":1,"line_end":1,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":72620,"byte_end":72623,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See the [**Draw** type](./struct.Draw.html) for more details.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":72624,"byte_end":72689,"line_start":3,"line_end":3,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":406},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"background","qualname":"::draw::background","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":423},{"krate":0,"index":426},{"krate":0,"index":429},{"krate":0,"index":431}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":426},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":96143,"byte_end":96153,"line_start":6,"line_end":6,"column_start":12,"column_end":22},"name":"Background","qualname":"::draw::background::Background","value":"Background {  }","parent":null,"children":[{"krate":0,"index":428}],"decl_id":null,"docs":" A type used to update the background colour.\n","sig":null,"attributes":[{"value":"/ A type used to update the background colour.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":96083,"byte_end":96131,"line_start":5,"line_end":5,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":429},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":96225,"byte_end":96228,"line_start":11,"line_end":11,"column_start":8,"column_end":11},"name":"new","qualname":"::draw::background::new","value":"fn new<'a>(&'a Draw) -> Background","parent":null,"children":[],"decl_id":null,"docs":" Begin coloring the background.\n","sig":null,"attributes":[{"value":"/ Begin coloring the background.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":96183,"byte_end":96217,"line_start":10,"line_end":10,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":96570,"byte_end":96575,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"name":"color","qualname":"<Background>::color","value":"fn color<C>(Self, C) -> Self where C: IntoLinSrgba<ColorScalar>","parent":null,"children":[],"decl_id":null,"docs":" Clear the background with the given color.","sig":null,"attributes":[{"value":"/ Clear the background with the given color.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":96326,"byte_end":96372,"line_start":16,"line_end":16,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":96377,"byte_end":96380,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ This method supports any color type that can be converted into RGBA.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":96385,"byte_end":96457,"line_start":18,"line_end":18,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":96462,"byte_end":96465,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ Colors that have no alpha channel will be given an opaque alpha channel value `1.0`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":96470,"byte_end":96558,"line_start":20,"line_end":20,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":96891,"byte_end":96894,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"rgb","qualname":"<Background>::rgb","value":"fn rgb(Self, ColorScalar, ColorScalar, ColorScalar) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the color via red, green and blue channels.\n","sig":null,"attributes":[{"value":"/ Specify the color via red, green and blue channels.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":96824,"byte_end":96879,"line_start":31,"line_end":31,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":97083,"byte_end":97087,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"rgba","qualname":"<Background>::rgba","value":"fn rgba(Self, ColorScalar, ColorScalar, ColorScalar, ColorScalar) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the color via red, green, blue and alpha channels.\n","sig":null,"attributes":[{"value":"/ Specify the color via red, green, blue and alpha channels.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":97009,"byte_end":97071,"line_start":36,"line_end":36,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":97648,"byte_end":97651,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"hsl","qualname":"<Background>::hsl","value":"fn hsl(Self, ColorScalar, ColorScalar, ColorScalar) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the color via hue, saturation and luminance.","sig":null,"attributes":[{"value":"/ Specify the color via hue, saturation and luminance.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":97222,"byte_end":97278,"line_start":41,"line_end":41,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":97283,"byte_end":97286,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ If you're looking for HSV or HSB, use the `hsv` method instead.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":97291,"byte_end":97358,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":97363,"byte_end":97366,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The given hue expects a value between `0.0` and `1.0` where `0.0` is 0 degress and `1.0` is","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":97371,"byte_end":97466,"line_start":45,"line_end":45,"column_start":5,"column_end":100}},{"value":"/ 360 degrees (or 2 PI radians).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":97471,"byte_end":97505,"line_start":46,"line_end":46,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":97510,"byte_end":97513,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ See the [wikipedia entry](https://en.wikipedia.org/wiki/HSL_and_HSV) for more details on","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":97518,"byte_end":97610,"line_start":48,"line_end":48,"column_start":5,"column_end":97}},{"value":"/ this color space.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":97615,"byte_end":97636,"line_start":49,"line_end":49,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":98250,"byte_end":98254,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"hsla","qualname":"<Background>::hsla","value":"fn hsla(Self, ColorScalar, ColorScalar, ColorScalar, ColorScalar) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the color via hue, saturation, luminance and an alpha channel.","sig":null,"attributes":[{"value":"/ Specify the color via hue, saturation, luminance and an alpha channel.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":97803,"byte_end":97877,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":97882,"byte_end":97885,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ If you're looking for HSVA or HSBA, use the `hsva` method instead.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":97890,"byte_end":97960,"line_start":57,"line_end":57,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":97965,"byte_end":97968,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The given hue expects a value between `0.0` and `1.0` where `0.0` is 0 degress and `1.0` is","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":97973,"byte_end":98068,"line_start":59,"line_end":59,"column_start":5,"column_end":100}},{"value":"/ 360 degrees (or 2 PI radians).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":98073,"byte_end":98107,"line_start":60,"line_end":60,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":98112,"byte_end":98115,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ See the [wikipedia entry](https://en.wikipedia.org/wiki/HSL_and_HSV) for more details on","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":98120,"byte_end":98212,"line_start":62,"line_end":62,"column_start":5,"column_end":97}},{"value":"/ this color space.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":98217,"byte_end":98238,"line_start":63,"line_end":63,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":98838,"byte_end":98841,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"hsv","qualname":"<Background>::hsv","value":"fn hsv(Self, ColorScalar, ColorScalar, ColorScalar) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the color via hue, saturation and *value* (brightness).","sig":null,"attributes":[{"value":"/ Specify the color via hue, saturation and *value* (brightness).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":98426,"byte_end":98493,"line_start":69,"line_end":69,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":98498,"byte_end":98501,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This is sometimes also known as \"hsb\".","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":98506,"byte_end":98548,"line_start":71,"line_end":71,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":98553,"byte_end":98556,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The given hue expects a value between `0.0` and `1.0` where `0.0` is 0 degress and `1.0` is","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":98561,"byte_end":98656,"line_start":73,"line_end":73,"column_start":5,"column_end":100}},{"value":"/ 360 degrees (or 2 PI radians).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":98661,"byte_end":98695,"line_start":74,"line_end":74,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":98700,"byte_end":98703,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ See the [wikipedia entry](https://en.wikipedia.org/wiki/HSL_and_HSV) for more details on","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":98708,"byte_end":98800,"line_start":76,"line_end":76,"column_start":5,"column_end":97}},{"value":"/ this color space.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":98805,"byte_end":98826,"line_start":77,"line_end":77,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":99424,"byte_end":99428,"line_start":92,"line_end":92,"column_start":12,"column_end":16},"name":"hsva","qualname":"<Background>::hsva","value":"fn hsva(Self, ColorScalar, ColorScalar, ColorScalar, ColorScalar) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the color via hue, saturation, *value* (brightness) and an alpha channel.","sig":null,"attributes":[{"value":"/ Specify the color via hue, saturation, *value* (brightness) and an alpha channel.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":98993,"byte_end":99078,"line_start":83,"line_end":83,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":99083,"byte_end":99086,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This is sometimes also known as \"hsba\".","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":99091,"byte_end":99134,"line_start":85,"line_end":85,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":99139,"byte_end":99142,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ The given hue expects a value between `0.0` and `1.0` where `0.0` is 0 degress and `1.0` is","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":99147,"byte_end":99242,"line_start":87,"line_end":87,"column_start":5,"column_end":100}},{"value":"/ 360 degrees (or 2 PI radians).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":99247,"byte_end":99281,"line_start":88,"line_end":88,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":99286,"byte_end":99289,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ See the [wikipedia entry](https://en.wikipedia.org/wiki/HSL_and_HSV) for more details on","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":99294,"byte_end":99386,"line_start":90,"line_end":90,"column_start":5,"column_end":97}},{"value":"/ this color space.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":99391,"byte_end":99412,"line_start":91,"line_end":91,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":4629},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":100774,"byte_end":100781,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"Drawing","qualname":"::draw::drawing::Drawing","value":"Drawing {  }","parent":null,"children":[{"krate":0,"index":4632},{"krate":0,"index":4633},{"krate":0,"index":4634},{"krate":0,"index":4635}],"decl_id":null,"docs":" A **Drawing** in progress.","sig":null,"attributes":[{"value":"/ A **Drawing** in progress.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":100079,"byte_end":100109,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":100110,"byte_end":100113,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ **Drawing** provides a way of chaining together method calls describing properties of the thing","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":100114,"byte_end":100213,"line_start":16,"line_end":16,"column_start":1,"column_end":100}},{"value":"/ that we are drawing. **Drawing** ends when the instance is **Drop**ped, at which point the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":100214,"byte_end":100308,"line_start":17,"line_end":17,"column_start":1,"column_end":95}},{"value":"/ properties of the drawing are inserted into the **Draw** type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":100309,"byte_end":100375,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":100376,"byte_end":100379,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ When a **Drawing** begins, a node is immediately created for the drawing within the **Draw**'s","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":100380,"byte_end":100478,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ inner **geom::Graph**. This ensures the correct instantiation order is maintained within the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":100479,"byte_end":100575,"line_start":21,"line_end":21,"column_start":1,"column_end":97}},{"value":"/ graph. As a result, each **Drawing** is associated with a single, unique node. Thus a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":100576,"byte_end":100665,"line_start":22,"line_end":22,"column_start":1,"column_end":90}},{"value":"/ **Drawing** can be thought of as a way of specifying properties for a node.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":100666,"byte_end":100745,"line_start":23,"line_end":23,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":520},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":101290,"byte_end":101304,"line_start":39,"line_end":39,"column_start":12,"column_end":26},"name":"DrawingContext","qualname":"::draw::drawing::DrawingContext","value":"DrawingContext { mesh, path_event_buffer, path_points_colored_buffer, path_points_textured_buffer, text_buffer }","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526}],"decl_id":null,"docs":" Some context that may be optionally provided to primitives in the drawing implementation.","sig":null,"attributes":[{"value":"/ Some context that may be optionally provided to primitives in the drawing implementation.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":101127,"byte_end":101220,"line_start":36,"line_end":36,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":101221,"byte_end":101224,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This is particularly useful for paths and meshes.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":101225,"byte_end":101278,"line_start":38,"line_end":38,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":522},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":101397,"byte_end":101401,"line_start":41,"line_end":41,"column_start":9,"column_end":13},"name":"mesh","qualname":"::draw::drawing::DrawingContext::mesh","value":"&'a mut draw::mesh::Mesh","parent":{"krate":0,"index":520},"children":[],"decl_id":null,"docs":" The intermediary mesh for buffering yet-to-be-drawn paths and meshes.\n","sig":null,"attributes":[{"value":"/ The intermediary mesh for buffering yet-to-be-drawn paths and meshes.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":101315,"byte_end":101388,"line_start":40,"line_end":40,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":523},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":101486,"byte_end":101503,"line_start":43,"line_end":43,"column_start":9,"column_end":26},"name":"path_event_buffer","qualname":"::draw::drawing::DrawingContext::path_event_buffer","value":"&'a mut std::vec::Vec<lyon::lyon_path::Event<lyon::lyon_geom::euclid::Point2D<f32, lyon::lyon_geom::euclid::UnknownUnit>, lyon::lyon_geom::euclid::Point2D<f32, lyon::lyon_geom::euclid::UnknownUnit>>>","parent":{"krate":0,"index":520},"children":[],"decl_id":null,"docs":" A re-usable buffer for collecting path events.\n","sig":null,"attributes":[{"value":"/ A re-usable buffer for collecting path events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":101427,"byte_end":101477,"line_start":42,"line_end":42,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":524},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":101604,"byte_end":101630,"line_start":45,"line_end":45,"column_start":9,"column_end":35},"name":"path_points_colored_buffer","qualname":"::draw::drawing::DrawingContext::path_points_colored_buffer","value":"&'a mut std::vec::Vec<(nannou_core::geom::Vec2, nannou_core::color::Alpha<nannou_core::color::rgb::Rgb<nannou_core::color::encoding::Linear<nannou_core::color::encoding::Srgb>>, f32>)>","parent":{"krate":0,"index":520},"children":[],"decl_id":null,"docs":" A re-usable buffer for collecting colored polyline points.\n","sig":null,"attributes":[{"value":"/ A re-usable buffer for collecting colored polyline points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":101533,"byte_end":101595,"line_start":44,"line_end":44,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":525},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":101738,"byte_end":101765,"line_start":47,"line_end":47,"column_start":9,"column_end":36},"name":"path_points_textured_buffer","qualname":"::draw::drawing::DrawingContext::path_points_textured_buffer","value":"&'a mut std::vec::Vec<(nannou_core::geom::Vec2, nannou_core::geom::Vec2)>","parent":{"krate":0,"index":520},"children":[],"decl_id":null,"docs":" A re-usable buffer for collecting textured polyline points.\n","sig":null,"attributes":[{"value":"/ A re-usable buffer for collecting textured polyline points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":101666,"byte_end":101729,"line_start":46,"line_end":46,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":526},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":101857,"byte_end":101868,"line_start":49,"line_end":49,"column_start":9,"column_end":20},"name":"text_buffer","qualname":"::draw::drawing::DrawingContext::text_buffer","value":"&'a mut std::string::String","parent":{"krate":0,"index":520},"children":[],"decl_id":null,"docs":" A re-usable buffer for collecting text.\n","sig":null,"attributes":[{"value":"/ A re-usable buffer for collecting text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":101805,"byte_end":101848,"line_start":48,"line_end":48,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":102191,"byte_end":102195,"line_start":65,"line_end":65,"column_start":8,"column_end":12},"name":"drop","qualname":"<Drawing as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":103753,"byte_end":103759,"line_start":107,"line_end":107,"column_start":12,"column_end":18},"name":"finish","qualname":"<Drawing>::finish","value":"fn finish(Self)","parent":null,"children":[],"decl_id":null,"docs":" Complete the drawing and insert it into the parent **Draw** instance.","sig":null,"attributes":[{"value":"/ Complete the drawing and insert it into the parent **Draw** instance.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":103565,"byte_end":103638,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":103643,"byte_end":103646,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This will be called when the **Drawing** is **Drop**ped if it has not yet been called.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":103651,"byte_end":103741,"line_start":106,"line_end":106,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":105971,"byte_end":105977,"line_start":168,"line_end":168,"column_start":12,"column_end":18},"name":"map_ty","qualname":"<Drawing>::map_ty","value":"fn map_ty<F, T2>(Self, F) -> Drawing where F: FnOnce(T) -> T2,\nT2: Into<Primitive>, Primitive: Into<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Apply the given function to the type stored within **Draw**.","sig":null,"attributes":[{"value":"/ Apply the given function to the type stored within **Draw**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":105737,"byte_end":105801,"line_start":163,"line_end":163,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":105806,"byte_end":105809,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The function is only applied if the node has not yet been **Drawn**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":105814,"byte_end":105886,"line_start":165,"line_end":165,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":105891,"byte_end":105894,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the primitive does not contain type **T**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":105899,"byte_end":105959,"line_start":167,"line_end":167,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":107455,"byte_end":107460,"line_start":214,"line_end":214,"column_start":12,"column_end":17},"name":"color","qualname":"<Drawing>::color","value":"fn color<C>(Self, C) -> Self where C: IntoLinSrgba<ColorScalar>","parent":null,"children":[],"decl_id":null,"docs":" Specify a color.","sig":null,"attributes":[{"value":"/ Specify a color.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":107237,"byte_end":107257,"line_start":209,"line_end":209,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":107262,"byte_end":107265,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ This method supports any color type that can be converted into RGBA.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":107270,"byte_end":107342,"line_start":211,"line_end":211,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":107347,"byte_end":107350,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Colors that have no alpha channel will be given an opaque alpha channel value `1.0`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":107355,"byte_end":107443,"line_start":213,"line_end":213,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":107673,"byte_end":107676,"line_start":222,"line_end":222,"column_start":12,"column_end":15},"name":"rgb","qualname":"<Drawing>::rgb","value":"fn rgb(Self, ColorScalar, ColorScalar, ColorScalar) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the color via red, green and blue channels.\n","sig":null,"attributes":[{"value":"/ Specify the color via red, green and blue channels.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":107606,"byte_end":107661,"line_start":221,"line_end":221,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":107880,"byte_end":107884,"line_start":227,"line_end":227,"column_start":12,"column_end":16},"name":"rgb8","qualname":"<Drawing>::rgb8","value":"fn rgb8(Self, u8, u8, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the color via red, green and blue channels as bytes\n","sig":null,"attributes":[{"value":"/ Specify the color via red, green and blue channels as bytes","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":107805,"byte_end":107868,"line_start":226,"line_end":226,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":108061,"byte_end":108065,"line_start":232,"line_end":232,"column_start":12,"column_end":16},"name":"rgba","qualname":"<Drawing>::rgba","value":"fn rgba(Self, ColorScalar, ColorScalar, ColorScalar, ColorScalar) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the color via red, green, blue and alpha channels.\n","sig":null,"attributes":[{"value":"/ Specify the color via red, green, blue and alpha channels.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":107987,"byte_end":108049,"line_start":231,"line_end":231,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":108297,"byte_end":108302,"line_start":237,"line_end":237,"column_start":12,"column_end":17},"name":"rgba8","qualname":"<Drawing>::rgba8","value":"fn rgba8(Self, u8, u8, u8, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the color via red, green, blue and alpha channels as bytes.\n","sig":null,"attributes":[{"value":"/ Specify the color via red, green, blue and alpha channels as bytes.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":108214,"byte_end":108285,"line_start":236,"line_end":236,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":108845,"byte_end":108848,"line_start":250,"line_end":250,"column_start":12,"column_end":15},"name":"hsl","qualname":"<Drawing>::hsl","value":"fn hsl(Self, ColorScalar, ColorScalar, ColorScalar) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the color via hue, saturation and luminance.","sig":null,"attributes":[{"value":"/ Specify the color via hue, saturation and luminance.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":108416,"byte_end":108472,"line_start":241,"line_end":241,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":108477,"byte_end":108480,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ If you're looking for HSVA or HSBA, use the `hsva` method instead.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":108485,"byte_end":108555,"line_start":243,"line_end":243,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":108560,"byte_end":108563,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ The given hue expects a value between `0.0` and `1.0` where `0.0` is 0 degress and `1.0` is","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":108568,"byte_end":108663,"line_start":245,"line_end":245,"column_start":5,"column_end":100}},{"value":"/ 360 degrees (or 2 PI radians).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":108668,"byte_end":108702,"line_start":246,"line_end":246,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":108707,"byte_end":108710,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ See the [wikipedia entry](https://en.wikipedia.org/wiki/HSL_and_HSV) for more details on","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":108715,"byte_end":108807,"line_start":248,"line_end":248,"column_start":5,"column_end":97}},{"value":"/ this color space.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":108812,"byte_end":108833,"line_start":249,"line_end":249,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":109424,"byte_end":109428,"line_start":263,"line_end":263,"column_start":12,"column_end":16},"name":"hsla","qualname":"<Drawing>::hsla","value":"fn hsla(Self, ColorScalar, ColorScalar, ColorScalar, ColorScalar) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the color via hue, saturation, luminance and an alpha channel.","sig":null,"attributes":[{"value":"/ Specify the color via hue, saturation, luminance and an alpha channel.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":108977,"byte_end":109051,"line_start":254,"line_end":254,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":109056,"byte_end":109059,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ If you're looking for HSVA or HSBA, use the `hsva` method instead.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":109064,"byte_end":109134,"line_start":256,"line_end":256,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":109139,"byte_end":109142,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ The given hue expects a value between `0.0` and `1.0` where `0.0` is 0 degress and `1.0` is","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":109147,"byte_end":109242,"line_start":258,"line_end":258,"column_start":5,"column_end":100}},{"value":"/ 360 degrees (or 2 PI radians).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":109247,"byte_end":109281,"line_start":259,"line_end":259,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":109286,"byte_end":109289,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ See the [wikipedia entry](https://en.wikipedia.org/wiki/HSL_and_HSV) for more details on","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":109294,"byte_end":109386,"line_start":261,"line_end":261,"column_start":5,"column_end":97}},{"value":"/ this color space.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":109391,"byte_end":109412,"line_start":262,"line_end":262,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":109989,"byte_end":109992,"line_start":276,"line_end":276,"column_start":12,"column_end":15},"name":"hsv","qualname":"<Drawing>::hsv","value":"fn hsv(Self, ColorScalar, ColorScalar, ColorScalar) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the color via hue, saturation and *value* (brightness).","sig":null,"attributes":[{"value":"/ Specify the color via hue, saturation and *value* (brightness).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":109577,"byte_end":109644,"line_start":267,"line_end":267,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":109649,"byte_end":109652,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This is sometimes also known as \"hsb\".","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":109657,"byte_end":109699,"line_start":269,"line_end":269,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":109704,"byte_end":109707,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ The given hue expects a value between `0.0` and `1.0` where `0.0` is 0 degress and `1.0` is","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":109712,"byte_end":109807,"line_start":271,"line_end":271,"column_start":5,"column_end":100}},{"value":"/ 360 degrees (or 2 PI radians).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":109812,"byte_end":109846,"line_start":272,"line_end":272,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":109851,"byte_end":109854,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ See the [wikipedia entry](https://en.wikipedia.org/wiki/HSL_and_HSV) for more details on","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":109859,"byte_end":109951,"line_start":274,"line_end":274,"column_start":5,"column_end":97}},{"value":"/ this color space.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":109956,"byte_end":109977,"line_start":275,"line_end":275,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":110552,"byte_end":110556,"line_start":289,"line_end":289,"column_start":12,"column_end":16},"name":"hsva","qualname":"<Drawing>::hsva","value":"fn hsva(Self, ColorScalar, ColorScalar, ColorScalar, ColorScalar) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the color via hue, saturation, *value* (brightness) and an alpha channel.","sig":null,"attributes":[{"value":"/ Specify the color via hue, saturation, *value* (brightness) and an alpha channel.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":110121,"byte_end":110206,"line_start":280,"line_end":280,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":110211,"byte_end":110214,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ This is sometimes also known as \"hsba\".","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":110219,"byte_end":110262,"line_start":282,"line_end":282,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":110267,"byte_end":110270,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ The given hue expects a value between `0.0` and `1.0` where `0.0` is 0 degress and `1.0` is","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":110275,"byte_end":110370,"line_start":284,"line_end":284,"column_start":5,"column_end":100}},{"value":"/ 360 degrees (or 2 PI radians).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":110375,"byte_end":110409,"line_start":285,"line_end":285,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":110414,"byte_end":110417,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ See the [wikipedia entry](https://en.wikipedia.org/wiki/HSL_and_HSV) for more details on","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":110422,"byte_end":110514,"line_start":287,"line_end":287,"column_start":5,"column_end":97}},{"value":"/ this color space.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":110519,"byte_end":110540,"line_start":288,"line_end":288,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":110860,"byte_end":110864,"line_start":296,"line_end":296,"column_start":12,"column_end":16},"name":"gray","qualname":"<Drawing>::gray","value":"fn gray(Self, ColorScalar) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the color as gray scale","sig":null,"attributes":[{"value":"/ Specify the color as gray scale","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":110705,"byte_end":110740,"line_start":293,"line_end":293,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":110745,"byte_end":110748,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ The given g expects a value between `0.0` and `1.0` where `0.0` is black and `1.0` is white","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":110753,"byte_end":110848,"line_start":295,"line_end":295,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":111152,"byte_end":111157,"line_start":309,"line_end":309,"column_start":12,"column_end":17},"name":"width","qualname":"<Drawing>::width","value":"fn width(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the absolute width for the node.\n","sig":null,"attributes":[{"value":"/ Set the absolute width for the node.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":111100,"byte_end":111140,"line_start":308,"line_end":308,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":111300,"byte_end":111306,"line_start":314,"line_end":314,"column_start":12,"column_end":18},"name":"height","qualname":"<Drawing>::height","value":"fn height(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the absolute height for the node.\n","sig":null,"attributes":[{"value":"/ Set the absolute height for the node.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":111247,"byte_end":111288,"line_start":313,"line_end":313,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":111449,"byte_end":111454,"line_start":319,"line_end":319,"column_start":12,"column_end":17},"name":"depth","qualname":"<Drawing>::depth","value":"fn depth(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the absolute depth for the node.\n","sig":null,"attributes":[{"value":"/ Set the absolute depth for the node.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":111397,"byte_end":111437,"line_start":318,"line_end":318,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":111596,"byte_end":111597,"line_start":324,"line_end":324,"column_start":12,"column_end":13},"name":"w","qualname":"<Drawing>::w","value":"fn w(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Short-hand for the **width** method.\n","sig":null,"attributes":[{"value":"/ Short-hand for the **width** method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":111544,"byte_end":111584,"line_start":323,"line_end":323,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":111736,"byte_end":111737,"line_start":329,"line_end":329,"column_start":12,"column_end":13},"name":"h","qualname":"<Drawing>::h","value":"fn h(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Short-hand for the **height** method.\n","sig":null,"attributes":[{"value":"/ Short-hand for the **height** method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":111683,"byte_end":111724,"line_start":328,"line_end":328,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":111875,"byte_end":111876,"line_start":334,"line_end":334,"column_start":12,"column_end":13},"name":"d","qualname":"<Drawing>::d","value":"fn d(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Short-hand for the **depth** method.\n","sig":null,"attributes":[{"value":"/ Short-hand for the **depth** method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":111823,"byte_end":111863,"line_start":333,"line_end":333,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":112026,"byte_end":112028,"line_start":339,"line_end":339,"column_start":12,"column_end":14},"name":"wh","qualname":"<Drawing>::wh","value":"fn wh(Self, Vec2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the **x** and **y** dimensions for the node.\n","sig":null,"attributes":[{"value":"/ Set the **x** and **y** dimensions for the node.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":111962,"byte_end":112014,"line_start":338,"line_end":338,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":112187,"byte_end":112190,"line_start":344,"line_end":344,"column_start":12,"column_end":15},"name":"whd","qualname":"<Drawing>::whd","value":"fn whd(Self, Vec3) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the **x**, **y** and **z** dimensions for the node.\n","sig":null,"attributes":[{"value":"/ Set the **x**, **y** and **z** dimensions for the node.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":112116,"byte_end":112175,"line_start":343,"line_end":343,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":112333,"byte_end":112336,"line_start":349,"line_end":349,"column_start":12,"column_end":15},"name":"w_h","qualname":"<Drawing>::w_h","value":"fn w_h(Self, f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the width and height for the node.\n","sig":null,"attributes":[{"value":"/ Set the width and height for the node.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":112279,"byte_end":112321,"line_start":348,"line_end":348,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":112489,"byte_end":112494,"line_start":354,"line_end":354,"column_start":12,"column_end":17},"name":"w_h_d","qualname":"<Drawing>::w_h_d","value":"fn w_h_d(Self, f32, f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the width and height for the node.\n","sig":null,"attributes":[{"value":"/ Set the width and height for the node.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":112435,"byte_end":112477,"line_start":353,"line_end":353,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":112820,"byte_end":112821,"line_start":367,"line_end":367,"column_start":12,"column_end":13},"name":"x","qualname":"<Drawing>::x","value":"fn x(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Build with the given **Absolute** **Position** along the *x* axis.\n","sig":null,"attributes":[{"value":"/ Build with the given **Absolute** **Position** along the *x* axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":112738,"byte_end":112808,"line_start":366,"line_end":366,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":112987,"byte_end":112988,"line_start":372,"line_end":372,"column_start":12,"column_end":13},"name":"y","qualname":"<Drawing>::y","value":"fn y(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Build with the given **Absolute** **Position** along the *y* axis.\n","sig":null,"attributes":[{"value":"/ Build with the given **Absolute** **Position** along the *y* axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":112905,"byte_end":112975,"line_start":371,"line_end":371,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":113154,"byte_end":113155,"line_start":377,"line_end":377,"column_start":12,"column_end":13},"name":"z","qualname":"<Drawing>::z","value":"fn z(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Build with the given **Absolute** **Position** along the *z* axis.\n","sig":null,"attributes":[{"value":"/ Build with the given **Absolute** **Position** along the *z* axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":113072,"byte_end":113142,"line_start":376,"line_end":376,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":113308,"byte_end":113310,"line_start":382,"line_end":382,"column_start":12,"column_end":14},"name":"xy","qualname":"<Drawing>::xy","value":"fn xy(Self, Point2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the **Position** with some two-dimensional point.\n","sig":null,"attributes":[{"value":"/ Set the **Position** with some two-dimensional point.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":113239,"byte_end":113296,"line_start":381,"line_end":381,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":113469,"byte_end":113472,"line_start":387,"line_end":387,"column_start":12,"column_end":15},"name":"xyz","qualname":"<Drawing>::xyz","value":"fn xyz(Self, Point3) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the **Position** with some three-dimensional point.\n","sig":null,"attributes":[{"value":"/ Set the **Position** with some three-dimensional point.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":113398,"byte_end":113457,"line_start":386,"line_end":386,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":113623,"byte_end":113626,"line_start":392,"line_end":392,"column_start":12,"column_end":15},"name":"x_y","qualname":"<Drawing>::x_y","value":"fn x_y(Self, f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the **Position** with *x* *y* coordinates.\n","sig":null,"attributes":[{"value":"/ Set the **Position** with *x* *y* coordinates.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":113561,"byte_end":113611,"line_start":391,"line_end":391,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":113789,"byte_end":113794,"line_start":397,"line_end":397,"column_start":12,"column_end":17},"name":"x_y_z","qualname":"<Drawing>::x_y_z","value":"fn x_y_z(Self, f32, f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the **Position** with *x* *y* *z* coordinates.\n","sig":null,"attributes":[{"value":"/ Set the **Position** with *x* *y* *z* coordinates.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":113723,"byte_end":113777,"line_start":396,"line_end":396,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":114126,"byte_end":114133,"line_start":410,"line_end":410,"column_start":12,"column_end":19},"name":"look_at","qualname":"<Drawing>::look_at","value":"fn look_at(Self, Point3) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe orientation via the vector that points to the given target.\n","sig":null,"attributes":[{"value":"/ Describe orientation via the vector that points to the given target.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":114042,"byte_end":114114,"line_start":409,"line_end":409,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":114331,"byte_end":114340,"line_start":415,"line_end":415,"column_start":12,"column_end":21},"name":"x_radians","qualname":"<Drawing>::x_radians","value":"fn x_radians(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation around the *x* axis as an absolute value in radians.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *x* axis as an absolute value in radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":114239,"byte_end":114319,"line_start":414,"line_end":414,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":114527,"byte_end":114536,"line_start":420,"line_end":420,"column_start":12,"column_end":21},"name":"y_radians","qualname":"<Drawing>::y_radians","value":"fn y_radians(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation around the *y* axis as an absolute value in radians.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *y* axis as an absolute value in radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":114435,"byte_end":114515,"line_start":419,"line_end":419,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":114723,"byte_end":114732,"line_start":425,"line_end":425,"column_start":12,"column_end":21},"name":"z_radians","qualname":"<Drawing>::z_radians","value":"fn z_radians(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation around the *z* axis as an absolute value in radians.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *z* axis as an absolute value in radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":114631,"byte_end":114711,"line_start":424,"line_end":424,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":114919,"byte_end":114928,"line_start":430,"line_end":430,"column_start":12,"column_end":21},"name":"x_degrees","qualname":"<Drawing>::x_degrees","value":"fn x_degrees(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation around the *x* axis as an absolute value in degrees.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *x* axis as an absolute value in degrees.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":114827,"byte_end":114907,"line_start":429,"line_end":429,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":115115,"byte_end":115124,"line_start":435,"line_end":435,"column_start":12,"column_end":21},"name":"y_degrees","qualname":"<Drawing>::y_degrees","value":"fn y_degrees(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation around the *y* axis as an absolute value in degrees.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *y* axis as an absolute value in degrees.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":115023,"byte_end":115103,"line_start":434,"line_end":434,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":115311,"byte_end":115320,"line_start":440,"line_end":440,"column_start":12,"column_end":21},"name":"z_degrees","qualname":"<Drawing>::z_degrees","value":"fn z_degrees(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation around the *z* axis as an absolute value in degrees.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *z* axis as an absolute value in degrees.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":115219,"byte_end":115299,"line_start":439,"line_end":439,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":115512,"byte_end":115519,"line_start":445,"line_end":445,"column_start":12,"column_end":19},"name":"x_turns","qualname":"<Drawing>::x_turns","value":"fn x_turns(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation around the *x* axis as a number of turns around the axis.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *x* axis as a number of turns around the axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":115415,"byte_end":115500,"line_start":444,"line_end":444,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":115709,"byte_end":115716,"line_start":450,"line_end":450,"column_start":12,"column_end":19},"name":"y_turns","qualname":"<Drawing>::y_turns","value":"fn y_turns(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation around the *y* axis as a number of turns around the axis.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *y* axis as a number of turns around the axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":115612,"byte_end":115697,"line_start":449,"line_end":449,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":115906,"byte_end":115913,"line_start":455,"line_end":455,"column_start":12,"column_end":19},"name":"z_turns","qualname":"<Drawing>::z_turns","value":"fn z_turns(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation around the *z* axis as a number of turns around the axis.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *z* axis as a number of turns around the axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":115809,"byte_end":115894,"line_start":454,"line_end":454,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":116204,"byte_end":116211,"line_start":462,"line_end":462,"column_start":12,"column_end":19},"name":"radians","qualname":"<Drawing>::radians","value":"fn radians(Self, Vec3) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation along each axis with the given **Vector** of radians.","sig":null,"attributes":[{"value":"/ Specify the orientation along each axis with the given **Vector** of radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":116006,"byte_end":116087,"line_start":459,"line_end":459,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":116092,"byte_end":116095,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ This has the same affect as calling `self.x_radians(v.x).y_radians(v.y).z_radians(v.z)`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":116100,"byte_end":116192,"line_start":461,"line_end":461,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":116503,"byte_end":116510,"line_start":469,"line_end":469,"column_start":12,"column_end":19},"name":"degrees","qualname":"<Drawing>::degrees","value":"fn degrees(Self, Vec3) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation along each axis with the given **Vector** of degrees.","sig":null,"attributes":[{"value":"/ Specify the orientation along each axis with the given **Vector** of degrees.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":116305,"byte_end":116386,"line_start":466,"line_end":466,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":116391,"byte_end":116394,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ This has the same affect as calling `self.x_degrees(v.x).y_degrees(v.y).z_degrees(v.z)`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":116399,"byte_end":116491,"line_start":468,"line_end":468,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":116796,"byte_end":116801,"line_start":476,"line_end":476,"column_start":12,"column_end":17},"name":"turns","qualname":"<Drawing>::turns","value":"fn turns(Self, Vec3) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation along each axis with the given **Vector** of \"turns\".","sig":null,"attributes":[{"value":"/ Specify the orientation along each axis with the given **Vector** of \"turns\".","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":116604,"byte_end":116685,"line_start":473,"line_end":473,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":116690,"byte_end":116693,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ This has the same affect as calling `self.x_turns(v.x).y_turns(v.y).z_turns(v.z)`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":116698,"byte_end":116784,"line_start":475,"line_end":475,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":117014,"byte_end":117019,"line_start":483,"line_end":483,"column_start":12,"column_end":17},"name":"euler","qualname":"<Drawing>::euler","value":"fn euler(Self, Vec3) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation with the given **Euler**.","sig":null,"attributes":[{"value":"/ Specify the orientation with the given **Euler**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":116893,"byte_end":116946,"line_start":480,"line_end":480,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":116951,"byte_end":116954,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ The euler must be specified in radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":116959,"byte_end":117002,"line_start":482,"line_end":482,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":117181,"byte_end":117191,"line_start":488,"line_end":488,"column_start":12,"column_end":22},"name":"quaternion","qualname":"<Drawing>::quaternion","value":"fn quaternion(Self, Quat) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation with the given **Quaternion**.\n","sig":null,"attributes":[{"value":"/ Specify the orientation with the given **Quaternion**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":117111,"byte_end":117169,"line_start":487,"line_end":487,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":117449,"byte_end":117454,"line_start":497,"line_end":497,"column_start":12,"column_end":17},"name":"pitch","qualname":"<Drawing>::pitch","value":"fn pitch(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the \"pitch\" of the orientation in radians.","sig":null,"attributes":[{"value":"/ Specify the \"pitch\" of the orientation in radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":117318,"byte_end":117372,"line_start":494,"line_end":494,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":117377,"byte_end":117380,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ This has the same effect as calling `x_radians`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":117385,"byte_end":117437,"line_start":496,"line_end":496,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":117682,"byte_end":117685,"line_start":504,"line_end":504,"column_start":12,"column_end":15},"name":"yaw","qualname":"<Drawing>::yaw","value":"fn yaw(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the \"yaw\" of the orientation in radians.","sig":null,"attributes":[{"value":"/ Specify the \"yaw\" of the orientation in radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":117553,"byte_end":117605,"line_start":501,"line_end":501,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":117610,"byte_end":117613,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ This has the same effect as calling `y_radians`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":117618,"byte_end":117670,"line_start":503,"line_end":503,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":117908,"byte_end":117912,"line_start":511,"line_end":511,"column_start":12,"column_end":16},"name":"roll","qualname":"<Drawing>::roll","value":"fn roll(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the \"roll\" of the orientation in radians.","sig":null,"attributes":[{"value":"/ Specify the \"roll\" of the orientation in radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":117778,"byte_end":117831,"line_start":508,"line_end":508,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":117836,"byte_end":117839,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This has the same effect as calling `z_radians`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":117844,"byte_end":117896,"line_start":510,"line_end":510,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":118240,"byte_end":118246,"line_start":519,"line_end":519,"column_start":12,"column_end":18},"name":"rotate","qualname":"<Drawing>::rotate","value":"fn rotate(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Assuming we're looking at a 2D plane, positive values cause a clockwise rotation where the\n given value is specified in radians.","sig":null,"attributes":[{"value":"/ Assuming we're looking at a 2D plane, positive values cause a clockwise rotation where the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":118008,"byte_end":118102,"line_start":515,"line_end":515,"column_start":5,"column_end":99}},{"value":"/ given value is specified in radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":118107,"byte_end":118147,"line_start":516,"line_end":516,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":118152,"byte_end":118155,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling the `z_radians` or `roll` methods.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":118160,"byte_end":118228,"line_start":518,"line_end":518,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":118540,"byte_end":118549,"line_start":532,"line_end":532,"column_start":12,"column_end":21},"name":"fill_opts","qualname":"<Drawing>::fill_opts","value":"fn fill_opts(Self, FillOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the whole set of fill tessellation options.\n","sig":null,"attributes":[{"value":"/ Specify the whole set of fill tessellation options.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":118473,"byte_end":118528,"line_start":531,"line_end":531,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":118725,"byte_end":118739,"line_start":537,"line_end":537,"column_start":12,"column_end":26},"name":"fill_tolerance","qualname":"<Drawing>::fill_tolerance","value":"fn fill_tolerance(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Maximum allowed distance to the path when building an approximation.\n","sig":null,"attributes":[{"value":"/ Maximum allowed distance to the path when building an approximation.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":118641,"byte_end":118713,"line_start":536,"line_end":536,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":119004,"byte_end":119013,"line_start":544,"line_end":544,"column_start":12,"column_end":21},"name":"fill_rule","qualname":"<Drawing>::fill_rule","value":"fn fill_rule(Self, lyon::tessellation::FillRule) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the rule used to determine what is inside and what is outside of the shape.","sig":null,"attributes":[{"value":"/ Specify the rule used to determine what is inside and what is outside of the shape.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":118838,"byte_end":118925,"line_start":541,"line_end":541,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":118930,"byte_end":118933,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ Currently, only the `EvenOdd` rule is implemented.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":118938,"byte_end":118992,"line_start":543,"line_end":543,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":119251,"byte_end":119273,"line_start":551,"line_end":551,"column_start":12,"column_end":34},"name":"fill_sweep_orientation","qualname":"<Drawing>::fill_sweep_orientation","value":"fn fill_sweep_orientation(Self, lyon::tessellation::Orientation) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether to perform a vertical or horizontal traversal of the geometry.","sig":null,"attributes":[{"value":"/ Whether to perform a vertical or horizontal traversal of the geometry.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":119122,"byte_end":119196,"line_start":548,"line_end":548,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":119201,"byte_end":119204,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ Default value: `Vertical`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":119209,"byte_end":119239,"line_start":550,"line_end":550,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":119773,"byte_end":119793,"line_start":562,"line_end":562,"column_start":12,"column_end":32},"name":"handle_intersections","qualname":"<Drawing>::handle_intersections","value":"fn handle_intersections(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A fast path to avoid some expensive operations if the path is known to not have any\n self-intersections.","sig":null,"attributes":[{"value":"/ A fast path to avoid some expensive operations if the path is known to not have any","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":119412,"byte_end":119499,"line_start":555,"line_end":555,"column_start":5,"column_end":92}},{"value":"/ self-intersections.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":119504,"byte_end":119527,"line_start":556,"line_end":556,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":119532,"byte_end":119535,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ Do not set this to `false` if the path may have intersecting edges else the tessellator may","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":119540,"byte_end":119635,"line_start":558,"line_end":558,"column_start":5,"column_end":100}},{"value":"/ panic or produce incorrect results. In doubt, do not change the default value.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":119640,"byte_end":119722,"line_start":559,"line_end":559,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":119727,"byte_end":119730,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ Default value: `true`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":119735,"byte_end":119761,"line_start":561,"line_end":561,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":120074,"byte_end":120083,"line_start":575,"line_end":575,"column_start":12,"column_end":21},"name":"start_cap","qualname":"<Drawing>::start_cap","value":"fn start_cap(Self, LineCap) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The start line cap as specified by the SVG spec.\n","sig":null,"attributes":[{"value":"/ The start line cap as specified by the SVG spec.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":120010,"byte_end":120062,"line_start":574,"line_end":574,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":120231,"byte_end":120238,"line_start":580,"line_end":580,"column_start":12,"column_end":19},"name":"end_cap","qualname":"<Drawing>::end_cap","value":"fn end_cap(Self, LineCap) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The end line cap as specified by the SVG spec.\n","sig":null,"attributes":[{"value":"/ The end line cap as specified by the SVG spec.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":120169,"byte_end":120219,"line_start":579,"line_end":579,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":120394,"byte_end":120398,"line_start":585,"line_end":585,"column_start":12,"column_end":16},"name":"caps","qualname":"<Drawing>::caps","value":"fn caps(Self, LineCap) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The start and end line cap as specified by the SVG spec.\n","sig":null,"attributes":[{"value":"/ The start and end line cap as specified by the SVG spec.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":120322,"byte_end":120382,"line_start":584,"line_end":584,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":120632,"byte_end":120646,"line_start":591,"line_end":591,"column_start":12,"column_end":26},"name":"start_cap_butt","qualname":"<Drawing>::start_cap_butt","value":"fn start_cap_butt(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The stroke for each sub-path does not extend beyond its two endpoints. A zero length\n sub-path will therefore not have any stroke.\n","sig":null,"attributes":[{"value":"/ The stroke for each sub-path does not extend beyond its two endpoints. A zero length","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":120479,"byte_end":120567,"line_start":589,"line_end":589,"column_start":5,"column_end":93}},{"value":"/ sub-path will therefore not have any stroke.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":120572,"byte_end":120620,"line_start":590,"line_end":590,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":121148,"byte_end":121164,"line_start":600,"line_end":600,"column_start":12,"column_end":28},"name":"start_cap_square","qualname":"<Drawing>::start_cap_square","value":"fn start_cap_square(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" At the end of each sub-path, the shape representing the stroke will be extended by a\n rectangle with the same width as the stroke width and whose length is half of the stroke\n width. If a sub-path has zero length, then the resulting effect is that the stroke for that\n sub-path consists solely of a square with side length equal to the stroke width, centered\n at the sub-path's point.\n","sig":null,"attributes":[{"value":"/ At the end of each sub-path, the shape representing the stroke will be extended by a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":120720,"byte_end":120808,"line_start":595,"line_end":595,"column_start":5,"column_end":93}},{"value":"/ rectangle with the same width as the stroke width and whose length is half of the stroke","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":120813,"byte_end":120905,"line_start":596,"line_end":596,"column_start":5,"column_end":97}},{"value":"/ width. If a sub-path has zero length, then the resulting effect is that the stroke for that","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":120910,"byte_end":121005,"line_start":597,"line_end":597,"column_start":5,"column_end":100}},{"value":"/ sub-path consists solely of a square with side length equal to the stroke width, centered","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":121010,"byte_end":121103,"line_start":598,"line_end":598,"column_start":5,"column_end":98}},{"value":"/ at the sub-path's point.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":121108,"byte_end":121136,"line_start":599,"line_end":599,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":121579,"byte_end":121594,"line_start":608,"line_end":608,"column_start":12,"column_end":27},"name":"start_cap_round","qualname":"<Drawing>::start_cap_round","value":"fn start_cap_round(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" At each end of each sub-path, the shape representing the stroke will be extended by a half\n circle with a radius equal to the stroke width. If a sub-path has zero length, then the\n resulting effect is that the stroke for that sub-path consists solely of a full circle\n centered at the sub-path's point.\n","sig":null,"attributes":[{"value":"/ At each end of each sub-path, the shape representing the stroke will be extended by a half","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":121240,"byte_end":121334,"line_start":604,"line_end":604,"column_start":5,"column_end":99}},{"value":"/ circle with a radius equal to the stroke width. If a sub-path has zero length, then the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":121339,"byte_end":121430,"line_start":605,"line_end":605,"column_start":5,"column_end":96}},{"value":"/ resulting effect is that the stroke for that sub-path consists solely of a full circle","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":121435,"byte_end":121525,"line_start":606,"line_end":606,"column_start":5,"column_end":95}},{"value":"/ centered at the sub-path's point.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":121530,"byte_end":121567,"line_start":607,"line_end":607,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":121822,"byte_end":121834,"line_start":614,"line_end":614,"column_start":12,"column_end":24},"name":"end_cap_butt","qualname":"<Drawing>::end_cap_butt","value":"fn end_cap_butt(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The stroke for each sub-path does not extend beyond its two endpoints. A zero length\n sub-path will therefore not have any stroke.\n","sig":null,"attributes":[{"value":"/ The stroke for each sub-path does not extend beyond its two endpoints. A zero length","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":121669,"byte_end":121757,"line_start":612,"line_end":612,"column_start":5,"column_end":93}},{"value":"/ sub-path will therefore not have any stroke.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":121762,"byte_end":121810,"line_start":613,"line_end":613,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":122334,"byte_end":122348,"line_start":623,"line_end":623,"column_start":12,"column_end":26},"name":"end_cap_square","qualname":"<Drawing>::end_cap_square","value":"fn end_cap_square(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" At the end of each sub-path, the shape representing the stroke will be extended by a\n rectangle with the same width as the stroke width and whose length is half of the stroke\n width. If a sub-path has zero length, then the resulting effect is that the stroke for that\n sub-path consists solely of a square with side length equal to the stroke width, centered\n at the sub-path's point.\n","sig":null,"attributes":[{"value":"/ At the end of each sub-path, the shape representing the stroke will be extended by a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":121906,"byte_end":121994,"line_start":618,"line_end":618,"column_start":5,"column_end":93}},{"value":"/ rectangle with the same width as the stroke width and whose length is half of the stroke","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":121999,"byte_end":122091,"line_start":619,"line_end":619,"column_start":5,"column_end":97}},{"value":"/ width. If a sub-path has zero length, then the resulting effect is that the stroke for that","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":122096,"byte_end":122191,"line_start":620,"line_end":620,"column_start":5,"column_end":100}},{"value":"/ sub-path consists solely of a square with side length equal to the stroke width, centered","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":122196,"byte_end":122289,"line_start":621,"line_end":621,"column_start":5,"column_end":98}},{"value":"/ at the sub-path's point.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":122294,"byte_end":122322,"line_start":622,"line_end":622,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":122761,"byte_end":122774,"line_start":631,"line_end":631,"column_start":12,"column_end":25},"name":"end_cap_round","qualname":"<Drawing>::end_cap_round","value":"fn end_cap_round(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" At each end of each sub-path, the shape representing the stroke will be extended by a half\n circle with a radius equal to the stroke width. If a sub-path has zero length, then the\n resulting effect is that the stroke for that sub-path consists solely of a full circle\n centered at the sub-path's point.\n","sig":null,"attributes":[{"value":"/ At each end of each sub-path, the shape representing the stroke will be extended by a half","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":122422,"byte_end":122516,"line_start":627,"line_end":627,"column_start":5,"column_end":99}},{"value":"/ circle with a radius equal to the stroke width. If a sub-path has zero length, then the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":122521,"byte_end":122612,"line_start":628,"line_end":628,"column_start":5,"column_end":96}},{"value":"/ resulting effect is that the stroke for that sub-path consists solely of a full circle","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":122617,"byte_end":122707,"line_start":629,"line_end":629,"column_start":5,"column_end":95}},{"value":"/ centered at the sub-path's point.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":122712,"byte_end":122749,"line_start":630,"line_end":630,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":123000,"byte_end":123009,"line_start":637,"line_end":637,"column_start":12,"column_end":21},"name":"caps_butt","qualname":"<Drawing>::caps_butt","value":"fn caps_butt(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The stroke for each sub-path does not extend beyond its two endpoints. A zero length\n sub-path will therefore not have any stroke.\n","sig":null,"attributes":[{"value":"/ The stroke for each sub-path does not extend beyond its two endpoints. A zero length","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":122847,"byte_end":122935,"line_start":635,"line_end":635,"column_start":5,"column_end":93}},{"value":"/ sub-path will therefore not have any stroke.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":122940,"byte_end":122988,"line_start":636,"line_end":636,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":123506,"byte_end":123517,"line_start":646,"line_end":646,"column_start":12,"column_end":23},"name":"caps_square","qualname":"<Drawing>::caps_square","value":"fn caps_square(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" At the end of each sub-path, the shape representing the stroke will be extended by a\n rectangle with the same width as the stroke width and whose length is half of the stroke\n width. If a sub-path has zero length, then the resulting effect is that the stroke for that\n sub-path consists solely of a square with side length equal to the stroke width, centered\n at the sub-path's point.\n","sig":null,"attributes":[{"value":"/ At the end of each sub-path, the shape representing the stroke will be extended by a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":123078,"byte_end":123166,"line_start":641,"line_end":641,"column_start":5,"column_end":93}},{"value":"/ rectangle with the same width as the stroke width and whose length is half of the stroke","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":123171,"byte_end":123263,"line_start":642,"line_end":642,"column_start":5,"column_end":97}},{"value":"/ width. If a sub-path has zero length, then the resulting effect is that the stroke for that","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":123268,"byte_end":123363,"line_start":643,"line_end":643,"column_start":5,"column_end":100}},{"value":"/ sub-path consists solely of a square with side length equal to the stroke width, centered","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":123368,"byte_end":123461,"line_start":644,"line_end":644,"column_start":5,"column_end":98}},{"value":"/ at the sub-path's point.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":123466,"byte_end":123494,"line_start":645,"line_end":645,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":123927,"byte_end":123937,"line_start":654,"line_end":654,"column_start":12,"column_end":22},"name":"caps_round","qualname":"<Drawing>::caps_round","value":"fn caps_round(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" At each end of each sub-path, the shape representing the stroke will be extended by a half\n circle with a radius equal to the stroke width. If a sub-path has zero length, then the\n resulting effect is that the stroke for that sub-path consists solely of a full circle\n centered at the sub-path's point.\n","sig":null,"attributes":[{"value":"/ At each end of each sub-path, the shape representing the stroke will be extended by a half","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":123588,"byte_end":123682,"line_start":650,"line_end":650,"column_start":5,"column_end":99}},{"value":"/ circle with a radius equal to the stroke width. If a sub-path has zero length, then the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":123687,"byte_end":123778,"line_start":651,"line_end":651,"column_start":5,"column_end":96}},{"value":"/ resulting effect is that the stroke for that sub-path consists solely of a full circle","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":123783,"byte_end":123873,"line_start":652,"line_end":652,"column_start":5,"column_end":95}},{"value":"/ centered at the sub-path's point.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":123878,"byte_end":123915,"line_start":653,"line_end":653,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":124142,"byte_end":124146,"line_start":661,"line_end":661,"column_start":12,"column_end":16},"name":"join","qualname":"<Drawing>::join","value":"fn join(Self, LineJoin) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The way in which lines are joined at the vertices, matching the SVG spec.","sig":null,"attributes":[{"value":"/ The way in which lines are joined at the vertices, matching the SVG spec.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":124007,"byte_end":124084,"line_start":658,"line_end":658,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":124089,"byte_end":124092,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ Default value is `MiterClip`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":124097,"byte_end":124130,"line_start":660,"line_end":660,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":124297,"byte_end":124307,"line_start":666,"line_end":666,"column_start":12,"column_end":22},"name":"join_miter","qualname":"<Drawing>::join_miter","value":"fn join_miter(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A sharp corner is to be used to join path segments.\n","sig":null,"attributes":[{"value":"/ A sharp corner is to be used to join path segments.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":124230,"byte_end":124285,"line_start":665,"line_end":665,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":124562,"byte_end":124577,"line_start":672,"line_end":672,"column_start":12,"column_end":27},"name":"join_miter_clip","qualname":"<Drawing>::join_miter_clip","value":"fn join_miter_clip(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Same as a `join_miter`, but if the miter limit is exceeded, the miter is clipped at a miter\n length equal to the miter limit value multiplied by the stroke width.\n","sig":null,"attributes":[{"value":"/ Same as a `join_miter`, but if the miter limit is exceeded, the miter is clipped at a miter","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":124377,"byte_end":124472,"line_start":670,"line_end":670,"column_start":5,"column_end":100}},{"value":"/ length equal to the miter limit value multiplied by the stroke width.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":124477,"byte_end":124550,"line_start":671,"line_end":671,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":124719,"byte_end":124729,"line_start":677,"line_end":677,"column_start":12,"column_end":22},"name":"join_round","qualname":"<Drawing>::join_round","value":"fn join_round(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A round corner is to be used to join path segments.\n","sig":null,"attributes":[{"value":"/ A round corner is to be used to join path segments.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":124652,"byte_end":124707,"line_start":676,"line_end":676,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":124961,"byte_end":124971,"line_start":683,"line_end":683,"column_start":12,"column_end":22},"name":"join_bevel","qualname":"<Drawing>::join_bevel","value":"fn join_bevel(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A bevelled corner is to be used to join path segments. The bevel shape is a triangle that\n fills the area between the two stroked segments.\n","sig":null,"attributes":[{"value":"/ A bevelled corner is to be used to join path segments. The bevel shape is a triangle that","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":124799,"byte_end":124892,"line_start":681,"line_end":681,"column_start":5,"column_end":98}},{"value":"/ fills the area between the two stroked segments.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":124897,"byte_end":124949,"line_start":682,"line_end":682,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":125105,"byte_end":125118,"line_start":688,"line_end":688,"column_start":12,"column_end":25},"name":"stroke_weight","qualname":"<Drawing>::stroke_weight","value":"fn stroke_weight(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The total stroke_weight (aka width) of the line.\n","sig":null,"attributes":[{"value":"/ The total stroke_weight (aka width) of the line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":125041,"byte_end":125093,"line_start":687,"line_end":687,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":125375,"byte_end":125386,"line_start":695,"line_end":695,"column_start":12,"column_end":23},"name":"miter_limit","qualname":"<Drawing>::miter_limit","value":"fn miter_limit(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describes the limit before miter lines will clip, as described in the SVG spec.","sig":null,"attributes":[{"value":"/ Describes the limit before miter lines will clip, as described in the SVG spec.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":125224,"byte_end":125307,"line_start":692,"line_end":692,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":125312,"byte_end":125315,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ Must be greater than or equal to `1.0`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":125320,"byte_end":125363,"line_start":694,"line_end":694,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":125558,"byte_end":125574,"line_start":700,"line_end":700,"column_start":12,"column_end":28},"name":"stroke_tolerance","qualname":"<Drawing>::stroke_tolerance","value":"fn stroke_tolerance(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Maximum allowed distance to the path when building an approximation.\n","sig":null,"attributes":[{"value":"/ Maximum allowed distance to the path when building an approximation.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":125474,"byte_end":125546,"line_start":699,"line_end":699,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":125756,"byte_end":125767,"line_start":705,"line_end":705,"column_start":12,"column_end":23},"name":"stroke_opts","qualname":"<Drawing>::stroke_opts","value":"fn stroke_opts(Self, StrokeOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the full set of stroke options for the path tessellation.\n","sig":null,"attributes":[{"value":"/ Specify the full set of stroke options for the path tessellation.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":125675,"byte_end":125744,"line_start":704,"line_end":704,"column_start":5,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":719},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mesh","qualname":"::draw::mesh","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":727},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":743},{"krate":0,"index":746},{"krate":0,"index":835},{"krate":0,"index":895},{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":4669},{"krate":0,"index":4671},{"krate":0,"index":4673},{"krate":0,"index":906},{"krate":0,"index":935},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":949},{"krate":0,"index":953},{"krate":0,"index":957},{"krate":0,"index":961},{"krate":0,"index":963},{"krate":0,"index":968},{"krate":0,"index":970}],"decl_id":null,"docs":" Items related to the custom mesh type used by the `Draw` API.\n","sig":null,"attributes":[{"value":"/ Items related to the custom mesh type used by the `Draw` API.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":125861,"byte_end":125926,"line_start":1,"line_end":1,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":746},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"builder","qualname":"::draw::mesh::builder","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","parent":null,"children":[{"krate":0,"index":747},{"krate":0,"index":750},{"krate":0,"index":753},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":773},{"krate":0,"index":776},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":782},{"krate":0,"index":790},{"krate":0,"index":793},{"krate":0,"index":795},{"krate":0,"index":797},{"krate":0,"index":801},{"krate":0,"index":804},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":817},{"krate":0,"index":820},{"krate":0,"index":823},{"krate":0,"index":826},{"krate":0,"index":829},{"krate":0,"index":832}],"decl_id":null,"docs":" Implementations of the lyon geometry builder traits for the `Mesh`.","sig":null,"attributes":[{"value":"/ Implementations of the lyon geometry builder traits for the `Mesh`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":133430,"byte_end":133501,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":133502,"byte_end":133505,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The aim is to allow for a tessellator to efficiently extend a mesh without using an","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":133506,"byte_end":133593,"line_start":3,"line_end":3,"column_start":1,"column_end":88}},{"value":"/ intermediary buffer.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":133594,"byte_end":133618,"line_start":4,"line_end":4,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":133619,"byte_end":133622,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Lyon tessellators assume `f32` data, so we do the same in the following implementations.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":133623,"byte_end":133715,"line_start":6,"line_end":6,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":782},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":133996,"byte_end":134007,"line_start":16,"line_end":16,"column_start":12,"column_end":23},"name":"MeshBuilder","qualname":"::draw::mesh::builder::MeshBuilder","value":"MeshBuilder {  }","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":790},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":134469,"byte_end":134480,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"SingleColor","qualname":"::draw::mesh::builder::SingleColor","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":793},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":134520,"byte_end":134533,"line_start":30,"line_end":30,"column_start":12,"column_end":25},"name":"ColorPerPoint","qualname":"::draw::mesh::builder::ColorPerPoint","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":795},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":134546,"byte_end":134563,"line_start":31,"line_end":31,"column_start":12,"column_end":29},"name":"TexCoordsPerPoint","qualname":"::draw::mesh::builder::TexCoordsPerPoint","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":135000,"byte_end":135012,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"single_color","qualname":"<MeshBuilder>::single_color","value":"fn single_color(&'a mut draw::Mesh, Mat4, draw::mesh::vertex::Color) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Begin extending a mesh rendered with a single colour.\n","sig":null,"attributes":[{"value":"/ Begin extending a mesh rendered with a single colour.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":134931,"byte_end":134988,"line_start":47,"line_end":47,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":135333,"byte_end":135348,"line_start":59,"line_end":59,"column_start":12,"column_end":27},"name":"color_per_point","qualname":"<MeshBuilder>::color_per_point","value":"fn color_per_point(&'a mut draw::Mesh, Mat4) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Begin extending a mesh where the path interpolates a unique color per point.\n","sig":null,"attributes":[{"value":"/ Begin extending a mesh where the path interpolates a unique color per point.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":135241,"byte_end":135321,"line_start":58,"line_end":58,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":135617,"byte_end":135637,"line_start":66,"line_end":66,"column_start":12,"column_end":32},"name":"tex_coords_per_point","qualname":"<MeshBuilder>::tex_coords_per_point","value":"fn tex_coords_per_point(&'a mut draw::Mesh, Mat4) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Begin extending a mesh where the path interpolates a unique texture coordinates per point.\n","sig":null,"attributes":[{"value":"/ Begin extending a mesh where the path interpolates a unique texture coordinates per point.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":135511,"byte_end":135605,"line_start":65,"line_end":65,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":135814,"byte_end":135828,"line_start":72,"line_end":72,"column_start":8,"column_end":22},"name":"begin_geometry","qualname":"<MeshBuilder as lyon::lyon_tessellation::GeometryBuilder>::begin_geometry","value":"fn begin_geometry(&mut Self)","parent":{"krate":29,"index":406},"children":[],"decl_id":{"krate":29,"index":407},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":135990,"byte_end":136002,"line_start":77,"line_end":77,"column_start":8,"column_end":20},"name":"end_geometry","qualname":"<MeshBuilder as lyon::lyon_tessellation::GeometryBuilder>::end_geometry","value":"fn end_geometry(&mut Self) -> geometry_builder::Count","parent":{"krate":29,"index":406},"children":[],"decl_id":{"krate":29,"index":408},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":136262,"byte_end":136274,"line_start":84,"line_end":84,"column_start":8,"column_end":20},"name":"add_triangle","qualname":"<MeshBuilder as lyon::lyon_tessellation::GeometryBuilder>::add_triangle","value":"fn add_triangle(&mut Self, VertexId, VertexId, VertexId)","parent":{"krate":29,"index":406},"children":[],"decl_id":{"krate":29,"index":409},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":136494,"byte_end":136508,"line_start":90,"line_end":90,"column_start":8,"column_end":22},"name":"abort_geometry","qualname":"<MeshBuilder as lyon::lyon_tessellation::GeometryBuilder>::abort_geometry","value":"fn abort_geometry(&mut Self)","parent":{"krate":29,"index":406},"children":[],"decl_id":{"krate":29,"index":410},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":136628,"byte_end":136643,"line_start":96,"line_end":96,"column_start":8,"column_end":23},"name":"add_fill_vertex","qualname":"<MeshBuilder as lyon::lyon_tessellation::FillGeometryBuilder>::add_fill_vertex","value":"fn add_fill_vertex(&mut Self, FillVertex)\n-> Result<VertexId, GeometryBuilderError>","parent":{"krate":29,"index":411},"children":[],"decl_id":{"krate":29,"index":412},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":137377,"byte_end":137394,"line_start":116,"line_end":116,"column_start":8,"column_end":25},"name":"add_stroke_vertex","qualname":"<MeshBuilder as lyon::lyon_tessellation::StrokeGeometryBuilder>::add_stroke_vertex","value":"fn add_stroke_vertex(&mut Self, StrokeVertex)\n-> Result<VertexId, GeometryBuilderError>","parent":{"krate":29,"index":413},"children":[],"decl_id":{"krate":29,"index":414},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":138153,"byte_end":138168,"line_start":139,"line_end":139,"column_start":8,"column_end":23},"name":"add_fill_vertex","qualname":"<MeshBuilder as lyon::lyon_tessellation::FillGeometryBuilder>::add_fill_vertex","value":"fn add_fill_vertex(&mut Self, FillVertex)\n-> Result<VertexId, GeometryBuilderError>","parent":{"krate":29,"index":411},"children":[],"decl_id":{"krate":29,"index":412},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":139021,"byte_end":139038,"line_start":163,"line_end":163,"column_start":8,"column_end":25},"name":"add_stroke_vertex","qualname":"<MeshBuilder as lyon::lyon_tessellation::StrokeGeometryBuilder>::add_stroke_vertex","value":"fn add_stroke_vertex(&mut Self, StrokeVertex)\n-> Result<VertexId, GeometryBuilderError>","parent":{"krate":29,"index":413},"children":[],"decl_id":{"krate":29,"index":414},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":139895,"byte_end":139910,"line_start":187,"line_end":187,"column_start":8,"column_end":23},"name":"add_fill_vertex","qualname":"<MeshBuilder as lyon::lyon_tessellation::FillGeometryBuilder>::add_fill_vertex","value":"fn add_fill_vertex(&mut Self, FillVertex)\n-> Result<VertexId, GeometryBuilderError>","parent":{"krate":29,"index":411},"children":[],"decl_id":{"krate":29,"index":412},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":140752,"byte_end":140769,"line_start":211,"line_end":211,"column_start":8,"column_end":25},"name":"add_stroke_vertex","qualname":"<MeshBuilder as lyon::lyon_tessellation::StrokeGeometryBuilder>::add_stroke_vertex","value":"fn add_stroke_vertex(&mut Self, StrokeVertex)\n-> Result<VertexId, GeometryBuilderError>","parent":{"krate":29,"index":413},"children":[],"decl_id":{"krate":29,"index":414},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":835},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vertex","qualname":"::draw::mesh::vertex","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","parent":null,"children":[{"krate":0,"index":836},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":843},{"krate":0,"index":846},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":853},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":4640},{"krate":0,"index":4643},{"krate":0,"index":4646},{"krate":0,"index":868},{"krate":0,"index":872},{"krate":0,"index":4649},{"krate":0,"index":4653},{"krate":0,"index":4656},{"krate":0,"index":4659},{"krate":0,"index":4663},{"krate":0,"index":4666},{"krate":0,"index":877},{"krate":0,"index":881},{"krate":0,"index":885},{"krate":0,"index":890}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":856},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":141656,"byte_end":141661,"line_start":5,"line_end":5,"column_start":10,"column_end":15},"name":"Point","qualname":"::draw::mesh::vertex::Point","value":"Point3","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":857},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":141681,"byte_end":141686,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Color","qualname":"::draw::mesh::vertex::Color","value":"color::LinSrgba","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":858},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":141715,"byte_end":141724,"line_start":7,"line_end":7,"column_start":10,"column_end":19},"name":"TexCoords","qualname":"::draw::mesh::vertex::TexCoords","value":"Point2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":859},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":141744,"byte_end":141750,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"Normal","qualname":"::draw::mesh::vertex::Normal","value":"Vec3","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":860},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":141768,"byte_end":141780,"line_start":9,"line_end":9,"column_start":10,"column_end":22},"name":"ColoredPoint","qualname":"::draw::mesh::vertex::ColoredPoint","value":"WithColor<Point, Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":861},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":141817,"byte_end":141830,"line_start":10,"line_end":10,"column_start":10,"column_end":23},"name":"ColoredPoint2","qualname":"::draw::mesh::vertex::ColoredPoint2","value":"WithColor<Point2, Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":862},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":141942,"byte_end":141948,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Vertex","qualname":"::draw::mesh::vertex::Vertex","value":"WithTexCoords<WithColor<Point, Color>, TexCoords>","parent":null,"children":[],"decl_id":null,"docs":" The vertex type produced by the **draw::Mesh**'s inner **MeshType**.\n","sig":null,"attributes":[{"value":"/ The vertex type produced by the **draw::Mesh**'s inner **MeshType**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":141860,"byte_end":141932,"line_start":12,"line_end":12,"column_start":1,"column_end":73}}]},{"kind":"Const","id":{"krate":0,"index":863},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":142059,"byte_end":142078,"line_start":16,"line_end":16,"column_start":11,"column_end":30},"name":"COLOR_CHANNEL_COUNT","qualname":"::draw::mesh::vertex::COLOR_CHANNEL_COUNT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The number of channels in the color type.\n","sig":null,"attributes":[{"value":"/ The number of channels in the color type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":142003,"byte_end":142048,"line_start":15,"line_end":15,"column_start":1,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":864},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":142102,"byte_end":142122,"line_start":18,"line_end":18,"column_start":11,"column_end":31},"name":"DEFAULT_VERTEX_COLOR","qualname":"::draw::mesh::vertex::DEFAULT_VERTEX_COLOR","value":"Color","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":865},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":142368,"byte_end":142371,"line_start":29,"line_end":29,"column_start":8,"column_end":11},"name":"new","qualname":"::draw::mesh::vertex::new","value":"fn new(Point, Color, TexCoords) -> Vertex","parent":null,"children":[],"decl_id":null,"docs":" Simplified constructor for a **draw::mesh::Vertex**.\n","sig":null,"attributes":[{"value":"/ Simplified constructor for a **draw::mesh::Vertex**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":142304,"byte_end":142360,"line_start":28,"line_end":28,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":866},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":142652,"byte_end":142670,"line_start":40,"line_end":40,"column_start":8,"column_end":26},"name":"default_tex_coords","qualname":"::draw::mesh::vertex::default_tex_coords","value":"fn default_tex_coords() -> TexCoords","parent":null,"children":[],"decl_id":null,"docs":" Default texture coordinates, for the case where a type is not textured.\n","sig":null,"attributes":[{"value":"/ Default texture coordinates, for the case where a type is not textured.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":142569,"byte_end":142644,"line_start":39,"line_end":39,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4640},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":142892,"byte_end":142913,"line_start":48,"line_end":48,"column_start":12,"column_end":33},"name":"IterFromColoredPoints","qualname":"::draw::mesh::vertex::IterFromColoredPoints","value":"IterFromColoredPoints {  }","parent":null,"children":[{"krate":0,"index":4642}],"decl_id":null,"docs":" A type that converts an iterator yielding colored points to an iterator yielding **Vertex**s.","sig":null,"attributes":[{"value":"/ A type that converts an iterator yielding colored points to an iterator yielding **Vertex**s.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":142711,"byte_end":142808,"line_start":44,"line_end":44,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":142809,"byte_end":142812,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Default values are used for tex_coords.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":142813,"byte_end":142856,"line_start":46,"line_end":46,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":143188,"byte_end":143191,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<IterFromColoredPoints<I>>::new","value":"fn new<P>(P) -> Self where P: IntoIterator<IntoIter = I, Item = I>,\nI: Iterator<Item = WithColor<Point, Color>>","parent":null,"children":[],"decl_id":null,"docs":" Produce an iterator that converts an iterator yielding colored points to an iterator\n yielding **Vertex**s.","sig":null,"attributes":[{"value":"/ Produce an iterator that converts an iterator yielding colored points to an iterator","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":142984,"byte_end":143072,"line_start":53,"line_end":53,"column_start":5,"column_end":93}},{"value":"/ yielding **Vertex**s.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":143077,"byte_end":143102,"line_start":54,"line_end":54,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":143107,"byte_end":143110,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The default value of `(0.0, 0.0)` is used for tex_coords.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":143115,"byte_end":143176,"line_start":56,"line_end":56,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":143611,"byte_end":143615,"line_start":72,"line_end":72,"column_start":8,"column_end":12},"name":"next","qualname":"<IterFromColoredPoints<I> as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4649},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":144110,"byte_end":144124,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"IterFromPoints","qualname":"::draw::mesh::vertex::IterFromPoints","value":"IterFromPoints {  }","parent":null,"children":[{"krate":0,"index":4651},{"krate":0,"index":4652}],"decl_id":null,"docs":" A type that converts an iterator yielding points to an iterator yielding **Vertex**s.","sig":null,"attributes":[{"value":"/ A type that converts an iterator yielding points to an iterator yielding **Vertex**s.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":143854,"byte_end":143943,"line_start":81,"line_end":81,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":143944,"byte_end":143947,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ The given `default_color` is used to color every vertex.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":143948,"byte_end":144008,"line_start":83,"line_end":83,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":144009,"byte_end":144012,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ The default value of `(0.0, 0.0)` is used for tex_coords.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":144013,"byte_end":144074,"line_start":85,"line_end":85,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":4659},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":144489,"byte_end":144504,"line_start":100,"line_end":100,"column_start":12,"column_end":27},"name":"IterFromPoint2s","qualname":"::draw::mesh::vertex::IterFromPoint2s","value":"IterFromPoint2s {  }","parent":null,"children":[{"krate":0,"index":4661},{"krate":0,"index":4662}],"decl_id":null,"docs":" A type that converts an iterator yielding 2D points to an iterator yielding **Vertex**s.","sig":null,"attributes":[{"value":"/ A type that converts an iterator yielding 2D points to an iterator yielding **Vertex**s.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":144174,"byte_end":144266,"line_start":92,"line_end":92,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":144267,"byte_end":144270,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ The `z` position for each vertex will be `0.0`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":144271,"byte_end":144322,"line_start":94,"line_end":94,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":144323,"byte_end":144326,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ The given `default_color` is used to color every vertex.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":144327,"byte_end":144387,"line_start":96,"line_end":96,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":144388,"byte_end":144391,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ The default value of `(0.0, 0.0)` is used for tex_coords.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":144392,"byte_end":144453,"line_start":98,"line_end":98,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":144855,"byte_end":144858,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"new","qualname":"<IterFromPoints<I>>::new","value":"fn new<P>(P, Color) -> Self where P: IntoIterator<IntoIter = I, Item = I>,\nI: Iterator<Item = Point3>","parent":null,"children":[],"decl_id":null,"docs":" Produce an iterator that converts an iterator yielding points to an iterator yielding\n **Vertex**s.","sig":null,"attributes":[{"value":"/ Produce an iterator that converts an iterator yielding points to an iterator yielding","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":144586,"byte_end":144675,"line_start":106,"line_end":106,"column_start":5,"column_end":94}},{"value":"/ **Vertex**s.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":144680,"byte_end":144696,"line_start":107,"line_end":107,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":144701,"byte_end":144704,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ The given `default_color` is used to color every vertex.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":144709,"byte_end":144769,"line_start":109,"line_end":109,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":144774,"byte_end":144777,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The default value of `(0.0, 0.0)` is used for tex_coords.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":144782,"byte_end":144843,"line_start":111,"line_end":111,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":145488,"byte_end":145491,"line_start":133,"line_end":133,"column_start":12,"column_end":15},"name":"new","qualname":"<IterFromPoint2s<I>>::new","value":"fn new<P>(P, Color) -> Self where P: IntoIterator<IntoIter = I, Item = I>,\nI: Iterator<Item = Point2>","parent":null,"children":[],"decl_id":null,"docs":" A type that converts an iterator yielding 2D points to an iterator yielding **Vertex**s.","sig":null,"attributes":[{"value":"/ A type that converts an iterator yielding 2D points to an iterator yielding **Vertex**s.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":145173,"byte_end":145265,"line_start":126,"line_end":126,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":145270,"byte_end":145273,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The `z` position for each vertex will be `0.0`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":145278,"byte_end":145329,"line_start":128,"line_end":128,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":145334,"byte_end":145337,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ The given `default_color` is used to color every vertex.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":145342,"byte_end":145402,"line_start":130,"line_end":130,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":145407,"byte_end":145410,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ The default value of `(0.0, 0.0)` is used for tex_coords.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":145415,"byte_end":145476,"line_start":132,"line_end":132,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":145884,"byte_end":145888,"line_start":151,"line_end":151,"column_start":8,"column_end":12},"name":"next","qualname":"<IterFromPoints<I> as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":146328,"byte_end":146332,"line_start":167,"line_end":167,"column_start":8,"column_end":12},"name":"next","qualname":"<IterFromPoint2s<I> as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":901},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":126166,"byte_end":126172,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Points","qualname":"::draw::mesh::Points","value":"Vec<vertex::Point>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":902},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":126204,"byte_end":126211,"line_start":14,"line_end":14,"column_start":10,"column_end":17},"name":"Indices","qualname":"::draw::mesh::Indices","value":"Vec<u32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":903},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":126233,"byte_end":126239,"line_start":15,"line_end":15,"column_start":10,"column_end":16},"name":"Colors","qualname":"::draw::mesh::Colors","value":"Vec<vertex::Color>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":904},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":126271,"byte_end":126280,"line_start":16,"line_end":16,"column_start":10,"column_end":19},"name":"TexCoords","qualname":"::draw::mesh::TexCoords","value":"Vec<vertex::TexCoords>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":905},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":126369,"byte_end":126377,"line_start":19,"line_end":19,"column_start":10,"column_end":18},"name":"MeshType","qualname":"::draw::mesh::MeshType","value":"WithTexCoords<WithColors<WithIndices<MeshPoints<Points>, Indices>, Colors>,\nTexCoords>","parent":null,"children":[],"decl_id":null,"docs":" The inner mesh type used by the **draw::Mesh**.\n","sig":null,"attributes":[{"value":"/ The inner mesh type used by the **draw::Mesh**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":126308,"byte_end":126359,"line_start":18,"line_end":18,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":4669},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":126570,"byte_end":126574,"line_start":24,"line_end":24,"column_start":12,"column_end":16},"name":"Mesh","qualname":"::draw::mesh::Mesh","value":"Mesh {  }","parent":null,"children":[{"krate":0,"index":4670}],"decl_id":null,"docs":" The custom mesh type used internally by the **Draw** API.\n","sig":null,"attributes":[{"value":"/ The custom mesh type used internally by the **Draw** API.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":126473,"byte_end":126534,"line_start":22,"line_end":22,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":126685,"byte_end":126701,"line_start":30,"line_end":30,"column_start":12,"column_end":28},"name":"raw_vertex_count","qualname":"<Mesh>::raw_vertex_count","value":"fn raw_vertex_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of raw vertices contained within the mesh.\n","sig":null,"attributes":[{"value":"/ The number of raw vertices contained within the mesh.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":126616,"byte_end":126673,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":126875,"byte_end":126887,"line_start":35,"line_end":35,"column_start":12,"column_end":24},"name":"vertex_count","qualname":"<Mesh>::vertex_count","value":"fn vertex_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of vertices that would be yielded by a **Vertices** iterator for the given mesh.\n","sig":null,"attributes":[{"value":"/ The number of vertices that would be yielded by a **Vertices** iterator for the given mesh.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":126768,"byte_end":126863,"line_start":34,"line_end":34,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":127059,"byte_end":127073,"line_start":40,"line_end":40,"column_start":12,"column_end":26},"name":"triangle_count","qualname":"<Mesh>::triangle_count","value":"fn triangle_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of triangles that would be yielded by a **Triangles** iterator for the given mesh.\n","sig":null,"attributes":[{"value":"/ The number of triangles that would be yielded by a **Triangles** iterator for the given mesh.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":126950,"byte_end":127047,"line_start":39,"line_end":39,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":127193,"byte_end":127199,"line_start":45,"line_end":45,"column_start":12,"column_end":18},"name":"points","qualname":"<Mesh>::points","value":"fn points(&Self) -> &[vertex::Point]","parent":null,"children":[],"decl_id":null,"docs":" The **Mesh**'s vertex position channel.\n","sig":null,"attributes":[{"value":"/ The **Mesh**'s vertex position channel.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":127138,"byte_end":127181,"line_start":44,"line_end":44,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":127329,"byte_end":127336,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"indices","qualname":"<Mesh>::indices","value":"fn indices(&Self) -> &[u32]","parent":null,"children":[],"decl_id":null,"docs":" The **Mesh**'s vertex indices channel.\n","sig":null,"attributes":[{"value":"/ The **Mesh**'s vertex indices channel.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":127275,"byte_end":127317,"line_start":49,"line_end":49,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":127457,"byte_end":127463,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"colors","qualname":"<Mesh>::colors","value":"fn colors(&Self) -> &[vertex::Color]","parent":null,"children":[],"decl_id":null,"docs":" The **Mesh**'s vertex colors channel.\n","sig":null,"attributes":[{"value":"/ The **Mesh**'s vertex colors channel.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":127404,"byte_end":127445,"line_start":54,"line_end":54,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":127605,"byte_end":127615,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"tex_coords","qualname":"<Mesh>::tex_coords","value":"fn tex_coords(&Self) -> &[vertex::TexCoords]","parent":null,"children":[],"decl_id":null,"docs":" The **Mesh**'s vertex texture coordinates channel.\n","sig":null,"attributes":[{"value":"/ The **Mesh**'s vertex texture coordinates channel.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":127539,"byte_end":127593,"line_start":59,"line_end":59,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":127764,"byte_end":127775,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"push_vertex","qualname":"<Mesh>::push_vertex","value":"fn push_vertex(&mut Self, Vertex)","parent":null,"children":[],"decl_id":null,"docs":" Push the given vertex onto the inner channels.\n","sig":null,"attributes":[{"value":"/ Push the given vertex onto the inner channels.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":127702,"byte_end":127752,"line_start":64,"line_end":64,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":127919,"byte_end":127929,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"push_index","qualname":"<Mesh>::push_index","value":"fn push_index(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Push the given index onto the inner **Indices** channel.\n","sig":null,"attributes":[{"value":"/ Push the given index onto the inner **Indices** channel.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":127847,"byte_end":127907,"line_start":69,"line_end":69,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":128062,"byte_end":128077,"line_start":75,"line_end":75,"column_start":12,"column_end":27},"name":"extend_vertices","qualname":"<Mesh>::extend_vertices","value":"fn extend_vertices<I>(&mut Self, I) where I: IntoIterator<Item = Vertex>","parent":null,"children":[],"decl_id":null,"docs":" Extend the mesh channels with the given vertices.\n","sig":null,"attributes":[{"value":"/ Extend the mesh channels with the given vertices.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":127997,"byte_end":128050,"line_start":74,"line_end":74,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":128282,"byte_end":128296,"line_start":83,"line_end":83,"column_start":12,"column_end":26},"name":"extend_indices","qualname":"<Mesh>::extend_indices","value":"fn extend_indices<I>(&mut Self, I) where I: IntoIterator<Item = u32>","parent":null,"children":[],"decl_id":null,"docs":" Extend the **Mesh** indices channel with the given indices.\n","sig":null,"attributes":[{"value":"/ Extend the **Mesh** indices channel with the given indices.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":128207,"byte_end":128270,"line_start":82,"line_end":82,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":128494,"byte_end":128500,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"extend","qualname":"<Mesh>::extend","value":"fn extend<V, I>(&mut Self, V, I) where V: IntoIterator<Item = Vertex>,\nI: IntoIterator<Item = u32>","parent":null,"children":[],"decl_id":null,"docs":" Extend the **Mesh** with the given vertices and indices.\n","sig":null,"attributes":[{"value":"/ Extend the **Mesh** with the given vertices and indices.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":128422,"byte_end":128482,"line_start":90,"line_end":90,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":128752,"byte_end":128766,"line_start":101,"line_end":101,"column_start":12,"column_end":26},"name":"clear_vertices","qualname":"<Mesh>::clear_vertices","value":"fn clear_vertices(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear all vertices from the mesh.\n","sig":null,"attributes":[{"value":"/ Clear all vertices from the mesh.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":128703,"byte_end":128740,"line_start":100,"line_end":100,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":128875,"byte_end":128888,"line_start":106,"line_end":106,"column_start":12,"column_end":25},"name":"clear_indices","qualname":"<Mesh>::clear_indices","value":"fn clear_indices(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear all indices from the mesh.\n","sig":null,"attributes":[{"value":"/ Clear all indices from the mesh.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":128827,"byte_end":128863,"line_start":105,"line_end":105,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":129009,"byte_end":129014,"line_start":111,"line_end":111,"column_start":12,"column_end":17},"name":"clear","qualname":"<Mesh>::clear","value":"fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear all vertices and indices from the mesh.\n","sig":null,"attributes":[{"value":"/ Clear all vertices and indices from the mesh.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":128948,"byte_end":128997,"line_start":110,"line_end":110,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":129146,"byte_end":129158,"line_start":116,"line_end":116,"column_start":12,"column_end":24},"name":"raw_vertices","qualname":"<Mesh>::raw_vertices","value":"fn raw_vertices(&Self) -> mesh::RawVertices<&Self>","parent":null,"children":[],"decl_id":null,"docs":" Produce an iterator yielding all raw (non-index-order) vertices.\n","sig":null,"attributes":[{"value":"/ Produce an iterator yielding all raw (non-index-order) vertices.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":129066,"byte_end":129134,"line_start":115,"line_end":115,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":129337,"byte_end":129354,"line_start":121,"line_end":121,"column_start":12,"column_end":29},"name":"into_raw_vertices","qualname":"<Mesh>::into_raw_vertices","value":"fn into_raw_vertices(Self) -> mesh::RawVertices<Self>","parent":null,"children":[],"decl_id":null,"docs":" Consume self and produce an iterator yielding all raw (non-index_order) vertices.\n","sig":null,"attributes":[{"value":"/ Consume self and produce an iterator yielding all raw (non-index_order) vertices.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":129240,"byte_end":129325,"line_start":120,"line_end":120,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":129672,"byte_end":129690,"line_start":130,"line_end":130,"column_start":12,"column_end":30},"name":"extend_from_slices","qualname":"<Mesh>::extend_from_slices","value":"fn extend_from_slices(&mut Self, &[vertex::Point], &[u32], &[vertex::Color],\n&[vertex::TexCoords])","parent":null,"children":[],"decl_id":null,"docs":" Extend the mesh from the given slices.","sig":null,"attributes":[{"value":"/ Extend the mesh from the given slices.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":129434,"byte_end":129476,"line_start":125,"line_end":125,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":129481,"byte_end":129484,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This is faster than `extend` which uses iteration internally.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":129489,"byte_end":129554,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":129559,"byte_end":129562,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ **Panic!**s if the length of the given points, colors and tex_coords slices do not match.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":129567,"byte_end":129660,"line_start":129,"line_end":129,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":130169,"byte_end":130196,"line_start":144,"line_end":144,"column_start":12,"column_end":39},"name":"extend_vertices_from_slices","qualname":"<Mesh>::extend_vertices_from_slices","value":"fn extend_vertices_from_slices(&mut Self, &[vertex::Point], &[vertex::Color],\n&[vertex::TexCoords])","parent":null,"children":[],"decl_id":null,"docs":" Extend the mesh with the given slices of vertices.\n","sig":null,"attributes":[{"value":"/ Extend the mesh with the given slices of vertices.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":130103,"byte_end":130157,"line_start":143,"line_end":143,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":130478,"byte_end":130503,"line_start":154,"line_end":154,"column_start":12,"column_end":37},"name":"extend_indices_from_slice","qualname":"<Mesh>::extend_indices_from_slice","value":"fn extend_indices_from_slice(&mut Self, &[u32])","parent":null,"children":[],"decl_id":null,"docs":" Extend the mesh with the given slices of vertices.\n","sig":null,"attributes":[{"value":"/ Extend the mesh with the given slices of vertices.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":130412,"byte_end":130466,"line_start":153,"line_end":153,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":130706,"byte_end":130714,"line_start":159,"line_end":159,"column_start":12,"column_end":20},"name":"vertices","qualname":"<Mesh>::vertices","value":"fn vertices(&Self) -> mesh::Vertices<&Self>","parent":null,"children":[],"decl_id":null,"docs":" Produce an iterator yielding all vertices in the order specified via the vertex indices.\n","sig":null,"attributes":[{"value":"/ Produce an iterator yielding all vertices in the order specified via the vertex indices.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":130602,"byte_end":130694,"line_start":158,"line_end":158,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":130848,"byte_end":130857,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"triangles","qualname":"<Mesh>::triangles","value":"fn triangles(&Self) -> mesh::Triangles<&Self>","parent":null,"children":[],"decl_id":null,"docs":" Produce an iterator yielding all triangles.\n","sig":null,"attributes":[{"value":"/ Produce an iterator yielding all triangles.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":130789,"byte_end":130836,"line_start":163,"line_end":163,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":131024,"byte_end":131037,"line_start":169,"line_end":169,"column_start":12,"column_end":25},"name":"into_vertices","qualname":"<Mesh>::into_vertices","value":"fn into_vertices(Self) -> mesh::Vertices<Self>","parent":null,"children":[],"decl_id":null,"docs":" Consume self and produce an iterator yielding all vertices in index-order.\n","sig":null,"attributes":[{"value":"/ Consume self and produce an iterator yielding all vertices in index-order.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":130934,"byte_end":131012,"line_start":168,"line_end":168,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":131186,"byte_end":131200,"line_start":174,"line_end":174,"column_start":12,"column_end":26},"name":"into_triangles","qualname":"<Mesh>::into_triangles","value":"fn into_triangles(Self) -> mesh::Triangles<Self>","parent":null,"children":[],"decl_id":null,"docs":" Consume self and produce an iterator yielding all triangles.\n","sig":null,"attributes":[{"value":"/ Consume self and produce an iterator yielding all triangles.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":131110,"byte_end":131174,"line_start":173,"line_end":173,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":131304,"byte_end":131311,"line_start":180,"line_end":180,"column_start":8,"column_end":15},"name":"default","qualname":"<Mesh as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":131451,"byte_end":131456,"line_start":188,"line_end":188,"column_start":8,"column_end":13},"name":"deref","qualname":"<Mesh as std::ops::Deref>::deref","value":"fn deref(&Self) -> &Self::Target","parent":{"krate":2,"index":3369},"children":[],"decl_id":{"krate":2,"index":3371},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":131543,"byte_end":131552,"line_start":194,"line_end":194,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<Mesh as std::ops::DerefMut>::deref_mut","value":"fn deref_mut(&mut Self) -> &mut Self::Target","parent":{"krate":2,"index":3382},"children":[],"decl_id":{"krate":2,"index":3383},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":131689,"byte_end":131699,"line_start":201,"line_end":201,"column_start":8,"column_end":18},"name":"get_vertex","qualname":"<Mesh as nannou_mesh::GetVertex>::get_vertex","value":"fn get_vertex(&Self, u32) -> Option<Self::Vertex>","parent":{"krate":71,"index":201},"children":[],"decl_id":{"krate":71,"index":204},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":131907,"byte_end":131913,"line_start":209,"line_end":209,"column_start":8,"column_end":14},"name":"points","qualname":"<Mesh as nannou_mesh::Points>::points","value":"fn points(&Self) -> &Self::Points","parent":{"krate":71,"index":205},"children":[],"decl_id":{"krate":71,"index":208},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":132063,"byte_end":132070,"line_start":217,"line_end":217,"column_start":8,"column_end":15},"name":"indices","qualname":"<Mesh as nannou_mesh::Indices>::indices","value":"fn indices(&Self) -> &Self::Indices","parent":{"krate":71,"index":209},"children":[],"decl_id":{"krate":71,"index":212},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":132229,"byte_end":132235,"line_start":225,"line_end":225,"column_start":8,"column_end":14},"name":"colors","qualname":"<Mesh as nannou_mesh::Colors>::colors","value":"fn colors(&Self) -> &Self::Colors","parent":{"krate":71,"index":213},"children":[],"decl_id":{"krate":71,"index":216},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":132403,"byte_end":132413,"line_start":233,"line_end":233,"column_start":8,"column_end":18},"name":"tex_coords","qualname":"<Mesh as nannou_mesh::TexCoords>::tex_coords","value":"fn tex_coords(&Self) -> &Self::TexCoords","parent":{"krate":71,"index":217},"children":[],"decl_id":{"krate":71,"index":220},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":132531,"byte_end":132542,"line_start":239,"line_end":239,"column_start":8,"column_end":19},"name":"push_vertex","qualname":"<Mesh as nannou_mesh::PushVertex>::push_vertex","value":"fn push_vertex(&mut Self, Vertex)","parent":{"krate":71,"index":225},"children":[],"decl_id":{"krate":71,"index":227},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":132672,"byte_end":132682,"line_start":247,"line_end":247,"column_start":8,"column_end":18},"name":"push_index","qualname":"<Mesh as nannou_mesh::PushIndex>::push_index","value":"fn push_index(&mut Self, Self::Index)","parent":{"krate":71,"index":228},"children":[],"decl_id":{"krate":71,"index":230},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":132767,"byte_end":132781,"line_start":251,"line_end":251,"column_start":8,"column_end":22},"name":"extend_indices","qualname":"<Mesh as nannou_mesh::PushIndex>::extend_indices","value":"fn extend_indices<I>(&mut Self, I) where I: IntoIterator<Item = Self::Index>","parent":{"krate":71,"index":228},"children":[],"decl_id":{"krate":71,"index":231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":132963,"byte_end":132976,"line_start":260,"line_end":260,"column_start":8,"column_end":21},"name":"clear_indices","qualname":"<Mesh as nannou_mesh::ClearIndices>::clear_indices","value":"fn clear_indices(&mut Self)","parent":{"krate":71,"index":233},"children":[],"decl_id":{"krate":71,"index":234},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":133077,"byte_end":133091,"line_start":266,"line_end":266,"column_start":8,"column_end":22},"name":"clear_vertices","qualname":"<Mesh as nannou_mesh::ClearVertices>::clear_vertices","value":"fn clear_vertices(&mut Self)","parent":{"krate":71,"index":235},"children":[],"decl_id":{"krate":71,"index":236},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":972},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"primitive","qualname":"::draw::primitive","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","parent":null,"children":[{"krate":0,"index":973},{"krate":0,"index":1080},{"krate":0,"index":1185},{"krate":0,"index":1278},{"krate":0,"index":1472},{"krate":0,"index":1739},{"krate":0,"index":1904},{"krate":0,"index":2019},{"krate":0,"index":2119},{"krate":0,"index":2304},{"krate":0,"index":2372},{"krate":0,"index":2487},{"krate":0,"index":2490},{"krate":0,"index":2493},{"krate":0,"index":2496},{"krate":0,"index":2499},{"krate":0,"index":2500},{"krate":0,"index":2503},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2509},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2516},{"krate":0,"index":2519},{"krate":0,"index":2522},{"krate":0,"index":2525},{"krate":0,"index":2528},{"krate":0,"index":2531},{"krate":0,"index":4870},{"krate":0,"index":4919},{"krate":0,"index":4921}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":973},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"arrow","qualname":"::draw::primitive::arrow","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","parent":null,"children":[{"krate":0,"index":974},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":990},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":997},{"krate":0,"index":1000},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1013},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1020},{"krate":0,"index":1023},{"krate":0,"index":1026},{"krate":0,"index":4675},{"krate":0,"index":4679},{"krate":0,"index":4681},{"krate":0,"index":1029},{"krate":0,"index":1031},{"krate":0,"index":1046},{"krate":0,"index":1062},{"krate":0,"index":1064},{"krate":0,"index":1066},{"krate":0,"index":1068},{"krate":0,"index":1070},{"krate":0,"index":1072},{"krate":0,"index":1074},{"krate":0,"index":1078}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4675},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":148485,"byte_end":148490,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"Arrow","qualname":"::draw::primitive::arrow::Arrow","value":"Arrow {  }","parent":null,"children":[{"krate":0,"index":4676},{"krate":0,"index":4677},{"krate":0,"index":4678}],"decl_id":null,"docs":" A path containing only two points - a start and end.","sig":null,"attributes":[{"value":"/ A path containing only two points - a start and end.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":148331,"byte_end":148387,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":148388,"byte_end":148391,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A triangle is drawn on the end to indicate direction.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":148392,"byte_end":148449,"line_start":14,"line_end":14,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":1029},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":148616,"byte_end":148628,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"DrawingArrow","qualname":"::draw::primitive::arrow::DrawingArrow","value":"Drawing","parent":null,"children":[],"decl_id":null,"docs":" The drawing context for a line.\n","sig":null,"attributes":[{"value":"/ The drawing context for a line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":148571,"byte_end":148606,"line_start":22,"line_end":22,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":148731,"byte_end":148737,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"weight","qualname":"<Arrow>::weight","value":"fn weight(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Short-hand for the `stroke_weight` method.\n","sig":null,"attributes":[{"value":"/ Short-hand for the `stroke_weight` method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":148673,"byte_end":148719,"line_start":26,"line_end":26,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":148883,"byte_end":148892,"line_start":32,"line_end":32,"column_start":12,"column_end":21},"name":"tolerance","qualname":"<Arrow>::tolerance","value":"fn tolerance(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Short-hand for the `stroke_tolerance` method.\n","sig":null,"attributes":[{"value":"/ Short-hand for the `stroke_tolerance` method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":148822,"byte_end":148871,"line_start":31,"line_end":31,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":149039,"byte_end":149044,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"start","qualname":"<Arrow>::start","value":"fn start(Self, Point2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the start point of the arrow.\n","sig":null,"attributes":[{"value":"/ Specify the start point of the arrow.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":148986,"byte_end":149027,"line_start":36,"line_end":36,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":149180,"byte_end":149183,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"end","qualname":"<Arrow>::end","value":"fn end(Self, Point2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the end point of the arrow.\n","sig":null,"attributes":[{"value":"/ Specify the end point of the arrow.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":149129,"byte_end":149168,"line_start":41,"line_end":41,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":149324,"byte_end":149330,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"points","qualname":"<Arrow>::points","value":"fn points(Self, Point2, Point2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the start and end points of the arrow.\n","sig":null,"attributes":[{"value":"/ Specify the start and end points of the arrow.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":149262,"byte_end":149312,"line_start":46,"line_end":46,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":149617,"byte_end":149628,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"head_length","qualname":"<Arrow>::head_length","value":"fn head_length(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The length of the arrow head.","sig":null,"attributes":[{"value":"/ The length of the arrow head.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":149434,"byte_end":149467,"line_start":51,"line_end":51,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":149472,"byte_end":149475,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ By default, this is equal to `weight * 4.0`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":149480,"byte_end":149528,"line_start":53,"line_end":53,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":149533,"byte_end":149536,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This value will be clamped to the length of the line itself.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":149541,"byte_end":149605,"line_start":55,"line_end":55,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":149832,"byte_end":149842,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"head_width","qualname":"<Arrow>::head_width","value":"fn head_width(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The width of the arrow head.","sig":null,"attributes":[{"value":"/ The width of the arrow head.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":149727,"byte_end":149759,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":149764,"byte_end":149767,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ By default, this is equal to `weight * 2.0`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":149772,"byte_end":149820,"line_start":63,"line_end":63,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":150414,"byte_end":150420,"line_start":90,"line_end":90,"column_start":12,"column_end":18},"name":"weight","qualname":"<DrawingArrow>::weight","value":"fn weight(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Short-hand for the `stroke_weight` method.\n","sig":null,"attributes":[{"value":"/ Short-hand for the `stroke_weight` method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":150356,"byte_end":150402,"line_start":89,"line_end":89,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":150566,"byte_end":150575,"line_start":95,"line_end":95,"column_start":12,"column_end":21},"name":"tolerance","qualname":"<DrawingArrow>::tolerance","value":"fn tolerance(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Short-hand for the `stroke_tolerance` method.\n","sig":null,"attributes":[{"value":"/ Short-hand for the `stroke_tolerance` method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":150505,"byte_end":150554,"line_start":94,"line_end":94,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":150722,"byte_end":150727,"line_start":100,"line_end":100,"column_start":12,"column_end":17},"name":"start","qualname":"<DrawingArrow>::start","value":"fn start(Self, Point2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the start point of the arrow.\n","sig":null,"attributes":[{"value":"/ Specify the start point of the arrow.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":150669,"byte_end":150710,"line_start":99,"line_end":99,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":150863,"byte_end":150866,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"end","qualname":"<DrawingArrow>::end","value":"fn end(Self, Point2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the end point of the arrow.\n","sig":null,"attributes":[{"value":"/ Specify the end point of the arrow.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":150812,"byte_end":150851,"line_start":104,"line_end":104,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":151007,"byte_end":151013,"line_start":110,"line_end":110,"column_start":12,"column_end":18},"name":"points","qualname":"<DrawingArrow>::points","value":"fn points(Self, Point2, Point2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the start and end points of the arrow.\n","sig":null,"attributes":[{"value":"/ Specify the start and end points of the arrow.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":150945,"byte_end":150995,"line_start":109,"line_end":109,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":151300,"byte_end":151311,"line_start":119,"line_end":119,"column_start":12,"column_end":23},"name":"head_length","qualname":"<DrawingArrow>::head_length","value":"fn head_length(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The length of the arrow head.","sig":null,"attributes":[{"value":"/ The length of the arrow head.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":151117,"byte_end":151150,"line_start":114,"line_end":114,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":151155,"byte_end":151158,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ By default, this is equal to `weight * 4.0`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":151163,"byte_end":151211,"line_start":116,"line_end":116,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":151216,"byte_end":151219,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This value will be clamped to the length of the line itself.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":151224,"byte_end":151288,"line_start":118,"line_end":118,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":151506,"byte_end":151516,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"head_width","qualname":"<DrawingArrow>::head_width","value":"fn head_width(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The width of the arrow head.","sig":null,"attributes":[{"value":"/ The width of the arrow head.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":151401,"byte_end":151433,"line_start":123,"line_end":123,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":151438,"byte_end":151441,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ By default, this is equal to `weight * 2.0`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":151446,"byte_end":151494,"line_start":125,"line_end":125,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":151635,"byte_end":151653,"line_start":132,"line_end":132,"column_start":8,"column_end":26},"name":"stroke_options_mut","qualname":"<Arrow as draw::properties::stroke::SetStroke>::stroke_options_mut","value":"fn stroke_options_mut(&mut Self) -> &mut StrokeOptions","parent":{"krate":0,"index":2720},"children":[],"decl_id":{"krate":0,"index":2721},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":151791,"byte_end":151801,"line_start":138,"line_end":138,"column_start":8,"column_end":18},"name":"properties","qualname":"<Arrow as draw::properties::spatial::orientation::SetOrientation>::properties","value":"fn properties(&mut Self) -> &mut orientation::Properties","parent":{"krate":0,"index":2637},"children":[],"decl_id":{"krate":0,"index":2638},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":151943,"byte_end":151953,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"properties","qualname":"<Arrow as draw::properties::spatial::position::SetPosition>::properties","value":"fn properties(&mut Self) -> &mut position::Properties","parent":{"krate":0,"index":2674},"children":[],"decl_id":{"krate":0,"index":2675},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":152099,"byte_end":152107,"line_start":150,"line_end":150,"column_start":8,"column_end":16},"name":"rgba_mut","qualname":"<Arrow as draw::properties::color::SetColor>::rgba_mut","value":"fn rgba_mut(&mut Self) -> &mut Option<LinSrgba>","parent":{"krate":0,"index":2554},"children":[],"decl_id":{"krate":0,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":152238,"byte_end":152242,"line_start":156,"line_end":156,"column_start":8,"column_end":12},"name":"from","qualname":"<Primitive as std::convert::From>::from","value":"fn from(Arrow) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":152354,"byte_end":152358,"line_start":162,"line_end":162,"column_start":8,"column_end":12},"name":"into","qualname":"<Primitive as std::convert::Into>::into","value":"fn into(Self) -> Option<Arrow>","parent":{"krate":2,"index":3053},"children":[],"decl_id":{"krate":2,"index":3055},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":152553,"byte_end":152569,"line_start":171,"line_end":171,"column_start":8,"column_end":24},"name":"render_primitive","qualname":"<Arrow as draw::renderer::RenderPrimitive>::render_primitive","value":"fn render_primitive(Self, draw::renderer::RenderContext, &mut draw::Mesh)\n-> draw::renderer::PrimitiveRender","parent":{"krate":0,"index":2846},"children":[],"decl_id":{"krate":0,"index":2847},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":155644,"byte_end":155651,"line_start":253,"line_end":253,"column_start":8,"column_end":15},"name":"default","qualname":"<Arrow as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ellipse","qualname":"::draw::primitive::ellipse","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1084},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1091},{"krate":0,"index":1094},{"krate":0,"index":1097},{"krate":0,"index":1100},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1107},{"krate":0,"index":1110},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1117},{"krate":0,"index":1120},{"krate":0,"index":1123},{"krate":0,"index":1126},{"krate":0,"index":1129},{"krate":0,"index":1132},{"krate":0,"index":1135},{"krate":0,"index":1138},{"krate":0,"index":1141},{"krate":0,"index":1144},{"krate":0,"index":1147},{"krate":0,"index":4683},{"krate":0,"index":4687},{"krate":0,"index":4689},{"krate":0,"index":4691},{"krate":0,"index":1150},{"krate":0,"index":1152},{"krate":0,"index":1157},{"krate":0,"index":1160},{"krate":0,"index":1162},{"krate":0,"index":1164},{"krate":0,"index":1166},{"krate":0,"index":1168},{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":1174},{"krate":0,"index":1176}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4683},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":156485,"byte_end":156492,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"Ellipse","qualname":"::draw::primitive::ellipse::Ellipse","value":"Ellipse {  }","parent":null,"children":[{"krate":0,"index":4684},{"krate":0,"index":4685},{"krate":0,"index":4686}],"decl_id":null,"docs":" Properties related to drawing an **Ellipse**.\n","sig":null,"attributes":[{"value":"/ Properties related to drawing an **Ellipse**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":156391,"byte_end":156440,"line_start":14,"line_end":14,"column_start":1,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":1150},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":156650,"byte_end":156664,"line_start":23,"line_end":23,"column_start":10,"column_end":24},"name":"DrawingEllipse","qualname":"::draw::primitive::ellipse::DrawingEllipse","value":"Drawing","parent":null,"children":[],"decl_id":null,"docs":" The drawing context for an ellipse.\n","sig":null,"attributes":[{"value":"/ The drawing context for an ellipse.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":156601,"byte_end":156640,"line_start":22,"line_end":22,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":156799,"byte_end":156805,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"stroke","qualname":"<Ellipse>::stroke","value":"fn stroke<C>(Self, C) -> Self where C: IntoLinSrgba<ColorScalar>","parent":null,"children":[],"decl_id":null,"docs":" Stroke the outline with the given color.\n","sig":null,"attributes":[{"value":"/ Stroke the outline with the given color.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":156743,"byte_end":156787,"line_start":28,"line_end":28,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":157018,"byte_end":157024,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"radius","qualname":"<Ellipse>::radius","value":"fn radius(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the width and height of the **Ellipse** via a given **radius**.\n","sig":null,"attributes":[{"value":"/ Specify the width and height of the **Ellipse** via a given **radius**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":156931,"byte_end":157006,"line_start":36,"line_end":36,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":157353,"byte_end":157363,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"resolution","qualname":"<Ellipse>::resolution","value":"fn resolution(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The number of sides used to draw the ellipse.","sig":null,"attributes":[{"value":"/ The number of sides used to draw the ellipse.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":157127,"byte_end":157176,"line_start":42,"line_end":42,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":157181,"byte_end":157184,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ By default, ellipse does not use a resolution, but rather uses a stroke tolerance to","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":157189,"byte_end":157277,"line_start":44,"line_end":44,"column_start":5,"column_end":93}},{"value":"/ determine how many vertices to use during tessellation.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":157282,"byte_end":157341,"line_start":45,"line_end":45,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":157552,"byte_end":157568,"line_start":55,"line_end":55,"column_start":8,"column_end":24},"name":"render_primitive","qualname":"<Ellipse as draw::renderer::RenderPrimitive>::render_primitive","value":"fn render_primitive(Self, draw::renderer::RenderContext, &mut draw::Mesh)\n-> draw::renderer::PrimitiveRender","parent":{"krate":0,"index":2846},"children":[],"decl_id":{"krate":0,"index":2847},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":159841,"byte_end":159851,"line_start":116,"line_end":116,"column_start":8,"column_end":18},"name":"properties","qualname":"<Ellipse as draw::properties::spatial::orientation::SetOrientation>::properties","value":"fn properties(&mut Self) -> &mut orientation::Properties","parent":{"krate":0,"index":2637},"children":[],"decl_id":{"krate":0,"index":2638},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":159998,"byte_end":160008,"line_start":122,"line_end":122,"column_start":8,"column_end":18},"name":"properties","qualname":"<Ellipse as draw::properties::spatial::position::SetPosition>::properties","value":"fn properties(&mut Self) -> &mut position::Properties","parent":{"krate":0,"index":2674},"children":[],"decl_id":{"krate":0,"index":2675},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":160151,"byte_end":160161,"line_start":128,"line_end":128,"column_start":8,"column_end":18},"name":"properties","qualname":"<Ellipse as draw::properties::spatial::dimension::SetDimensions>::properties","value":"fn properties(&mut Self) -> &mut dimension::Properties","parent":{"krate":0,"index":2596},"children":[],"decl_id":{"krate":0,"index":2597},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":160318,"byte_end":160326,"line_start":134,"line_end":134,"column_start":8,"column_end":16},"name":"rgba_mut","qualname":"<Ellipse as draw::properties::color::SetColor>::rgba_mut","value":"fn rgba_mut(&mut Self) -> &mut Option<LinSrgba>","parent":{"krate":0,"index":2554},"children":[],"decl_id":{"krate":0,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":160456,"byte_end":160474,"line_start":140,"line_end":140,"column_start":8,"column_end":26},"name":"stroke_options_mut","qualname":"<Ellipse as draw::properties::stroke::SetStroke>::stroke_options_mut","value":"fn stroke_options_mut(&mut Self) -> &mut StrokeOptions","parent":{"krate":0,"index":2720},"children":[],"decl_id":{"krate":0,"index":2721},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":160613,"byte_end":160632,"line_start":146,"line_end":146,"column_start":8,"column_end":27},"name":"polygon_options_mut","qualname":"<Ellipse as draw::primitive::polygon::SetPolygon>::polygon_options_mut","value":"fn polygon_options_mut(&mut Self) -> &mut PolygonOptions","parent":{"krate":0,"index":1804},"children":[],"decl_id":{"krate":0,"index":1805},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":160805,"byte_end":160809,"line_start":154,"line_end":154,"column_start":8,"column_end":12},"name":"from","qualname":"<Primitive as std::convert::From>::from","value":"fn from(Ellipse) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":160927,"byte_end":160931,"line_start":160,"line_end":160,"column_start":8,"column_end":12},"name":"into","qualname":"<Primitive as std::convert::Into>::into","value":"fn into(Self) -> Option<Ellipse>","parent":{"krate":2,"index":3053},"children":[],"decl_id":{"krate":2,"index":3055},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":161185,"byte_end":161191,"line_start":172,"line_end":172,"column_start":12,"column_end":18},"name":"stroke","qualname":"<DrawingEllipse>::stroke","value":"fn stroke<C>(Self, C) -> Self where C: IntoLinSrgba<ColorScalar>","parent":null,"children":[],"decl_id":null,"docs":" Stroke the outline with the given color.\n","sig":null,"attributes":[{"value":"/ Stroke the outline with the given color.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":161129,"byte_end":161173,"line_start":171,"line_end":171,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":161414,"byte_end":161420,"line_start":180,"line_end":180,"column_start":12,"column_end":18},"name":"radius","qualname":"<DrawingEllipse>::radius","value":"fn radius(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the width and height of the **Ellipse** via a given **radius**.\n","sig":null,"attributes":[{"value":"/ Specify the width and height of the **Ellipse** via a given **radius**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":161327,"byte_end":161402,"line_start":179,"line_end":179,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":161566,"byte_end":161576,"line_start":185,"line_end":185,"column_start":12,"column_end":22},"name":"resolution","qualname":"<DrawingEllipse>::resolution","value":"fn resolution(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The number of sides used to draw the ellipse.\n","sig":null,"attributes":[{"value":"/ The number of sides used to draw the ellipse.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":161505,"byte_end":161554,"line_start":184,"line_end":184,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":1185},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"line","qualname":"::draw::primitive::line","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","parent":null,"children":[{"krate":0,"index":1186},{"krate":0,"index":1189},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1196},{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1203},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1210},{"krate":0,"index":1213},{"krate":0,"index":1216},{"krate":0,"index":1219},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1226},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1233},{"krate":0,"index":1236},{"krate":0,"index":4693},{"krate":0,"index":4697},{"krate":0,"index":4699},{"krate":0,"index":4701},{"krate":0,"index":1239},{"krate":0,"index":1241},{"krate":0,"index":1251},{"krate":0,"index":1263},{"krate":0,"index":1265},{"krate":0,"index":1267},{"krate":0,"index":1269},{"krate":0,"index":1271},{"krate":0,"index":1273},{"krate":0,"index":1275}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4693},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":162277,"byte_end":162281,"line_start":15,"line_end":15,"column_start":12,"column_end":16},"name":"Line","qualname":"::draw::primitive::line::Line","value":"Line { path, start, end }","parent":null,"children":[{"krate":0,"index":4694},{"krate":0,"index":4695},{"krate":0,"index":4696}],"decl_id":null,"docs":" A path containing only two points - a start and end.","sig":null,"attributes":[{"value":"/ A path containing only two points - a start and end.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":162049,"byte_end":162105,"line_start":10,"line_end":10,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":162106,"byte_end":162109,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The usage of this type is almost identical to `PathStroke` but provides `start`, `end` and","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":162110,"byte_end":162204,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/ `points(a, b)` methods.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":162205,"byte_end":162232,"line_start":13,"line_end":13,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":4694},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":162292,"byte_end":162296,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"name":"path","qualname":"::draw::primitive::line::Line::path","value":"draw::primitive::path::PathOptions<lyon::lyon_tessellation::StrokeOptions>","parent":{"krate":0,"index":4693},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4695},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":162318,"byte_end":162323,"line_start":17,"line_end":17,"column_start":9,"column_end":14},"name":"start","qualname":"::draw::primitive::line::Line::start","value":"std::option::Option<nannou_core::geom::Vec2>","parent":{"krate":0,"index":4693},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4696},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":162349,"byte_end":162352,"line_start":18,"line_end":18,"column_start":9,"column_end":12},"name":"end","qualname":"::draw::primitive::line::Line::end","value":"std::option::Option<nannou_core::geom::Vec2>","parent":{"krate":0,"index":4693},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1239},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":162418,"byte_end":162429,"line_start":22,"line_end":22,"column_start":10,"column_end":21},"name":"DrawingLine","qualname":"::draw::primitive::line::DrawingLine","value":"Drawing","parent":null,"children":[],"decl_id":null,"docs":" The drawing context for a line.\n","sig":null,"attributes":[{"value":"/ The drawing context for a line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":162373,"byte_end":162408,"line_start":21,"line_end":21,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":162530,"byte_end":162536,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"weight","qualname":"<Line>::weight","value":"fn weight(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Short-hand for the `stroke_weight` method.\n","sig":null,"attributes":[{"value":"/ Short-hand for the `stroke_weight` method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":162472,"byte_end":162518,"line_start":25,"line_end":25,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":162689,"byte_end":162698,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"tolerance","qualname":"<Line>::tolerance","value":"fn tolerance(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Short-hand for the `stroke_tolerance` method.\n","sig":null,"attributes":[{"value":"/ Short-hand for the `stroke_tolerance` method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":162628,"byte_end":162677,"line_start":30,"line_end":30,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":162851,"byte_end":162856,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"start","qualname":"<Line>::start","value":"fn start(Self, Point2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the start point of the line.\n","sig":null,"attributes":[{"value":"/ Specify the start point of the line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":162799,"byte_end":162839,"line_start":35,"line_end":35,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":163000,"byte_end":163003,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"end","qualname":"<Line>::end","value":"fn end(Self, Point2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the end point of the line.\n","sig":null,"attributes":[{"value":"/ Specify the end point of the line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":162950,"byte_end":162988,"line_start":41,"line_end":41,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":163152,"byte_end":163158,"line_start":48,"line_end":48,"column_start":12,"column_end":18},"name":"points","qualname":"<Line>::points","value":"fn points(Self, Point2, Point2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the start and end points of the line.\n","sig":null,"attributes":[{"value":"/ Specify the start and end points of the line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":163091,"byte_end":163140,"line_start":47,"line_end":47,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":163618,"byte_end":163624,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"weight","qualname":"<DrawingLine>::weight","value":"fn weight(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Short-hand for the `stroke_weight` method.\n","sig":null,"attributes":[{"value":"/ Short-hand for the `stroke_weight` method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":163560,"byte_end":163606,"line_start":64,"line_end":64,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":163770,"byte_end":163779,"line_start":70,"line_end":70,"column_start":12,"column_end":21},"name":"tolerance","qualname":"<DrawingLine>::tolerance","value":"fn tolerance(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Short-hand for the `stroke_tolerance` method.\n","sig":null,"attributes":[{"value":"/ Short-hand for the `stroke_tolerance` method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":163709,"byte_end":163758,"line_start":69,"line_end":69,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":163925,"byte_end":163930,"line_start":75,"line_end":75,"column_start":12,"column_end":17},"name":"start","qualname":"<DrawingLine>::start","value":"fn start(Self, Point2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the start point of the line.\n","sig":null,"attributes":[{"value":"/ Specify the start point of the line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":163873,"byte_end":163913,"line_start":74,"line_end":74,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":164065,"byte_end":164068,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"end","qualname":"<DrawingLine>::end","value":"fn end(Self, Point2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the end point of the line.\n","sig":null,"attributes":[{"value":"/ Specify the end point of the line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":164015,"byte_end":164053,"line_start":79,"line_end":79,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":164208,"byte_end":164214,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"points","qualname":"<DrawingLine>::points","value":"fn points(Self, Point2, Point2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the start and end points of the line.\n","sig":null,"attributes":[{"value":"/ Specify the start and end points of the line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":164147,"byte_end":164196,"line_start":84,"line_end":84,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1264},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":164349,"byte_end":164367,"line_start":91,"line_end":91,"column_start":8,"column_end":26},"name":"stroke_options_mut","qualname":"<Line as draw::properties::stroke::SetStroke>::stroke_options_mut","value":"fn stroke_options_mut(&mut Self) -> &mut StrokeOptions","parent":{"krate":0,"index":2720},"children":[],"decl_id":{"krate":0,"index":2721},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":164504,"byte_end":164514,"line_start":97,"line_end":97,"column_start":8,"column_end":18},"name":"properties","qualname":"<Line as draw::properties::spatial::orientation::SetOrientation>::properties","value":"fn properties(&mut Self) -> &mut orientation::Properties","parent":{"krate":0,"index":2637},"children":[],"decl_id":{"krate":0,"index":2638},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":164655,"byte_end":164665,"line_start":103,"line_end":103,"column_start":8,"column_end":18},"name":"properties","qualname":"<Line as draw::properties::spatial::position::SetPosition>::properties","value":"fn properties(&mut Self) -> &mut position::Properties","parent":{"krate":0,"index":2674},"children":[],"decl_id":{"krate":0,"index":2675},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":164810,"byte_end":164818,"line_start":109,"line_end":109,"column_start":8,"column_end":16},"name":"rgba_mut","qualname":"<Line as draw::properties::color::SetColor>::rgba_mut","value":"fn rgba_mut(&mut Self) -> &mut Option<LinSrgba>","parent":{"krate":0,"index":2554},"children":[],"decl_id":{"krate":0,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":164948,"byte_end":164952,"line_start":115,"line_end":115,"column_start":8,"column_end":12},"name":"from","qualname":"<Primitive as std::convert::From>::from","value":"fn from(Line) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":165061,"byte_end":165065,"line_start":121,"line_end":121,"column_start":8,"column_end":12},"name":"into","qualname":"<Primitive as std::convert::Into>::into","value":"fn into(Self) -> Option<Line>","parent":{"krate":2,"index":3053},"children":[],"decl_id":{"krate":2,"index":3055},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":165257,"byte_end":165273,"line_start":130,"line_end":130,"column_start":8,"column_end":24},"name":"render_primitive","qualname":"<Line as draw::renderer::RenderPrimitive>::render_primitive","value":"fn render_primitive(Self, draw::renderer::RenderContext, &mut draw::Mesh)\n-> draw::renderer::PrimitiveRender","parent":{"krate":0,"index":2846},"children":[],"decl_id":{"krate":0,"index":2847},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1278},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mesh","qualname":"::draw::primitive::mesh","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","parent":null,"children":[{"krate":0,"index":1279},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1286},{"krate":0,"index":1289},{"krate":0,"index":1292},{"krate":0,"index":1295},{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1302},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1309},{"krate":0,"index":1312},{"krate":0,"index":1315},{"krate":0,"index":1318},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1325},{"krate":0,"index":1328},{"krate":0,"index":1331},{"krate":0,"index":1334},{"krate":0,"index":4703},{"krate":0,"index":4705},{"krate":0,"index":4707},{"krate":0,"index":4709},{"krate":0,"index":4711},{"krate":0,"index":4719},{"krate":0,"index":4721},{"krate":0,"index":4723},{"krate":0,"index":4726},{"krate":0,"index":4728},{"krate":0,"index":4730},{"krate":0,"index":1337},{"krate":0,"index":1344},{"krate":0,"index":1346},{"krate":0,"index":1398},{"krate":0,"index":1400},{"krate":0,"index":1445},{"krate":0,"index":1453},{"krate":0,"index":1458},{"krate":0,"index":1460},{"krate":0,"index":1462},{"krate":0,"index":1464},{"krate":0,"index":1466},{"krate":0,"index":1468},{"krate":0,"index":1470}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4703},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":167010,"byte_end":167020,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"Vertexless","qualname":"::draw::primitive::mesh::Vertexless","value":"","parent":null,"children":[],"decl_id":null,"docs":" The mesh type prior to being initialised with vertices or indices.\n","sig":null,"attributes":[{"value":"/ The mesh type prior to being initialised with vertices or indices.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":166895,"byte_end":166965,"line_start":11,"line_end":11,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":4711},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":167144,"byte_end":167148,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"Mesh","qualname":"::draw::primitive::mesh::Mesh","value":"Mesh {  }","parent":null,"children":[{"krate":0,"index":4712},{"krate":0,"index":4713},{"krate":0,"index":4714},{"krate":0,"index":4715},{"krate":0,"index":4716},{"krate":0,"index":4717},{"krate":0,"index":4718}],"decl_id":null,"docs":" Properties related to drawing an arbitrary mesh of colours, geometry and texture.\n","sig":null,"attributes":[{"value":"/ Properties related to drawing an arbitrary mesh of colours, geometry and texture.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":167023,"byte_end":167108,"line_start":15,"line_end":15,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":1344},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":167693,"byte_end":167704,"line_start":38,"line_end":38,"column_start":10,"column_end":21},"name":"DrawingMesh","qualname":"::draw::primitive::mesh::DrawingMesh","value":"Drawing","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1347},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":168124,"byte_end":168139,"line_start":47,"line_end":47,"column_start":12,"column_end":27},"name":"points_textured","qualname":"<Vertexless>::points_textured","value":"fn points_textured<I, P,\nT>(Self, &mut draw::Mesh, &dyn wgpu::ToTextureView, I) -> Mesh where\nI: IntoIterator<Item = (P, T)>, P: Into<Point>, T: Into<TexCoords>","parent":null,"children":[],"decl_id":null,"docs":" Describe the mesh with a sequence of textured points.","sig":null,"attributes":[{"value":"/ Describe the mesh with a sequence of textured points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":167753,"byte_end":167810,"line_start":41,"line_end":41,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":167815,"byte_end":167818,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Each of the vertices must be represented as a tuple containing the point and tex","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":167823,"byte_end":167907,"line_start":43,"line_end":43,"column_start":5,"column_end":89}},{"value":"/ coordinates in that order, e.g. `(point, tex_coords)`. `point` may be of any type that","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":167912,"byte_end":168002,"line_start":44,"line_end":44,"column_start":5,"column_end":95}},{"value":"/ implements `Into<Point3>` and `tex_coords` may be of any type that implements","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":168007,"byte_end":168088,"line_start":45,"line_end":45,"column_start":5,"column_end":86}},{"value":"/ `Into<Point2>`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":168093,"byte_end":168112,"line_start":46,"line_end":46,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":169206,"byte_end":169220,"line_start":78,"line_end":78,"column_start":12,"column_end":26},"name":"points_colored","qualname":"<Vertexless>::points_colored","value":"fn points_colored<I, P, C>(Self, &mut draw::Mesh, I) -> Mesh where\nI: IntoIterator<Item = (P, C)>, P: Into<Point>, C: IntoLinSrgba<ColorScalar>","parent":null,"children":[],"decl_id":null,"docs":" Describe the mesh with a sequence of colored points.","sig":null,"attributes":[{"value":"/ Describe the mesh with a sequence of colored points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":168862,"byte_end":168918,"line_start":73,"line_end":73,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":168923,"byte_end":168926,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Each of the points must be represented as a tuple containing the point and the color in","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":168931,"byte_end":169022,"line_start":75,"line_end":75,"column_start":5,"column_end":96}},{"value":"/ that order, e.g. `(point, color)`. `point` may be of any type that implements","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":169027,"byte_end":169108,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ `Into<Point3>` and `color` may be of any type that implements `IntoLinSrgba`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":169113,"byte_end":169194,"line_start":77,"line_end":77,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":170190,"byte_end":170196,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"points","qualname":"<Vertexless>::points","value":"fn points<I>(Self, &mut draw::Mesh, I) -> Mesh where I: IntoIterator,\nI::Item: Into<Point>","parent":null,"children":[],"decl_id":null,"docs":" Describe the mesh with a sequence of points.","sig":null,"attributes":[{"value":"/ Describe the mesh with a sequence of points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":169795,"byte_end":169843,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":169848,"byte_end":169851,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ The given iterator may yield any type that can be converted directly into `Point3`s.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":169856,"byte_end":169944,"line_start":96,"line_end":96,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":169949,"byte_end":169952,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ This method assumes that the entire mesh should be coloured with a single colour. If a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":169957,"byte_end":170047,"line_start":98,"line_end":98,"column_start":5,"column_end":95}},{"value":"/ colour is not specified via one of the builder methods, a default colour will be retrieved","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":170052,"byte_end":170146,"line_start":99,"line_end":99,"column_start":5,"column_end":99}},{"value":"/ from the inner `Theme`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":170151,"byte_end":170178,"line_start":100,"line_end":100,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":171874,"byte_end":171887,"line_start":145,"line_end":145,"column_start":12,"column_end":25},"name":"tris_textured","qualname":"<Vertexless>::tris_textured","value":"fn tris_textured<I, P, T>(Self, &mut draw::Mesh, &dyn wgpu::ToTextureView, I)\n-> Mesh where I: IntoIterator<Item = geom::Tri<(P, T)>>, P: Into<Point>,\nT: Into<TexCoords>","parent":null,"children":[],"decl_id":null,"docs":" Describe the mesh with a sequence of textured triangles.","sig":null,"attributes":[{"value":"/ Describe the mesh with a sequence of textured triangles.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":171500,"byte_end":171560,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":171565,"byte_end":171568,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Each of the vertices must be represented as a tuple containing the point and tex","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":171573,"byte_end":171657,"line_start":141,"line_end":141,"column_start":5,"column_end":89}},{"value":"/ coordinates in that order, e.g. `(point, tex_coords)`. `point` may be of any type that","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":171662,"byte_end":171752,"line_start":142,"line_end":142,"column_start":5,"column_end":95}},{"value":"/ implements `Into<Point3>` and `tex_coords` may be of any type that implements","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":171757,"byte_end":171838,"line_start":143,"line_end":143,"column_start":5,"column_end":86}},{"value":"/ `Into<Point2>`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":171843,"byte_end":171862,"line_start":144,"line_end":144,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":172733,"byte_end":172745,"line_start":168,"line_end":168,"column_start":12,"column_end":24},"name":"tris_colored","qualname":"<Vertexless>::tris_colored","value":"fn tris_colored<I, P, C>(Self, &mut draw::Mesh, I) -> Mesh where\nI: IntoIterator<Item = geom::Tri<(P, C)>>, P: Into<Point>,\nC: IntoLinSrgba<ColorScalar>","parent":null,"children":[],"decl_id":null,"docs":" Describe the mesh with a sequence of colored triangles.","sig":null,"attributes":[{"value":"/ Describe the mesh with a sequence of colored triangles.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":172384,"byte_end":172443,"line_start":163,"line_end":163,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":172448,"byte_end":172451,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Each of the vertices must be represented as a tuple containing the point and the color in","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":172456,"byte_end":172549,"line_start":165,"line_end":165,"column_start":5,"column_end":98}},{"value":"/ that order, e.g. `(point, color)`. `point` may be of any type that implements `Into<Point3>`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":172554,"byte_end":172650,"line_start":166,"line_end":166,"column_start":5,"column_end":101}},{"value":"/ and `color` may be of any type that implements `IntoLinSrgba`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":172655,"byte_end":172721,"line_start":167,"line_end":167,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":173585,"byte_end":173589,"line_start":189,"line_end":189,"column_start":12,"column_end":16},"name":"tris","qualname":"<Vertexless>::tris","value":"fn tris<I, V>(Self, &mut draw::Mesh, I) -> Mesh where I: IntoIterator<Item =\ngeom::Tri<V>>, V: Into<Point>","parent":null,"children":[],"decl_id":null,"docs":" Describe the mesh with a sequence of triangles.","sig":null,"attributes":[{"value":"/ Describe the mesh with a sequence of triangles.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":173168,"byte_end":173219,"line_start":181,"line_end":181,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":173224,"byte_end":173227,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Each triangle may be composed of any vertex type that may be converted directly into","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":173232,"byte_end":173320,"line_start":183,"line_end":183,"column_start":5,"column_end":93}},{"value":"/ `Point3`s.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":173325,"byte_end":173339,"line_start":184,"line_end":184,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":173344,"byte_end":173347,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ This method assumes that the entire mesh should be coloured with a single colour. If a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":173352,"byte_end":173442,"line_start":186,"line_end":186,"column_start":5,"column_end":95}},{"value":"/ colour is not specified via one of the builder methods, a default colour will be retrieved","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":173447,"byte_end":173541,"line_start":187,"line_end":187,"column_start":5,"column_end":99}},{"value":"/ from the inner `Theme`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":173546,"byte_end":173573,"line_start":188,"line_end":188,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":174409,"byte_end":174425,"line_start":209,"line_end":209,"column_start":12,"column_end":28},"name":"indexed_textured","qualname":"<Vertexless>::indexed_textured","value":"fn indexed_textured<V, I, P,\nT>(Self, &mut draw::Mesh, &dyn wgpu::ToTextureView, V, I) -> Mesh where\nV: IntoIterator<Item = (P, T)>, I: IntoIterator<Item = usize>, P: Into<Point>,\nT: Into<TexCoords>","parent":null,"children":[],"decl_id":null,"docs":" Describe the mesh with the given indexed, textured points.","sig":null,"attributes":[{"value":"/ Describe the mesh with the given indexed, textured points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":173929,"byte_end":173991,"line_start":201,"line_end":201,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":173996,"byte_end":173999,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Each trio of `indices` describes a single triangle made up of colored `points`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":174004,"byte_end":174087,"line_start":203,"line_end":203,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":174092,"byte_end":174095,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Each of the `points` must be represented as a tuple containing the point and the texture","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":174100,"byte_end":174192,"line_start":205,"line_end":205,"column_start":5,"column_end":97}},{"value":"/ coordinates in that order, e.g. `(point, tex_coords)`. `point` may be of any type that","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":174197,"byte_end":174287,"line_start":206,"line_end":206,"column_start":5,"column_end":95}},{"value":"/ implements `Into<Point3>` and `tex_coords` may be of any type that implements","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":174292,"byte_end":174373,"line_start":207,"line_end":207,"column_start":5,"column_end":86}},{"value":"/ `Into<Point2>`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":174378,"byte_end":174397,"line_start":208,"line_end":208,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":175683,"byte_end":175698,"line_start":245,"line_end":245,"column_start":12,"column_end":27},"name":"indexed_colored","qualname":"<Vertexless>::indexed_colored","value":"fn indexed_colored<V, I, P, C>(Self, &mut draw::Mesh, V, I) -> Mesh where\nV: IntoIterator<Item = (P, C)>, I: IntoIterator<Item = usize>, P: Into<Point>,\nC: IntoLinSrgba<ColorScalar>","parent":null,"children":[],"decl_id":null,"docs":" Describe the mesh with the given indexed, colored points.","sig":null,"attributes":[{"value":"/ Describe the mesh with the given indexed, colored points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":175236,"byte_end":175297,"line_start":238,"line_end":238,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":175302,"byte_end":175305,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Each trio of `indices` describes a single triangle made up of colored `points`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":175310,"byte_end":175393,"line_start":240,"line_end":240,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":175398,"byte_end":175401,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Each of the `points` must be represented as a tuple containing the point and the color in","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":175406,"byte_end":175499,"line_start":242,"line_end":242,"column_start":5,"column_end":98}},{"value":"/ that order, e.g. `(point, color)`. `point` may be of any type that implements","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":175504,"byte_end":175585,"line_start":243,"line_end":243,"column_start":5,"column_end":86}},{"value":"/ `Into<Point3>` and `color` may be of any type that implements `IntoLinSrgba`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":175590,"byte_end":175671,"line_start":244,"line_end":244,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":176626,"byte_end":176633,"line_start":272,"line_end":272,"column_start":12,"column_end":19},"name":"indexed","qualname":"<Vertexless>::indexed","value":"fn indexed<V, I>(Self, &mut draw::Mesh, V, I) -> Mesh where V: IntoIterator,\nV::Item: Into<Point>, I: IntoIterator<Item = usize>","parent":null,"children":[],"decl_id":null,"docs":" Describe the mesh with the given indexed points.","sig":null,"attributes":[{"value":"/ Describe the mesh with the given indexed points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":176376,"byte_end":176428,"line_start":267,"line_end":267,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":176433,"byte_end":176436,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ Each trio of `indices` describes a single triangle made up of `points`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":176441,"byte_end":176516,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":176521,"byte_end":176524,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Each point may be any type that may be converted directly into the `Point3` type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":176529,"byte_end":176614,"line_start":271,"line_end":271,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":179101,"byte_end":179107,"line_start":343,"line_end":343,"column_start":12,"column_end":18},"name":"points","qualname":"<Drawing>::points","value":"fn points<I>(Self, I) -> DrawingMesh where I: IntoIterator,\nI::Item: Into<Point>","parent":null,"children":[],"decl_id":null,"docs":" Describe the mesh with a sequence of points.","sig":null,"attributes":[{"value":"/ Describe the mesh with a sequence of points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":178706,"byte_end":178754,"line_start":336,"line_end":336,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":178759,"byte_end":178762,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ The given iterator may yield any type that can be converted directly into `Point3`s.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":178767,"byte_end":178855,"line_start":338,"line_end":338,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":178860,"byte_end":178863,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ This method assumes that the entire mesh should be coloured with a single colour. If a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":178868,"byte_end":178958,"line_start":340,"line_end":340,"column_start":5,"column_end":95}},{"value":"/ colour is not specified via one of the builder methods, a default colour will be retrieved","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":178963,"byte_end":179057,"line_start":341,"line_end":341,"column_start":5,"column_end":99}},{"value":"/ from the inner `Theme`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":179062,"byte_end":179089,"line_start":342,"line_end":342,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":179647,"byte_end":179661,"line_start":356,"line_end":356,"column_start":12,"column_end":26},"name":"points_colored","qualname":"<Drawing>::points_colored","value":"fn points_colored<I, P, C>(Self, I) -> DrawingMesh where I: IntoIterator<Item\n= (P, C)>, P: Into<Point>, C: IntoLinSrgba<ColorScalar>","parent":null,"children":[],"decl_id":null,"docs":" Describe the mesh with a sequence of colored points.","sig":null,"attributes":[{"value":"/ Describe the mesh with a sequence of colored points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":179303,"byte_end":179359,"line_start":351,"line_end":351,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":179364,"byte_end":179367,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Each of the points must be represented as a tuple containing the point and the color in","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":179372,"byte_end":179463,"line_start":353,"line_end":353,"column_start":5,"column_end":96}},{"value":"/ that order, e.g. `(point, color)`. `point` may be of any type that implements","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":179468,"byte_end":179549,"line_start":354,"line_end":354,"column_start":5,"column_end":86}},{"value":"/ `Into<Point3>` and `color` may be of any type that implements `IntoLinSrgba`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":179554,"byte_end":179635,"line_start":355,"line_end":355,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":180289,"byte_end":180304,"line_start":371,"line_end":371,"column_start":12,"column_end":27},"name":"points_textured","qualname":"<Drawing>::points_textured","value":"fn points_textured<I, P, T>(Self, &dyn wgpu::ToTextureView, I) -> DrawingMesh\nwhere I: IntoIterator<Item = (P, T)>, P: Into<Point>, T: Into<TexCoords>","parent":null,"children":[],"decl_id":null,"docs":" Describe the mesh with a sequence of textured points.","sig":null,"attributes":[{"value":"/ Describe the mesh with a sequence of textured points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":179918,"byte_end":179975,"line_start":365,"line_end":365,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":179980,"byte_end":179983,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ Each of the vertices must be represented as a tuple containing the point and tex","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":179988,"byte_end":180072,"line_start":367,"line_end":367,"column_start":5,"column_end":89}},{"value":"/ coordinates in that order, e.g. `(point, tex_coords)`. `point` may be of any type that","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":180077,"byte_end":180167,"line_start":368,"line_end":368,"column_start":5,"column_end":95}},{"value":"/ implements `Into<Point3>` and `tex_coords` may be of any type that implements","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":180172,"byte_end":180253,"line_start":369,"line_end":369,"column_start":5,"column_end":86}},{"value":"/ `Into<Point2>`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":180258,"byte_end":180277,"line_start":370,"line_end":370,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1415},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":181038,"byte_end":181042,"line_start":392,"line_end":392,"column_start":12,"column_end":16},"name":"tris","qualname":"<Drawing>::tris","value":"fn tris<I, V>(Self, I) -> DrawingMesh where I: IntoIterator<Item =\ngeom::Tri<V>>, V: Into<Point>","parent":null,"children":[],"decl_id":null,"docs":" Describe the mesh with a sequence of triangles.","sig":null,"attributes":[{"value":"/ Describe the mesh with a sequence of triangles.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":180621,"byte_end":180672,"line_start":384,"line_end":384,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":180677,"byte_end":180680,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ Each triangle may be composed of any vertex type that may be converted directly into","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":180685,"byte_end":180773,"line_start":386,"line_end":386,"column_start":5,"column_end":93}},{"value":"/ `Point3`s.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":180778,"byte_end":180792,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":180797,"byte_end":180800,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ This method assumes that the entire mesh should be coloured with a single colour. If a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":180805,"byte_end":180895,"line_start":389,"line_end":389,"column_start":5,"column_end":95}},{"value":"/ colour is not specified via one of the builder methods, a default colour will be retrieved","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":180900,"byte_end":180994,"line_start":390,"line_end":390,"column_start":5,"column_end":99}},{"value":"/ from the inner `Theme`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":180999,"byte_end":181026,"line_start":391,"line_end":391,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1419},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":181599,"byte_end":181611,"line_start":405,"line_end":405,"column_start":12,"column_end":24},"name":"tris_colored","qualname":"<Drawing>::tris_colored","value":"fn tris_colored<I, P, C>(Self, I) -> DrawingMesh where I: IntoIterator<Item =\ngeom::Tri<(P, C)>>, P: Into<Point>, C: IntoLinSrgba<ColorScalar>","parent":null,"children":[],"decl_id":null,"docs":" Describe the mesh with a sequence of colored triangles.","sig":null,"attributes":[{"value":"/ Describe the mesh with a sequence of colored triangles.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":181250,"byte_end":181309,"line_start":400,"line_end":400,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":181314,"byte_end":181317,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ Each of the vertices must be represented as a tuple containing the point and the color in","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":181322,"byte_end":181415,"line_start":402,"line_end":402,"column_start":5,"column_end":98}},{"value":"/ that order, e.g. `(point, color)`. `point` may be of any type that implements `Into<Point3>`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":181420,"byte_end":181516,"line_start":403,"line_end":403,"column_start":5,"column_end":101}},{"value":"/ and `color` may be of any type that implements `IntoLinSrgba`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":181521,"byte_end":181587,"line_start":404,"line_end":404,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":182247,"byte_end":182260,"line_start":420,"line_end":420,"column_start":12,"column_end":25},"name":"tris_textured","qualname":"<Drawing>::tris_textured","value":"fn tris_textured<I, P, T>(Self, &dyn wgpu::ToTextureView, I) -> DrawingMesh\nwhere I: IntoIterator<Item = geom::Tri<(P, T)>>, P: Into<Point>,\nT: Into<TexCoords>","parent":null,"children":[],"decl_id":null,"docs":" Describe the mesh with a sequence of textured triangles.","sig":null,"attributes":[{"value":"/ Describe the mesh with a sequence of textured triangles.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":181873,"byte_end":181933,"line_start":414,"line_end":414,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":181938,"byte_end":181941,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ Each of the vertices must be represented as a tuple containing the point and tex","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":181946,"byte_end":182030,"line_start":416,"line_end":416,"column_start":5,"column_end":89}},{"value":"/ coordinates in that order, e.g. `(point, tex_coords)`. `point` may be of any type that","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":182035,"byte_end":182125,"line_start":417,"line_end":417,"column_start":5,"column_end":95}},{"value":"/ implements `Into<Point3>` and `tex_coords` may be of any type that implements","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":182130,"byte_end":182211,"line_start":418,"line_end":418,"column_start":5,"column_end":86}},{"value":"/ `Into<Point2>`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":182216,"byte_end":182235,"line_start":419,"line_end":419,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1429},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":182801,"byte_end":182808,"line_start":434,"line_end":434,"column_start":12,"column_end":19},"name":"indexed","qualname":"<Drawing>::indexed","value":"fn indexed<V, I>(Self, V, I) -> DrawingMesh where V: IntoIterator,\nV::Item: Into<Point>, I: IntoIterator<Item = usize>","parent":null,"children":[],"decl_id":null,"docs":" Describe the mesh with the given indexed points.","sig":null,"attributes":[{"value":"/ Describe the mesh with the given indexed points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":182551,"byte_end":182603,"line_start":429,"line_end":429,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":182608,"byte_end":182611,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ Each trio of `indices` describes a single triangle made up of `points`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":182616,"byte_end":182691,"line_start":431,"line_end":431,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":182696,"byte_end":182699,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ Each point may be any type that may be converted directly into the `Point3` type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":182704,"byte_end":182789,"line_start":433,"line_end":433,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":183515,"byte_end":183530,"line_start":450,"line_end":450,"column_start":12,"column_end":27},"name":"indexed_colored","qualname":"<Drawing>::indexed_colored","value":"fn indexed_colored<V, I, P, C>(Self, V, I) -> DrawingMesh where\nV: IntoIterator<Item = (P, C)>, I: IntoIterator<Item = usize>, P: Into<Point>,\nC: IntoLinSrgba<ColorScalar>","parent":null,"children":[],"decl_id":null,"docs":" Describe the mesh with the given indexed, colored points.","sig":null,"attributes":[{"value":"/ Describe the mesh with the given indexed, colored points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":183068,"byte_end":183129,"line_start":443,"line_end":443,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":183134,"byte_end":183137,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ Each trio of `indices` describes a single triangle made up of colored `points`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":183142,"byte_end":183225,"line_start":445,"line_end":445,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":183230,"byte_end":183233,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ Each of the `points` must be represented as a tuple containing the point and the color in","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":183238,"byte_end":183331,"line_start":447,"line_end":447,"column_start":5,"column_end":98}},{"value":"/ that order, e.g. `(point, color)`. `point` may be of any type that implements","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":183336,"byte_end":183417,"line_start":448,"line_end":448,"column_start":5,"column_end":86}},{"value":"/ `Into<Point3>` and `color` may be of any type that implements `IntoLinSrgba`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":183422,"byte_end":183503,"line_start":449,"line_end":449,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1439},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":184331,"byte_end":184347,"line_start":468,"line_end":468,"column_start":12,"column_end":28},"name":"indexed_textured","qualname":"<Drawing>::indexed_textured","value":"fn indexed_textured<V, I, P, T>(Self, &dyn wgpu::ToTextureView, V, I)\n-> DrawingMesh where V: IntoIterator<Item = (P, T)>, I: IntoIterator<Item =\nusize>, P: Into<Point>, T: Into<TexCoords>","parent":null,"children":[],"decl_id":null,"docs":" Describe the mesh with the given indexed, textured points.","sig":null,"attributes":[{"value":"/ Describe the mesh with the given indexed, textured points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":183851,"byte_end":183913,"line_start":460,"line_end":460,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":183918,"byte_end":183921,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ Each trio of `indices` describes a single triangle made up of colored `points`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":183926,"byte_end":184009,"line_start":462,"line_end":462,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":184014,"byte_end":184017,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ Each of the `points` must be represented as a tuple containing the point and the texture","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":184022,"byte_end":184114,"line_start":464,"line_end":464,"column_start":5,"column_end":97}},{"value":"/ coordinates in that order, e.g. `(point, tex_coords)`. `point` may be of any type that","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":184119,"byte_end":184209,"line_start":465,"line_end":465,"column_start":5,"column_end":95}},{"value":"/ implements `Into<Point3>` and `tex_coords` may be of any type that implements","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":184214,"byte_end":184295,"line_start":466,"line_end":466,"column_start":5,"column_end":86}},{"value":"/ `Into<Point2>`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":184300,"byte_end":184319,"line_start":467,"line_end":467,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1446},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":184789,"byte_end":184805,"line_start":485,"line_end":485,"column_start":8,"column_end":24},"name":"render_primitive","qualname":"<Mesh as draw::renderer::RenderPrimitive>::render_primitive","value":"fn render_primitive(Self, draw::renderer::RenderContext, &mut draw::Mesh)\n-> draw::renderer::PrimitiveRender","parent":{"krate":0,"index":2846},"children":[],"decl_id":{"krate":0,"index":2847},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":187877,"byte_end":187887,"line_start":571,"line_end":571,"column_start":8,"column_end":18},"name":"properties","qualname":"<Mesh as draw::properties::spatial::orientation::SetOrientation>::properties","value":"fn properties(&mut Self) -> &mut orientation::Properties","parent":{"krate":0,"index":2637},"children":[],"decl_id":{"krate":0,"index":2638},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":188035,"byte_end":188045,"line_start":577,"line_end":577,"column_start":8,"column_end":18},"name":"properties","qualname":"<Mesh as draw::properties::spatial::position::SetPosition>::properties","value":"fn properties(&mut Self) -> &mut position::Properties","parent":{"krate":0,"index":2674},"children":[],"decl_id":{"krate":0,"index":2675},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":188194,"byte_end":188202,"line_start":583,"line_end":583,"column_start":8,"column_end":16},"name":"rgba_mut","qualname":"<Mesh as draw::properties::color::SetColor>::rgba_mut","value":"fn rgba_mut(&mut Self) -> &mut Option<LinSrgba>","parent":{"krate":0,"index":2554},"children":[],"decl_id":{"krate":0,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":188363,"byte_end":188367,"line_start":589,"line_end":589,"column_start":8,"column_end":12},"name":"from","qualname":"<Primitive as std::convert::From>::from","value":"fn from(Vertexless) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":188484,"byte_end":188488,"line_start":595,"line_end":595,"column_start":8,"column_end":12},"name":"from","qualname":"<Primitive as std::convert::From>::from","value":"fn from(Mesh) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":188603,"byte_end":188607,"line_start":601,"line_end":601,"column_start":8,"column_end":12},"name":"into","qualname":"<Primitive as std::convert::Into>::into","value":"fn into(Self) -> Option<Vertexless>","parent":{"krate":2,"index":3053},"children":[],"decl_id":{"krate":2,"index":3055},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":188807,"byte_end":188811,"line_start":610,"line_end":610,"column_start":8,"column_end":12},"name":"into","qualname":"<Primitive as std::convert::Into>::into","value":"fn into(Self) -> Option<Mesh>","parent":{"krate":2,"index":3053},"children":[],"decl_id":{"krate":2,"index":3055},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1472},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"path","qualname":"::draw::primitive::path","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","parent":null,"children":[{"krate":0,"index":1473},{"krate":0,"index":1476},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1483},{"krate":0,"index":1486},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1493},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1500},{"krate":0,"index":1503},{"krate":0,"index":1506},{"krate":0,"index":1509},{"krate":0,"index":1512},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1519},{"krate":0,"index":1522},{"krate":0,"index":1525},{"krate":0,"index":1528},{"krate":0,"index":1531},{"krate":0,"index":1534},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1541},{"krate":0,"index":1544},{"krate":0,"index":1547},{"krate":0,"index":1550},{"krate":0,"index":4732},{"krate":0,"index":4742},{"krate":0,"index":4744},{"krate":0,"index":1553},{"krate":0,"index":4746},{"krate":0,"index":4748},{"krate":0,"index":4750},{"krate":0,"index":4752},{"krate":0,"index":4754},{"krate":0,"index":4760},{"krate":0,"index":4763},{"krate":0,"index":4766},{"krate":0,"index":1564},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":4769},{"krate":0,"index":4777},{"krate":0,"index":4779},{"krate":0,"index":1570},{"krate":0,"index":1572},{"krate":0,"index":1575},{"krate":0,"index":1577},{"krate":0,"index":1579},{"krate":0,"index":4781},{"krate":0,"index":4788},{"krate":0,"index":4790},{"krate":0,"index":1581},{"krate":0,"index":1584},{"krate":0,"index":1587},{"krate":0,"index":1590},{"krate":0,"index":1593},{"krate":0,"index":1630},{"krate":0,"index":1634},{"krate":0,"index":1636},{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1642},{"krate":0,"index":1644},{"krate":0,"index":1646},{"krate":0,"index":1648},{"krate":0,"index":1654},{"krate":0,"index":1660},{"krate":0,"index":1666},{"krate":0,"index":1698},{"krate":0,"index":1700},{"krate":0,"index":1702},{"krate":0,"index":1705},{"krate":0,"index":1708},{"krate":0,"index":1711},{"krate":0,"index":1714},{"krate":0,"index":1717},{"krate":0,"index":1719},{"krate":0,"index":1721},{"krate":0,"index":1723},{"krate":0,"index":1725},{"krate":0,"index":1727},{"krate":0,"index":1729},{"krate":0,"index":1731},{"krate":0,"index":1733},{"krate":0,"index":1735},{"krate":0,"index":1737}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1550},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":189591,"byte_end":189610,"line_start":17,"line_end":17,"column_start":11,"column_end":30},"name":"TessellationOptions","qualname":"::draw::primitive::path::TessellationOptions","value":"TessellationOptions","parent":null,"children":[{"krate":0,"index":1551},{"krate":0,"index":1552}],"decl_id":null,"docs":" A set of path tessellation options (FillOptions or StrokeOptions).\n","sig":null,"attributes":[{"value":"/ A set of path tessellation options (FillOptions or StrokeOptions).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":189510,"byte_end":189580,"line_start":16,"line_end":16,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":1551},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":189679,"byte_end":189690,"line_start":19,"line_end":19,"column_start":10,"column_end":21},"name":"Tessellator","qualname":"::draw::primitive::path::TessellationOptions::Tessellator","value":"type Tessellator;","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":" The tessellator for which the options are built.\n","sig":null,"attributes":[{"value":"/ The tessellator for which the options are built.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":189617,"byte_end":189669,"line_start":18,"line_end":18,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":189760,"byte_end":189772,"line_start":21,"line_end":21,"column_start":8,"column_end":20},"name":"into_options","qualname":"::draw::primitive::path::TessellationOptions::into_options","value":"fn into_options(Self) -> Options","parent":{"krate":0,"index":1550},"children":[],"decl_id":null,"docs":" Convert the typed options instance to a dynamic one.\n","sig":null,"attributes":[{"value":"/ Convert the typed options instance to a dynamic one.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":189696,"byte_end":189752,"line_start":20,"line_end":20,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":4746},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":190731,"byte_end":190739,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"PathInit","qualname":"::draw::primitive::path::PathInit","value":"","parent":null,"children":[],"decl_id":null,"docs":" The beginning of the path building process, prior to choosing the tessellation mode (fill or\n stroke).\n","sig":null,"attributes":[{"value":"/ The beginning of the path building process, prior to choosing the tessellation mode (fill or","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":190577,"byte_end":190673,"line_start":52,"line_end":52,"column_start":1,"column_end":97}},{"value":"/ stroke).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":190674,"byte_end":190686,"line_start":53,"line_end":53,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":4754},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":190852,"byte_end":190863,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"PathOptions","qualname":"::draw::primitive::path::PathOptions","value":"PathOptions {  }","parent":null,"children":[{"krate":0,"index":4756},{"krate":0,"index":4757},{"krate":0,"index":4758},{"krate":0,"index":4759}],"decl_id":null,"docs":" A path drawing context ready to specify tessellation options.\n","sig":null,"attributes":[{"value":"/ A path drawing context ready to specify tessellation options.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":190742,"byte_end":190807,"line_start":57,"line_end":57,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1564},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":191099,"byte_end":191111,"line_start":67,"line_end":67,"column_start":12,"column_end":24},"name":"Tessellators","qualname":"::draw::primitive::path::Tessellators","value":"Tessellators { fill, stroke }","parent":null,"children":[{"krate":0,"index":1566},{"krate":0,"index":1567}],"decl_id":null,"docs":" Mutable access to stroke and fill tessellators.\n","sig":null,"attributes":[{"value":"/ Mutable access to stroke and fill tessellators.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":191036,"byte_end":191087,"line_start":66,"line_end":66,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1566},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":191126,"byte_end":191130,"line_start":68,"line_end":68,"column_start":9,"column_end":13},"name":"fill","qualname":"::draw::primitive::path::Tessellators::fill","value":"&'a mut lyon::lyon_tessellation::FillTessellator","parent":{"krate":0,"index":1564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1567},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":191165,"byte_end":191171,"line_start":69,"line_end":69,"column_start":9,"column_end":15},"name":"stroke","qualname":"::draw::primitive::path::Tessellators::stroke","value":"&'a mut lyon::lyon_tessellation::StrokeTessellator","parent":{"krate":0,"index":1564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1568},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":191247,"byte_end":191255,"line_start":73,"line_end":73,"column_start":10,"column_end":18},"name":"PathFill","qualname":"::draw::primitive::path::PathFill","value":"PathOptions<FillOptions>","parent":null,"children":[],"decl_id":null,"docs":" A filled path drawing context.\n","sig":null,"attributes":[{"value":"/ A filled path drawing context.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":191203,"byte_end":191237,"line_start":72,"line_end":72,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":1569},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":191330,"byte_end":191340,"line_start":76,"line_end":76,"column_start":10,"column_end":20},"name":"PathStroke","qualname":"::draw::primitive::path::PathStroke","value":"PathOptions<StrokeOptions>","parent":null,"children":[],"decl_id":null,"docs":" A stroked path drawing context.\n","sig":null,"attributes":[{"value":"/ A stroked path drawing context.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":191285,"byte_end":191320,"line_start":75,"line_end":75,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4769},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":191453,"byte_end":191457,"line_start":80,"line_end":80,"column_start":12,"column_end":16},"name":"Path","qualname":"::draw::primitive::path::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":4770},{"krate":0,"index":4771},{"krate":0,"index":4772},{"krate":0,"index":4773},{"krate":0,"index":4774},{"krate":0,"index":4775},{"krate":0,"index":4776}],"decl_id":null,"docs":" Properties related to drawing a **Path**.\n","sig":null,"attributes":[{"value":"/ Properties related to drawing a **Path**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":191372,"byte_end":191417,"line_start":78,"line_end":78,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":1570},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":191772,"byte_end":191787,"line_start":91,"line_end":91,"column_start":10,"column_end":25},"name":"DrawingPathInit","qualname":"::draw::primitive::path::DrawingPathInit","value":"Drawing","parent":null,"children":[],"decl_id":null,"docs":" The initial drawing context for a path.\n","sig":null,"attributes":[{"value":"/ The initial drawing context for a path.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":191719,"byte_end":191762,"line_start":90,"line_end":90,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":1572},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":191897,"byte_end":191915,"line_start":94,"line_end":94,"column_start":10,"column_end":28},"name":"DrawingPathOptions","qualname":"::draw::primitive::path::DrawingPathOptions","value":"Drawing","parent":null,"children":[],"decl_id":null,"docs":" The drawing context for a path in the tessellation options state.\n","sig":null,"attributes":[{"value":"/ The drawing context for a path in the tessellation options state.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":191818,"byte_end":191887,"line_start":93,"line_end":93,"column_start":1,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":1575},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":192040,"byte_end":192057,"line_start":97,"line_end":97,"column_start":10,"column_end":27},"name":"DrawingPathStroke","qualname":"::draw::primitive::path::DrawingPathStroke","value":"Drawing","parent":null,"children":[],"decl_id":null,"docs":" The drawing context for a stroked path, prior to path event submission.\n","sig":null,"attributes":[{"value":"/ The drawing context for a stroked path, prior to path event submission.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":191955,"byte_end":192030,"line_start":96,"line_end":96,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":1577},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":192174,"byte_end":192189,"line_start":100,"line_end":100,"column_start":10,"column_end":25},"name":"DrawingPathFill","qualname":"::draw::primitive::path::DrawingPathFill","value":"Drawing","parent":null,"children":[],"decl_id":null,"docs":" The drawing context for a filled path, prior to path event submission.\n","sig":null,"attributes":[{"value":"/ The drawing context for a filled path, prior to path event submission.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":192090,"byte_end":192164,"line_start":99,"line_end":99,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":1579},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":192304,"byte_end":192315,"line_start":103,"line_end":103,"column_start":10,"column_end":21},"name":"DrawingPath","qualname":"::draw::primitive::path::DrawingPath","value":"Drawing","parent":null,"children":[],"decl_id":null,"docs":" The drawing context for a polyline whose vertices have been specified.\n","sig":null,"attributes":[{"value":"/ The drawing context for a polyline whose vertices have been specified.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":192220,"byte_end":192294,"line_start":102,"line_end":102,"column_start":1,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4782},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":192463,"byte_end":192467,"line_start":108,"line_end":108,"column_start":5,"column_end":9},"name":"Fill","qualname":"::draw::primitive::path::Options::Fill","value":"Options::Fill(FillOptions)","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4784},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":192468,"byte_end":192479,"line_start":108,"line_end":108,"column_start":10,"column_end":21},"name":"0","qualname":"::draw::primitive::path::Options::Fill::0","value":"lyon::lyon_tessellation::FillOptions","parent":{"krate":0,"index":4782},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4785},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":192486,"byte_end":192492,"line_start":109,"line_end":109,"column_start":5,"column_end":11},"name":"Stroke","qualname":"::draw::primitive::path::Options::Stroke","value":"Options::Stroke(StrokeOptions)","parent":{"krate":0,"index":4781},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4787},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":192493,"byte_end":192506,"line_start":109,"line_end":109,"column_start":12,"column_end":25},"name":"0","qualname":"::draw::primitive::path::Options::Stroke::0","value":"lyon::lyon_tessellation::StrokeOptions","parent":{"krate":0,"index":4785},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4781},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":192449,"byte_end":192456,"line_start":107,"line_end":107,"column_start":10,"column_end":17},"name":"Options","qualname":"::draw::primitive::path::Options","value":"enum Options { Fill(FillOptions), Stroke(StrokeOptions), }","parent":null,"children":[{"krate":0,"index":4782},{"krate":0,"index":4785}],"decl_id":null,"docs":" Dynamically distinguish between fill and stroke tessellation options.\n","sig":null,"attributes":[{"value":"/ Dynamically distinguish between fill and stroke tessellation options.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":192342,"byte_end":192415,"line_start":105,"line_end":105,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1582},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":192706,"byte_end":192710,"line_start":116,"line_end":116,"column_start":12,"column_end":16},"name":"fill","qualname":"<PathInit>::fill","value":"fn fill(Self) -> PathFill","parent":null,"children":[],"decl_id":null,"docs":" Specify that we want to use fill tessellation for the path.","sig":null,"attributes":[{"value":"/ Specify that we want to use fill tessellation for the path.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":192532,"byte_end":192595,"line_start":113,"line_end":113,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":192600,"byte_end":192603,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ The returned building context allows for specifying the fill tessellation options.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":192608,"byte_end":192694,"line_start":115,"line_end":115,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1583},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":192991,"byte_end":192997,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"stroke","qualname":"<PathInit>::stroke","value":"fn stroke(Self) -> PathStroke","parent":null,"children":[],"decl_id":null,"docs":" Specify that we want to use stroke tessellation for the path.","sig":null,"attributes":[{"value":"/ Specify that we want to use stroke tessellation for the path.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":192813,"byte_end":192878,"line_start":121,"line_end":121,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":192883,"byte_end":192886,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ The returned building context allows for specifying the stroke tessellation options.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":192891,"byte_end":192979,"line_start":123,"line_end":123,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1586},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":193180,"byte_end":193183,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"name":"new","qualname":"<PathOptions<T>>::new","value":"fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initialise the `PathOptions` builder.\n","sig":null,"attributes":[{"value":"/ Initialise the `PathOptions` builder.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":193127,"byte_end":193168,"line_start":131,"line_end":131,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1588},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":193635,"byte_end":193644,"line_start":149,"line_end":149,"column_start":12,"column_end":21},"name":"tolerance","qualname":"<PathFill>::tolerance","value":"fn tolerance(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Maximum allowed distance to the path when building an approximation.","sig":null,"attributes":[{"value":"/ Maximum allowed distance to the path when building an approximation.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":193477,"byte_end":193549,"line_start":146,"line_end":146,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":193554,"byte_end":193557,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ This method is shorthand for the `fill_tolerance` method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":193562,"byte_end":193623,"line_start":148,"line_end":148,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1589},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":193962,"byte_end":193966,"line_start":158,"line_end":158,"column_start":12,"column_end":16},"name":"rule","qualname":"<PathFill>::rule","value":"fn rule(Self, lyon::tessellation::FillRule) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the rule used to determine what is inside and what is outside of the shape.","sig":null,"attributes":[{"value":"/ Specify the rule used to determine what is inside and what is outside of the shape.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":193727,"byte_end":193814,"line_start":153,"line_end":153,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":193819,"byte_end":193822,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Currently, only the `EvenOdd` rule is implemented.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":193827,"byte_end":193881,"line_start":155,"line_end":155,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":193886,"byte_end":193889,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This method is shorthand for the `fill_rule` method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":193894,"byte_end":193950,"line_start":157,"line_end":157,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1591},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":194137,"byte_end":194143,"line_start":165,"line_end":165,"column_start":12,"column_end":18},"name":"weight","qualname":"<PathStroke>::weight","value":"fn weight(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Short-hand for the `stroke_weight` method.\n","sig":null,"attributes":[{"value":"/ Short-hand for the `stroke_weight` method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":194079,"byte_end":194125,"line_start":164,"line_end":164,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1592},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":194280,"byte_end":194289,"line_start":170,"line_end":170,"column_start":12,"column_end":21},"name":"tolerance","qualname":"<PathStroke>::tolerance","value":"fn tolerance(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Short-hand for the `stroke_tolerance` method.\n","sig":null,"attributes":[{"value":"/ Short-hand for the `stroke_tolerance` method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":194219,"byte_end":194268,"line_start":169,"line_end":169,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":195202,"byte_end":195208,"line_start":202,"line_end":202,"column_start":12,"column_end":18},"name":"points","qualname":"<PathOptions<T>>::points","value":"fn points<I>(Self, DrawingContext, I) -> Path where I: IntoIterator,\nI::Item: Into<Point2>","parent":null,"children":[],"decl_id":null,"docs":" Consumes an iterator of points and converts them to an iterator yielding path events.\n","sig":null,"attributes":[{"value":"/ Consumes an iterator of points and converts them to an iterator yielding path events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":195101,"byte_end":195190,"line_start":201,"line_end":201,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":195539,"byte_end":195552,"line_start":213,"line_end":213,"column_start":12,"column_end":25},"name":"points_closed","qualname":"<PathOptions<T>>::points_closed","value":"fn points_closed<I>(Self, DrawingContext, I) -> Path where I: IntoIterator,\nI::Item: Into<Point2>","parent":null,"children":[],"decl_id":null,"docs":" Consumes an iterator of points and converts them to an iterator yielding path events.","sig":null,"attributes":[{"value":"/ Consumes an iterator of points and converts them to an iterator yielding path events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":195389,"byte_end":195478,"line_start":210,"line_end":210,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":195483,"byte_end":195486,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ Closes the start and end points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":195491,"byte_end":195527,"line_start":212,"line_end":212,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1601},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":195799,"byte_end":195813,"line_start":222,"line_end":222,"column_start":12,"column_end":26},"name":"points_colored","qualname":"<PathOptions<T>>::points_colored","value":"fn points_colored<I, P, C>(Self, DrawingContext, I) -> Path where\nI: IntoIterator<Item = (P, C)>, P: Into<Point2>, C: IntoLinSrgba<ColorScalar>","parent":null,"children":[],"decl_id":null,"docs":" Submit path events as a polyline of colored points.\n","sig":null,"attributes":[{"value":"/ Submit path events as a polyline of colored points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":195732,"byte_end":195787,"line_start":221,"line_end":221,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1605},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":196122,"byte_end":196143,"line_start":232,"line_end":232,"column_start":12,"column_end":33},"name":"points_colored_closed","qualname":"<PathOptions<T>>::points_colored_closed","value":"fn points_colored_closed<I, P, C>(Self, DrawingContext, I) -> Path where\nI: IntoIterator<Item = (P, C)>, P: Into<Point2>, C: IntoLinSrgba<ColorScalar>","parent":null,"children":[],"decl_id":null,"docs":" Submit path events as a polyline of colored points.\n","sig":null,"attributes":[{"value":"/ Submit path events as a polyline of colored points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":196055,"byte_end":196110,"line_start":231,"line_end":231,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1609},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":196452,"byte_end":196467,"line_start":242,"line_end":242,"column_start":12,"column_end":27},"name":"points_textured","qualname":"<PathOptions<T>>::points_textured","value":"fn points_textured<I, P,\nTC>(Self, DrawingContext, &dyn wgpu::ToTextureView, I) -> Path where\nI: IntoIterator<Item = (P, TC)>, P: Into<Point2>, TC: Into<TexCoords>","parent":null,"children":[],"decl_id":null,"docs":" Submit path events as a polyline of textured points.\n","sig":null,"attributes":[{"value":"/ Submit path events as a polyline of textured points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":196384,"byte_end":196440,"line_start":241,"line_end":241,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":196882,"byte_end":196904,"line_start":257,"line_end":257,"column_start":12,"column_end":34},"name":"points_textured_closed","qualname":"<PathOptions<T>>::points_textured_closed","value":"fn points_textured_closed<I, P,\nTC>(Self, DrawingContext, &dyn wgpu::ToTextureView, I) -> Path where\nI: IntoIterator<Item = (P, TC)>, P: Into<Point2>, TC: Into<TexCoords>","parent":null,"children":[],"decl_id":null,"docs":" Submit path events as a polyline of textured points.\n","sig":null,"attributes":[{"value":"/ Submit path events as a polyline of textured points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":196814,"byte_end":196870,"line_start":256,"line_end":256,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1640},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":204644,"byte_end":204660,"line_start":508,"line_end":508,"column_start":8,"column_end":24},"name":"render_primitive","qualname":"<Path as draw::renderer::RenderPrimitive>::render_primitive","value":"fn render_primitive(Self, draw::renderer::RenderContext, &mut draw::Mesh)\n-> draw::renderer::PrimitiveRender","parent":{"krate":0,"index":2846},"children":[],"decl_id":{"krate":0,"index":2847},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1642},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":207613,"byte_end":207640,"line_start":594,"line_end":594,"column_start":8,"column_end":35},"name":"points_colored_to_lyon_path","qualname":"::draw::primitive::path::points_colored_to_lyon_path","value":"fn points_colored_to_lyon_path<I>(I, bool) -> Option<lyon::path::Path> where\nI: IntoIterator<Item = (Point2, Color)>","parent":null,"children":[],"decl_id":null,"docs":" Create a lyon path for the given iterator of colored points.\n","sig":null,"attributes":[{"value":"/ Create a lyon path for the given iterator of colored points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":207541,"byte_end":207605,"line_start":593,"line_end":593,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":1644},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":208624,"byte_end":208652,"line_start":624,"line_end":624,"column_start":8,"column_end":36},"name":"points_textured_to_lyon_path","qualname":"::draw::primitive::path::points_textured_to_lyon_path","value":"fn points_textured_to_lyon_path<I>(I, bool) -> Option<lyon::path::Path> where\nI: IntoIterator<Item = (Point2, TexCoords)>","parent":null,"children":[],"decl_id":null,"docs":" Create a lyon path for the given iterator of textured points.\n","sig":null,"attributes":[{"value":"/ Create a lyon path for the given iterator of textured points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":208551,"byte_end":208616,"line_start":623,"line_end":623,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1650},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":210387,"byte_end":210391,"line_start":680,"line_end":680,"column_start":12,"column_end":16},"name":"fill","qualname":"<DrawingPathInit>::fill","value":"fn fill(Self) -> DrawingPathFill","parent":null,"children":[],"decl_id":null,"docs":" Specify that we want to use fill tessellation for the path.","sig":null,"attributes":[{"value":"/ Specify that we want to use fill tessellation for the path.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":210213,"byte_end":210276,"line_start":677,"line_end":677,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":210281,"byte_end":210284,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ The returned building context allows for specifying the fill tessellation options.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":210289,"byte_end":210375,"line_start":679,"line_end":679,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1652},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":210648,"byte_end":210654,"line_start":687,"line_end":687,"column_start":12,"column_end":18},"name":"stroke","qualname":"<DrawingPathInit>::stroke","value":"fn stroke(Self) -> DrawingPathStroke","parent":null,"children":[],"decl_id":null,"docs":" Specify that we want to use stroke tessellation for the path.","sig":null,"attributes":[{"value":"/ Specify that we want to use stroke tessellation for the path.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":210470,"byte_end":210535,"line_start":684,"line_end":684,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":210540,"byte_end":210543,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ The returned building context allows for specifying the stroke tessellation options.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":210548,"byte_end":210636,"line_start":686,"line_end":686,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1656},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":210854,"byte_end":210863,"line_start":694,"line_end":694,"column_start":12,"column_end":21},"name":"tolerance","qualname":"<DrawingPathFill>::tolerance","value":"fn tolerance(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Maximum allowed distance to the path when building an approximation.\n","sig":null,"attributes":[{"value":"/ Maximum allowed distance to the path when building an approximation.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":210770,"byte_end":210842,"line_start":693,"line_end":693,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1658},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":211123,"byte_end":211127,"line_start":701,"line_end":701,"column_start":12,"column_end":16},"name":"rule","qualname":"<DrawingPathFill>::rule","value":"fn rule(Self, lyon::tessellation::FillRule) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the rule used to determine what is inside and what is outside of the shape.","sig":null,"attributes":[{"value":"/ Specify the rule used to determine what is inside and what is outside of the shape.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":210957,"byte_end":211044,"line_start":698,"line_end":698,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":211049,"byte_end":211052,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ Currently, only the `EvenOdd` rule is implemented.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":211057,"byte_end":211111,"line_start":700,"line_end":700,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1662},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":211324,"byte_end":211330,"line_start":708,"line_end":708,"column_start":12,"column_end":18},"name":"weight","qualname":"<DrawingPathStroke>::weight","value":"fn weight(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Short-hand for the `stroke_weight` method.\n","sig":null,"attributes":[{"value":"/ Short-hand for the `stroke_weight` method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":211266,"byte_end":211312,"line_start":707,"line_end":707,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1664},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":211483,"byte_end":211492,"line_start":713,"line_end":713,"column_start":12,"column_end":21},"name":"tolerance","qualname":"<DrawingPathStroke>::tolerance","value":"fn tolerance(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Short-hand for the `stroke_tolerance` method.\n","sig":null,"attributes":[{"value":"/ Short-hand for the `stroke_tolerance` method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":211422,"byte_end":211471,"line_start":712,"line_end":712,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1669},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":211808,"byte_end":211814,"line_start":725,"line_end":725,"column_start":12,"column_end":18},"name":"events","qualname":"<DrawingPathOptions>::events","value":"fn events<I>(Self, I) -> DrawingPath where I: IntoIterator<Item =\nlyon::path::PathEvent>","parent":null,"children":[],"decl_id":null,"docs":" Submit the path events to be tessellated.\n","sig":null,"attributes":[{"value":"/ Submit the path events to be tessellated.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":211751,"byte_end":211796,"line_start":724,"line_end":724,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1672},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":212068,"byte_end":212074,"line_start":733,"line_end":733,"column_start":12,"column_end":18},"name":"points","qualname":"<DrawingPathOptions>::points","value":"fn points<I>(Self, I) -> DrawingPath where I: IntoIterator,\nI::Item: Into<Point2>","parent":null,"children":[],"decl_id":null,"docs":" Submit the path events as a polyline of points.\n","sig":null,"attributes":[{"value":"/ Submit the path events as a polyline of points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":212005,"byte_end":212056,"line_start":732,"line_end":732,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":212410,"byte_end":212423,"line_start":744,"line_end":744,"column_start":12,"column_end":25},"name":"points_closed","qualname":"<DrawingPathOptions>::points_closed","value":"fn points_closed<I>(Self, I) -> DrawingPath where I: IntoIterator,\nI::Item: Into<Point2>","parent":null,"children":[],"decl_id":null,"docs":" Submit the path events as a polyline of points.","sig":null,"attributes":[{"value":"/ Submit the path events as a polyline of points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":212266,"byte_end":212317,"line_start":741,"line_end":741,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":212322,"byte_end":212325,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ An event will be generated that closes the start and end points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":212330,"byte_end":212398,"line_start":743,"line_end":743,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":212689,"byte_end":212703,"line_start":753,"line_end":753,"column_start":12,"column_end":26},"name":"points_colored","qualname":"<DrawingPathOptions>::points_colored","value":"fn points_colored<I, P, C>(Self, I) -> DrawingPath where I: IntoIterator<Item\n= (P, C)>, P: Into<Point2>, C: IntoLinSrgba<ColorScalar>","parent":null,"children":[],"decl_id":null,"docs":" Submit path events as a polyline of colored points.\n","sig":null,"attributes":[{"value":"/ Submit path events as a polyline of colored points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":212622,"byte_end":212677,"line_start":752,"line_end":752,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1683},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":213112,"byte_end":213133,"line_start":765,"line_end":765,"column_start":12,"column_end":33},"name":"points_colored_closed","qualname":"<DrawingPathOptions>::points_colored_closed","value":"fn points_colored_closed<I, P, C>(Self, I) -> DrawingPath where\nI: IntoIterator<Item = (P, C)>, P: Into<Point2>, C: IntoLinSrgba<ColorScalar>","parent":null,"children":[],"decl_id":null,"docs":" Submit path events as a polyline of colored points.","sig":null,"attributes":[{"value":"/ Submit path events as a polyline of colored points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":212956,"byte_end":213011,"line_start":762,"line_end":762,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":213016,"byte_end":213019,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ The path with automatically close from the end point to the start point.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":213024,"byte_end":213100,"line_start":764,"line_end":764,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":213461,"byte_end":213476,"line_start":775,"line_end":775,"column_start":12,"column_end":27},"name":"points_textured","qualname":"<DrawingPathOptions>::points_textured","value":"fn points_textured<I, P, TC>(Self, &dyn wgpu::ToTextureView, I) -> DrawingPath\nwhere I: IntoIterator<Item = (P, TC)>, P: Into<Point2>, TC: Into<TexCoords>","parent":null,"children":[],"decl_id":null,"docs":" Submit path events as a polyline of textured points.\n","sig":null,"attributes":[{"value":"/ Submit path events as a polyline of textured points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":213393,"byte_end":213449,"line_start":774,"line_end":774,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1693},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":213949,"byte_end":213971,"line_start":791,"line_end":791,"column_start":12,"column_end":34},"name":"points_textured_closed","qualname":"<DrawingPathOptions>::points_textured_closed","value":"fn points_textured_closed<I, P, TC>(Self, &dyn wgpu::ToTextureView, I)\n-> DrawingPath where I: IntoIterator<Item = (P, TC)>, P: Into<Point2>,\nTC: Into<TexCoords>","parent":null,"children":[],"decl_id":null,"docs":" Submit path events as a polyline of textured points.","sig":null,"attributes":[{"value":"/ Submit path events as a polyline of textured points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":213792,"byte_end":213848,"line_start":788,"line_end":788,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":213853,"byte_end":213856,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ The path with automatically close from the end point to the start point.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":213861,"byte_end":213937,"line_start":790,"line_end":790,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":214327,"byte_end":214343,"line_start":806,"line_end":806,"column_start":8,"column_end":24},"name":"fill_options_mut","qualname":"<PathFill as draw::properties::fill::SetFill>::fill_options_mut","value":"fn fill_options_mut(&mut Self) -> &mut FillOptions","parent":{"krate":0,"index":2578},"children":[],"decl_id":{"krate":0,"index":2579},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":214448,"byte_end":214466,"line_start":812,"line_end":812,"column_start":8,"column_end":26},"name":"stroke_options_mut","qualname":"<PathStroke as draw::properties::stroke::SetStroke>::stroke_options_mut","value":"fn stroke_options_mut(&mut Self) -> &mut StrokeOptions","parent":{"krate":0,"index":2720},"children":[],"decl_id":{"krate":0,"index":2721},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":214624,"byte_end":214636,"line_start":819,"line_end":819,"column_start":8,"column_end":20},"name":"into_options","qualname":"<FillOptions as draw::primitive::path::TessellationOptions>::into_options","value":"fn into_options(Self) -> Options","parent":{"krate":0,"index":1550},"children":[],"decl_id":{"krate":0,"index":1552},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1707},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":214787,"byte_end":214799,"line_start":826,"line_end":826,"column_start":8,"column_end":20},"name":"into_options","qualname":"<StrokeOptions as draw::primitive::path::TessellationOptions>::into_options","value":"fn into_options(Self) -> Options","parent":{"krate":0,"index":1550},"children":[],"decl_id":{"krate":0,"index":1552},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":214909,"byte_end":214919,"line_start":832,"line_end":832,"column_start":8,"column_end":18},"name":"properties","qualname":"<PathOptions<T> as draw::properties::spatial::orientation::SetOrientation>::properties","value":"fn properties(&mut Self) -> &mut orientation::Properties","parent":{"krate":0,"index":2637},"children":[],"decl_id":{"krate":0,"index":2638},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":215080,"byte_end":215090,"line_start":838,"line_end":838,"column_start":8,"column_end":18},"name":"properties","qualname":"<PathOptions<T> as draw::properties::spatial::position::SetPosition>::properties","value":"fn properties(&mut Self) -> &mut position::Properties","parent":{"krate":0,"index":2674},"children":[],"decl_id":{"krate":0,"index":2675},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":215252,"byte_end":215260,"line_start":844,"line_end":844,"column_start":8,"column_end":16},"name":"rgba_mut","qualname":"<PathOptions<T> as draw::properties::color::SetColor>::rgba_mut","value":"fn rgba_mut(&mut Self) -> &mut Option<LinSrgba>","parent":{"krate":0,"index":2554},"children":[],"decl_id":{"krate":0,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":215390,"byte_end":215400,"line_start":850,"line_end":850,"column_start":8,"column_end":18},"name":"properties","qualname":"<Path as draw::properties::spatial::orientation::SetOrientation>::properties","value":"fn properties(&mut Self) -> &mut orientation::Properties","parent":{"krate":0,"index":2637},"children":[],"decl_id":{"krate":0,"index":2638},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":215548,"byte_end":215558,"line_start":856,"line_end":856,"column_start":8,"column_end":18},"name":"properties","qualname":"<Path as draw::properties::spatial::position::SetPosition>::properties","value":"fn properties(&mut Self) -> &mut position::Properties","parent":{"krate":0,"index":2674},"children":[],"decl_id":{"krate":0,"index":2675},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1722},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":215707,"byte_end":215715,"line_start":862,"line_end":862,"column_start":8,"column_end":16},"name":"rgba_mut","qualname":"<Path as draw::properties::color::SetColor>::rgba_mut","value":"fn rgba_mut(&mut Self) -> &mut Option<LinSrgba>","parent":{"krate":0,"index":2554},"children":[],"decl_id":{"krate":0,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":215850,"byte_end":215854,"line_start":868,"line_end":868,"column_start":8,"column_end":12},"name":"from","qualname":"<Primitive as std::convert::From>::from","value":"fn from(PathInit) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":215969,"byte_end":215973,"line_start":874,"line_end":874,"column_start":8,"column_end":12},"name":"from","qualname":"<Primitive as std::convert::From>::from","value":"fn from(PathStroke) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":216090,"byte_end":216094,"line_start":880,"line_end":880,"column_start":8,"column_end":12},"name":"from","qualname":"<Primitive as std::convert::From>::from","value":"fn from(PathFill) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":216203,"byte_end":216207,"line_start":886,"line_end":886,"column_start":8,"column_end":12},"name":"from","qualname":"<Primitive as std::convert::From>::from","value":"fn from(Path) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1732},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":216320,"byte_end":216324,"line_start":892,"line_end":892,"column_start":8,"column_end":12},"name":"into","qualname":"<Primitive as std::convert::Into>::into","value":"fn into(Self) -> Option<PathInit>","parent":{"krate":2,"index":3053},"children":[],"decl_id":{"krate":2,"index":3055},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":216520,"byte_end":216524,"line_start":901,"line_end":901,"column_start":8,"column_end":12},"name":"into","qualname":"<Primitive as std::convert::Into>::into","value":"fn into(Self) -> Option<PathFill>","parent":{"krate":2,"index":3053},"children":[],"decl_id":{"krate":2,"index":3055},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":216722,"byte_end":216726,"line_start":910,"line_end":910,"column_start":8,"column_end":12},"name":"into","qualname":"<Primitive as std::convert::Into>::into","value":"fn into(Self) -> Option<PathStroke>","parent":{"krate":2,"index":3053},"children":[],"decl_id":{"krate":2,"index":3055},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1738},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":216922,"byte_end":216926,"line_start":919,"line_end":919,"column_start":8,"column_end":12},"name":"into","qualname":"<Primitive as std::convert::Into>::into","value":"fn into(Self) -> Option<Path>","parent":{"krate":2,"index":3053},"children":[],"decl_id":{"krate":2,"index":3055},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1739},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"polygon","qualname":"::draw::primitive::polygon","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","parent":null,"children":[{"krate":0,"index":1740},{"krate":0,"index":1743},{"krate":0,"index":1746},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1753},{"krate":0,"index":1756},{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1763},{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1770},{"krate":0,"index":1773},{"krate":0,"index":1776},{"krate":0,"index":1779},{"krate":0,"index":1782},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1789},{"krate":0,"index":1792},{"krate":0,"index":1795},{"krate":0,"index":1798},{"krate":0,"index":1801},{"krate":0,"index":1804},{"krate":0,"index":4792},{"krate":0,"index":4794},{"krate":0,"index":4796},{"krate":0,"index":4798},{"krate":0,"index":4800},{"krate":0,"index":4807},{"krate":0,"index":4809},{"krate":0,"index":4811},{"krate":0,"index":4813},{"krate":0,"index":4817},{"krate":0,"index":4819},{"krate":0,"index":1810},{"krate":0,"index":1812},{"krate":0,"index":1814},{"krate":0,"index":1832},{"krate":0,"index":1836},{"krate":0,"index":1840},{"krate":0,"index":1845},{"krate":0,"index":1847},{"krate":0,"index":1857},{"krate":0,"index":1878},{"krate":0,"index":1880},{"krate":0,"index":1882},{"krate":0,"index":1884},{"krate":0,"index":1886},{"krate":0,"index":1888},{"krate":0,"index":1890},{"krate":0,"index":1892},{"krate":0,"index":1894},{"krate":0,"index":1896},{"krate":0,"index":1898},{"krate":0,"index":1900},{"krate":0,"index":1902}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1804},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":217667,"byte_end":217677,"line_start":17,"line_end":17,"column_start":11,"column_end":21},"name":"SetPolygon","qualname":"::draw::primitive::polygon::SetPolygon","value":"SetPolygon: Sized","parent":null,"children":[{"krate":0,"index":1805},{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1809}],"decl_id":null,"docs":" A trait implemented for all polygon draw primitives.\n","sig":null,"attributes":[{"value":"/ A trait implemented for all polygon draw primitives.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":217600,"byte_end":217656,"line_start":16,"line_end":16,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1805},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":217744,"byte_end":217763,"line_start":19,"line_end":19,"column_start":8,"column_end":27},"name":"polygon_options_mut","qualname":"::draw::primitive::polygon::SetPolygon::polygon_options_mut","value":"fn polygon_options_mut(&mut Self) -> &mut PolygonOptions","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Access to the polygon builder parameters.\n","sig":null,"attributes":[{"value":"/ Access to the polygon builder parameters.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":217691,"byte_end":217736,"line_start":18,"line_end":18,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1806},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":217887,"byte_end":217894,"line_start":22,"line_end":22,"column_start":8,"column_end":15},"name":"no_fill","qualname":"::draw::primitive::polygon::SetPolygon::no_fill","value":"fn no_fill(Self) -> Self","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Specify no fill color and in turn no fill tessellation for the polygon.\n","sig":null,"attributes":[{"value":"/ Specify no fill color and in turn no fill tessellation for the polygon.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":217804,"byte_end":217879,"line_start":21,"line_end":21,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1807},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":218177,"byte_end":218189,"line_start":31,"line_end":31,"column_start":8,"column_end":20},"name":"stroke_color","qualname":"::draw::primitive::polygon::SetPolygon::stroke_color","value":"fn stroke_color<C>(Self, C) -> Self where C: IntoLinSrgba<ColorScalar>","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Specify a color to use for stroke tessellation.","sig":null,"attributes":[{"value":"/ Specify a color to use for stroke tessellation.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":217990,"byte_end":218041,"line_start":27,"line_end":27,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":218046,"byte_end":218049,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ Stroke tessellation will only be performed if this method or one of the `SetStroke` methods","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":218054,"byte_end":218149,"line_start":29,"line_end":29,"column_start":5,"column_end":100}},{"value":"/ are called.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":218154,"byte_end":218169,"line_start":30,"line_end":30,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1809},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":218432,"byte_end":218447,"line_start":40,"line_end":40,"column_start":8,"column_end":23},"name":"polygon_options","qualname":"::draw::primitive::polygon::SetPolygon::polygon_options","value":"fn polygon_options(Self, PolygonOptions) -> Self","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" Specify the whole set of polygon options.\n","sig":null,"attributes":[{"value":"/ Specify the whole set of polygon options.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":218379,"byte_end":218424,"line_start":39,"line_end":39,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":4792},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":218644,"byte_end":218655,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"PolygonInit","qualname":"::draw::primitive::polygon::PolygonInit","value":"PolygonInit {  }","parent":null,"children":[{"krate":0,"index":4793}],"decl_id":null,"docs":" State related to drawing a **Polygon**.\n","sig":null,"attributes":[{"value":"/ State related to drawing a **Polygon**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":218556,"byte_end":218599,"line_start":46,"line_end":46,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":4800},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":218794,"byte_end":218808,"line_start":54,"line_end":54,"column_start":12,"column_end":26},"name":"PolygonOptions","qualname":"::draw::primitive::polygon::PolygonOptions","value":"PolygonOptions { position, orientation, no_fill, stroke_color, color, stroke }","parent":null,"children":[{"krate":0,"index":4801},{"krate":0,"index":4802},{"krate":0,"index":4803},{"krate":0,"index":4804},{"krate":0,"index":4805},{"krate":0,"index":4806}],"decl_id":null,"docs":" The set of options shared by all polygon types.\n","sig":null,"attributes":[{"value":"/ The set of options shared by all polygon types.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":218698,"byte_end":218749,"line_start":52,"line_end":52,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4801},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":218819,"byte_end":218827,"line_start":55,"line_end":55,"column_start":9,"column_end":17},"name":"position","qualname":"::draw::primitive::polygon::PolygonOptions::position","value":"draw::properties::spatial::position::Properties","parent":{"krate":0,"index":4800},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4802},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":218859,"byte_end":218870,"line_start":56,"line_end":56,"column_start":9,"column_end":20},"name":"orientation","qualname":"::draw::primitive::polygon::PolygonOptions::orientation","value":"draw::properties::spatial::orientation::Properties","parent":{"krate":0,"index":4800},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4803},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":218905,"byte_end":218912,"line_start":57,"line_end":57,"column_start":9,"column_end":16},"name":"no_fill","qualname":"::draw::primitive::polygon::PolygonOptions::no_fill","value":"bool","parent":{"krate":0,"index":4800},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4804},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":218928,"byte_end":218940,"line_start":58,"line_end":58,"column_start":9,"column_end":21},"name":"stroke_color","qualname":"::draw::primitive::polygon::PolygonOptions::stroke_color","value":"std::option::Option<nannou_core::color::Alpha<nannou_core::color::rgb::Rgb<nannou_core::color::encoding::Linear<nannou_core::color::encoding::Srgb>>, f32>>","parent":{"krate":0,"index":4800},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4805},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":218968,"byte_end":218973,"line_start":59,"line_end":59,"column_start":9,"column_end":14},"name":"color","qualname":"::draw::primitive::polygon::PolygonOptions::color","value":"std::option::Option<nannou_core::color::Alpha<nannou_core::color::rgb::Rgb<nannou_core::color::encoding::Linear<nannou_core::color::encoding::Srgb>>, f32>>","parent":{"krate":0,"index":4800},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4806},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":219001,"byte_end":219007,"line_start":60,"line_end":60,"column_start":9,"column_end":15},"name":"stroke","qualname":"::draw::primitive::polygon::PolygonOptions::stroke","value":"std::option::Option<lyon::lyon_tessellation::StrokeOptions>","parent":{"krate":0,"index":4800},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4813},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":219117,"byte_end":219124,"line_start":65,"line_end":65,"column_start":12,"column_end":19},"name":"Polygon","qualname":"::draw::primitive::polygon::Polygon","value":"Polygon {  }","parent":null,"children":[{"krate":0,"index":4814},{"krate":0,"index":4815},{"krate":0,"index":4816}],"decl_id":null,"docs":" A polygon with vertices already submitted.\n","sig":null,"attributes":[{"value":"/ A polygon with vertices already submitted.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":219035,"byte_end":219081,"line_start":63,"line_end":63,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":1810},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":219292,"byte_end":219310,"line_start":72,"line_end":72,"column_start":10,"column_end":28},"name":"DrawingPolygonInit","qualname":"::draw::primitive::polygon::DrawingPolygonInit","value":"Drawing","parent":null,"children":[],"decl_id":null,"docs":" Initialised drawing state for a polygon.\n","sig":null,"attributes":[{"value":"/ Initialised drawing state for a polygon.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":219238,"byte_end":219282,"line_start":71,"line_end":71,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1812},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":219398,"byte_end":219412,"line_start":75,"line_end":75,"column_start":10,"column_end":24},"name":"DrawingPolygon","qualname":"::draw::primitive::polygon::DrawingPolygon","value":"Drawing","parent":null,"children":[],"decl_id":null,"docs":" Initialised drawing state for a polygon.\n","sig":null,"attributes":[{"value":"/ Initialised drawing state for a polygon.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":219344,"byte_end":219388,"line_start":74,"line_end":74,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1815},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":219521,"byte_end":219527,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"stroke","qualname":"<PolygonInit>::stroke","value":"fn stroke<C>(Self, C) -> Self where C: IntoLinSrgba<ColorScalar>","parent":null,"children":[],"decl_id":null,"docs":" Stroke the outline with the given color.\n","sig":null,"attributes":[{"value":"/ Stroke the outline with the given color.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":219465,"byte_end":219509,"line_start":78,"line_end":78,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1819},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":220315,"byte_end":220321,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"points","qualname":"<PolygonInit>::points","value":"fn points<I>(Self, DrawingContext, I) -> Polygon where I: IntoIterator,\nI::Item: Into<Point2>","parent":null,"children":[],"decl_id":null,"docs":" Consumes an iterator of points and converts them to an iterator yielding path events.\n","sig":null,"attributes":[{"value":"/ Consumes an iterator of points and converts them to an iterator yielding path events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":220214,"byte_end":220303,"line_start":104,"line_end":104,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1822},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":220828,"byte_end":220842,"line_start":120,"line_end":120,"column_start":12,"column_end":26},"name":"points_colored","qualname":"<PolygonInit>::points_colored","value":"fn points_colored<I, P, C>(Self, DrawingContext, I) -> Polygon where\nI: IntoIterator<Item = (P, C)>, P: Into<Point2>, C: IntoLinSrgba<ColorScalar>","parent":null,"children":[],"decl_id":null,"docs":" Consumes an iterator of points and converts them to an iterator yielding path events.\n","sig":null,"attributes":[{"value":"/ Consumes an iterator of points and converts them to an iterator yielding path events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":220727,"byte_end":220816,"line_start":119,"line_end":119,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1827},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":221733,"byte_end":221748,"line_start":147,"line_end":147,"column_start":12,"column_end":27},"name":"points_textured","qualname":"<PolygonInit>::points_textured","value":"fn points_textured<I, P, T>(Self, DrawingContext, &dyn wgpu::ToTextureView, I)\n-> Polygon where I: IntoIterator<Item = (P, T)>, P: Into<Point2>,\nT: Into<TexCoords>","parent":null,"children":[],"decl_id":null,"docs":" Consumes an iterator of points and converts them to an iterator yielding path events.\n","sig":null,"attributes":[{"value":"/ Consumes an iterator of points and converts them to an iterator yielding path events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":221632,"byte_end":221721,"line_start":146,"line_end":146,"column_start":5,"column_end":94}}]},{"kind":"Function","id":{"krate":0,"index":1832},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":222597,"byte_end":222617,"line_start":177,"line_end":177,"column_start":8,"column_end":28},"name":"render_events_themed","qualname":"::draw::primitive::polygon::render_events_themed","value":"fn render_events_themed<F,\nI>(PolygonOptions, F, draw::renderer::RenderContext, &draw::theme::Primitive,\n&mut draw::Mesh) where F: Fn() -> I, I: Iterator<Item = lyon::path::PathEvent>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1836},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":224526,"byte_end":224546,"line_start":247,"line_end":247,"column_start":8,"column_end":28},"name":"render_points_themed","qualname":"::draw::primitive::polygon::render_points_themed","value":"fn render_points_themed<I>(PolygonOptions, I, draw::renderer::RenderContext,\n&draw::theme::Primitive, &mut draw::Mesh) where I: Clone + Iterator<Item =\nPoint2>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1846},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":231393,"byte_end":231409,"line_start":438,"line_end":438,"column_start":8,"column_end":24},"name":"render_primitive","qualname":"<Polygon as draw::renderer::RenderPrimitive>::render_primitive","value":"fn render_primitive(Self, draw::renderer::RenderContext, &mut draw::Mesh)\n-> draw::renderer::PrimitiveRender","parent":{"krate":0,"index":2846},"children":[],"decl_id":{"krate":0,"index":2847},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1850},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":231821,"byte_end":231828,"line_start":453,"line_end":453,"column_start":12,"column_end":19},"name":"no_fill","qualname":"<Drawing>::no_fill","value":"fn no_fill(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify no fill color and in turn no fill tessellation for the polygon.\n","sig":null,"attributes":[{"value":"/ Specify no fill color and in turn no fill tessellation for the polygon.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":231734,"byte_end":231809,"line_start":452,"line_end":452,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1852},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":232086,"byte_end":232098,"line_start":461,"line_end":461,"column_start":12,"column_end":24},"name":"stroke_color","qualname":"<Drawing>::stroke_color","value":"fn stroke_color<C>(Self, C) -> Self where C: IntoLinSrgba<ColorScalar>","parent":null,"children":[],"decl_id":null,"docs":" Specify a color to use for stroke tessellation.","sig":null,"attributes":[{"value":"/ Specify a color to use for stroke tessellation.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":231895,"byte_end":231946,"line_start":457,"line_end":457,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":231951,"byte_end":231954,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ Stroke tessellation will only be performed if this method or one of the `SetStroke` methods","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":231959,"byte_end":232054,"line_start":459,"line_end":459,"column_start":5,"column_end":100}},{"value":"/ are called.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":232059,"byte_end":232074,"line_start":460,"line_end":460,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1855},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":232297,"byte_end":232312,"line_start":469,"line_end":469,"column_start":12,"column_end":27},"name":"polygon_options","qualname":"<Drawing>::polygon_options","value":"fn polygon_options(Self, PolygonOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the whole set of polygon options.\n","sig":null,"attributes":[{"value":"/ Specify the whole set of polygon options.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":232240,"byte_end":232285,"line_start":468,"line_end":468,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1859},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":232505,"byte_end":232511,"line_start":476,"line_end":476,"column_start":12,"column_end":18},"name":"stroke","qualname":"<DrawingPolygonInit>::stroke","value":"fn stroke<C>(Self, C) -> Self where C: IntoLinSrgba<ColorScalar>","parent":null,"children":[],"decl_id":null,"docs":" Stroke the outline with the given color.\n","sig":null,"attributes":[{"value":"/ Stroke the outline with the given color.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":232449,"byte_end":232493,"line_start":475,"line_end":475,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1862},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":232715,"byte_end":232721,"line_start":484,"line_end":484,"column_start":12,"column_end":18},"name":"events","qualname":"<DrawingPolygonInit>::events","value":"fn events<I>(Self, I) -> DrawingPolygon where I: IntoIterator<Item =\nPathEvent>","parent":null,"children":[],"decl_id":null,"docs":" Describe the polygon with a sequence of path events.\n","sig":null,"attributes":[{"value":"/ Describe the polygon with a sequence of path events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":232647,"byte_end":232703,"line_start":483,"line_end":483,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1865},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":232966,"byte_end":232972,"line_start":492,"line_end":492,"column_start":12,"column_end":18},"name":"points","qualname":"<DrawingPolygonInit>::points","value":"fn points<I>(Self, I) -> DrawingPolygon where I: IntoIterator,\nI::Item: Into<Point2>","parent":null,"children":[],"decl_id":null,"docs":" Describe the polygon with a sequence of points.\n","sig":null,"attributes":[{"value":"/ Describe the polygon with a sequence of points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":232903,"byte_end":232954,"line_start":491,"line_end":491,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1868},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":233268,"byte_end":233282,"line_start":501,"line_end":501,"column_start":12,"column_end":26},"name":"points_colored","qualname":"<DrawingPolygonInit>::points_colored","value":"fn points_colored<I, P, C>(Self, I) -> DrawingPolygon where\nI: IntoIterator<Item = (P, C)>, P: Into<Point2>, C: IntoLinSrgba<ColorScalar>","parent":null,"children":[],"decl_id":null,"docs":" Consumes an iterator of points and converts them to an iterator yielding path events.\n","sig":null,"attributes":[{"value":"/ Consumes an iterator of points and converts them to an iterator yielding path events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":233167,"byte_end":233256,"line_start":500,"line_end":500,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1873},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":233617,"byte_end":233632,"line_start":511,"line_end":511,"column_start":12,"column_end":27},"name":"points_textured","qualname":"<DrawingPolygonInit>::points_textured","value":"fn points_textured<I, P, T>(Self, &dyn wgpu::ToTextureView, I)\n-> DrawingPolygon where I: IntoIterator<Item = (P, T)>, P: Into<Point2>,\nT: Into<TexCoords>","parent":null,"children":[],"decl_id":null,"docs":" Describe the polygon with an iterator yielding textured poings.\n","sig":null,"attributes":[{"value":"/ Describe the polygon with an iterator yielding textured poings.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":233538,"byte_end":233605,"line_start":510,"line_end":510,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":233990,"byte_end":234009,"line_start":526,"line_end":526,"column_start":8,"column_end":27},"name":"polygon_options_mut","qualname":"<PolygonOptions as draw::primitive::polygon::SetPolygon>::polygon_options_mut","value":"fn polygon_options_mut(&mut Self) -> &mut PolygonOptions","parent":{"krate":0,"index":1804},"children":[],"decl_id":{"krate":0,"index":1805},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1881},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":234113,"byte_end":234123,"line_start":532,"line_end":532,"column_start":8,"column_end":18},"name":"properties","qualname":"<PolygonInit as draw::properties::spatial::orientation::SetOrientation>::properties","value":"fn properties(&mut Self) -> &mut orientation::Properties","parent":{"krate":0,"index":2637},"children":[],"decl_id":{"krate":0,"index":2638},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1883},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":234283,"byte_end":234293,"line_start":538,"line_end":538,"column_start":8,"column_end":18},"name":"properties","qualname":"<PolygonInit as draw::properties::spatial::position::SetPosition>::properties","value":"fn properties(&mut Self) -> &mut position::Properties","parent":{"krate":0,"index":2674},"children":[],"decl_id":{"krate":0,"index":2675},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1885},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":234454,"byte_end":234462,"line_start":544,"line_end":544,"column_start":8,"column_end":16},"name":"rgba_mut","qualname":"<PolygonInit as draw::properties::color::SetColor>::rgba_mut","value":"fn rgba_mut(&mut Self) -> &mut Option<LinSrgba>","parent":{"krate":0,"index":2554},"children":[],"decl_id":{"krate":0,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1887},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":234600,"byte_end":234619,"line_start":550,"line_end":550,"column_start":8,"column_end":27},"name":"polygon_options_mut","qualname":"<PolygonInit as draw::primitive::polygon::SetPolygon>::polygon_options_mut","value":"fn polygon_options_mut(&mut Self) -> &mut PolygonOptions","parent":{"krate":0,"index":1804},"children":[],"decl_id":{"krate":0,"index":1805},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1889},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":234761,"byte_end":234779,"line_start":556,"line_end":556,"column_start":8,"column_end":26},"name":"stroke_options_mut","qualname":"<PolygonInit as draw::properties::stroke::SetStroke>::stroke_options_mut","value":"fn stroke_options_mut(&mut Self) -> &mut StrokeOptions","parent":{"krate":0,"index":2720},"children":[],"decl_id":{"krate":0,"index":2721},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1891},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":234926,"byte_end":234936,"line_start":562,"line_end":562,"column_start":8,"column_end":18},"name":"properties","qualname":"<Polygon as draw::properties::spatial::orientation::SetOrientation>::properties","value":"fn properties(&mut Self) -> &mut orientation::Properties","parent":{"krate":0,"index":2637},"children":[],"decl_id":{"krate":0,"index":2638},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1893},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":235092,"byte_end":235102,"line_start":568,"line_end":568,"column_start":8,"column_end":18},"name":"properties","qualname":"<Polygon as draw::properties::spatial::position::SetPosition>::properties","value":"fn properties(&mut Self) -> &mut position::Properties","parent":{"krate":0,"index":2674},"children":[],"decl_id":{"krate":0,"index":2675},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1895},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":235259,"byte_end":235267,"line_start":574,"line_end":574,"column_start":8,"column_end":16},"name":"rgba_mut","qualname":"<Polygon as draw::properties::color::SetColor>::rgba_mut","value":"fn rgba_mut(&mut Self) -> &mut Option<LinSrgba>","parent":{"krate":0,"index":2554},"children":[],"decl_id":{"krate":0,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1897},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":235410,"byte_end":235414,"line_start":580,"line_end":580,"column_start":8,"column_end":12},"name":"from","qualname":"<Primitive as std::convert::From>::from","value":"fn from(PolygonInit) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1899},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":235532,"byte_end":235536,"line_start":586,"line_end":586,"column_start":8,"column_end":12},"name":"from","qualname":"<Primitive as std::convert::From>::from","value":"fn from(Polygon) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1901},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":235658,"byte_end":235662,"line_start":592,"line_end":592,"column_start":8,"column_end":12},"name":"into","qualname":"<Primitive as std::convert::Into>::into","value":"fn into(Self) -> Option<PolygonInit>","parent":{"krate":2,"index":3053},"children":[],"decl_id":{"krate":2,"index":3055},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1903},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":235863,"byte_end":235867,"line_start":601,"line_end":601,"column_start":8,"column_end":12},"name":"into","qualname":"<Primitive as std::convert::Into>::into","value":"fn into(Self) -> Option<Polygon>","parent":{"krate":2,"index":3053},"children":[],"decl_id":{"krate":2,"index":3055},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1904},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"quad","qualname":"::draw::primitive::quad","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","parent":null,"children":[{"krate":0,"index":1905},{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":1912},{"krate":0,"index":1915},{"krate":0,"index":1918},{"krate":0,"index":1921},{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1928},{"krate":0,"index":1931},{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1938},{"krate":0,"index":1941},{"krate":0,"index":1944},{"krate":0,"index":1947},{"krate":0,"index":1950},{"krate":0,"index":1953},{"krate":0,"index":1956},{"krate":0,"index":1959},{"krate":0,"index":1960},{"krate":0,"index":1963},{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":1970},{"krate":0,"index":1973},{"krate":0,"index":1976},{"krate":0,"index":1979},{"krate":0,"index":4821},{"krate":0,"index":4825},{"krate":0,"index":4827},{"krate":0,"index":1982},{"krate":0,"index":1984},{"krate":0,"index":1989},{"krate":0,"index":1994},{"krate":0,"index":1996},{"krate":0,"index":1998},{"krate":0,"index":2000},{"krate":0,"index":2002},{"krate":0,"index":2004},{"krate":0,"index":2006},{"krate":0,"index":2008},{"krate":0,"index":2010},{"krate":0,"index":2012},{"krate":0,"index":2014}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4821},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":236598,"byte_end":236602,"line_start":15,"line_end":15,"column_start":12,"column_end":16},"name":"Quad","qualname":"::draw::primitive::quad::Quad","value":"Quad {  }","parent":null,"children":[{"krate":0,"index":4822},{"krate":0,"index":4823},{"krate":0,"index":4824}],"decl_id":null,"docs":" Properties related to drawing a **Quad**.\n","sig":null,"attributes":[{"value":"/ Properties related to drawing a **Quad**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":236517,"byte_end":236562,"line_start":13,"line_end":13,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":1982},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":236759,"byte_end":236770,"line_start":22,"line_end":22,"column_start":10,"column_end":21},"name":"DrawingQuad","qualname":"::draw::primitive::quad::DrawingQuad","value":"Drawing","parent":null,"children":[],"decl_id":null,"docs":" The drawing context for a `Quad`.\n","sig":null,"attributes":[{"value":"/ The drawing context for a `Quad`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":236712,"byte_end":236749,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1985},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":236896,"byte_end":236902,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"stroke","qualname":"<Quad>::stroke","value":"fn stroke<C>(Self, C) -> Self where C: IntoLinSrgba<ColorScalar>","parent":null,"children":[],"decl_id":null,"docs":" Stroke the outline with the given color.\n","sig":null,"attributes":[{"value":"/ Stroke the outline with the given color.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":236840,"byte_end":236884,"line_start":27,"line_end":27,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1987},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":237108,"byte_end":237114,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"points","qualname":"<Quad>::points","value":"fn points<P>(Self, P, P, P, P) -> Self where P: Into<Point2>","parent":null,"children":[],"decl_id":null,"docs":" Use the given four points as the vertices (corners) of the quad.\n","sig":null,"attributes":[{"value":"/ Use the given four points as the vertices (corners) of the quad.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":237028,"byte_end":237096,"line_start":35,"line_end":35,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1990},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":237454,"byte_end":237470,"line_start":51,"line_end":51,"column_start":8,"column_end":24},"name":"render_primitive","qualname":"<Quad as draw::renderer::RenderPrimitive>::render_primitive","value":"fn render_primitive(Self, draw::renderer::RenderContext, &mut draw::Mesh)\n-> draw::renderer::PrimitiveRender","parent":{"krate":0,"index":2846},"children":[],"decl_id":{"krate":0,"index":2847},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1995},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":238882,"byte_end":238886,"line_start":93,"line_end":93,"column_start":8,"column_end":12},"name":"from","qualname":"<Quad as std::convert::From>::from","value":"fn from(geom::Quad<Point2>) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1997},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":239138,"byte_end":239145,"line_start":105,"line_end":105,"column_start":8,"column_end":15},"name":"default","qualname":"<Quad as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1999},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":239575,"byte_end":239585,"line_start":121,"line_end":121,"column_start":8,"column_end":18},"name":"properties","qualname":"<Quad as draw::properties::spatial::orientation::SetOrientation>::properties","value":"fn properties(&mut Self) -> &mut orientation::Properties","parent":{"krate":0,"index":2637},"children":[],"decl_id":{"krate":0,"index":2638},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":239729,"byte_end":239739,"line_start":127,"line_end":127,"column_start":8,"column_end":18},"name":"properties","qualname":"<Quad as draw::properties::spatial::position::SetPosition>::properties","value":"fn properties(&mut Self) -> &mut position::Properties","parent":{"krate":0,"index":2674},"children":[],"decl_id":{"krate":0,"index":2675},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2003},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":239879,"byte_end":239889,"line_start":133,"line_end":133,"column_start":8,"column_end":18},"name":"properties","qualname":"<Quad as draw::properties::spatial::dimension::SetDimensions>::properties","value":"fn properties(&mut Self) -> &mut dimension::Properties","parent":{"krate":0,"index":2596},"children":[],"decl_id":{"krate":0,"index":2597},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2005},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":240043,"byte_end":240051,"line_start":139,"line_end":139,"column_start":8,"column_end":16},"name":"rgba_mut","qualname":"<Quad as draw::properties::color::SetColor>::rgba_mut","value":"fn rgba_mut(&mut Self) -> &mut Option<LinSrgba>","parent":{"krate":0,"index":2554},"children":[],"decl_id":{"krate":0,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2007},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":240178,"byte_end":240196,"line_start":145,"line_end":145,"column_start":8,"column_end":26},"name":"stroke_options_mut","qualname":"<Quad as draw::properties::stroke::SetStroke>::stroke_options_mut","value":"fn stroke_options_mut(&mut Self) -> &mut StrokeOptions","parent":{"krate":0,"index":2720},"children":[],"decl_id":{"krate":0,"index":2721},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":240332,"byte_end":240351,"line_start":151,"line_end":151,"column_start":8,"column_end":27},"name":"polygon_options_mut","qualname":"<Quad as draw::primitive::polygon::SetPolygon>::polygon_options_mut","value":"fn polygon_options_mut(&mut Self) -> &mut PolygonOptions","parent":{"krate":0,"index":1804},"children":[],"decl_id":{"krate":0,"index":1805},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2011},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":240522,"byte_end":240526,"line_start":159,"line_end":159,"column_start":8,"column_end":12},"name":"from","qualname":"<Primitive as std::convert::From>::from","value":"fn from(Quad) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2013},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":240635,"byte_end":240639,"line_start":165,"line_end":165,"column_start":8,"column_end":12},"name":"into","qualname":"<Primitive as std::convert::Into>::into","value":"fn into(Self) -> Option<Quad>","parent":{"krate":2,"index":3053},"children":[],"decl_id":{"krate":2,"index":3055},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2016},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":240903,"byte_end":240909,"line_start":177,"line_end":177,"column_start":12,"column_end":18},"name":"points","qualname":"<DrawingQuad>::points","value":"fn points<P>(Self, P, P, P, P) -> Self where P: Into<Point2>","parent":null,"children":[],"decl_id":null,"docs":" Use the given points as the vertices (corners) of the quad.\n","sig":null,"attributes":[{"value":"/ Use the given points as the vertices (corners) of the quad.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":240828,"byte_end":240891,"line_start":176,"line_end":176,"column_start":5,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":2019},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rect","qualname":"::draw::primitive::rect","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","parent":null,"children":[{"krate":0,"index":2020},{"krate":0,"index":2023},{"krate":0,"index":2024},{"krate":0,"index":2027},{"krate":0,"index":2030},{"krate":0,"index":2033},{"krate":0,"index":2036},{"krate":0,"index":2039},{"krate":0,"index":2040},{"krate":0,"index":2043},{"krate":0,"index":2046},{"krate":0,"index":2049},{"krate":0,"index":2050},{"krate":0,"index":2053},{"krate":0,"index":2056},{"krate":0,"index":2059},{"krate":0,"index":2062},{"krate":0,"index":2065},{"krate":0,"index":2068},{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2075},{"krate":0,"index":2078},{"krate":0,"index":2081},{"krate":0,"index":2084},{"krate":0,"index":4829},{"krate":0,"index":4832},{"krate":0,"index":4834},{"krate":0,"index":2087},{"krate":0,"index":2089},{"krate":0,"index":2092},{"krate":0,"index":2097},{"krate":0,"index":2099},{"krate":0,"index":2101},{"krate":0,"index":2103},{"krate":0,"index":2105},{"krate":0,"index":2107},{"krate":0,"index":2109},{"krate":0,"index":2111},{"krate":0,"index":2113},{"krate":0,"index":2115},{"krate":0,"index":2117}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4829},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":241607,"byte_end":241611,"line_start":15,"line_end":15,"column_start":12,"column_end":16},"name":"Rect","qualname":"::draw::primitive::rect::Rect","value":"Rect {  }","parent":null,"children":[{"krate":0,"index":4830},{"krate":0,"index":4831}],"decl_id":null,"docs":" Properties related to drawing a **Rect**.\n","sig":null,"attributes":[{"value":"/ Properties related to drawing a **Rect**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":241526,"byte_end":241571,"line_start":13,"line_end":13,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":2087},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":241727,"byte_end":241738,"line_start":21,"line_end":21,"column_start":10,"column_end":21},"name":"DrawingRect","qualname":"::draw::primitive::rect::DrawingRect","value":"Drawing","parent":null,"children":[],"decl_id":null,"docs":" The drawing context for a Rect.\n","sig":null,"attributes":[{"value":"/ The drawing context for a Rect.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":241682,"byte_end":241717,"line_start":20,"line_end":20,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2090},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":241864,"byte_end":241870,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"stroke","qualname":"<Rect>::stroke","value":"fn stroke<C>(Self, C) -> Self where C: IntoLinSrgba<ColorScalar>","parent":null,"children":[],"decl_id":null,"docs":" Stroke the outline with the given color.\n","sig":null,"attributes":[{"value":"/ Stroke the outline with the given color.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":241808,"byte_end":241852,"line_start":26,"line_end":26,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":242081,"byte_end":242087,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"stroke","qualname":"<DrawingRect>::stroke","value":"fn stroke<C>(Self, C) -> Self where C: IntoLinSrgba<ColorScalar>","parent":null,"children":[],"decl_id":null,"docs":" Stroke the outline with the given color.\n","sig":null,"attributes":[{"value":"/ Stroke the outline with the given color.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":242025,"byte_end":242069,"line_start":36,"line_end":36,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2098},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":242276,"byte_end":242292,"line_start":46,"line_end":46,"column_start":8,"column_end":24},"name":"render_primitive","qualname":"<Rect as draw::renderer::RenderPrimitive>::render_primitive","value":"fn render_primitive(Self, draw::renderer::RenderContext, &mut draw::Mesh)\n-> draw::renderer::PrimitiveRender","parent":{"krate":0,"index":2846},"children":[],"decl_id":{"krate":0,"index":2847},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2100},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":243278,"byte_end":243282,"line_start":79,"line_end":79,"column_start":8,"column_end":12},"name":"from","qualname":"<Rect as std::convert::From>::from","value":"fn from(geom::Rect<f32>) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2102},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":243437,"byte_end":243444,"line_start":86,"line_end":86,"column_start":8,"column_end":15},"name":"default","qualname":"<Rect as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":243653,"byte_end":243663,"line_start":97,"line_end":97,"column_start":8,"column_end":18},"name":"properties","qualname":"<Rect as draw::properties::spatial::orientation::SetOrientation>::properties","value":"fn properties(&mut Self) -> &mut orientation::Properties","parent":{"krate":0,"index":2637},"children":[],"decl_id":{"krate":0,"index":2638},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":243807,"byte_end":243817,"line_start":103,"line_end":103,"column_start":8,"column_end":18},"name":"properties","qualname":"<Rect as draw::properties::spatial::position::SetPosition>::properties","value":"fn properties(&mut Self) -> &mut position::Properties","parent":{"krate":0,"index":2674},"children":[],"decl_id":{"krate":0,"index":2675},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2108},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":243957,"byte_end":243967,"line_start":109,"line_end":109,"column_start":8,"column_end":18},"name":"properties","qualname":"<Rect as draw::properties::spatial::dimension::SetDimensions>::properties","value":"fn properties(&mut Self) -> &mut dimension::Properties","parent":{"krate":0,"index":2596},"children":[],"decl_id":{"krate":0,"index":2597},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":244121,"byte_end":244129,"line_start":115,"line_end":115,"column_start":8,"column_end":16},"name":"rgba_mut","qualname":"<Rect as draw::properties::color::SetColor>::rgba_mut","value":"fn rgba_mut(&mut Self) -> &mut Option<LinSrgba>","parent":{"krate":0,"index":2554},"children":[],"decl_id":{"krate":0,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":244256,"byte_end":244274,"line_start":121,"line_end":121,"column_start":8,"column_end":26},"name":"stroke_options_mut","qualname":"<Rect as draw::properties::stroke::SetStroke>::stroke_options_mut","value":"fn stroke_options_mut(&mut Self) -> &mut StrokeOptions","parent":{"krate":0,"index":2720},"children":[],"decl_id":{"krate":0,"index":2721},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":244410,"byte_end":244429,"line_start":127,"line_end":127,"column_start":8,"column_end":27},"name":"polygon_options_mut","qualname":"<Rect as draw::primitive::polygon::SetPolygon>::polygon_options_mut","value":"fn polygon_options_mut(&mut Self) -> &mut PolygonOptions","parent":{"krate":0,"index":1804},"children":[],"decl_id":{"krate":0,"index":1805},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2116},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":244600,"byte_end":244604,"line_start":135,"line_end":135,"column_start":8,"column_end":12},"name":"from","qualname":"<Primitive as std::convert::From>::from","value":"fn from(Rect) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":244713,"byte_end":244717,"line_start":141,"line_end":141,"column_start":8,"column_end":12},"name":"into","qualname":"<Primitive as std::convert::Into>::into","value":"fn into(Self) -> Option<Rect>","parent":{"krate":2,"index":3053},"children":[],"decl_id":{"krate":2,"index":3055},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2119},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"text","qualname":"::draw::primitive::text","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","parent":null,"children":[{"krate":0,"index":2120},{"krate":0,"index":2123},{"krate":0,"index":2126},{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2133},{"krate":0,"index":2136},{"krate":0,"index":2139},{"krate":0,"index":2142},{"krate":0,"index":2143},{"krate":0,"index":2146},{"krate":0,"index":2149},{"krate":0,"index":2152},{"krate":0,"index":2155},{"krate":0,"index":2158},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2165},{"krate":0,"index":2168},{"krate":0,"index":2171},{"krate":0,"index":2172},{"krate":0,"index":2175},{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":2182},{"krate":0,"index":2185},{"krate":0,"index":2188},{"krate":0,"index":2191},{"krate":0,"index":2194},{"krate":0,"index":2197},{"krate":0,"index":2200},{"krate":0,"index":4836},{"krate":0,"index":4840},{"krate":0,"index":4842},{"krate":0,"index":4844},{"krate":0,"index":4848},{"krate":0,"index":4850},{"krate":0,"index":4852},{"krate":0,"index":2203},{"krate":0,"index":2205},{"krate":0,"index":2243},{"krate":0,"index":2282},{"krate":0,"index":2292},{"krate":0,"index":2294},{"krate":0,"index":2296},{"krate":0,"index":2298},{"krate":0,"index":2300},{"krate":0,"index":2302}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4836},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":245415,"byte_end":245419,"line_start":14,"line_end":14,"column_start":12,"column_end":16},"name":"Text","qualname":"::draw::primitive::text::Text","value":"Text {  }","parent":null,"children":[{"krate":0,"index":4837},{"krate":0,"index":4838},{"krate":0,"index":4839}],"decl_id":null,"docs":" Properties related to drawing the **Text** primitive.\n","sig":null,"attributes":[{"value":"/ Properties related to drawing the **Text** primitive.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":245322,"byte_end":245379,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":4844},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":245667,"byte_end":245672,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Style","qualname":"::draw::primitive::text::Style","value":"Style { color, glyph_colors, layout }","parent":null,"children":[{"krate":0,"index":4845},{"krate":0,"index":4846},{"krate":0,"index":4847}],"decl_id":null,"docs":" Styling properties for the **Text** primitive.\n","sig":null,"attributes":[{"value":"/ Styling properties for the **Text** primitive.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":245572,"byte_end":245622,"line_start":21,"line_end":21,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":4845},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":245683,"byte_end":245688,"line_start":24,"line_end":24,"column_start":9,"column_end":14},"name":"color","qualname":"::draw::primitive::text::Style::color","value":"std::option::Option<nannou_core::color::Alpha<nannou_core::color::rgb::Rgb<nannou_core::color::encoding::Linear<nannou_core::color::encoding::Srgb>>, f32>>","parent":{"krate":0,"index":4844},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4846},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":245716,"byte_end":245728,"line_start":25,"line_end":25,"column_start":9,"column_end":21},"name":"glyph_colors","qualname":"::draw::primitive::text::Style::glyph_colors","value":"std::vec::Vec<nannou_core::color::Alpha<nannou_core::color::rgb::Rgb<nannou_core::color::encoding::Linear<nannou_core::color::encoding::Srgb>>, f32>>","parent":{"krate":0,"index":4844},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4847},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":245788,"byte_end":245794,"line_start":26,"line_end":26,"column_start":9,"column_end":15},"name":"layout","qualname":"::draw::primitive::text::Style::layout","value":"text::layout::Builder","parent":{"krate":0,"index":4844},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2203},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":245883,"byte_end":245894,"line_start":30,"line_end":30,"column_start":10,"column_end":21},"name":"DrawingText","qualname":"::draw::primitive::text::DrawingText","value":"Drawing","parent":null,"children":[],"decl_id":null,"docs":" The drawing context for the **Text** primitive.\n","sig":null,"attributes":[{"value":"/ The drawing context for the **Text** primitive.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":245822,"byte_end":245873,"line_start":29,"line_end":29,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2206},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":245977,"byte_end":245980,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<Text>::new","value":"fn new(DrawingContext, &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Begin drawing some text.\n","sig":null,"attributes":[{"value":"/ Begin drawing some text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":245937,"byte_end":245965,"line_start":33,"line_end":33,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2209},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":246669,"byte_end":246678,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"font_size","qualname":"<Text>::font_size","value":"fn font_size(Self, FontSize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The font size to use for the text.\n","sig":null,"attributes":[{"value":"/ The font size to use for the text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":246619,"byte_end":246657,"line_start":57,"line_end":57,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2211},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":246924,"byte_end":246933,"line_start":65,"line_end":65,"column_start":12,"column_end":21},"name":"line_wrap","qualname":"<Text>::line_wrap","value":"fn line_wrap(Self, Option<Wrap>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify whether or not text should be wrapped around some width and how to do so.","sig":null,"attributes":[{"value":"/ Specify whether or not text should be wrapped around some width and how to do so.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":246769,"byte_end":246854,"line_start":62,"line_end":62,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":246859,"byte_end":246862,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ The default value is `DEFAULT_LINE_WRAP`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":246867,"byte_end":246912,"line_start":64,"line_end":64,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":247176,"byte_end":247188,"line_start":72,"line_end":72,"column_start":12,"column_end":24},"name":"no_line_wrap","qualname":"<Text>::no_line_wrap","value":"fn no_line_wrap(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify that the **Text** should not wrap lines around the width.","sig":null,"attributes":[{"value":"/ Specify that the **Text** should not wrap lines around the width.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":247038,"byte_end":247107,"line_start":69,"line_end":69,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":247112,"byte_end":247115,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Shorthand for `builder.line_wrap(None)`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":247120,"byte_end":247164,"line_start":71,"line_end":71,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2215},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":247434,"byte_end":247446,"line_start":79,"line_end":79,"column_start":12,"column_end":24},"name":"wrap_by_word","qualname":"<Text>::wrap_by_word","value":"fn wrap_by_word(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Line wrap the **Text** at the beginning of the first word that exceeds the width.","sig":null,"attributes":[{"value":"/ Line wrap the **Text** at the beginning of the first word that exceeds the width.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":247262,"byte_end":247347,"line_start":76,"line_end":76,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":247352,"byte_end":247355,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Shorthand for `builder.line_wrap(Some(Wrap::Whitespace))`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":247360,"byte_end":247422,"line_start":78,"line_end":78,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2217},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":247696,"byte_end":247713,"line_start":86,"line_end":86,"column_start":12,"column_end":29},"name":"wrap_by_character","qualname":"<Text>::wrap_by_character","value":"fn wrap_by_character(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Line wrap the **Text** at the beginning of the first character that exceeds the width.","sig":null,"attributes":[{"value":"/ Line wrap the **Text** at the beginning of the first character that exceeds the width.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":247520,"byte_end":247610,"line_start":83,"line_end":83,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":247615,"byte_end":247618,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Shorthand for `builder.line_wrap(Some(Wrap::Character))`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":247623,"byte_end":247684,"line_start":85,"line_end":85,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":247874,"byte_end":247878,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"font","qualname":"<Text>::font","value":"fn font(Self, Font) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A method for specifying the `Font` used for displaying the `Text`.\n","sig":null,"attributes":[{"value":"/ A method for specifying the `Font` used for displaying the `Text`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":247792,"byte_end":247862,"line_start":90,"line_end":90,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":248048,"byte_end":248055,"line_start":96,"line_end":96,"column_start":12,"column_end":19},"name":"justify","qualname":"<Text>::justify","value":"fn justify(Self, Justify) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe the end along the *x* axis to which the text should be aligned.\n","sig":null,"attributes":[{"value":"/ Describe the end along the *x* axis to which the text should be aligned.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":247960,"byte_end":248036,"line_start":95,"line_end":95,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2223},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":248234,"byte_end":248246,"line_start":101,"line_end":101,"column_start":12,"column_end":24},"name":"left_justify","qualname":"<Text>::left_justify","value":"fn left_justify(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align the text to the left of its bounding **Rect**'s *x* axis range.\n","sig":null,"attributes":[{"value":"/ Align the text to the left of its bounding **Rect**'s *x* axis range.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":248149,"byte_end":248222,"line_start":100,"line_end":100,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2225},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":248407,"byte_end":248421,"line_start":106,"line_end":106,"column_start":12,"column_end":26},"name":"center_justify","qualname":"<Text>::center_justify","value":"fn center_justify(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align the text to the middle of its bounding **Rect**'s *x* axis range.\n","sig":null,"attributes":[{"value":"/ Align the text to the middle of its bounding **Rect**'s *x* axis range.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":248320,"byte_end":248395,"line_start":105,"line_end":105,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2227},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":248583,"byte_end":248596,"line_start":111,"line_end":111,"column_start":12,"column_end":25},"name":"right_justify","qualname":"<Text>::right_justify","value":"fn right_justify(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align the text to the right of its bounding **Rect**'s *x* axis range.\n","sig":null,"attributes":[{"value":"/ Align the text to the right of its bounding **Rect**'s *x* axis range.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":248497,"byte_end":248571,"line_start":110,"line_end":110,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2229},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":248753,"byte_end":248765,"line_start":116,"line_end":116,"column_start":12,"column_end":24},"name":"line_spacing","qualname":"<Text>::line_spacing","value":"fn line_spacing(Self, Scalar) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify how much vertical space should separate each line of text.\n","sig":null,"attributes":[{"value":"/ Specify how much vertical space should separate each line of text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":248671,"byte_end":248741,"line_start":115,"line_end":115,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2231},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":248966,"byte_end":248973,"line_start":121,"line_end":121,"column_start":12,"column_end":19},"name":"y_align","qualname":"<Text>::y_align","value":"fn y_align(Self, Align) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify how the whole text should be aligned along the y axis of its bounding rectangle\n","sig":null,"attributes":[{"value":"/ Specify how the whole text should be aligned along the y axis of its bounding rectangle","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":248863,"byte_end":248954,"line_start":120,"line_end":120,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":2233},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":249152,"byte_end":249161,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"align_top","qualname":"<Text>::align_top","value":"fn align_top(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align the top edge of the text with the top edge of its bounding rectangle.\n","sig":null,"attributes":[{"value":"/ Align the top edge of the text with the top edge of its bounding rectangle.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":249061,"byte_end":249140,"line_start":125,"line_end":125,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2235},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":249378,"byte_end":249392,"line_start":133,"line_end":133,"column_start":12,"column_end":26},"name":"align_middle_y","qualname":"<Text>::align_middle_y","value":"fn align_middle_y(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align the middle of the text with the middle of the bounding rect along the y axis.","sig":null,"attributes":[{"value":"/ Align the middle of the text with the middle of the bounding rect along the y axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":249232,"byte_end":249319,"line_start":130,"line_end":130,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":249324,"byte_end":249327,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This is the default behaviour.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":249332,"byte_end":249366,"line_start":132,"line_end":132,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2237},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":249565,"byte_end":249577,"line_start":138,"line_end":138,"column_start":12,"column_end":24},"name":"align_bottom","qualname":"<Text>::align_bottom","value":"fn align_bottom(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align the bottom edge of the text with the bottom edge of its bounding rectangle.\n","sig":null,"attributes":[{"value":"/ Align the bottom edge of the text with the bottom edge of its bounding rectangle.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":249468,"byte_end":249553,"line_start":137,"line_end":137,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2239},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":249714,"byte_end":249720,"line_start":143,"line_end":143,"column_start":12,"column_end":18},"name":"layout","qualname":"<Text>::layout","value":"fn layout(Self, &Layout) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set all the parameters via an existing `Layout`\n","sig":null,"attributes":[{"value":"/ Set all the parameters via an existing `Layout`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":249651,"byte_end":249702,"line_start":142,"line_end":142,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2241},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":249871,"byte_end":249881,"line_start":148,"line_end":148,"column_start":12,"column_end":22},"name":"with_style","qualname":"<Text>::with_style","value":"fn with_style(Self, Style) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the entire styling for the **Text**.\n","sig":null,"attributes":[{"value":"/ Specify the entire styling for the **Text**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":249811,"byte_end":249859,"line_start":147,"line_end":147,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2242},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":250070,"byte_end":250082,"line_start":155,"line_end":155,"column_start":12,"column_end":24},"name":"glyph_colors","qualname":"<Text>::glyph_colors","value":"fn glyph_colors(Self, Vec<LinSrgba>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set a color for each glyph.\n Colors unspecified glyphs using the drawing color.\n","sig":null,"attributes":[{"value":"/ Set a color for each glyph.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":249968,"byte_end":249999,"line_start":153,"line_end":153,"column_start":5,"column_end":36}},{"value":"/ Colors unspecified glyphs using the drawing color.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":250004,"byte_end":250058,"line_start":154,"line_end":154,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2245},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":250271,"byte_end":250280,"line_start":163,"line_end":163,"column_start":12,"column_end":21},"name":"font_size","qualname":"<DrawingText>::font_size","value":"fn font_size(Self, text::FontSize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The font size to use for the text.\n","sig":null,"attributes":[{"value":"/ The font size to use for the text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":250221,"byte_end":250259,"line_start":162,"line_end":162,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2247},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":250456,"byte_end":250468,"line_start":168,"line_end":168,"column_start":12,"column_end":24},"name":"no_line_wrap","qualname":"<DrawingText>::no_line_wrap","value":"fn no_line_wrap(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify that the **Text** should not wrap lines around the width.\n","sig":null,"attributes":[{"value":"/ Specify that the **Text** should not wrap lines around the width.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":250375,"byte_end":250444,"line_start":167,"line_end":167,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2249},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":250637,"byte_end":250649,"line_start":173,"line_end":173,"column_start":12,"column_end":24},"name":"wrap_by_word","qualname":"<DrawingText>::wrap_by_word","value":"fn wrap_by_word(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Line wrap the **Text** at the beginning of the first word that exceeds the width.\n","sig":null,"attributes":[{"value":"/ Line wrap the **Text** at the beginning of the first word that exceeds the width.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":250540,"byte_end":250625,"line_start":172,"line_end":172,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2251},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":250823,"byte_end":250840,"line_start":178,"line_end":178,"column_start":12,"column_end":29},"name":"wrap_by_character","qualname":"<DrawingText>::wrap_by_character","value":"fn wrap_by_character(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Line wrap the **Text** at the beginning of the first character that exceeds the width.\n","sig":null,"attributes":[{"value":"/ Line wrap the **Text** at the beginning of the first character that exceeds the width.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":250721,"byte_end":250811,"line_start":177,"line_end":177,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":2253},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":250999,"byte_end":251003,"line_start":183,"line_end":183,"column_start":12,"column_end":16},"name":"font","qualname":"<DrawingText>::font","value":"fn font(Self, text::Font) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A method for specifying the `Font` used for displaying the `Text`.\n","sig":null,"attributes":[{"value":"/ A method for specifying the `Font` used for displaying the `Text`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":250917,"byte_end":250987,"line_start":182,"line_end":182,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2255},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":251149,"byte_end":251159,"line_start":188,"line_end":188,"column_start":12,"column_end":22},"name":"with_style","qualname":"<DrawingText>::with_style","value":"fn with_style(Self, Style) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Build the **Text** with the given **Style**.\n","sig":null,"attributes":[{"value":"/ Build the **Text** with the given **Style**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":251089,"byte_end":251137,"line_start":187,"line_end":187,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2257},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":251336,"byte_end":251343,"line_start":193,"line_end":193,"column_start":12,"column_end":19},"name":"justify","qualname":"<DrawingText>::justify","value":"fn justify(Self, text::Justify) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe the end along the *x* axis to which the text should be aligned.\n","sig":null,"attributes":[{"value":"/ Describe the end along the *x* axis to which the text should be aligned.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":251248,"byte_end":251324,"line_start":192,"line_end":192,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2259},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":251526,"byte_end":251538,"line_start":198,"line_end":198,"column_start":12,"column_end":24},"name":"left_justify","qualname":"<DrawingText>::left_justify","value":"fn left_justify(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align the text to the left of its bounding **Rect**'s *x* axis range.\n","sig":null,"attributes":[{"value":"/ Align the text to the left of its bounding **Rect**'s *x* axis range.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":251441,"byte_end":251514,"line_start":197,"line_end":197,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2261},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":251697,"byte_end":251711,"line_start":203,"line_end":203,"column_start":12,"column_end":26},"name":"center_justify","qualname":"<DrawingText>::center_justify","value":"fn center_justify(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align the text to the middle of its bounding **Rect**'s *x* axis range.\n","sig":null,"attributes":[{"value":"/ Align the text to the middle of its bounding **Rect**'s *x* axis range.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":251610,"byte_end":251685,"line_start":202,"line_end":202,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2263},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":251871,"byte_end":251884,"line_start":208,"line_end":208,"column_start":12,"column_end":25},"name":"right_justify","qualname":"<DrawingText>::right_justify","value":"fn right_justify(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align the text to the right of its bounding **Rect**'s *x* axis range.\n","sig":null,"attributes":[{"value":"/ Align the text to the right of its bounding **Rect**'s *x* axis range.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":251785,"byte_end":251859,"line_start":207,"line_end":207,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2265},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":252039,"byte_end":252051,"line_start":213,"line_end":213,"column_start":12,"column_end":24},"name":"line_spacing","qualname":"<DrawingText>::line_spacing","value":"fn line_spacing(Self, text::Scalar) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify how much vertical space should separate each line of text.\n","sig":null,"attributes":[{"value":"/ Specify how much vertical space should separate each line of text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":251957,"byte_end":252027,"line_start":212,"line_end":212,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2267},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":252256,"byte_end":252268,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"y_align_text","qualname":"<DrawingText>::y_align_text","value":"fn y_align_text(Self, Align) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify how the whole text should be aligned along the y axis of its bounding rectangle\n","sig":null,"attributes":[{"value":"/ Specify how the whole text should be aligned along the y axis of its bounding rectangle","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":252153,"byte_end":252244,"line_start":217,"line_end":217,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":2269},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":252445,"byte_end":252459,"line_start":223,"line_end":223,"column_start":12,"column_end":26},"name":"align_text_top","qualname":"<DrawingText>::align_text_top","value":"fn align_text_top(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align the top edge of the text with the top edge of its bounding rectangle.\n","sig":null,"attributes":[{"value":"/ Align the top edge of the text with the top edge of its bounding rectangle.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":252354,"byte_end":252433,"line_start":222,"line_end":222,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2271},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":252674,"byte_end":252693,"line_start":230,"line_end":230,"column_start":12,"column_end":31},"name":"align_text_middle_y","qualname":"<DrawingText>::align_text_middle_y","value":"fn align_text_middle_y(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align the middle of the text with the middle of the bounding rect along the y axis.","sig":null,"attributes":[{"value":"/ Align the middle of the text with the middle of the bounding rect along the y axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":252528,"byte_end":252615,"line_start":227,"line_end":227,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":252620,"byte_end":252623,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This is the default behaviour.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":252628,"byte_end":252662,"line_start":229,"line_end":229,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2273},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":252864,"byte_end":252881,"line_start":235,"line_end":235,"column_start":12,"column_end":29},"name":"align_text_bottom","qualname":"<DrawingText>::align_text_bottom","value":"fn align_text_bottom(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align the bottom edge of the text with the bottom edge of its bounding rectangle.\n","sig":null,"attributes":[{"value":"/ Align the bottom edge of the text with the bottom edge of its bounding rectangle.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":252767,"byte_end":252852,"line_start":234,"line_end":234,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2275},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":253016,"byte_end":253022,"line_start":240,"line_end":240,"column_start":12,"column_end":18},"name":"layout","qualname":"<DrawingText>::layout","value":"fn layout(Self, &Layout) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set all the parameters via an existing `Layout`\n","sig":null,"attributes":[{"value":"/ Set all the parameters via an existing `Layout`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":252953,"byte_end":253004,"line_start":239,"line_end":239,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2277},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":253359,"byte_end":253371,"line_start":248,"line_end":248,"column_start":12,"column_end":24},"name":"glyph_colors","qualname":"<DrawingText>::glyph_colors","value":"fn glyph_colors<I, C>(Self, I) -> Self where I: IntoIterator<Item = C>,\nC: IntoLinSrgba<ColorScalar>","parent":null,"children":[],"decl_id":null,"docs":" Set a color for each glyph, which is typically one character.\n Colors unspecified glyphs using the drawing color.\n NOTE: Sometimes, a glyph can represent multiple characters,\n       or be a part in other glyphs.\n","sig":null,"attributes":[{"value":"/ Set a color for each glyph, which is typically one character.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":253111,"byte_end":253176,"line_start":244,"line_end":244,"column_start":5,"column_end":70}},{"value":"/ Colors unspecified glyphs using the drawing color.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":253181,"byte_end":253235,"line_start":245,"line_end":245,"column_start":5,"column_end":59}},{"value":"/ NOTE: Sometimes, a glyph can represent multiple characters,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":253240,"byte_end":253303,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/       or be a part in other glyphs.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":253308,"byte_end":253347,"line_start":247,"line_end":247,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2283},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":253749,"byte_end":253765,"line_start":263,"line_end":263,"column_start":8,"column_end":24},"name":"render_primitive","qualname":"<Text as draw::renderer::RenderPrimitive>::render_primitive","value":"fn render_primitive(Self, draw::renderer::RenderContext, &mut draw::Mesh)\n-> draw::renderer::PrimitiveRender","parent":{"krate":0,"index":2846},"children":[],"decl_id":{"krate":0,"index":2847},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2293},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":260233,"byte_end":260243,"line_start":420,"line_end":420,"column_start":8,"column_end":18},"name":"properties","qualname":"<Text as draw::properties::spatial::orientation::SetOrientation>::properties","value":"fn properties(&mut Self) -> &mut orientation::Properties","parent":{"krate":0,"index":2637},"children":[],"decl_id":{"krate":0,"index":2638},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2295},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":260387,"byte_end":260397,"line_start":426,"line_end":426,"column_start":8,"column_end":18},"name":"properties","qualname":"<Text as draw::properties::spatial::position::SetPosition>::properties","value":"fn properties(&mut Self) -> &mut position::Properties","parent":{"krate":0,"index":2674},"children":[],"decl_id":{"krate":0,"index":2675},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2297},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":260537,"byte_end":260547,"line_start":432,"line_end":432,"column_start":8,"column_end":18},"name":"properties","qualname":"<Text as draw::properties::spatial::dimension::SetDimensions>::properties","value":"fn properties(&mut Self) -> &mut dimension::Properties","parent":{"krate":0,"index":2596},"children":[],"decl_id":{"krate":0,"index":2597},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2299},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":260698,"byte_end":260706,"line_start":438,"line_end":438,"column_start":8,"column_end":16},"name":"rgba_mut","qualname":"<Text as draw::properties::color::SetColor>::rgba_mut","value":"fn rgba_mut(&mut Self) -> &mut Option<LinSrgba>","parent":{"krate":0,"index":2554},"children":[],"decl_id":{"krate":0,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2301},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":260870,"byte_end":260874,"line_start":446,"line_end":446,"column_start":8,"column_end":12},"name":"from","qualname":"<Primitive as std::convert::From>::from","value":"fn from(Text) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2303},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":260983,"byte_end":260987,"line_start":452,"line_end":452,"column_start":8,"column_end":12},"name":"into","qualname":"<Primitive as std::convert::Into>::into","value":"fn into(Self) -> Option<Text>","parent":{"krate":2,"index":3053},"children":[],"decl_id":{"krate":2,"index":3055},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2304},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"texture","qualname":"::draw::primitive::texture","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","parent":null,"children":[{"krate":0,"index":2305},{"krate":0,"index":2308},{"krate":0,"index":2311},{"krate":0,"index":2312},{"krate":0,"index":2315},{"krate":0,"index":2318},{"krate":0,"index":2321},{"krate":0,"index":2324},{"krate":0,"index":2325},{"krate":0,"index":2328},{"krate":0,"index":2331},{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2338},{"krate":0,"index":2341},{"krate":0,"index":2344},{"krate":0,"index":2347},{"krate":0,"index":4854},{"krate":0,"index":4858},{"krate":0,"index":4860},{"krate":0,"index":2350},{"krate":0,"index":2352},{"krate":0,"index":2354},{"krate":0,"index":2356},{"krate":0,"index":2360},{"krate":0,"index":2362},{"krate":0,"index":2364},{"krate":0,"index":2366},{"krate":0,"index":2368},{"krate":0,"index":2370}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4854},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":261525,"byte_end":261532,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Texture","qualname":"::draw::primitive::texture::Texture","value":"Texture {  }","parent":null,"children":[{"krate":0,"index":4855},{"krate":0,"index":4856},{"krate":0,"index":4857}],"decl_id":null,"docs":" Properties related to drawing a **Rect**.\n","sig":null,"attributes":[{"value":"/ Properties related to drawing a **Rect**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":261444,"byte_end":261489,"line_start":10,"line_end":10,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":2350},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":261676,"byte_end":261690,"line_start":19,"line_end":19,"column_start":10,"column_end":24},"name":"DrawingTexture","qualname":"::draw::primitive::texture::DrawingTexture","value":"Drawing","parent":null,"children":[],"decl_id":null,"docs":" The drawing context for a Rect.\n","sig":null,"attributes":[{"value":"/ The drawing context for a Rect.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":261631,"byte_end":261666,"line_start":18,"line_end":18,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2355},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":262787,"byte_end":262791,"line_start":57,"line_end":57,"column_start":12,"column_end":16},"name":"area","qualname":"<Texture>::area","value":"fn area(Self, geom::Rect) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the area of the texture to draw.","sig":null,"attributes":[{"value":"/ Specify the area of the texture to draw.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":262367,"byte_end":262411,"line_start":48,"line_end":48,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":262416,"byte_end":262419,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ The bounds of the rectangle should represent the desired area as texture coordinates of the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":262424,"byte_end":262519,"line_start":50,"line_end":50,"column_start":5,"column_end":100}},{"value":"/ underlying texture.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":262524,"byte_end":262547,"line_start":51,"line_end":51,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":262552,"byte_end":262555,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Texture coordinates range from (0.0, 0.0) in the bottom left of the texture, to (1.0, 1.0)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":262560,"byte_end":262654,"line_start":53,"line_end":53,"column_start":5,"column_end":99}},{"value":"/ in the top right of the texture.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":262659,"byte_end":262695,"line_start":54,"line_end":54,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":262700,"byte_end":262703,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ By default, the area represents the full extent of the texture.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":262708,"byte_end":262775,"line_start":56,"line_end":56,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2358},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":263332,"byte_end":263336,"line_start":73,"line_end":73,"column_start":12,"column_end":16},"name":"area","qualname":"<DrawingTexture>::area","value":"fn area(Self, geom::Rect) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the area of the texture to draw.","sig":null,"attributes":[{"value":"/ Specify the area of the texture to draw.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":262912,"byte_end":262956,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":262961,"byte_end":262964,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ The bounds of the rectangle should represent the desired area as texture coordinates of the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":262969,"byte_end":263064,"line_start":66,"line_end":66,"column_start":5,"column_end":100}},{"value":"/ underlying texture.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":263069,"byte_end":263092,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":263097,"byte_end":263100,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Texture coordinates range from (0.0, 0.0) in the bottom left of the texture, to (1.0, 1.0)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":263105,"byte_end":263199,"line_start":69,"line_end":69,"column_start":5,"column_end":99}},{"value":"/ in the top right of the texture.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":263204,"byte_end":263240,"line_start":70,"line_end":70,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":263245,"byte_end":263248,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ By default, the area represents the full extent of the texture.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":263253,"byte_end":263320,"line_start":72,"line_end":72,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2361},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":263478,"byte_end":263494,"line_start":79,"line_end":79,"column_start":8,"column_end":24},"name":"render_primitive","qualname":"<Texture as draw::renderer::RenderPrimitive>::render_primitive","value":"fn render_primitive(Self, draw::renderer::RenderContext, &mut draw::Mesh)\n-> draw::renderer::PrimitiveRender","parent":{"krate":0,"index":2846},"children":[],"decl_id":{"krate":0,"index":2847},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2363},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":265157,"byte_end":265167,"line_start":132,"line_end":132,"column_start":8,"column_end":18},"name":"properties","qualname":"<Texture as draw::properties::spatial::orientation::SetOrientation>::properties","value":"fn properties(&mut Self) -> &mut orientation::Properties","parent":{"krate":0,"index":2637},"children":[],"decl_id":{"krate":0,"index":2638},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2365},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":265314,"byte_end":265324,"line_start":138,"line_end":138,"column_start":8,"column_end":18},"name":"properties","qualname":"<Texture as draw::properties::spatial::position::SetPosition>::properties","value":"fn properties(&mut Self) -> &mut position::Properties","parent":{"krate":0,"index":2674},"children":[],"decl_id":{"krate":0,"index":2675},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2367},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":265467,"byte_end":265477,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"properties","qualname":"<Texture as draw::properties::spatial::dimension::SetDimensions>::properties","value":"fn properties(&mut Self) -> &mut dimension::Properties","parent":{"krate":0,"index":2596},"children":[],"decl_id":{"krate":0,"index":2597},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2369},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":265652,"byte_end":265656,"line_start":152,"line_end":152,"column_start":8,"column_end":12},"name":"from","qualname":"<Primitive as std::convert::From>::from","value":"fn from(Texture) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2371},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":265774,"byte_end":265778,"line_start":158,"line_end":158,"column_start":8,"column_end":12},"name":"into","qualname":"<Primitive as std::convert::Into>::into","value":"fn into(Self) -> Option<Texture>","parent":{"krate":2,"index":3053},"children":[],"decl_id":{"krate":2,"index":3055},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2372},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tri","qualname":"::draw::primitive::tri","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","parent":null,"children":[{"krate":0,"index":2373},{"krate":0,"index":2376},{"krate":0,"index":2377},{"krate":0,"index":2380},{"krate":0,"index":2383},{"krate":0,"index":2386},{"krate":0,"index":2389},{"krate":0,"index":2392},{"krate":0,"index":2393},{"krate":0,"index":2396},{"krate":0,"index":2399},{"krate":0,"index":2402},{"krate":0,"index":2403},{"krate":0,"index":2406},{"krate":0,"index":2409},{"krate":0,"index":2412},{"krate":0,"index":2415},{"krate":0,"index":2418},{"krate":0,"index":2421},{"krate":0,"index":2424},{"krate":0,"index":2425},{"krate":0,"index":2428},{"krate":0,"index":2431},{"krate":0,"index":2432},{"krate":0,"index":2435},{"krate":0,"index":2438},{"krate":0,"index":2441},{"krate":0,"index":2444},{"krate":0,"index":4862},{"krate":0,"index":4866},{"krate":0,"index":4868},{"krate":0,"index":2447},{"krate":0,"index":2449},{"krate":0,"index":2454},{"krate":0,"index":2462},{"krate":0,"index":2467},{"krate":0,"index":2469},{"krate":0,"index":2471},{"krate":0,"index":2473},{"krate":0,"index":2475},{"krate":0,"index":2477},{"krate":0,"index":2479},{"krate":0,"index":2481},{"krate":0,"index":2483},{"krate":0,"index":2485}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4862},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":266499,"byte_end":266502,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"Tri","qualname":"::draw::primitive::tri::Tri","value":"Tri {  }","parent":null,"children":[{"krate":0,"index":4863},{"krate":0,"index":4864},{"krate":0,"index":4865}],"decl_id":null,"docs":" Properties related to drawing a **Tri**.\n","sig":null,"attributes":[{"value":"/ Properties related to drawing a **Tri**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":266419,"byte_end":266463,"line_start":13,"line_end":13,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":2447},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":266647,"byte_end":266657,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"name":"DrawingTri","qualname":"::draw::primitive::tri::DrawingTri","value":"Drawing","parent":null,"children":[],"decl_id":null,"docs":" The drawing context for a `Tri`.\n","sig":null,"attributes":[{"value":"/ The drawing context for a `Tri`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":266601,"byte_end":266637,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2450},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":266780,"byte_end":266786,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"stroke","qualname":"<Tri>::stroke","value":"fn stroke<C>(Self, C) -> Self where C: IntoLinSrgba<ColorScalar>","parent":null,"children":[],"decl_id":null,"docs":" Stroke the outline with the given color.\n","sig":null,"attributes":[{"value":"/ Stroke the outline with the given color.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":266724,"byte_end":266768,"line_start":27,"line_end":27,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2452},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":266997,"byte_end":267003,"line_start":36,"line_end":36,"column_start":12,"column_end":18},"name":"points","qualname":"<Tri>::points","value":"fn points<P>(Self, P, P, P) -> Self where P: Into<Point2>","parent":null,"children":[],"decl_id":null,"docs":" Use the given three points as the vertices (corners) of the triangle.\n","sig":null,"attributes":[{"value":"/ Use the given three points as the vertices (corners) of the triangle.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":266912,"byte_end":266985,"line_start":35,"line_end":35,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2456},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":267332,"byte_end":267338,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"stroke","qualname":"<DrawingTri>::stroke","value":"fn stroke<C>(Self, C) -> Self where C: IntoLinSrgba<ColorScalar>","parent":null,"children":[],"decl_id":null,"docs":" Stroke the outline with the given color.\n","sig":null,"attributes":[{"value":"/ Stroke the outline with the given color.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":267276,"byte_end":267320,"line_start":51,"line_end":51,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2459},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":267553,"byte_end":267559,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"points","qualname":"<DrawingTri>::points","value":"fn points<P>(Self, P, P, P) -> Self where P: Into<Point2>","parent":null,"children":[],"decl_id":null,"docs":" Use the given points as the vertices (corners) of the triangle.\n","sig":null,"attributes":[{"value":"/ Use the given points as the vertices (corners) of the triangle.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":267474,"byte_end":267541,"line_start":59,"line_end":59,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2463},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":267771,"byte_end":267787,"line_start":71,"line_end":71,"column_start":8,"column_end":24},"name":"render_primitive","qualname":"<Tri as draw::renderer::RenderPrimitive>::render_primitive","value":"fn render_primitive(Self, draw::renderer::RenderContext, &mut draw::Mesh)\n-> draw::renderer::PrimitiveRender","parent":{"krate":0,"index":2846},"children":[],"decl_id":{"krate":0,"index":2847},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2468},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":269138,"byte_end":269142,"line_start":110,"line_end":110,"column_start":8,"column_end":12},"name":"from","qualname":"<Tri as std::convert::From>::from","value":"fn from(geom::Tri<Point2>) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2470},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":269381,"byte_end":269388,"line_start":122,"line_end":122,"column_start":8,"column_end":15},"name":"default","qualname":"<Tri as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2472},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":269725,"byte_end":269735,"line_start":134,"line_end":134,"column_start":8,"column_end":18},"name":"properties","qualname":"<Tri as draw::properties::spatial::orientation::SetOrientation>::properties","value":"fn properties(&mut Self) -> &mut orientation::Properties","parent":{"krate":0,"index":2637},"children":[],"decl_id":{"krate":0,"index":2638},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2474},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":269878,"byte_end":269888,"line_start":140,"line_end":140,"column_start":8,"column_end":18},"name":"properties","qualname":"<Tri as draw::properties::spatial::position::SetPosition>::properties","value":"fn properties(&mut Self) -> &mut position::Properties","parent":{"krate":0,"index":2674},"children":[],"decl_id":{"krate":0,"index":2675},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2476},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":270027,"byte_end":270037,"line_start":146,"line_end":146,"column_start":8,"column_end":18},"name":"properties","qualname":"<Tri as draw::properties::spatial::dimension::SetDimensions>::properties","value":"fn properties(&mut Self) -> &mut dimension::Properties","parent":{"krate":0,"index":2596},"children":[],"decl_id":{"krate":0,"index":2597},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2478},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":270190,"byte_end":270198,"line_start":152,"line_end":152,"column_start":8,"column_end":16},"name":"rgba_mut","qualname":"<Tri as draw::properties::color::SetColor>::rgba_mut","value":"fn rgba_mut(&mut Self) -> &mut Option<LinSrgba>","parent":{"krate":0,"index":2554},"children":[],"decl_id":{"krate":0,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2480},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":270324,"byte_end":270342,"line_start":158,"line_end":158,"column_start":8,"column_end":26},"name":"stroke_options_mut","qualname":"<Tri as draw::properties::stroke::SetStroke>::stroke_options_mut","value":"fn stroke_options_mut(&mut Self) -> &mut StrokeOptions","parent":{"krate":0,"index":2720},"children":[],"decl_id":{"krate":0,"index":2721},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2482},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":270477,"byte_end":270496,"line_start":164,"line_end":164,"column_start":8,"column_end":27},"name":"polygon_options_mut","qualname":"<Tri as draw::primitive::polygon::SetPolygon>::polygon_options_mut","value":"fn polygon_options_mut(&mut Self) -> &mut PolygonOptions","parent":{"krate":0,"index":1804},"children":[],"decl_id":{"krate":0,"index":1805},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2484},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":270666,"byte_end":270670,"line_start":172,"line_end":172,"column_start":8,"column_end":12},"name":"from","qualname":"<Primitive as std::convert::From>::from","value":"fn from(Tri) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2486},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":270776,"byte_end":270780,"line_start":178,"line_end":178,"column_start":8,"column_end":12},"name":"into","qualname":"<Primitive as std::convert::Into>::into","value":"fn into(Self) -> Option<Tri>","parent":{"krate":2,"index":3053},"children":[],"decl_id":{"krate":2,"index":3055},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4871},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147573,"byte_end":147578,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Arrow","qualname":"::draw::primitive::Primitive::Arrow","value":"Primitive::Arrow(Arrow)","parent":{"krate":0,"index":4870},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4873},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147579,"byte_end":147584,"line_start":32,"line_end":32,"column_start":11,"column_end":16},"name":"0","qualname":"::draw::primitive::Primitive::Arrow::0","value":"draw::primitive::arrow::Arrow","parent":{"krate":0,"index":4871},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4874},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147591,"byte_end":147598,"line_start":33,"line_end":33,"column_start":5,"column_end":12},"name":"Ellipse","qualname":"::draw::primitive::Primitive::Ellipse","value":"Primitive::Ellipse(Ellipse)","parent":{"krate":0,"index":4870},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4876},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147599,"byte_end":147606,"line_start":33,"line_end":33,"column_start":13,"column_end":20},"name":"0","qualname":"::draw::primitive::Primitive::Ellipse::0","value":"draw::primitive::ellipse::Ellipse","parent":{"krate":0,"index":4874},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4877},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147613,"byte_end":147617,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"name":"Line","qualname":"::draw::primitive::Primitive::Line","value":"Primitive::Line(Line)","parent":{"krate":0,"index":4870},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4879},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147618,"byte_end":147622,"line_start":34,"line_end":34,"column_start":10,"column_end":14},"name":"0","qualname":"::draw::primitive::Primitive::Line::0","value":"draw::primitive::line::Line","parent":{"krate":0,"index":4877},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4880},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147629,"byte_end":147643,"line_start":35,"line_end":35,"column_start":5,"column_end":19},"name":"MeshVertexless","qualname":"::draw::primitive::Primitive::MeshVertexless","value":"Primitive::MeshVertexless(mesh::Vertexless)","parent":{"krate":0,"index":4870},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4882},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147644,"byte_end":147660,"line_start":35,"line_end":35,"column_start":20,"column_end":36},"name":"0","qualname":"::draw::primitive::Primitive::MeshVertexless::0","value":"draw::primitive::mesh::Vertexless","parent":{"krate":0,"index":4880},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4883},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147667,"byte_end":147671,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"name":"Mesh","qualname":"::draw::primitive::Primitive::Mesh","value":"Primitive::Mesh(Mesh)","parent":{"krate":0,"index":4870},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4885},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147672,"byte_end":147676,"line_start":36,"line_end":36,"column_start":10,"column_end":14},"name":"0","qualname":"::draw::primitive::Primitive::Mesh::0","value":"draw::primitive::mesh::Mesh","parent":{"krate":0,"index":4883},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4886},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147683,"byte_end":147691,"line_start":37,"line_end":37,"column_start":5,"column_end":13},"name":"PathInit","qualname":"::draw::primitive::Primitive::PathInit","value":"Primitive::PathInit(PathInit)","parent":{"krate":0,"index":4870},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4888},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147692,"byte_end":147700,"line_start":37,"line_end":37,"column_start":14,"column_end":22},"name":"0","qualname":"::draw::primitive::Primitive::PathInit::0","value":"draw::primitive::path::PathInit","parent":{"krate":0,"index":4886},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4889},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147707,"byte_end":147715,"line_start":38,"line_end":38,"column_start":5,"column_end":13},"name":"PathFill","qualname":"::draw::primitive::Primitive::PathFill","value":"Primitive::PathFill(PathFill)","parent":{"krate":0,"index":4870},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4891},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147716,"byte_end":147724,"line_start":38,"line_end":38,"column_start":14,"column_end":22},"name":"0","qualname":"::draw::primitive::Primitive::PathFill::0","value":"draw::primitive::path::PathOptions<lyon::lyon_tessellation::FillOptions>","parent":{"krate":0,"index":4889},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4892},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147731,"byte_end":147741,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"name":"PathStroke","qualname":"::draw::primitive::Primitive::PathStroke","value":"Primitive::PathStroke(PathStroke)","parent":{"krate":0,"index":4870},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4894},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147742,"byte_end":147752,"line_start":39,"line_end":39,"column_start":16,"column_end":26},"name":"0","qualname":"::draw::primitive::Primitive::PathStroke::0","value":"draw::primitive::path::PathOptions<lyon::lyon_tessellation::StrokeOptions>","parent":{"krate":0,"index":4892},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4895},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147759,"byte_end":147763,"line_start":40,"line_end":40,"column_start":5,"column_end":9},"name":"Path","qualname":"::draw::primitive::Primitive::Path","value":"Primitive::Path(Path)","parent":{"krate":0,"index":4870},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4897},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147764,"byte_end":147768,"line_start":40,"line_end":40,"column_start":10,"column_end":14},"name":"0","qualname":"::draw::primitive::Primitive::Path::0","value":"draw::primitive::path::Path","parent":{"krate":0,"index":4895},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4898},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147775,"byte_end":147786,"line_start":41,"line_end":41,"column_start":5,"column_end":16},"name":"PolygonInit","qualname":"::draw::primitive::Primitive::PolygonInit","value":"Primitive::PolygonInit(PolygonInit)","parent":{"krate":0,"index":4870},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4900},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147787,"byte_end":147798,"line_start":41,"line_end":41,"column_start":17,"column_end":28},"name":"0","qualname":"::draw::primitive::Primitive::PolygonInit::0","value":"draw::primitive::polygon::PolygonInit","parent":{"krate":0,"index":4898},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4901},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147805,"byte_end":147812,"line_start":42,"line_end":42,"column_start":5,"column_end":12},"name":"Polygon","qualname":"::draw::primitive::Primitive::Polygon","value":"Primitive::Polygon(Polygon)","parent":{"krate":0,"index":4870},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4903},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147813,"byte_end":147820,"line_start":42,"line_end":42,"column_start":13,"column_end":20},"name":"0","qualname":"::draw::primitive::Primitive::Polygon::0","value":"draw::primitive::polygon::Polygon","parent":{"krate":0,"index":4901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4904},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147827,"byte_end":147831,"line_start":43,"line_end":43,"column_start":5,"column_end":9},"name":"Quad","qualname":"::draw::primitive::Primitive::Quad","value":"Primitive::Quad(Quad)","parent":{"krate":0,"index":4870},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4906},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147832,"byte_end":147836,"line_start":43,"line_end":43,"column_start":10,"column_end":14},"name":"0","qualname":"::draw::primitive::Primitive::Quad::0","value":"draw::primitive::quad::Quad","parent":{"krate":0,"index":4904},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4907},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147843,"byte_end":147847,"line_start":44,"line_end":44,"column_start":5,"column_end":9},"name":"Rect","qualname":"::draw::primitive::Primitive::Rect","value":"Primitive::Rect(Rect)","parent":{"krate":0,"index":4870},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4909},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147848,"byte_end":147852,"line_start":44,"line_end":44,"column_start":10,"column_end":14},"name":"0","qualname":"::draw::primitive::Primitive::Rect::0","value":"draw::primitive::rect::Rect","parent":{"krate":0,"index":4907},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4910},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147859,"byte_end":147863,"line_start":45,"line_end":45,"column_start":5,"column_end":9},"name":"Text","qualname":"::draw::primitive::Primitive::Text","value":"Primitive::Text(Text)","parent":{"krate":0,"index":4870},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4912},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147864,"byte_end":147868,"line_start":45,"line_end":45,"column_start":10,"column_end":14},"name":"0","qualname":"::draw::primitive::Primitive::Text::0","value":"draw::primitive::text::Text","parent":{"krate":0,"index":4910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4913},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147875,"byte_end":147882,"line_start":46,"line_end":46,"column_start":5,"column_end":12},"name":"Texture","qualname":"::draw::primitive::Primitive::Texture","value":"Primitive::Texture(Texture)","parent":{"krate":0,"index":4870},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4915},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147883,"byte_end":147890,"line_start":46,"line_end":46,"column_start":13,"column_end":20},"name":"0","qualname":"::draw::primitive::Primitive::Texture::0","value":"draw::primitive::texture::Texture","parent":{"krate":0,"index":4913},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4916},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147897,"byte_end":147900,"line_start":47,"line_end":47,"column_start":5,"column_end":8},"name":"Tri","qualname":"::draw::primitive::Primitive::Tri","value":"Primitive::Tri(Tri)","parent":{"krate":0,"index":4870},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4918},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147901,"byte_end":147904,"line_start":47,"line_end":47,"column_start":9,"column_end":12},"name":"0","qualname":"::draw::primitive::Primitive::Tri::0","value":"draw::primitive::tri::Tri","parent":{"krate":0,"index":4916},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4870},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147557,"byte_end":147566,"line_start":31,"line_end":31,"column_start":10,"column_end":19},"name":"Primitive","qualname":"::draw::primitive::Primitive","value":"enum Primitive {\n    Arrow(Arrow),\n    Ellipse(Ellipse),\n    Line(Line),\n    MeshVertexless(mesh::Vertexless),\n    Mesh(Mesh),\n    PathInit(PathInit),\n    PathFill(PathFill),\n    PathStroke(PathStroke),\n    Path(Path),\n    PolygonInit(PolygonInit),\n    Polygon(Polygon),\n    Quad(Quad),\n    Rect(Rect),\n    Text(Text),\n    Texture(Texture),\n    Tri(Tri),\n}","parent":null,"children":[{"krate":0,"index":4871},{"krate":0,"index":4874},{"krate":0,"index":4877},{"krate":0,"index":4880},{"krate":0,"index":4883},{"krate":0,"index":4886},{"krate":0,"index":4889},{"krate":0,"index":4892},{"krate":0,"index":4895},{"krate":0,"index":4898},{"krate":0,"index":4901},{"krate":0,"index":4904},{"krate":0,"index":4907},{"krate":0,"index":4910},{"krate":0,"index":4913},{"krate":0,"index":4916}],"decl_id":null,"docs":" A wrapper around all primitive sets of properties so that they may be stored within the\n **Draw**'s `drawing` field while they are being drawn.","sig":null,"attributes":[{"value":"/ A wrapper around all primitive sets of properties so that they may be stored within the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147214,"byte_end":147305,"line_start":25,"line_end":25,"column_start":1,"column_end":92}},{"value":"/ **Draw**'s `drawing` field while they are being drawn.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147306,"byte_end":147364,"line_start":26,"line_end":26,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147365,"byte_end":147368,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This also allows us to flush all pending drawings to the mesh if `Draw::to_frame` is called","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147369,"byte_end":147464,"line_start":28,"line_end":28,"column_start":1,"column_end":96}},{"value":"/ before their respective **Drawing** types are dropped.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":147465,"byte_end":147523,"line_start":29,"line_end":29,"column_start":1,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":2534},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"properties","qualname":"::draw::properties","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/mod.rs","parent":null,"children":[{"krate":0,"index":2535},{"krate":0,"index":2574},{"krate":0,"index":2587},{"krate":0,"index":2709},{"krate":0,"index":2745},{"krate":0,"index":2748},{"krate":0,"index":2751},{"krate":0,"index":2754},{"krate":0,"index":2757},{"krate":0,"index":2760},{"krate":0,"index":2763},{"krate":0,"index":2764},{"krate":0,"index":2765}],"decl_id":null,"docs":" Parameters which a **Drawing** instance may use to describe certain properties of a drawing.","sig":null,"attributes":[{"value":"/ Parameters which a **Drawing** instance may use to describe certain properties of a drawing.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/mod.rs","byte_start":270915,"byte_end":271011,"line_start":1,"line_end":1,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/mod.rs","byte_start":271012,"byte_end":271015,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Each time a new method is chained onto a **Drawing** instance, it uses the given values to set","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/mod.rs","byte_start":271016,"byte_end":271114,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"/ one or more properties for the drawing.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/mod.rs","byte_start":271115,"byte_end":271158,"line_start":4,"line_end":4,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/mod.rs","byte_start":271159,"byte_end":271162,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Each **Drawing** instance is associated with a specific **Node** in the geometry graph and has","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/mod.rs","byte_start":271163,"byte_end":271261,"line_start":6,"line_end":6,"column_start":1,"column_end":99}},{"value":"/ a unique **node::Index** to simplify this.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/mod.rs","byte_start":271262,"byte_end":271308,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":2535},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"color","qualname":"::draw::properties::color","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","parent":null,"children":[{"krate":0,"index":2536},{"krate":0,"index":2537},{"krate":0,"index":2540},{"krate":0,"index":2543},{"krate":0,"index":2546},{"krate":0,"index":2549},{"krate":0,"index":2552},{"krate":0,"index":2553},{"krate":0,"index":2554},{"krate":0,"index":2571}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2552},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":272053,"byte_end":272065,"line_start":5,"line_end":5,"column_start":10,"column_end":22},"name":"DefaultSrgba","qualname":"::draw::properties::color::DefaultSrgba","value":"color::Srgba<color::DefaultScalar>","parent":null,"children":[],"decl_id":null,"docs":" A **Srgba** type with the default Scalar.\n","sig":null,"attributes":[{"value":"/ A **Srgba** type with the default Scalar.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":271998,"byte_end":272043,"line_start":4,"line_end":4,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":2553},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":272163,"byte_end":272178,"line_start":8,"line_end":8,"column_start":10,"column_end":25},"name":"DefaultLinSrgba","qualname":"::draw::properties::color::DefaultLinSrgba","value":"color::LinSrgba<color::DefaultScalar>","parent":null,"children":[],"decl_id":null,"docs":" A **LinSrgba** type with the default Scalar.\n","sig":null,"attributes":[{"value":"/ A **LinSrgba** type with the default Scalar.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":272105,"byte_end":272153,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":2554},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":272270,"byte_end":272278,"line_start":11,"line_end":11,"column_start":11,"column_end":19},"name":"SetColor","qualname":"::draw::properties::color::SetColor","value":"SetColor<S>: Sized","parent":null,"children":[{"krate":0,"index":2556},{"krate":0,"index":2557},{"krate":0,"index":2559},{"krate":0,"index":2561},{"krate":0,"index":2562},{"krate":0,"index":2564},{"krate":0,"index":2565},{"krate":0,"index":2566},{"krate":0,"index":2567},{"krate":0,"index":2568},{"krate":0,"index":2569}],"decl_id":null,"docs":" Nodes that support setting colors.\n","sig":null,"attributes":[{"value":"/ Nodes that support setting colors.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":272221,"byte_end":272259,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2556},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":272414,"byte_end":272422,"line_start":16,"line_end":16,"column_start":8,"column_end":16},"name":"rgba_mut","qualname":"::draw::properties::color::SetColor::rgba_mut","value":"fn rgba_mut(&mut Self) -> &mut Option<LinSrgba<S>>","parent":{"krate":0,"index":2554},"children":[],"decl_id":null,"docs":" Provide a mutable reference to the RGBA field which can be used for setting colors.\n","sig":null,"attributes":[{"value":"/ Provide a mutable reference to the RGBA field which can be used for setting colors.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":272319,"byte_end":272406,"line_start":15,"line_end":15,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":2557},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":272682,"byte_end":272687,"line_start":23,"line_end":23,"column_start":8,"column_end":13},"name":"color","qualname":"::draw::properties::color::SetColor::color","value":"fn color<C>(Self, C) -> Self where C: IntoLinSrgba<S>","parent":{"krate":0,"index":2554},"children":[],"decl_id":null,"docs":" Specify a color.","sig":null,"attributes":[{"value":"/ Specify a color.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":272468,"byte_end":272488,"line_start":18,"line_end":18,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":272493,"byte_end":272496,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ This method supports any color type that can be converted into RGBA.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":272501,"byte_end":272573,"line_start":20,"line_end":20,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":272578,"byte_end":272581,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Colors that have no alpha channel will be given an opaque alpha channel value `1.0`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":272586,"byte_end":272674,"line_start":22,"line_end":22,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":2559},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":272907,"byte_end":272910,"line_start":32,"line_end":32,"column_start":8,"column_end":11},"name":"rgb","qualname":"::draw::properties::color::SetColor::rgb","value":"fn rgb<T>(Self, T, T, T) -> Self where T: Component, S: Float","parent":{"krate":0,"index":2554},"children":[],"decl_id":null,"docs":" Specify the color via red, green and blue channels.\n","sig":null,"attributes":[{"value":"/ Specify the color via red, green and blue channels.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":272844,"byte_end":272899,"line_start":31,"line_end":31,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2561},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":273130,"byte_end":273134,"line_start":41,"line_end":41,"column_start":8,"column_end":12},"name":"rgb8","qualname":"::draw::properties::color::SetColor::rgb8","value":"fn rgb8(Self, u8, u8, u8) -> Self where S: Float","parent":{"krate":0,"index":2554},"children":[],"decl_id":null,"docs":" Specify the color via red, green and blue channels as bytes\n","sig":null,"attributes":[{"value":"/ Specify the color via red, green and blue channels as bytes","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":273059,"byte_end":273122,"line_start":40,"line_end":40,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2562},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":273337,"byte_end":273341,"line_start":49,"line_end":49,"column_start":8,"column_end":12},"name":"rgba","qualname":"::draw::properties::color::SetColor::rgba","value":"fn rgba<T>(Self, T, T, T, T) -> Self where T: Component, S: Float","parent":{"krate":0,"index":2554},"children":[],"decl_id":null,"docs":" Specify the color via red, green, blue and alpha channels.\n","sig":null,"attributes":[{"value":"/ Specify the color via red, green, blue and alpha channels.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":273267,"byte_end":273329,"line_start":48,"line_end":48,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2564},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":273578,"byte_end":273583,"line_start":58,"line_end":58,"column_start":8,"column_end":13},"name":"rgba8","qualname":"::draw::properties::color::SetColor::rgba8","value":"fn rgba8(Self, u8, u8, u8, u8) -> Self where S: Float","parent":{"krate":0,"index":2554},"children":[],"decl_id":null,"docs":" Specify the color via red, green, blue and alpha channels as bytes\n","sig":null,"attributes":[{"value":"/ Specify the color via red, green, blue and alpha channels as bytes","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":273500,"byte_end":273570,"line_start":57,"line_end":57,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2565},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":274149,"byte_end":274152,"line_start":74,"line_end":74,"column_start":8,"column_end":11},"name":"hsl","qualname":"::draw::properties::color::SetColor::hsl","value":"fn hsl(Self, S, S, S) -> Self where S: Float + Into<color::RgbHue<S>>","parent":{"krate":0,"index":2554},"children":[],"decl_id":null,"docs":" Specify the color via hue, saturation and luminance.","sig":null,"attributes":[{"value":"/ Specify the color via hue, saturation and luminance.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":273727,"byte_end":273783,"line_start":65,"line_end":65,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":273788,"byte_end":273791,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ If you're looking for HSV or HSB, use the `hsv` method instead.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":273796,"byte_end":273863,"line_start":67,"line_end":67,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":273868,"byte_end":273871,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ The given hue expects a value between `0.0` and `1.0` where `0.0` is 0 degress and `1.0` is","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":273876,"byte_end":273971,"line_start":69,"line_end":69,"column_start":5,"column_end":100}},{"value":"/ 360 degrees (or 2 PI radians).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":273976,"byte_end":274010,"line_start":70,"line_end":70,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":274015,"byte_end":274018,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ See the [wikipedia entry](https://en.wikipedia.org/wiki/HSL_and_HSV) for more details on","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":274023,"byte_end":274115,"line_start":72,"line_end":72,"column_start":5,"column_end":97}},{"value":"/ this color space.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":274120,"byte_end":274141,"line_start":73,"line_end":73,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2566},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":274821,"byte_end":274825,"line_start":91,"line_end":91,"column_start":8,"column_end":12},"name":"hsla","qualname":"::draw::properties::color::SetColor::hsla","value":"fn hsla(Self, S, S, S, S) -> Self where S: Float + Into<color::RgbHue<S>>","parent":{"krate":0,"index":2554},"children":[],"decl_id":null,"docs":" Specify the color via hue, saturation, luminance and an alpha channel.","sig":null,"attributes":[{"value":"/ Specify the color via hue, saturation, luminance and an alpha channel.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":274378,"byte_end":274452,"line_start":82,"line_end":82,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":274457,"byte_end":274460,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ If you're looking for HSVA or HSBA, use the `hsva` method instead.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":274465,"byte_end":274535,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":274540,"byte_end":274543,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ The given hue expects a value between `0.0` and `1.0` where `0.0` is 0 degress and `1.0` is","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":274548,"byte_end":274643,"line_start":86,"line_end":86,"column_start":5,"column_end":100}},{"value":"/ 360 degrees (or 2 PI radians).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":274648,"byte_end":274682,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":274687,"byte_end":274690,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ See the [wikipedia entry](https://en.wikipedia.org/wiki/HSL_and_HSV) for more details on","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":274695,"byte_end":274787,"line_start":89,"line_end":89,"column_start":5,"column_end":97}},{"value":"/ this color space.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":274792,"byte_end":274813,"line_start":90,"line_end":90,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":275469,"byte_end":275472,"line_start":108,"line_end":108,"column_start":8,"column_end":11},"name":"hsv","qualname":"::draw::properties::color::SetColor::hsv","value":"fn hsv(Self, S, S, S) -> Self where S: Float","parent":{"krate":0,"index":2554},"children":[],"decl_id":null,"docs":" Specify the color via hue, saturation and *value* (brightness).","sig":null,"attributes":[{"value":"/ Specify the color via hue, saturation and *value* (brightness).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":275061,"byte_end":275128,"line_start":99,"line_end":99,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":275133,"byte_end":275136,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is sometimes also known as \"hsb\".","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":275141,"byte_end":275183,"line_start":101,"line_end":101,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":275188,"byte_end":275191,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ The given hue expects a value between `0.0` and `1.0` where `0.0` is 0 degress and `1.0` is","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":275196,"byte_end":275291,"line_start":103,"line_end":103,"column_start":5,"column_end":100}},{"value":"/ 360 degrees (or 2 PI radians).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":275296,"byte_end":275330,"line_start":104,"line_end":104,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":275335,"byte_end":275338,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ See the [wikipedia entry](https://en.wikipedia.org/wiki/HSL_and_HSV) for more details on","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":275343,"byte_end":275435,"line_start":106,"line_end":106,"column_start":5,"column_end":97}},{"value":"/ this color space.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":275440,"byte_end":275461,"line_start":107,"line_end":107,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2568},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":276100,"byte_end":276104,"line_start":125,"line_end":125,"column_start":8,"column_end":12},"name":"hsva","qualname":"::draw::properties::color::SetColor::hsva","value":"fn hsva(Self, S, S, S, S) -> Self where S: Float","parent":{"krate":0,"index":2554},"children":[],"decl_id":null,"docs":" Specify the color via hue, saturation, *value* (brightness) and an alpha channel.","sig":null,"attributes":[{"value":"/ Specify the color via hue, saturation, *value* (brightness) and an alpha channel.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":275673,"byte_end":275758,"line_start":116,"line_end":116,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":275763,"byte_end":275766,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This is sometimes also known as \"hsba\".","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":275771,"byte_end":275814,"line_start":118,"line_end":118,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":275819,"byte_end":275822,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The given hue expects a value between `0.0` and `1.0` where `0.0` is 0 degress and `1.0` is","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":275827,"byte_end":275922,"line_start":120,"line_end":120,"column_start":5,"column_end":100}},{"value":"/ 360 degrees (or 2 PI radians).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":275927,"byte_end":275961,"line_start":121,"line_end":121,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":275966,"byte_end":275969,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ See the [wikipedia entry](https://en.wikipedia.org/wiki/HSL_and_HSV) for more details on","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":275974,"byte_end":276066,"line_start":123,"line_end":123,"column_start":5,"column_end":97}},{"value":"/ this color space.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":276071,"byte_end":276092,"line_start":124,"line_end":124,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":276466,"byte_end":276470,"line_start":136,"line_end":136,"column_start":8,"column_end":12},"name":"gray","qualname":"::draw::properties::color::SetColor::gray","value":"fn gray<T>(Self, T) -> Self where T: Component, S: Float","parent":{"krate":0,"index":2554},"children":[],"decl_id":null,"docs":" Specify the color as gray scale","sig":null,"attributes":[{"value":"/ Specify the color as gray scale","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":276315,"byte_end":276350,"line_start":133,"line_end":133,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":276355,"byte_end":276358,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ The given g expects a value between `0.0` and `1.0` where `0.0` is black and `1.0` is white","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":276363,"byte_end":276458,"line_start":135,"line_end":135,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":2573},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":276682,"byte_end":276690,"line_start":149,"line_end":149,"column_start":8,"column_end":16},"name":"rgba_mut","qualname":"<Option<LinSrgba<S>> as draw::properties::color::SetColor>::rgba_mut","value":"fn rgba_mut(&mut Self) -> &mut Option<LinSrgba<S>>","parent":{"krate":0,"index":2554},"children":[],"decl_id":{"krate":0,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2574},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fill","qualname":"::draw::properties::fill","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","parent":null,"children":[{"krate":0,"index":2575},{"krate":0,"index":2578},{"krate":0,"index":2585}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2578},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":277036,"byte_end":277043,"line_start":7,"line_end":7,"column_start":11,"column_end":18},"name":"SetFill","qualname":"::draw::properties::fill::SetFill","value":"SetFill: Sized","parent":null,"children":[{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2584}],"decl_id":null,"docs":" Nodes that support fill tessellation.","sig":null,"attributes":[{"value":"/ Nodes that support fill tessellation.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":276792,"byte_end":276833,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":276834,"byte_end":276837,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This trait allows the `Drawing` context to automatically provide an implementation of the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":276838,"byte_end":276931,"line_start":5,"line_end":5,"column_start":1,"column_end":94}},{"value":"/ following builder methods for all primitives that provide some fill tessellation options.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":276932,"byte_end":277025,"line_start":6,"line_end":6,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":2579},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":277124,"byte_end":277140,"line_start":9,"line_end":9,"column_start":8,"column_end":24},"name":"fill_options_mut","qualname":"::draw::properties::fill::SetFill::fill_options_mut","value":"fn fill_options_mut(&mut Self) -> &mut FillOptions","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Provide a mutable reference to the `FillOptions` field.\n","sig":null,"attributes":[{"value":"/ Provide a mutable reference to the `FillOptions` field.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":277057,"byte_end":277116,"line_start":8,"line_end":8,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2580},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":277241,"byte_end":277250,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"fill_opts","qualname":"::draw::properties::fill::SetFill::fill_opts","value":"fn fill_opts(Self, FillOptions) -> Self","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Specify the whole set of fill tessellation options.\n","sig":null,"attributes":[{"value":"/ Specify the whole set of fill tessellation options.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":277178,"byte_end":277233,"line_start":11,"line_end":11,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2581},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":277435,"byte_end":277449,"line_start":18,"line_end":18,"column_start":8,"column_end":22},"name":"fill_tolerance","qualname":"::draw::properties::fill::SetFill::fill_tolerance","value":"fn fill_tolerance(Self, f32) -> Self","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Maximum allowed distance to the path when building an approximation.\n","sig":null,"attributes":[{"value":"/ Maximum allowed distance to the path when building an approximation.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":277355,"byte_end":277427,"line_start":17,"line_end":17,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2582},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":277727,"byte_end":277736,"line_start":26,"line_end":26,"column_start":8,"column_end":17},"name":"fill_rule","qualname":"::draw::properties::fill::SetFill::fill_rule","value":"fn fill_rule(Self, lyon::tessellation::FillRule) -> Self","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Specify the rule used to determine what is inside and what is outside of the shape.","sig":null,"attributes":[{"value":"/ Specify the rule used to determine what is inside and what is outside of the shape.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":277565,"byte_end":277652,"line_start":23,"line_end":23,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":277657,"byte_end":277660,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ Currently, only the `EvenOdd` rule is implemented.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":277665,"byte_end":277719,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2583},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":277992,"byte_end":278014,"line_start":34,"line_end":34,"column_start":8,"column_end":30},"name":"fill_sweep_orientation","qualname":"::draw::properties::fill::SetFill::fill_sweep_orientation","value":"fn fill_sweep_orientation(Self, lyon::tessellation::Orientation) -> Self","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" Whether to perform a vertical or horizontal traversal of the geometry.","sig":null,"attributes":[{"value":"/ Whether to perform a vertical or horizontal traversal of the geometry.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":277867,"byte_end":277941,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":277946,"byte_end":277949,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Default value: `Vertical`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":277954,"byte_end":277984,"line_start":33,"line_end":33,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2584},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":278527,"byte_end":278547,"line_start":46,"line_end":46,"column_start":8,"column_end":28},"name":"handle_intersections","qualname":"::draw::properties::fill::SetFill::handle_intersections","value":"fn handle_intersections(Self, bool) -> Self","parent":{"krate":0,"index":2578},"children":[],"decl_id":null,"docs":" A fast path to avoid some expensive operations if the path is known to not have any\n self-intersections.","sig":null,"attributes":[{"value":"/ A fast path to avoid some expensive operations if the path is known to not have any","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":278170,"byte_end":278257,"line_start":39,"line_end":39,"column_start":5,"column_end":92}},{"value":"/ self-intersections.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":278262,"byte_end":278285,"line_start":40,"line_end":40,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":278290,"byte_end":278293,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Do not set this to `false` if the path may have intersecting edges else the tessellator may","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":278298,"byte_end":278393,"line_start":42,"line_end":42,"column_start":5,"column_end":100}},{"value":"/ panic or produce incorrect results. In doubt, do not change the default value.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":278398,"byte_end":278480,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":278485,"byte_end":278488,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Default value: `true`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":278493,"byte_end":278519,"line_start":45,"line_end":45,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2586},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":278713,"byte_end":278729,"line_start":53,"line_end":53,"column_start":8,"column_end":24},"name":"fill_options_mut","qualname":"<Option<FillOptions> as draw::properties::fill::SetFill>::fill_options_mut","value":"fn fill_options_mut(&mut Self) -> &mut FillOptions","parent":{"krate":0,"index":2578},"children":[],"decl_id":{"krate":0,"index":2579},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2587},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spatial","qualname":"::draw::properties::spatial","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","parent":null,"children":[{"krate":0,"index":2588},{"krate":0,"index":2610},{"krate":0,"index":2663},{"krate":0,"index":2689},{"krate":0,"index":2692},{"krate":0,"index":2695},{"krate":0,"index":2698},{"krate":0,"index":2699},{"krate":0,"index":4968},{"krate":0,"index":4972},{"krate":0,"index":4973},{"krate":0,"index":4975},{"krate":0,"index":4977},{"krate":0,"index":4978},{"krate":0,"index":2701},{"krate":0,"index":2703},{"krate":0,"index":2705},{"krate":0,"index":2707}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2588},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dimension","qualname":"::draw::properties::spatial::dimension","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","parent":null,"children":[{"krate":0,"index":2589},{"krate":0,"index":2590},{"krate":0,"index":2593},{"krate":0,"index":4923},{"krate":0,"index":4927},{"krate":0,"index":4928},{"krate":0,"index":4930},{"krate":0,"index":4932},{"krate":0,"index":4934},{"krate":0,"index":4935},{"krate":0,"index":2596},{"krate":0,"index":2608}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4923},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":280304,"byte_end":280314,"line_start":5,"line_end":5,"column_start":12,"column_end":22},"name":"Properties","qualname":"::draw::properties::spatial::dimension::Properties","value":"Properties { x, y, z }","parent":null,"children":[{"krate":0,"index":4924},{"krate":0,"index":4925},{"krate":0,"index":4926}],"decl_id":null,"docs":" Dimension properties for **Drawing** a **Primitive**.\n","sig":null,"attributes":[{"value":"/ Dimension properties for **Drawing** a **Primitive**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":280185,"byte_end":280242,"line_start":3,"line_end":3,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":4924},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":280325,"byte_end":280326,"line_start":6,"line_end":6,"column_start":9,"column_end":10},"name":"x","qualname":"::draw::properties::spatial::dimension::Properties::x","value":"std::option::Option<f32>","parent":{"krate":0,"index":4923},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4925},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":280349,"byte_end":280350,"line_start":7,"line_end":7,"column_start":9,"column_end":10},"name":"y","qualname":"::draw::properties::spatial::dimension::Properties::y","value":"std::option::Option<f32>","parent":{"krate":0,"index":4923},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4926},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":280373,"byte_end":280374,"line_start":8,"line_end":8,"column_start":9,"column_end":10},"name":"z","qualname":"::draw::properties::spatial::dimension::Properties::z","value":"std::option::Option<f32>","parent":{"krate":0,"index":4923},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2596},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":280452,"byte_end":280465,"line_start":12,"line_end":12,"column_start":11,"column_end":24},"name":"SetDimensions","qualname":"::draw::properties::spatial::dimension::SetDimensions","value":"SetDimensions: Sized","parent":null,"children":[{"krate":0,"index":2597},{"krate":0,"index":2598},{"krate":0,"index":2599},{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2604},{"krate":0,"index":2605},{"krate":0,"index":2606},{"krate":0,"index":2607}],"decl_id":null,"docs":" Primitives that support different dimensions.\n","sig":null,"attributes":[{"value":"/ Primitives that support different dimensions.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":280392,"byte_end":280441,"line_start":11,"line_end":11,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2597},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":280565,"byte_end":280575,"line_start":14,"line_end":14,"column_start":8,"column_end":18},"name":"properties","qualname":"::draw::properties::spatial::dimension::SetDimensions::properties","value":"fn properties(&mut Self) -> &mut Properties","parent":{"krate":0,"index":2596},"children":[],"decl_id":null,"docs":" Provide a mutable reference to the **dimension::Properties** for updating.\n","sig":null,"attributes":[{"value":"/ Provide a mutable reference to the **dimension::Properties** for updating.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":280479,"byte_end":280557,"line_start":13,"line_end":13,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2598},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":280665,"byte_end":280670,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"width","qualname":"::draw::properties::spatial::dimension::SetDimensions::width","value":"fn width(Self, f32) -> Self","parent":{"krate":0,"index":2596},"children":[],"decl_id":null,"docs":" Set the absolute width for the primitive.\n","sig":null,"attributes":[{"value":"/ Set the absolute width for the primitive.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":280612,"byte_end":280657,"line_start":16,"line_end":16,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2599},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":280816,"byte_end":280822,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"height","qualname":"::draw::properties::spatial::dimension::SetDimensions::height","value":"fn height(Self, f32) -> Self","parent":{"krate":0,"index":2596},"children":[],"decl_id":null,"docs":" Set the absolute height for the primitive.\n","sig":null,"attributes":[{"value":"/ Set the absolute height for the primitive.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":280762,"byte_end":280808,"line_start":22,"line_end":22,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2600},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":280967,"byte_end":280972,"line_start":29,"line_end":29,"column_start":8,"column_end":13},"name":"depth","qualname":"::draw::properties::spatial::dimension::SetDimensions::depth","value":"fn depth(Self, f32) -> Self","parent":{"krate":0,"index":2596},"children":[],"decl_id":null,"docs":" Set the absolute depth for the primitive.\n","sig":null,"attributes":[{"value":"/ Set the absolute depth for the primitive.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":280914,"byte_end":280959,"line_start":28,"line_end":28,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2601},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":281112,"byte_end":281113,"line_start":35,"line_end":35,"column_start":8,"column_end":9},"name":"w","qualname":"::draw::properties::spatial::dimension::SetDimensions::w","value":"fn w(Self, f32) -> Self","parent":{"krate":0,"index":2596},"children":[],"decl_id":null,"docs":" Short-hand for the **width** method.\n","sig":null,"attributes":[{"value":"/ Short-hand for the **width** method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":281064,"byte_end":281104,"line_start":34,"line_end":34,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2602},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":281220,"byte_end":281221,"line_start":40,"line_end":40,"column_start":8,"column_end":9},"name":"h","qualname":"::draw::properties::spatial::dimension::SetDimensions::h","value":"fn h(Self, f32) -> Self","parent":{"krate":0,"index":2596},"children":[],"decl_id":null,"docs":" Short-hand for the **height** method.\n","sig":null,"attributes":[{"value":"/ Short-hand for the **height** method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":281171,"byte_end":281212,"line_start":39,"line_end":39,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2603},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":281328,"byte_end":281329,"line_start":45,"line_end":45,"column_start":8,"column_end":9},"name":"d","qualname":"::draw::properties::spatial::dimension::SetDimensions::d","value":"fn d(Self, f32) -> Self","parent":{"krate":0,"index":2596},"children":[],"decl_id":null,"docs":" Short-hand for the **depth** method.\n","sig":null,"attributes":[{"value":"/ Short-hand for the **depth** method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":281280,"byte_end":281320,"line_start":44,"line_end":44,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2604},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":281452,"byte_end":281454,"line_start":50,"line_end":50,"column_start":8,"column_end":10},"name":"wh","qualname":"::draw::properties::spatial::dimension::SetDimensions::wh","value":"fn wh(Self, Vec2) -> Self","parent":{"krate":0,"index":2596},"children":[],"decl_id":null,"docs":" Set the **x** and **y** dimensions for the primitive.\n","sig":null,"attributes":[{"value":"/ Set the **x** and **y** dimensions for the primitive.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":281387,"byte_end":281444,"line_start":49,"line_end":49,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2605},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":281590,"byte_end":281593,"line_start":55,"line_end":55,"column_start":8,"column_end":11},"name":"whd","qualname":"::draw::properties::spatial::dimension::SetDimensions::whd","value":"fn whd(Self, Vec3) -> Self","parent":{"krate":0,"index":2596},"children":[],"decl_id":null,"docs":" Set the **x**, **y** and **z** dimensions for the primitive.\n","sig":null,"attributes":[{"value":"/ Set the **x**, **y** and **z** dimensions for the primitive.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":281518,"byte_end":281582,"line_start":54,"line_end":54,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2606},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":281719,"byte_end":281722,"line_start":60,"line_end":60,"column_start":8,"column_end":11},"name":"w_h","qualname":"::draw::properties::spatial::dimension::SetDimensions::w_h","value":"fn w_h(Self, f32, f32) -> Self","parent":{"krate":0,"index":2596},"children":[],"decl_id":null,"docs":" Set the width and height for the primitive.\n","sig":null,"attributes":[{"value":"/ Set the width and height for the primitive.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":281664,"byte_end":281711,"line_start":59,"line_end":59,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2607},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":281852,"byte_end":281857,"line_start":65,"line_end":65,"column_start":8,"column_end":13},"name":"w_h_d","qualname":"::draw::properties::spatial::dimension::SetDimensions::w_h_d","value":"fn w_h_d(Self, f32, f32, f32) -> Self","parent":{"krate":0,"index":2596},"children":[],"decl_id":null,"docs":" Set the width and height for the primitive.\n","sig":null,"attributes":[{"value":"/ Set the width and height for the primitive.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":281797,"byte_end":281844,"line_start":64,"line_end":64,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2609},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":281985,"byte_end":281995,"line_start":71,"line_end":71,"column_start":8,"column_end":18},"name":"properties","qualname":"<Properties as draw::properties::spatial::dimension::SetDimensions>::properties","value":"fn properties(&mut Self) -> &mut Properties","parent":{"krate":0,"index":2596},"children":[],"decl_id":{"krate":0,"index":2597},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2610},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"orientation","qualname":"::draw::properties::spatial::orientation","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","parent":null,"children":[{"krate":0,"index":2611},{"krate":0,"index":2614},{"krate":0,"index":2615},{"krate":0,"index":2618},{"krate":0,"index":2621},{"krate":0,"index":2624},{"krate":0,"index":2627},{"krate":0,"index":2628},{"krate":0,"index":2631},{"krate":0,"index":4938},{"krate":0,"index":4948},{"krate":0,"index":4949},{"krate":0,"index":4951},{"krate":0,"index":4953},{"krate":0,"index":4954},{"krate":0,"index":2634},{"krate":0,"index":2637},{"krate":0,"index":2658},{"krate":0,"index":2660},{"krate":0,"index":2662}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4939},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":282358,"byte_end":282362,"line_start":9,"line_end":9,"column_start":5,"column_end":9},"name":"Axes","qualname":"::draw::properties::spatial::orientation::Properties::Axes","value":"Properties::Axes(Vec3)","parent":{"krate":0,"index":4938},"children":[],"decl_id":null,"docs":" The orientation described by an angle along each axis.\n","sig":null,"attributes":[{"value":"/ The orientation described by an angle along each axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":282295,"byte_end":282353,"line_start":8,"line_end":8,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":4941},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":282363,"byte_end":282367,"line_start":9,"line_end":9,"column_start":10,"column_end":14},"name":"0","qualname":"::draw::properties::spatial::orientation::Properties::Axes::0","value":"nannou_core::geom::Vec3","parent":{"krate":0,"index":4939},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4942},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":282440,"byte_end":282446,"line_start":11,"line_end":11,"column_start":5,"column_end":11},"name":"LookAt","qualname":"::draw::properties::spatial::orientation::Properties::LookAt","value":"Properties::LookAt(Point3)","parent":{"krate":0,"index":4938},"children":[],"decl_id":null,"docs":" The orientation described by looking at some other point.\n","sig":null,"attributes":[{"value":"/ The orientation described by looking at some other point.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":282374,"byte_end":282435,"line_start":10,"line_end":10,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":4944},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":282447,"byte_end":282453,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"0","qualname":"::draw::properties::spatial::orientation::Properties::LookAt::0","value":"nannou_core::geom::Vec3","parent":{"krate":0,"index":4942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4945},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":282500,"byte_end":282504,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Quat","qualname":"::draw::properties::spatial::orientation::Properties::Quat","value":"Properties::Quat(Quat)","parent":{"krate":0,"index":4938},"children":[],"decl_id":null,"docs":" Angle described by quarternion.\n","sig":null,"attributes":[{"value":"/ Angle described by quarternion.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":282460,"byte_end":282495,"line_start":12,"line_end":12,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":4947},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":282505,"byte_end":282509,"line_start":13,"line_end":13,"column_start":10,"column_end":14},"name":"0","qualname":"::draw::properties::spatial::orientation::Properties::Quat::0","value":"nannou_core::prelude::Quat","parent":{"krate":0,"index":4945},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4938},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":282278,"byte_end":282288,"line_start":7,"line_end":7,"column_start":10,"column_end":20},"name":"Properties","qualname":"::draw::properties::spatial::orientation::Properties","value":"enum Properties { Axes(Vec3), LookAt(Point3), Quat(Quat), }","parent":null,"children":[{"krate":0,"index":4939},{"krate":0,"index":4942},{"krate":0,"index":4945}],"decl_id":null,"docs":" Orientation properties for **Drawing** a **Primitive**.\n","sig":null,"attributes":[{"value":"/ Orientation properties for **Drawing** a **Primitive**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":282168,"byte_end":282227,"line_start":5,"line_end":5,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2635},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":282544,"byte_end":282553,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"transform","qualname":"<Properties>::transform","value":"fn transform(&Self) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2636},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":283114,"byte_end":283128,"line_start":33,"line_end":33,"column_start":12,"column_end":26},"name":"switch_to_axes","qualname":"<Properties>::switch_to_axes","value":"fn switch_to_axes(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" If the `Properties` was set to the `LookAt` variant, this method switches to the `Axes`\n variant.","sig":null,"attributes":[{"value":"/ If the `Properties` was set to the `LookAt` variant, this method switches to the `Axes`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":282922,"byte_end":283013,"line_start":29,"line_end":29,"column_start":5,"column_end":96}},{"value":"/ variant.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":283018,"byte_end":283030,"line_start":30,"line_end":30,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":283035,"byte_end":283038,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ If the `Properties` is already `Axes`, nothing changes.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":283043,"byte_end":283102,"line_start":32,"line_end":32,"column_start":5,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":2637},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":283324,"byte_end":283338,"line_start":41,"line_end":41,"column_start":11,"column_end":25},"name":"SetOrientation","qualname":"::draw::properties::spatial::orientation::SetOrientation","value":"SetOrientation: Sized","parent":null,"children":[{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":2645},{"krate":0,"index":2646},{"krate":0,"index":2647},{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2650},{"krate":0,"index":2651},{"krate":0,"index":2652},{"krate":0,"index":2653},{"krate":0,"index":2654},{"krate":0,"index":2655},{"krate":0,"index":2656},{"krate":0,"index":2657}],"decl_id":null,"docs":" An API for setting the **orientation::Properties**.\n","sig":null,"attributes":[{"value":"/ An API for setting the **orientation::Properties**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":283258,"byte_end":283313,"line_start":40,"line_end":40,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2638},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":283440,"byte_end":283450,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"properties","qualname":"::draw::properties::spatial::orientation::SetOrientation::properties","value":"fn properties(&mut Self) -> &mut Properties","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" Provide a mutable reference to the **orientation::Properties** for updating.\n","sig":null,"attributes":[{"value":"/ Provide a mutable reference to the **orientation::Properties** for updating.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":283352,"byte_end":283432,"line_start":42,"line_end":42,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2639},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":283612,"byte_end":283619,"line_start":48,"line_end":48,"column_start":8,"column_end":15},"name":"look_at","qualname":"::draw::properties::spatial::orientation::SetOrientation::look_at","value":"fn look_at(Self, Point3) -> Self","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" Describe orientation via the vector that points to the given target.\n","sig":null,"attributes":[{"value":"/ Describe orientation via the vector that points to the given target.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":283532,"byte_end":283604,"line_start":47,"line_end":47,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2640},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":283855,"byte_end":283864,"line_start":56,"line_end":56,"column_start":8,"column_end":17},"name":"x_radians","qualname":"::draw::properties::spatial::orientation::SetOrientation::x_radians","value":"fn x_radians(Self, f32) -> Self","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" Specify the orientation around the *x* axis as an absolute value in radians.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *x* axis as an absolute value in radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":283767,"byte_end":283847,"line_start":55,"line_end":55,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2641},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":284095,"byte_end":284104,"line_start":63,"line_end":63,"column_start":8,"column_end":17},"name":"y_radians","qualname":"::draw::properties::spatial::orientation::SetOrientation::y_radians","value":"fn y_radians(Self, f32) -> Self","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" Specify the orientation around the *y* axis as an absolute value in radians.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *y* axis as an absolute value in radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":284007,"byte_end":284087,"line_start":62,"line_end":62,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2642},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":284335,"byte_end":284344,"line_start":70,"line_end":70,"column_start":8,"column_end":17},"name":"z_radians","qualname":"::draw::properties::spatial::orientation::SetOrientation::z_radians","value":"fn z_radians(Self, f32) -> Self","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" Specify the orientation around the *z* axis as an absolute value in radians.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *z* axis as an absolute value in radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":284247,"byte_end":284327,"line_start":69,"line_end":69,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2643},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":284575,"byte_end":284584,"line_start":77,"line_end":77,"column_start":8,"column_end":17},"name":"x_degrees","qualname":"::draw::properties::spatial::orientation::SetOrientation::x_degrees","value":"fn x_degrees(Self, f32) -> Self","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" Specify the orientation around the *x* axis as an absolute value in degrees.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *x* axis as an absolute value in degrees.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":284487,"byte_end":284567,"line_start":76,"line_end":76,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2644},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":284746,"byte_end":284755,"line_start":82,"line_end":82,"column_start":8,"column_end":17},"name":"y_degrees","qualname":"::draw::properties::spatial::orientation::SetOrientation::y_degrees","value":"fn y_degrees(Self, f32) -> Self","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" Specify the orientation around the *y* axis as an absolute value in degrees.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *y* axis as an absolute value in degrees.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":284658,"byte_end":284738,"line_start":81,"line_end":81,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2645},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":284917,"byte_end":284926,"line_start":87,"line_end":87,"column_start":8,"column_end":17},"name":"z_degrees","qualname":"::draw::properties::spatial::orientation::SetOrientation::z_degrees","value":"fn z_degrees(Self, f32) -> Self","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" Specify the orientation around the *z* axis as an absolute value in degrees.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *z* axis as an absolute value in degrees.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":284829,"byte_end":284909,"line_start":86,"line_end":86,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2646},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":285093,"byte_end":285100,"line_start":92,"line_end":92,"column_start":8,"column_end":15},"name":"x_turns","qualname":"::draw::properties::spatial::orientation::SetOrientation::x_turns","value":"fn x_turns(Self, f32) -> Self","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" Specify the orientation around the *x* axis as a number of turns around the axis.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *x* axis as a number of turns around the axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":285000,"byte_end":285085,"line_start":91,"line_end":91,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2647},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":285269,"byte_end":285276,"line_start":97,"line_end":97,"column_start":8,"column_end":15},"name":"y_turns","qualname":"::draw::properties::spatial::orientation::SetOrientation::y_turns","value":"fn y_turns(Self, f32) -> Self","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" Specify the orientation around the *y* axis as a number of turns around the axis.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *y* axis as a number of turns around the axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":285176,"byte_end":285261,"line_start":96,"line_end":96,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2648},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":285445,"byte_end":285452,"line_start":102,"line_end":102,"column_start":8,"column_end":15},"name":"z_turns","qualname":"::draw::properties::spatial::orientation::SetOrientation::z_turns","value":"fn z_turns(Self, f32) -> Self","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" Specify the orientation around the *z* axis as a number of turns around the axis.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *z* axis as a number of turns around the axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":285352,"byte_end":285437,"line_start":101,"line_end":101,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2649},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":285722,"byte_end":285729,"line_start":109,"line_end":109,"column_start":8,"column_end":15},"name":"radians","qualname":"::draw::properties::spatial::orientation::SetOrientation::radians","value":"fn radians(Self, Vec3) -> Self","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" Specify the orientation along each axis with the given **Vector** of radians.","sig":null,"attributes":[{"value":"/ Specify the orientation along each axis with the given **Vector** of radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":285528,"byte_end":285609,"line_start":106,"line_end":106,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":285614,"byte_end":285617,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ This has the same affect as calling `self.x_radians(v.x).y_radians(v.y).z_radians(v.z)`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":285622,"byte_end":285714,"line_start":108,"line_end":108,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":2650},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":286018,"byte_end":286025,"line_start":116,"line_end":116,"column_start":8,"column_end":15},"name":"degrees","qualname":"::draw::properties::spatial::orientation::SetOrientation::degrees","value":"fn degrees(Self, Vec3) -> Self","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" Specify the orientation along each axis with the given **Vector** of degrees.","sig":null,"attributes":[{"value":"/ Specify the orientation along each axis with the given **Vector** of degrees.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":285824,"byte_end":285905,"line_start":113,"line_end":113,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":285910,"byte_end":285913,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ This has the same affect as calling `self.x_degrees(v.x).y_degrees(v.y).z_degrees(v.z)`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":285918,"byte_end":286010,"line_start":115,"line_end":115,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":2651},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":286308,"byte_end":286313,"line_start":123,"line_end":123,"column_start":8,"column_end":13},"name":"turns","qualname":"::draw::properties::spatial::orientation::SetOrientation::turns","value":"fn turns(Self, Vec3) -> Self","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" Specify the orientation along each axis with the given **Vector** of \"turns\".","sig":null,"attributes":[{"value":"/ Specify the orientation along each axis with the given **Vector** of \"turns\".","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":286120,"byte_end":286201,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":286206,"byte_end":286209,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This has the same affect as calling `self.x_turns(v.x).y_turns(v.y).z_turns(v.z)`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":286214,"byte_end":286300,"line_start":122,"line_end":122,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":2652},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":286482,"byte_end":286487,"line_start":128,"line_end":128,"column_start":8,"column_end":13},"name":"euler","qualname":"::draw::properties::spatial::orientation::SetOrientation::euler","value":"fn euler(Self, Vec3) -> Self","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" Specify the orientation with the given euler orientation in radians.\n","sig":null,"attributes":[{"value":"/ Specify the orientation with the given euler orientation in radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":286402,"byte_end":286474,"line_start":127,"line_end":127,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2653},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":286614,"byte_end":286624,"line_start":133,"line_end":133,"column_start":8,"column_end":18},"name":"quaternion","qualname":"::draw::properties::spatial::orientation::SetOrientation::quaternion","value":"fn quaternion(Self, Quat) -> Self","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" Specify the orientation with the given **Quaternion**.\n","sig":null,"attributes":[{"value":"/ Specify the orientation with the given **Quaternion**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":286548,"byte_end":286606,"line_start":132,"line_end":132,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2654},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":286885,"byte_end":286890,"line_start":143,"line_end":143,"column_start":8,"column_end":13},"name":"pitch","qualname":"::draw::properties::spatial::orientation::SetOrientation::pitch","value":"fn pitch(Self, f32) -> Self","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" Specify the \"pitch\" of the orientation in radians.","sig":null,"attributes":[{"value":"/ Specify the \"pitch\" of the orientation in radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":286758,"byte_end":286812,"line_start":140,"line_end":140,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":286817,"byte_end":286820,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This has the same effect as calling `x_radians`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":286825,"byte_end":286877,"line_start":142,"line_end":142,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2655},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":287085,"byte_end":287088,"line_start":150,"line_end":150,"column_start":8,"column_end":11},"name":"yaw","qualname":"::draw::properties::spatial::orientation::SetOrientation::yaw","value":"fn yaw(Self, f32) -> Self","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" Specify the \"yaw\" of the orientation in radians.","sig":null,"attributes":[{"value":"/ Specify the \"yaw\" of the orientation in radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":286960,"byte_end":287012,"line_start":147,"line_end":147,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":287017,"byte_end":287020,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This has the same effect as calling `y_radians`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":287025,"byte_end":287077,"line_start":149,"line_end":149,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2656},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":287280,"byte_end":287284,"line_start":157,"line_end":157,"column_start":8,"column_end":12},"name":"roll","qualname":"::draw::properties::spatial::orientation::SetOrientation::roll","value":"fn roll(Self, f32) -> Self","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" Specify the \"roll\" of the orientation in radians.","sig":null,"attributes":[{"value":"/ Specify the \"roll\" of the orientation in radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":287154,"byte_end":287207,"line_start":154,"line_end":154,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":287212,"byte_end":287215,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ This has the same effect as calling `z_radians`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":287220,"byte_end":287272,"line_start":156,"line_end":156,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2657},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":287580,"byte_end":287586,"line_start":165,"line_end":165,"column_start":8,"column_end":14},"name":"rotate","qualname":"::draw::properties::spatial::orientation::SetOrientation::rotate","value":"fn rotate(Self, f32) -> Self","parent":{"krate":0,"index":2637},"children":[],"decl_id":null,"docs":" Assuming we're looking at a 2D plane, positive values cause a clockwise rotation where the\n given value is specified in radians.","sig":null,"attributes":[{"value":"/ Assuming we're looking at a 2D plane, positive values cause a clockwise rotation where the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":287352,"byte_end":287446,"line_start":161,"line_end":161,"column_start":5,"column_end":99}},{"value":"/ given value is specified in radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":287451,"byte_end":287491,"line_start":162,"line_end":162,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":287496,"byte_end":287499,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling the `z_radians` or `roll` methods.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":287504,"byte_end":287572,"line_start":164,"line_end":164,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2659},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":287702,"byte_end":287712,"line_start":171,"line_end":171,"column_start":8,"column_end":18},"name":"properties","qualname":"<Properties as draw::properties::spatial::orientation::SetOrientation>::properties","value":"fn properties(&mut Self) -> &mut Properties","parent":{"krate":0,"index":2637},"children":[],"decl_id":{"krate":0,"index":2638},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2661},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":287804,"byte_end":287811,"line_start":177,"line_end":177,"column_start":8,"column_end":15},"name":"default","qualname":"<Properties as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2663},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"position","qualname":"::draw::properties::spatial::position","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","parent":null,"children":[{"krate":0,"index":2664},{"krate":0,"index":2665},{"krate":0,"index":2668},{"krate":0,"index":2671},{"krate":0,"index":4957},{"krate":0,"index":4959},{"krate":0,"index":4960},{"krate":0,"index":4962},{"krate":0,"index":4964},{"krate":0,"index":4965},{"krate":0,"index":2674},{"krate":0,"index":2683},{"krate":0,"index":2685},{"krate":0,"index":2687}],"decl_id":null,"docs":" Items related to describing positioning along each axis as\n","sig":null,"attributes":[{"value":"/ Items related to describing positioning along each axis as","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":288197,"byte_end":288259,"line_start":1,"line_end":1,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":4957},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":288429,"byte_end":288439,"line_start":8,"line_end":8,"column_start":12,"column_end":22},"name":"Properties","qualname":"::draw::properties::spatial::position::Properties","value":"Properties { point }","parent":null,"children":[{"krate":0,"index":4958}],"decl_id":null,"docs":" Position properties for **Drawing** a **Primitive**.\n","sig":null,"attributes":[{"value":"/ Position properties for **Drawing** a **Primitive**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":288320,"byte_end":288376,"line_start":6,"line_end":6,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":4958},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":288450,"byte_end":288455,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"point","qualname":"::draw::properties::spatial::position::Properties::point","value":"nannou_core::geom::Vec3","parent":{"krate":0,"index":4957},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2674},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":288531,"byte_end":288542,"line_start":13,"line_end":13,"column_start":11,"column_end":22},"name":"SetPosition","qualname":"::draw::properties::spatial::position::SetPosition","value":"SetPosition: Sized","parent":null,"children":[{"krate":0,"index":2675},{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2679},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2682}],"decl_id":null,"docs":" An API for setting the **position::Properties**.\n","sig":null,"attributes":[{"value":"/ An API for setting the **position::Properties**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":288468,"byte_end":288520,"line_start":12,"line_end":12,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2675},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":288641,"byte_end":288651,"line_start":15,"line_end":15,"column_start":8,"column_end":18},"name":"properties","qualname":"::draw::properties::spatial::position::SetPosition::properties","value":"fn properties(&mut Self) -> &mut Properties","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Provide a mutable reference to the **position::Properties** for updating.\n","sig":null,"attributes":[{"value":"/ Provide a mutable reference to the **position::Properties** for updating.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":288556,"byte_end":288633,"line_start":14,"line_end":14,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2676},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":288766,"byte_end":288767,"line_start":18,"line_end":18,"column_start":8,"column_end":9},"name":"x","qualname":"::draw::properties::spatial::position::SetPosition::x","value":"fn x(Self, f32) -> Self","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Build with the given **Absolute** **Position** along the *x* axis.\n","sig":null,"attributes":[{"value":"/ Build with the given **Absolute** **Position** along the *x* axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":288688,"byte_end":288758,"line_start":17,"line_end":17,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2677},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":288937,"byte_end":288938,"line_start":24,"line_end":24,"column_start":8,"column_end":9},"name":"y","qualname":"::draw::properties::spatial::position::SetPosition::y","value":"fn y(Self, f32) -> Self","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Build with the given **Absolute** **Position** along the *y* axis.\n","sig":null,"attributes":[{"value":"/ Build with the given **Absolute** **Position** along the *y* axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":288859,"byte_end":288929,"line_start":23,"line_end":23,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2678},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":289108,"byte_end":289109,"line_start":30,"line_end":30,"column_start":8,"column_end":9},"name":"z","qualname":"::draw::properties::spatial::position::SetPosition::z","value":"fn z(Self, f32) -> Self","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Build with the given **Absolute** **Position** along the *z* axis.\n","sig":null,"attributes":[{"value":"/ Build with the given **Absolute** **Position** along the *z* axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":289030,"byte_end":289100,"line_start":29,"line_end":29,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2679},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":289266,"byte_end":289268,"line_start":36,"line_end":36,"column_start":8,"column_end":10},"name":"xy","qualname":"::draw::properties::spatial::position::SetPosition::xy","value":"fn xy(Self, Point2) -> Self","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Set the **Position** with some two-dimensional point.\n","sig":null,"attributes":[{"value":"/ Set the **Position** with some two-dimensional point.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":289201,"byte_end":289258,"line_start":35,"line_end":35,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2680},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":289401,"byte_end":289404,"line_start":41,"line_end":41,"column_start":8,"column_end":11},"name":"xyz","qualname":"::draw::properties::spatial::position::SetPosition::xyz","value":"fn xyz(Self, Point3) -> Self","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Set the **Position** with some three-dimensional point.\n","sig":null,"attributes":[{"value":"/ Set the **Position** with some three-dimensional point.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":289334,"byte_end":289393,"line_start":40,"line_end":40,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2681},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":289535,"byte_end":289538,"line_start":46,"line_end":46,"column_start":8,"column_end":11},"name":"x_y","qualname":"::draw::properties::spatial::position::SetPosition::x_y","value":"fn x_y(Self, f32, f32) -> Self","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Set the **Position** with *x* *y* coordinates.\n","sig":null,"attributes":[{"value":"/ Set the **Position** with *x* *y* coordinates.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":289477,"byte_end":289527,"line_start":45,"line_end":45,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2682},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":289675,"byte_end":289680,"line_start":51,"line_end":51,"column_start":8,"column_end":13},"name":"x_y_z","qualname":"::draw::properties::spatial::position::SetPosition::x_y_z","value":"fn x_y_z(Self, f32, f32, f32) -> Self","parent":{"krate":0,"index":2674},"children":[],"decl_id":null,"docs":" Set the **Position** with *x* *y* *z* coordinates.\n","sig":null,"attributes":[{"value":"/ Set the **Position** with *x* *y* *z* coordinates.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":289613,"byte_end":289667,"line_start":50,"line_end":50,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2684},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":289794,"byte_end":289803,"line_start":57,"line_end":57,"column_start":12,"column_end":21},"name":"transform","qualname":"<Properties>::transform","value":"fn transform(&Self) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2686},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":289921,"byte_end":289931,"line_start":63,"line_end":63,"column_start":8,"column_end":18},"name":"properties","qualname":"<Properties as draw::properties::spatial::position::SetPosition>::properties","value":"fn properties(&mut Self) -> &mut Properties","parent":{"krate":0,"index":2674},"children":[],"decl_id":{"krate":0,"index":2675},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2688},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":290023,"byte_end":290030,"line_start":69,"line_end":69,"column_start":8,"column_end":15},"name":"default","qualname":"<Properties as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2698},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":279082,"byte_end":279092,"line_start":10,"line_end":10,"column_start":11,"column_end":21},"name":"SetSpatial","qualname":"::draw::properties::spatial::SetSpatial","value":"SetSpatial: SetDimensions + SetPosition + SetOrientation","parent":null,"children":[],"decl_id":null,"docs":" Types that may be positioned, sized and oriented within 3D space.\n","sig":null,"attributes":[{"value":"/ Types that may be positioned, sized and oriented within 3D space.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":279002,"byte_end":279071,"line_start":9,"line_end":9,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":4968},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":279278,"byte_end":279288,"line_start":15,"line_end":15,"column_start":12,"column_end":22},"name":"Properties","qualname":"::draw::properties::spatial::Properties","value":"Properties { position, dimensions, orientation }","parent":null,"children":[{"krate":0,"index":4969},{"krate":0,"index":4970},{"krate":0,"index":4971}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4969},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":279299,"byte_end":279307,"line_start":16,"line_end":16,"column_start":9,"column_end":17},"name":"position","qualname":"::draw::properties::spatial::Properties::position","value":"draw::properties::spatial::position::Properties","parent":{"krate":0,"index":4968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4970},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":279339,"byte_end":279349,"line_start":17,"line_end":17,"column_start":9,"column_end":19},"name":"dimensions","qualname":"::draw::properties::spatial::Properties::dimensions","value":"draw::properties::spatial::dimension::Properties","parent":{"krate":0,"index":4968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4971},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":279382,"byte_end":279393,"line_start":18,"line_end":18,"column_start":9,"column_end":20},"name":"orientation","qualname":"::draw::properties::spatial::Properties::orientation","value":"draw::properties::spatial::orientation::Properties","parent":{"krate":0,"index":4968},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2702},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":279460,"byte_end":279467,"line_start":22,"line_end":22,"column_start":8,"column_end":15},"name":"default","qualname":"<Properties as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2704},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":279766,"byte_end":279776,"line_start":35,"line_end":35,"column_start":8,"column_end":18},"name":"properties","qualname":"<Properties as draw::properties::spatial::position::SetPosition>::properties","value":"fn properties(&mut Self) -> &mut position::Properties","parent":{"krate":0,"index":2674},"children":[],"decl_id":{"krate":0,"index":2675},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2706},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":279906,"byte_end":279916,"line_start":41,"line_end":41,"column_start":8,"column_end":18},"name":"properties","qualname":"<Properties as draw::properties::spatial::dimension::SetDimensions>::properties","value":"fn properties(&mut Self) -> &mut dimension::Properties","parent":{"krate":0,"index":2596},"children":[],"decl_id":{"krate":0,"index":2597},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2708},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":280050,"byte_end":280060,"line_start":47,"line_end":47,"column_start":8,"column_end":18},"name":"properties","qualname":"<Properties as draw::properties::spatial::orientation::SetOrientation>::properties","value":"fn properties(&mut Self) -> &mut orientation::Properties","parent":{"krate":0,"index":2637},"children":[],"decl_id":{"krate":0,"index":2638},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2709},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stroke","qualname":"::draw::properties::stroke","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","parent":null,"children":[{"krate":0,"index":2710},{"krate":0,"index":2711},{"krate":0,"index":2714},{"krate":0,"index":2717},{"krate":0,"index":2720},{"krate":0,"index":2743}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2720},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":290418,"byte_end":290427,"line_start":7,"line_end":7,"column_start":11,"column_end":20},"name":"SetStroke","qualname":"::draw::properties::stroke::SetStroke","value":"SetStroke: Sized","parent":null,"children":[{"krate":0,"index":2721},{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2732},{"krate":0,"index":2733},{"krate":0,"index":2734},{"krate":0,"index":2735},{"krate":0,"index":2736},{"krate":0,"index":2737},{"krate":0,"index":2738},{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742}],"decl_id":null,"docs":" Nodes that support stroke tessellation.","sig":null,"attributes":[{"value":"/ Nodes that support stroke tessellation.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":290170,"byte_end":290213,"line_start":3,"line_end":3,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":290214,"byte_end":290217,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This trait allows the `Drawing` context to automatically provide an implementation of the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":290218,"byte_end":290311,"line_start":5,"line_end":5,"column_start":1,"column_end":94}},{"value":"/ following builder methods for all primitives that provide some stroke tessellation options.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":290312,"byte_end":290407,"line_start":6,"line_end":6,"column_start":1,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":2721},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":290510,"byte_end":290528,"line_start":9,"line_end":9,"column_start":8,"column_end":26},"name":"stroke_options_mut","qualname":"::draw::properties::stroke::SetStroke::stroke_options_mut","value":"fn stroke_options_mut(&mut Self) -> &mut StrokeOptions","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" Provide a mutable reference to the `StrokeOptions` field.\n","sig":null,"attributes":[{"value":"/ Provide a mutable reference to the `StrokeOptions` field.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":290441,"byte_end":290502,"line_start":8,"line_end":8,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2722},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":290633,"byte_end":290644,"line_start":12,"line_end":12,"column_start":8,"column_end":19},"name":"stroke_opts","qualname":"::draw::properties::stroke::SetStroke::stroke_opts","value":"fn stroke_opts(Self, StrokeOptions) -> Self","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" Specify the whole set of stroke tessellation options.\n","sig":null,"attributes":[{"value":"/ Specify the whole set of stroke tessellation options.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":290568,"byte_end":290625,"line_start":11,"line_end":11,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2723},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":290813,"byte_end":290822,"line_start":18,"line_end":18,"column_start":8,"column_end":17},"name":"start_cap","qualname":"::draw::properties::stroke::SetStroke::start_cap","value":"fn start_cap(Self, LineCap) -> Self","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" The start line cap as specified by the SVG spec.\n","sig":null,"attributes":[{"value":"/ The start line cap as specified by the SVG spec.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":290753,"byte_end":290805,"line_start":17,"line_end":17,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2724},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":290990,"byte_end":290997,"line_start":24,"line_end":24,"column_start":8,"column_end":15},"name":"end_cap","qualname":"::draw::properties::stroke::SetStroke::end_cap","value":"fn end_cap(Self, LineCap) -> Self","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" The end line cap as specified by the SVG spec.\n","sig":null,"attributes":[{"value":"/ The end line cap as specified by the SVG spec.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":290932,"byte_end":290982,"line_start":23,"line_end":23,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2725},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":291173,"byte_end":291177,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"caps","qualname":"::draw::properties::stroke::SetStroke::caps","value":"fn caps(Self, LineCap) -> Self","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" The start and end line cap as specified by the SVG spec.\n","sig":null,"attributes":[{"value":"/ The start and end line cap as specified by the SVG spec.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":291105,"byte_end":291165,"line_start":29,"line_end":29,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2726},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":291409,"byte_end":291423,"line_start":36,"line_end":36,"column_start":8,"column_end":22},"name":"start_cap_butt","qualname":"::draw::properties::stroke::SetStroke::start_cap_butt","value":"fn start_cap_butt(Self) -> Self","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" The stroke for each sub-path does not extend beyond its two endpoints. A zero length\n sub-path will therefore not have any stroke.\n","sig":null,"attributes":[{"value":"/ The stroke for each sub-path does not extend beyond its two endpoints. A zero length","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":291260,"byte_end":291348,"line_start":34,"line_end":34,"column_start":5,"column_end":93}},{"value":"/ sub-path will therefore not have any stroke.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":291353,"byte_end":291401,"line_start":35,"line_end":35,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2727},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":291913,"byte_end":291929,"line_start":45,"line_end":45,"column_start":8,"column_end":24},"name":"start_cap_square","qualname":"::draw::properties::stroke::SetStroke::start_cap_square","value":"fn start_cap_square(Self) -> Self","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" At the end of each sub-path, the shape representing the stroke will be extended by a\n rectangle with the same width as the stroke width and whose length is half of the stroke\n width. If a sub-path has zero length, then the resulting effect is that the stroke for that\n sub-path consists solely of a square with side length equal to the stroke width, centered\n at the sub-path's point.\n","sig":null,"attributes":[{"value":"/ At the end of each sub-path, the shape representing the stroke will be extended by a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":291489,"byte_end":291577,"line_start":40,"line_end":40,"column_start":5,"column_end":93}},{"value":"/ rectangle with the same width as the stroke width and whose length is half of the stroke","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":291582,"byte_end":291674,"line_start":41,"line_end":41,"column_start":5,"column_end":97}},{"value":"/ width. If a sub-path has zero length, then the resulting effect is that the stroke for that","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":291679,"byte_end":291774,"line_start":42,"line_end":42,"column_start":5,"column_end":100}},{"value":"/ sub-path consists solely of a square with side length equal to the stroke width, centered","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":291779,"byte_end":291872,"line_start":43,"line_end":43,"column_start":5,"column_end":98}},{"value":"/ at the sub-path's point.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":291877,"byte_end":291905,"line_start":44,"line_end":44,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2728},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":292332,"byte_end":292347,"line_start":53,"line_end":53,"column_start":8,"column_end":23},"name":"start_cap_round","qualname":"::draw::properties::stroke::SetStroke::start_cap_round","value":"fn start_cap_round(Self) -> Self","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" At each end of each sub-path, the shape representing the stroke will be extended by a half\n circle with a radius equal to the stroke width. If a sub-path has zero length, then the\n resulting effect is that the stroke for that sub-path consists solely of a full circle\n centered at the sub-path's point.\n","sig":null,"attributes":[{"value":"/ At each end of each sub-path, the shape representing the stroke will be extended by a half","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":291997,"byte_end":292091,"line_start":49,"line_end":49,"column_start":5,"column_end":99}},{"value":"/ circle with a radius equal to the stroke width. If a sub-path has zero length, then the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":292096,"byte_end":292187,"line_start":50,"line_end":50,"column_start":5,"column_end":96}},{"value":"/ resulting effect is that the stroke for that sub-path consists solely of a full circle","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":292192,"byte_end":292282,"line_start":51,"line_end":51,"column_start":5,"column_end":95}},{"value":"/ centered at the sub-path's point.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":292287,"byte_end":292324,"line_start":52,"line_end":52,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2729},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":292563,"byte_end":292575,"line_start":59,"line_end":59,"column_start":8,"column_end":20},"name":"end_cap_butt","qualname":"::draw::properties::stroke::SetStroke::end_cap_butt","value":"fn end_cap_butt(Self) -> Self","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" The stroke for each sub-path does not extend beyond its two endpoints. A zero length\n sub-path will therefore not have any stroke.\n","sig":null,"attributes":[{"value":"/ The stroke for each sub-path does not extend beyond its two endpoints. A zero length","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":292414,"byte_end":292502,"line_start":57,"line_end":57,"column_start":5,"column_end":93}},{"value":"/ sub-path will therefore not have any stroke.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":292507,"byte_end":292555,"line_start":58,"line_end":58,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2730},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":293063,"byte_end":293077,"line_start":68,"line_end":68,"column_start":8,"column_end":22},"name":"end_cap_square","qualname":"::draw::properties::stroke::SetStroke::end_cap_square","value":"fn end_cap_square(Self) -> Self","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" At the end of each sub-path, the shape representing the stroke will be extended by a\n rectangle with the same width as the stroke width and whose length is half of the stroke\n width. If a sub-path has zero length, then the resulting effect is that the stroke for that\n sub-path consists solely of a square with side length equal to the stroke width, centered\n at the sub-path's point.\n","sig":null,"attributes":[{"value":"/ At the end of each sub-path, the shape representing the stroke will be extended by a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":292639,"byte_end":292727,"line_start":63,"line_end":63,"column_start":5,"column_end":93}},{"value":"/ rectangle with the same width as the stroke width and whose length is half of the stroke","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":292732,"byte_end":292824,"line_start":64,"line_end":64,"column_start":5,"column_end":97}},{"value":"/ width. If a sub-path has zero length, then the resulting effect is that the stroke for that","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":292829,"byte_end":292924,"line_start":65,"line_end":65,"column_start":5,"column_end":100}},{"value":"/ sub-path consists solely of a square with side length equal to the stroke width, centered","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":292929,"byte_end":293022,"line_start":66,"line_end":66,"column_start":5,"column_end":98}},{"value":"/ at the sub-path's point.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":293027,"byte_end":293055,"line_start":67,"line_end":67,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2731},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":293478,"byte_end":293491,"line_start":76,"line_end":76,"column_start":8,"column_end":21},"name":"end_cap_round","qualname":"::draw::properties::stroke::SetStroke::end_cap_round","value":"fn end_cap_round(Self) -> Self","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" At each end of each sub-path, the shape representing the stroke will be extended by a half\n circle with a radius equal to the stroke width. If a sub-path has zero length, then the\n resulting effect is that the stroke for that sub-path consists solely of a full circle\n centered at the sub-path's point.\n","sig":null,"attributes":[{"value":"/ At each end of each sub-path, the shape representing the stroke will be extended by a half","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":293143,"byte_end":293237,"line_start":72,"line_end":72,"column_start":5,"column_end":99}},{"value":"/ circle with a radius equal to the stroke width. If a sub-path has zero length, then the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":293242,"byte_end":293333,"line_start":73,"line_end":73,"column_start":5,"column_end":96}},{"value":"/ resulting effect is that the stroke for that sub-path consists solely of a full circle","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":293338,"byte_end":293428,"line_start":74,"line_end":74,"column_start":5,"column_end":95}},{"value":"/ centered at the sub-path's point.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":293433,"byte_end":293470,"line_start":75,"line_end":75,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2732},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":293705,"byte_end":293714,"line_start":82,"line_end":82,"column_start":8,"column_end":17},"name":"caps_butt","qualname":"::draw::properties::stroke::SetStroke::caps_butt","value":"fn caps_butt(Self) -> Self","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" The stroke for each sub-path does not extend beyond its two endpoints. A zero length\n sub-path will therefore not have any stroke.\n","sig":null,"attributes":[{"value":"/ The stroke for each sub-path does not extend beyond its two endpoints. A zero length","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":293556,"byte_end":293644,"line_start":80,"line_end":80,"column_start":5,"column_end":93}},{"value":"/ sub-path will therefore not have any stroke.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":293649,"byte_end":293697,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2733},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":294199,"byte_end":294210,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"caps_square","qualname":"::draw::properties::stroke::SetStroke::caps_square","value":"fn caps_square(Self) -> Self","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" At the end of each sub-path, the shape representing the stroke will be extended by a\n rectangle with the same width as the stroke width and whose length is half of the stroke\n width. If a sub-path has zero length, then the resulting effect is that the stroke for that\n sub-path consists solely of a square with side length equal to the stroke width, centered\n at the sub-path's point.\n","sig":null,"attributes":[{"value":"/ At the end of each sub-path, the shape representing the stroke will be extended by a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":293775,"byte_end":293863,"line_start":86,"line_end":86,"column_start":5,"column_end":93}},{"value":"/ rectangle with the same width as the stroke width and whose length is half of the stroke","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":293868,"byte_end":293960,"line_start":87,"line_end":87,"column_start":5,"column_end":97}},{"value":"/ width. If a sub-path has zero length, then the resulting effect is that the stroke for that","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":293965,"byte_end":294060,"line_start":88,"line_end":88,"column_start":5,"column_end":100}},{"value":"/ sub-path consists solely of a square with side length equal to the stroke width, centered","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":294065,"byte_end":294158,"line_start":89,"line_end":89,"column_start":5,"column_end":98}},{"value":"/ at the sub-path's point.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":294163,"byte_end":294191,"line_start":90,"line_end":90,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2734},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":294608,"byte_end":294618,"line_start":99,"line_end":99,"column_start":8,"column_end":18},"name":"caps_round","qualname":"::draw::properties::stroke::SetStroke::caps_round","value":"fn caps_round(Self) -> Self","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" At each end of each sub-path, the shape representing the stroke will be extended by a half\n circle with a radius equal to the stroke width. If a sub-path has zero length, then the\n resulting effect is that the stroke for that sub-path consists solely of a full circle\n centered at the sub-path's point.\n","sig":null,"attributes":[{"value":"/ At each end of each sub-path, the shape representing the stroke will be extended by a half","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":294273,"byte_end":294367,"line_start":95,"line_end":95,"column_start":5,"column_end":99}},{"value":"/ circle with a radius equal to the stroke width. If a sub-path has zero length, then the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":294372,"byte_end":294463,"line_start":96,"line_end":96,"column_start":5,"column_end":96}},{"value":"/ resulting effect is that the stroke for that sub-path consists solely of a full circle","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":294468,"byte_end":294558,"line_start":97,"line_end":97,"column_start":5,"column_end":95}},{"value":"/ centered at the sub-path's point.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":294563,"byte_end":294600,"line_start":98,"line_end":98,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2735},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":294811,"byte_end":294815,"line_start":106,"line_end":106,"column_start":8,"column_end":12},"name":"join","qualname":"::draw::properties::stroke::SetStroke::join","value":"fn join(Self, LineJoin) -> Self","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" The way in which lines are joined at the vertices, matching the SVG spec.","sig":null,"attributes":[{"value":"/ The way in which lines are joined at the vertices, matching the SVG spec.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":294680,"byte_end":294757,"line_start":103,"line_end":103,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":294762,"byte_end":294765,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Default value is `MiterClip`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":294770,"byte_end":294803,"line_start":105,"line_end":105,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2736},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":294991,"byte_end":295001,"line_start":112,"line_end":112,"column_start":8,"column_end":18},"name":"join_miter","qualname":"::draw::properties::stroke::SetStroke::join_miter","value":"fn join_miter(Self) -> Self","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" A sharp corner is to be used to join path segments.\n","sig":null,"attributes":[{"value":"/ A sharp corner is to be used to join path segments.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":294928,"byte_end":294983,"line_start":111,"line_end":111,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2737},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":295245,"byte_end":295260,"line_start":118,"line_end":118,"column_start":8,"column_end":23},"name":"join_miter_clip","qualname":"::draw::properties::stroke::SetStroke::join_miter_clip","value":"fn join_miter_clip(Self) -> Self","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" Same as a `join_miter`, but if the miter limit is exceeded, the miter is clipped at a miter\n length equal to the miter limit value multiplied by the stroke width.\n","sig":null,"attributes":[{"value":"/ Same as a `join_miter`, but if the miter limit is exceeded, the miter is clipped at a miter","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":295064,"byte_end":295159,"line_start":116,"line_end":116,"column_start":5,"column_end":100}},{"value":"/ length equal to the miter limit value multiplied by the stroke width.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":295164,"byte_end":295237,"line_start":117,"line_end":117,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2738},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":295390,"byte_end":295400,"line_start":123,"line_end":123,"column_start":8,"column_end":18},"name":"join_round","qualname":"::draw::properties::stroke::SetStroke::join_round","value":"fn join_round(Self) -> Self","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" A round corner is to be used to join path segments.\n","sig":null,"attributes":[{"value":"/ A round corner is to be used to join path segments.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":295327,"byte_end":295382,"line_start":122,"line_end":122,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2739},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":295621,"byte_end":295631,"line_start":129,"line_end":129,"column_start":8,"column_end":18},"name":"join_bevel","qualname":"::draw::properties::stroke::SetStroke::join_bevel","value":"fn join_bevel(Self) -> Self","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" A bevelled corner is to be used to join path segments. The bevel shape is a triangle that\n fills the area between the two stroked segments.\n","sig":null,"attributes":[{"value":"/ A bevelled corner is to be used to join path segments. The bevel shape is a triangle that","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":295463,"byte_end":295556,"line_start":127,"line_end":127,"column_start":5,"column_end":98}},{"value":"/ fills the area between the two stroked segments.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":295561,"byte_end":295613,"line_start":128,"line_end":128,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2740},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":295754,"byte_end":295767,"line_start":134,"line_end":134,"column_start":8,"column_end":21},"name":"stroke_weight","qualname":"::draw::properties::stroke::SetStroke::stroke_weight","value":"fn stroke_weight(Self, f32) -> Self","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" The total stroke_weight (aka width) of the line.\n","sig":null,"attributes":[{"value":"/ The total stroke_weight (aka width) of the line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":295694,"byte_end":295746,"line_start":133,"line_end":133,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2741},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":296041,"byte_end":296052,"line_start":142,"line_end":142,"column_start":8,"column_end":19},"name":"miter_limit","qualname":"::draw::properties::stroke::SetStroke::miter_limit","value":"fn miter_limit(Self, f32) -> Self","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" Describes the limit before miter lines will clip, as described in the SVG spec.","sig":null,"attributes":[{"value":"/ Describes the limit before miter lines will clip, as described in the SVG spec.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":295894,"byte_end":295977,"line_start":139,"line_end":139,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":295982,"byte_end":295985,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Must be greater than or equal to `1.0`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":295990,"byte_end":296033,"line_start":141,"line_end":141,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2742},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":296244,"byte_end":296260,"line_start":148,"line_end":148,"column_start":8,"column_end":24},"name":"stroke_tolerance","qualname":"::draw::properties::stroke::SetStroke::stroke_tolerance","value":"fn stroke_tolerance(Self, f32) -> Self","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" Maximum allowed distance to the path when building an approximation.\n","sig":null,"attributes":[{"value":"/ Maximum allowed distance to the path when building an approximation.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":296164,"byte_end":296236,"line_start":147,"line_end":147,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2744},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":296426,"byte_end":296444,"line_start":155,"line_end":155,"column_start":8,"column_end":26},"name":"stroke_options_mut","qualname":"<Option<StrokeOptions> as draw::properties::stroke::SetStroke>::stroke_options_mut","value":"fn stroke_options_mut(&mut Self) -> &mut StrokeOptions","parent":{"krate":0,"index":2720},"children":[],"decl_id":{"krate":0,"index":2721},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2763},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/mod.rs","byte_start":271678,"byte_end":271689,"line_start":22,"line_end":22,"column_start":10,"column_end":21},"name":"ColorScalar","qualname":"::draw::properties::ColorScalar","value":"crate::color::DefaultScalar","parent":null,"children":[],"decl_id":null,"docs":" The scalar type used for the color channel values.\n","sig":null,"attributes":[{"value":"/ The scalar type used for the color channel values.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/mod.rs","byte_start":271614,"byte_end":271668,"line_start":21,"line_end":21,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":2764},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/mod.rs","byte_start":271778,"byte_end":271783,"line_start":25,"line_end":25,"column_start":10,"column_end":15},"name":"Srgba","qualname":"::draw::properties::Srgba","value":"color::DefaultSrgba","parent":null,"children":[],"decl_id":null,"docs":" The RGBA type used by the `Common` params.\n","sig":null,"attributes":[{"value":"/ The RGBA type used by the `Common` params.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/mod.rs","byte_start":271722,"byte_end":271768,"line_start":24,"line_end":24,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":2765},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/mod.rs","byte_start":271864,"byte_end":271872,"line_start":28,"line_end":28,"column_start":10,"column_end":18},"name":"LinSrgba","qualname":"::draw::properties::LinSrgba","value":"color::DefaultLinSrgba","parent":null,"children":[],"decl_id":null,"docs":" The RGBA type used by the `Common` params.\n","sig":null,"attributes":[{"value":"/ The RGBA type used by the `Common` params.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/mod.rs","byte_start":271808,"byte_end":271854,"line_start":27,"line_end":27,"column_start":1,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":2766},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"renderer","qualname":"::draw::renderer","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","parent":null,"children":[{"krate":0,"index":2767},{"krate":0,"index":2770},{"krate":0,"index":2771},{"krate":0,"index":2774},{"krate":0,"index":2777},{"krate":0,"index":2780},{"krate":0,"index":2781},{"krate":0,"index":2784},{"krate":0,"index":2787},{"krate":0,"index":2790},{"krate":0,"index":2791},{"krate":0,"index":2794},{"krate":0,"index":2797},{"krate":0,"index":2800},{"krate":0,"index":2803},{"krate":0,"index":2806},{"krate":0,"index":2809},{"krate":0,"index":2812},{"krate":0,"index":2813},{"krate":0,"index":2816},{"krate":0,"index":2819},{"krate":0,"index":2822},{"krate":0,"index":2825},{"krate":0,"index":2826},{"krate":0,"index":2827},{"krate":0,"index":2829},{"krate":0,"index":2832},{"krate":0,"index":2833},{"krate":0,"index":2836},{"krate":0,"index":2839},{"krate":0,"index":2840},{"krate":0,"index":2843},{"krate":0,"index":2846},{"krate":0,"index":2848},{"krate":0,"index":2851},{"krate":0,"index":2865},{"krate":0,"index":4981},{"krate":0,"index":4991},{"krate":0,"index":4992},{"krate":0,"index":4994},{"krate":0,"index":4996},{"krate":0,"index":4997},{"krate":0,"index":4999},{"krate":0,"index":5000},{"krate":0,"index":5002},{"krate":0,"index":5005},{"krate":0,"index":5029},{"krate":0,"index":5031},{"krate":0,"index":5037},{"krate":0,"index":5039},{"krate":0,"index":5041},{"krate":0,"index":5054},{"krate":0,"index":5056},{"krate":0,"index":5061},{"krate":0,"index":5063},{"krate":0,"index":5064},{"krate":0,"index":5066},{"krate":0,"index":5067},{"krate":0,"index":5070},{"krate":0,"index":5072},{"krate":0,"index":5074},{"krate":0,"index":5076},{"krate":0,"index":5077},{"krate":0,"index":5079},{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2871},{"krate":0,"index":2872},{"krate":0,"index":2873},{"krate":0,"index":5081},{"krate":0,"index":5086},{"krate":0,"index":5087},{"krate":0,"index":5089},{"krate":0,"index":5091},{"krate":0,"index":5092},{"krate":0,"index":5094},{"krate":0,"index":5097},{"krate":0,"index":5098},{"krate":0,"index":2874},{"krate":0,"index":2876},{"krate":0,"index":2878},{"krate":0,"index":2880},{"krate":0,"index":2885},{"krate":0,"index":2900},{"krate":0,"index":2903},{"krate":0,"index":2939},{"krate":0,"index":2941},{"krate":0,"index":2944},{"krate":0,"index":2946},{"krate":0,"index":2948},{"krate":0,"index":2950},{"krate":0,"index":2951},{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":2954},{"krate":0,"index":2955},{"krate":0,"index":2956},{"krate":0,"index":2957},{"krate":0,"index":2958},{"krate":0,"index":2959},{"krate":0,"index":2960},{"krate":0,"index":2961},{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":2964}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2846},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":297102,"byte_end":297117,"line_start":18,"line_end":18,"column_start":11,"column_end":26},"name":"RenderPrimitive","qualname":"::draw::renderer::RenderPrimitive","value":"RenderPrimitive","parent":null,"children":[{"krate":0,"index":2847}],"decl_id":null,"docs":" Draw API primitives that may be rendered via the **Renderer** type.\n","sig":null,"attributes":[{"value":"/ Draw API primitives that may be rendered via the **Renderer** type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":297020,"byte_end":297091,"line_start":17,"line_end":17,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2847},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":297168,"byte_end":297184,"line_start":20,"line_end":20,"column_start":8,"column_end":24},"name":"render_primitive","qualname":"::draw::renderer::RenderPrimitive::render_primitive","value":"fn render_primitive(Self, RenderContext, &mut draw::Mesh) -> PrimitiveRender","parent":{"krate":0,"index":2846},"children":[],"decl_id":null,"docs":" Render self into the given mesh.\n","sig":null,"attributes":[{"value":"/ Render self into the given mesh.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":297124,"byte_end":297160,"line_start":19,"line_end":19,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2848},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":297334,"byte_end":297349,"line_start":24,"line_end":24,"column_start":12,"column_end":27},"name":"PrimitiveRender","qualname":"::draw::renderer::PrimitiveRender","value":"PrimitiveRender { texture_view, vertex_mode }","parent":null,"children":[{"krate":0,"index":2849},{"krate":0,"index":2850}],"decl_id":null,"docs":" Information about the way in which a primitive was rendered.\n","sig":null,"attributes":[{"value":"/ Information about the way in which a primitive was rendered.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":297258,"byte_end":297322,"line_start":23,"line_end":23,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":2849},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":297661,"byte_end":297673,"line_start":30,"line_end":30,"column_start":9,"column_end":21},"name":"texture_view","qualname":"::draw::renderer::PrimitiveRender::texture_view","value":"std::option::Option<nannou_wgpu::TextureView>","parent":{"krate":0,"index":2848},"children":[],"decl_id":null,"docs":" Whether or not a specific texture must be available when this primitive is drawn.","sig":null,"attributes":[{"value":"/ Whether or not a specific texture must be available when this primitive is drawn.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":297356,"byte_end":297441,"line_start":25,"line_end":25,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":297446,"byte_end":297449,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If `Some` and the given texture is different than the currently set texture, a render","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":297454,"byte_end":297543,"line_start":27,"line_end":27,"column_start":5,"column_end":94}},{"value":"/ command will be encoded that switches from the previous texture's bind group to the new","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":297548,"byte_end":297639,"line_start":28,"line_end":28,"column_start":5,"column_end":96}},{"value":"/ one.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":297644,"byte_end":297652,"line_start":29,"line_end":29,"column_start":5,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":2850},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":297787,"byte_end":297798,"line_start":32,"line_end":32,"column_start":9,"column_end":20},"name":"vertex_mode","qualname":"::draw::renderer::PrimitiveRender::vertex_mode","value":"draw::renderer::VertexMode","parent":{"krate":0,"index":2848},"children":[],"decl_id":null,"docs":" The way in which vertices should be coloured in the fragment shader.\n","sig":null,"attributes":[{"value":"/ The way in which vertices should be coloured in the fragment shader.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":297706,"byte_end":297778,"line_start":31,"line_end":31,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":2851},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":297903,"byte_end":297916,"line_start":36,"line_end":36,"column_start":12,"column_end":25},"name":"RenderContext","qualname":"::draw::renderer::RenderContext","value":"RenderContext { transform, intermediary_mesh, path_event_buffer, path_points_colored_buffer, path_points_textured_buffer, text_buffer, theme, glyph_cache, fill_tessellator, stroke_tessellator, output_attachment_size, output_attachment_scale_factor }","parent":null,"children":[{"krate":0,"index":2853},{"krate":0,"index":2854},{"krate":0,"index":2855},{"krate":0,"index":2856},{"krate":0,"index":2857},{"krate":0,"index":2858},{"krate":0,"index":2859},{"krate":0,"index":2860},{"krate":0,"index":2861},{"krate":0,"index":2862},{"krate":0,"index":2863},{"krate":0,"index":2864}],"decl_id":null,"docs":" The context provided to primitives to assist with the rendering process.\n","sig":null,"attributes":[{"value":"/ The context provided to primitives to assist with the rendering process.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":297815,"byte_end":297891,"line_start":35,"line_end":35,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":2853},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":297931,"byte_end":297940,"line_start":37,"line_end":37,"column_start":9,"column_end":18},"name":"transform","qualname":"::draw::renderer::RenderContext::transform","value":"&'a nannou_core::prelude::Mat4","parent":{"krate":0,"index":2851},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2854},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":297960,"byte_end":297977,"line_start":38,"line_end":38,"column_start":9,"column_end":26},"name":"intermediary_mesh","qualname":"::draw::renderer::RenderContext::intermediary_mesh","value":"&'a draw::mesh::Mesh","parent":{"krate":0,"index":2851},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2855},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":298003,"byte_end":298020,"line_start":39,"line_end":39,"column_start":9,"column_end":26},"name":"path_event_buffer","qualname":"::draw::renderer::RenderContext::path_event_buffer","value":"&'a [lyon::lyon_path::Event<lyon::lyon_geom::euclid::Point2D<f32, lyon::lyon_geom::euclid::UnknownUnit>, lyon::lyon_geom::euclid::Point2D<f32, lyon::lyon_geom::euclid::UnknownUnit>>]","parent":{"krate":0,"index":2851},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2856},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":298047,"byte_end":298073,"line_start":40,"line_end":40,"column_start":9,"column_end":35},"name":"path_points_colored_buffer","qualname":"::draw::renderer::RenderContext::path_points_colored_buffer","value":"&'a [(nannou_core::geom::Vec2, nannou_core::color::Alpha<nannou_core::color::rgb::Rgb<nannou_core::color::encoding::Linear<nannou_core::color::encoding::Srgb>>, f32>)]","parent":{"krate":0,"index":2851},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2857},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":298106,"byte_end":298133,"line_start":41,"line_end":41,"column_start":9,"column_end":36},"name":"path_points_textured_buffer","qualname":"::draw::renderer::RenderContext::path_points_textured_buffer","value":"&'a [(nannou_core::geom::Vec2, nannou_core::geom::Vec2)]","parent":{"krate":0,"index":2851},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2858},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":298170,"byte_end":298181,"line_start":42,"line_end":42,"column_start":9,"column_end":20},"name":"text_buffer","qualname":"::draw::renderer::RenderContext::text_buffer","value":"&'a str","parent":{"krate":0,"index":2851},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2859},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":298200,"byte_end":298205,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"name":"theme","qualname":"::draw::renderer::RenderContext::theme","value":"&'a draw::theme::Theme","parent":{"krate":0,"index":2851},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2860},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":298232,"byte_end":298243,"line_start":44,"line_end":44,"column_start":9,"column_end":20},"name":"glyph_cache","qualname":"::draw::renderer::RenderContext::glyph_cache","value":"&'a mut draw::renderer::GlyphCache","parent":{"krate":0,"index":2851},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2861},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":298273,"byte_end":298289,"line_start":45,"line_end":45,"column_start":9,"column_end":25},"name":"fill_tessellator","qualname":"::draw::renderer::RenderContext::fill_tessellator","value":"&'a mut lyon::lyon_tessellation::FillTessellator","parent":{"krate":0,"index":2851},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2862},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":298324,"byte_end":298342,"line_start":46,"line_end":46,"column_start":9,"column_end":27},"name":"stroke_tessellator","qualname":"::draw::renderer::RenderContext::stroke_tessellator","value":"&'a mut lyon::lyon_tessellation::StrokeTessellator","parent":{"krate":0,"index":2851},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2863},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":298379,"byte_end":298401,"line_start":47,"line_end":47,"column_start":9,"column_end":31},"name":"output_attachment_size","qualname":"::draw::renderer::RenderContext::output_attachment_size","value":"nannou_core::geom::Vec2","parent":{"krate":0,"index":2851},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2864},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":298435,"byte_end":298465,"line_start":48,"line_end":48,"column_start":9,"column_end":39},"name":"output_attachment_scale_factor","qualname":"::draw::renderer::RenderContext::output_attachment_scale_factor","value":"f32","parent":{"krate":0,"index":2851},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2865},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":298486,"byte_end":298496,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"GlyphCache","qualname":"::draw::renderer::GlyphCache","value":"GlyphCache { cache, pixel_buffer, requires_upload }","parent":null,"children":[{"krate":0,"index":2866},{"krate":0,"index":2867},{"krate":0,"index":2868}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2866},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":298566,"byte_end":298571,"line_start":53,"line_end":53,"column_start":9,"column_end":14},"name":"cache","qualname":"::draw::renderer::GlyphCache::cache","value":"rusttype::gpu_cache::Cache<'static>","parent":{"krate":0,"index":2865},"children":[],"decl_id":null,"docs":" Tracks glyphs and their location within the cache.\n","sig":null,"attributes":[{"value":"/ Tracks glyphs and their location within the cache.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":298503,"byte_end":298557,"line_start":52,"line_end":52,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":2867},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":298667,"byte_end":298679,"line_start":55,"line_end":55,"column_start":9,"column_end":21},"name":"pixel_buffer","qualname":"::draw::renderer::GlyphCache::pixel_buffer","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2865},"children":[],"decl_id":null,"docs":" The buffer used to store the pixels of the glyphs.\n","sig":null,"attributes":[{"value":"/ The buffer used to store the pixels of the glyphs.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":298604,"byte_end":298658,"line_start":54,"line_end":54,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":2868},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":298799,"byte_end":298814,"line_start":57,"line_end":57,"column_start":9,"column_end":24},"name":"requires_upload","qualname":"::draw::renderer::GlyphCache::requires_upload","value":"bool","parent":{"krate":0,"index":2865},"children":[],"decl_id":null,"docs":" Will be set to `true` after the cache has been updated if the texture requires re-uploading.\n","sig":null,"attributes":[{"value":"/ Will be set to `true` after the cache has been updated if the texture requires re-uploading.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":298694,"byte_end":298790,"line_start":56,"line_end":56,"column_start":5,"column_end":101}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4982},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":299024,"byte_end":299029,"line_start":65,"line_end":65,"column_start":5,"column_end":10},"name":"Color","qualname":"::draw::renderer::VertexMode::Color","value":"VertexMode::Color","parent":{"krate":0,"index":4981},"children":[],"decl_id":null,"docs":" Use the color values and ignore the texture coordinates.\n","sig":null,"attributes":[{"value":"/ Use the color values and ignore the texture coordinates.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":298959,"byte_end":299019,"line_start":64,"line_end":64,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4985},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":299098,"byte_end":299105,"line_start":67,"line_end":67,"column_start":5,"column_end":12},"name":"Texture","qualname":"::draw::renderer::VertexMode::Texture","value":"VertexMode::Texture","parent":{"krate":0,"index":4981},"children":[],"decl_id":null,"docs":" Use the texture color and ignore the color values.\n","sig":null,"attributes":[{"value":"/ Use the texture color and ignore the color values.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":299039,"byte_end":299093,"line_start":66,"line_end":66,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4988},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":299270,"byte_end":299274,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Text","qualname":"::draw::renderer::VertexMode::Text","value":"VertexMode::Text","parent":{"krate":0,"index":4981},"children":[],"decl_id":null,"docs":" A special mode used by the text primitive.","sig":null,"attributes":[{"value":"/ A special mode used by the text primitive.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":299115,"byte_end":299161,"line_start":68,"line_end":68,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":299166,"byte_end":299169,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Uses the color values, but multiplies the alpha by the glyph cache texture's red value.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":299174,"byte_end":299265,"line_start":70,"line_end":70,"column_start":5,"column_end":96}}]},{"kind":"Enum","id":{"krate":0,"index":4981},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":298942,"byte_end":298952,"line_start":63,"line_end":63,"column_start":10,"column_end":20},"name":"VertexMode","qualname":"::draw::renderer::VertexMode","value":"enum VertexMode { Color = , Texture = , Text = , }","parent":null,"children":[{"krate":0,"index":4982},{"krate":0,"index":4985},{"krate":0,"index":4988}],"decl_id":null,"docs":" A top-level indicator of whether or not\n","sig":null,"attributes":[{"value":"/ A top-level indicator of whether or not","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":298825,"byte_end":298868,"line_start":60,"line_end":60,"column_start":1,"column_end":44}},{"value":"repr(u32)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":298920,"byte_end":298932,"line_start":62,"line_end":62,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":5005},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":299395,"byte_end":299403,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"Renderer","qualname":"::draw::renderer::Renderer","value":"Renderer {  }","parent":null,"children":[{"krate":0,"index":5006},{"krate":0,"index":5007},{"krate":0,"index":5008},{"krate":0,"index":5009},{"krate":0,"index":5010},{"krate":0,"index":5011},{"krate":0,"index":5012},{"krate":0,"index":5013},{"krate":0,"index":5014},{"krate":0,"index":5015},{"krate":0,"index":5016},{"krate":0,"index":5017},{"krate":0,"index":5018},{"krate":0,"index":5019},{"krate":0,"index":5020},{"krate":0,"index":5021},{"krate":0,"index":5022},{"krate":0,"index":5023},{"krate":0,"index":5024},{"krate":0,"index":5025},{"krate":0,"index":5026},{"krate":0,"index":5027},{"krate":0,"index":5028}],"decl_id":null,"docs":" A helper type aimed at simplifying the rendering of conrod primitives via wgpu.\n","sig":null,"attributes":[{"value":"/ A helper type aimed at simplifying the rendering of conrod primitives via wgpu.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":299283,"byte_end":299366,"line_start":74,"line_end":74,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":5031},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":300581,"byte_end":300588,"line_start":105,"line_end":105,"column_start":12,"column_end":19},"name":"Builder","qualname":"::draw::renderer::Builder","value":"Builder { depth_format, glyph_cache_size, glyph_cache_scale_tolerance, glyph_cache_position_tolerance }","parent":null,"children":[{"krate":0,"index":5032},{"krate":0,"index":5033},{"krate":0,"index":5035},{"krate":0,"index":5036}],"decl_id":null,"docs":" A type aimed at simplifying construction of a `draw::Renderer`.\n","sig":null,"attributes":[{"value":"/ A type aimed at simplifying construction of a `draw::Renderer`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":300478,"byte_end":300545,"line_start":103,"line_end":103,"column_start":1,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":5032},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":300599,"byte_end":300611,"line_start":106,"line_end":106,"column_start":9,"column_end":21},"name":"depth_format","qualname":"::draw::renderer::Builder::depth_format","value":"nannou_wgpu::TextureFormat","parent":{"krate":0,"index":5031},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5033},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":300642,"byte_end":300658,"line_start":107,"line_end":107,"column_start":9,"column_end":25},"name":"glyph_cache_size","qualname":"::draw::renderer::Builder::glyph_cache_size","value":"[u32; 2]","parent":{"krate":0,"index":5031},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5035},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":300678,"byte_end":300705,"line_start":108,"line_end":108,"column_start":9,"column_end":36},"name":"glyph_cache_scale_tolerance","qualname":"::draw::renderer::Builder::glyph_cache_scale_tolerance","value":"f32","parent":{"krate":0,"index":5031},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5036},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":300720,"byte_end":300750,"line_start":109,"line_end":109,"column_start":9,"column_end":39},"name":"glyph_cache_position_tolerance","qualname":"::draw::renderer::Builder::glyph_cache_position_tolerance","value":"f32","parent":{"krate":0,"index":5031},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5056},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":301309,"byte_end":301316,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"Scissor","qualname":"::draw::renderer::Scissor","value":"Scissor {  }","parent":null,"children":[{"krate":0,"index":5057},{"krate":0,"index":5058},{"krate":0,"index":5059},{"krate":0,"index":5060}],"decl_id":null,"docs":" The position and dimensions of the scissor.\n","sig":null,"attributes":[{"value":"/ The position and dimensions of the scissor.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":301209,"byte_end":301256,"line_start":128,"line_end":128,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":5070},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":301415,"byte_end":301424,"line_start":138,"line_end":138,"column_start":12,"column_end":21},"name":"DrawError","qualname":"::draw::renderer::DrawError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2875},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":302353,"byte_end":302360,"line_start":169,"line_end":169,"column_start":8,"column_end":15},"name":"default","qualname":"<PrimitiveRender as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2877},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":302454,"byte_end":302470,"line_start":175,"line_end":175,"column_start":8,"column_end":24},"name":"render_primitive","qualname":"<draw::Primitive as draw::renderer::RenderPrimitive>::render_primitive","value":"fn render_primitive(Self, RenderContext, &mut draw::Mesh) -> PrimitiveRender","parent":{"krate":0,"index":2846},"children":[],"decl_id":{"krate":0,"index":2847},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2879},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":303534,"byte_end":303537,"line_start":194,"line_end":194,"column_start":8,"column_end":11},"name":"fmt","qualname":"<GlyphCache as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9909},"children":[],"decl_id":{"krate":2,"index":9910},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2881},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":303920,"byte_end":303931,"line_start":205,"line_end":205,"column_start":12,"column_end":23},"name":"vertex_mode","qualname":"<PrimitiveRender>::vertex_mode","value":"fn vertex_mode(VertexMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify a vertex mode for the primitive render.\n","sig":null,"attributes":[{"value":"/ Specify a vertex mode for the primitive render.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":303857,"byte_end":303908,"line_start":204,"line_end":204,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2882},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":304078,"byte_end":304083,"line_start":212,"line_end":212,"column_start":12,"column_end":17},"name":"color","qualname":"<PrimitiveRender>::color","value":"fn color() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2883},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":304159,"byte_end":304166,"line_start":216,"line_end":216,"column_start":12,"column_end":19},"name":"texture","qualname":"<PrimitiveRender>::texture","value":"fn texture(wgpu::TextureView) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2884},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":304356,"byte_end":304360,"line_start":223,"line_end":223,"column_start":12,"column_end":16},"name":"text","qualname":"<PrimitiveRender>::text","value":"fn text() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2886},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":304488,"byte_end":304508,"line_start":230,"line_end":230,"column_start":15,"column_end":35},"name":"DEFAULT_DEPTH_FORMAT","qualname":"::draw::renderer::Builder::DEFAULT_DEPTH_FORMAT","value":"wgpu::TextureFormat","parent":{"krate":0,"index":2885},"children":[],"decl_id":null,"docs":" The default depth format\n","sig":null,"attributes":[{"value":"/ The default depth format","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":304445,"byte_end":304473,"line_start":229,"line_end":229,"column_start":5,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":2887},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":304630,"byte_end":304654,"line_start":232,"line_end":232,"column_start":15,"column_end":39},"name":"DEFAULT_GLYPH_CACHE_SIZE","qualname":"::draw::renderer::Builder::DEFAULT_GLYPH_CACHE_SIZE","value":"[u32; ]","parent":{"krate":0,"index":2885},"children":[],"decl_id":null,"docs":" The default size for the inner glyph cache.\n","sig":null,"attributes":[{"value":"/ The default size for the inner glyph cache.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":304568,"byte_end":304615,"line_start":231,"line_end":231,"column_start":5,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":2889},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":304774,"byte_end":304809,"line_start":234,"line_end":234,"column_start":15,"column_end":50},"name":"DEFAULT_GLYPH_CACHE_SCALE_TOLERANCE","qualname":"::draw::renderer::Builder::DEFAULT_GLYPH_CACHE_SCALE_TOLERANCE","value":"f32","parent":{"krate":0,"index":2885},"children":[],"decl_id":null,"docs":" The default scale tolerance for the glyph cache.\n","sig":null,"attributes":[{"value":"/ The default scale tolerance for the glyph cache.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":304707,"byte_end":304759,"line_start":233,"line_end":233,"column_start":5,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":2890},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":304946,"byte_end":304984,"line_start":237,"line_end":237,"column_start":15,"column_end":53},"name":"DEFAULT_GLYPH_CACHE_POSITION_TOLERANCE","qualname":"::draw::renderer::Builder::DEFAULT_GLYPH_CACHE_POSITION_TOLERANCE","value":"f32","parent":{"krate":0,"index":2885},"children":[],"decl_id":null,"docs":" The default position tolerance for the glyph cache.\n","sig":null,"attributes":[{"value":"/ The default position tolerance for the glyph cache.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":304876,"byte_end":304931,"line_start":236,"line_end":236,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2891},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":305111,"byte_end":305114,"line_start":241,"line_end":241,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Begin building a new **draw::Renderer**.\n","sig":null,"attributes":[{"value":"/ Begin building a new **draw::Renderer**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":305055,"byte_end":305099,"line_start":240,"line_end":240,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2892},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":305588,"byte_end":305600,"line_start":252,"line_end":252,"column_start":12,"column_end":24},"name":"depth_format","qualname":"<Builder>::depth_format","value":"fn depth_format(Self, wgpu::TextureFormat) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the texture format that should be used to represent depth data in the renderer's\n inner `depth_texture`.\n","sig":null,"attributes":[{"value":"/ Specify the texture format that should be used to represent depth data in the renderer's","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":305453,"byte_end":305545,"line_start":250,"line_end":250,"column_start":5,"column_end":97}},{"value":"/ inner `depth_texture`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":305550,"byte_end":305576,"line_start":251,"line_end":251,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2893},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":306073,"byte_end":306089,"line_start":262,"line_end":262,"column_start":12,"column_end":28},"name":"glyph_cache_size","qualname":"<Builder>::glyph_cache_size","value":"fn glyph_cache_size(Self, [u32; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The dimensions of the texture used to cache glyphs.","sig":null,"attributes":[{"value":"/ The dimensions of the texture used to cache glyphs.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":305710,"byte_end":305765,"line_start":257,"line_end":257,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":305770,"byte_end":305773,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Some text-heavy apps may require a text cache larger than the default size in order to run","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":305778,"byte_end":305872,"line_start":259,"line_end":259,"column_start":5,"column_end":99}},{"value":"/ efficiently without text glitching. If the texture is insufficiently large for all text","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":305877,"byte_end":305968,"line_start":260,"line_end":260,"column_start":5,"column_end":96}},{"value":"/ currently appearing within the output attachment, artifacts will appear in the text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":305973,"byte_end":306061,"line_start":261,"line_end":261,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":2895},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":306474,"byte_end":306501,"line_start":271,"line_end":271,"column_start":12,"column_end":39},"name":"glyph_cache_scale_tolerance","qualname":"<Builder>::glyph_cache_scale_tolerance","value":"fn glyph_cache_scale_tolerance(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the tolerances (maximum allowed difference) for judging whether an existing glyph\n in the cache is close enough to the requested glyph in scale to be used in its place.","sig":null,"attributes":[{"value":"/ Specifies the tolerances (maximum allowed difference) for judging whether an existing glyph","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":306188,"byte_end":306283,"line_start":267,"line_end":267,"column_start":5,"column_end":100}},{"value":"/ in the cache is close enough to the requested glyph in scale to be used in its place.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":306288,"byte_end":306377,"line_start":268,"line_end":268,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":306382,"byte_end":306385,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ Due to floating point inaccuracies a min value of 0.001 is enforced.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":306390,"byte_end":306462,"line_start":270,"line_end":270,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2896},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":306920,"byte_end":306950,"line_start":281,"line_end":281,"column_start":12,"column_end":42},"name":"glyph_cache_position_tolerance","qualname":"<Builder>::glyph_cache_position_tolerance","value":"fn glyph_cache_position_tolerance(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the tolerances (maximum allowed difference) for judging whether an existing glyph\n in the cache is close enough to the requested glyph in subpixel offset to be used in its\n place.","sig":null,"attributes":[{"value":"/ Specifies the tolerances (maximum allowed difference) for judging whether an existing glyph","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":306616,"byte_end":306711,"line_start":276,"line_end":276,"column_start":5,"column_end":100}},{"value":"/ in the cache is close enough to the requested glyph in subpixel offset to be used in its","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":306716,"byte_end":306808,"line_start":277,"line_end":277,"column_start":5,"column_end":97}},{"value":"/ place.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":306813,"byte_end":306823,"line_start":278,"line_end":278,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":306828,"byte_end":306831,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Due to floating point inaccuracies a min value of 0.001 is enforced.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":306836,"byte_end":306908,"line_start":280,"line_end":280,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2897},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":307174,"byte_end":307203,"line_start":287,"line_end":287,"column_start":12,"column_end":41},"name":"build_from_texture_descriptor","qualname":"<Builder>::build_from_texture_descriptor","value":"fn build_from_texture_descriptor(Self, &wgpu::Device,\n&wgpu::TextureDescriptor) -> Renderer","parent":null,"children":[],"decl_id":null,"docs":" Build the **draw::Renderer** ready to target an output attachment of the given descriptor.\n","sig":null,"attributes":[{"value":"/ Build the **draw::Renderer** ready to target an output attachment of the given descriptor.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":307068,"byte_end":307162,"line_start":286,"line_end":286,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":2898},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":307699,"byte_end":307704,"line_start":304,"line_end":304,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"fn build(Self, &wgpu::Device, [u32; ], f32, u32, wgpu::TextureFormat)\n-> Renderer","parent":null,"children":[],"decl_id":null,"docs":" Build the **draw::Renderer** ready to target an output attachment with the given size,\n sample count and format.\n","sig":null,"attributes":[{"value":"/ Build the **draw::Renderer** ready to target an output attachment with the given size,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":307564,"byte_end":307654,"line_start":302,"line_end":302,"column_start":5,"column_end":95}},{"value":"/ sample count and format.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":307659,"byte_end":307687,"line_start":303,"line_end":303,"column_start":5,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":2904},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":308899,"byte_end":308919,"line_start":347,"line_end":347,"column_start":15,"column_end":35},"name":"DEFAULT_DEPTH_FORMAT","qualname":"::draw::renderer::Renderer::DEFAULT_DEPTH_FORMAT","value":"wgpu::TextureFormat","parent":{"krate":0,"index":2903},"children":[],"decl_id":null,"docs":" The default depth format\n","sig":null,"attributes":[{"value":"/ The default depth format","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":308856,"byte_end":308884,"line_start":346,"line_end":346,"column_start":5,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":2905},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":309044,"byte_end":309068,"line_start":349,"line_end":349,"column_start":15,"column_end":39},"name":"DEFAULT_GLYPH_CACHE_SIZE","qualname":"::draw::renderer::Renderer::DEFAULT_GLYPH_CACHE_SIZE","value":"[u32; ]","parent":{"krate":0,"index":2903},"children":[],"decl_id":null,"docs":" The default size for the inner glyph cache.\n","sig":null,"attributes":[{"value":"/ The default size for the inner glyph cache.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":308982,"byte_end":309029,"line_start":348,"line_end":348,"column_start":5,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":2908},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":309163,"byte_end":309198,"line_start":351,"line_end":351,"column_start":15,"column_end":50},"name":"DEFAULT_GLYPH_CACHE_SCALE_TOLERANCE","qualname":"::draw::renderer::Renderer::DEFAULT_GLYPH_CACHE_SCALE_TOLERANCE","value":"f32","parent":{"krate":0,"index":2903},"children":[],"decl_id":null,"docs":" The default scale tolerance for the glyph cache.\n","sig":null,"attributes":[{"value":"/ The default scale tolerance for the glyph cache.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":309096,"byte_end":309148,"line_start":350,"line_end":350,"column_start":5,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":2909},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":309285,"byte_end":309323,"line_start":353,"line_end":353,"column_start":15,"column_end":53},"name":"DEFAULT_GLYPH_CACHE_POSITION_TOLERANCE","qualname":"::draw::renderer::Renderer::DEFAULT_GLYPH_CACHE_POSITION_TOLERANCE","value":"f32","parent":{"krate":0,"index":2903},"children":[],"decl_id":null,"docs":" The default position tolerance for the glyph cache.\n","sig":null,"attributes":[{"value":"/ The default position tolerance for the glyph cache.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":309215,"byte_end":309270,"line_start":352,"line_end":352,"column_start":5,"column_end":60}}]},{"kind":"Const","id":{"krate":0,"index":2910},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":309403,"byte_end":309429,"line_start":355,"line_end":355,"column_start":15,"column_end":41},"name":"GLYPH_CACHE_TEXTURE_FORMAT","qualname":"::draw::renderer::Renderer::GLYPH_CACHE_TEXTURE_FORMAT","value":"wgpu::TextureFormat","parent":{"krate":0,"index":2903},"children":[],"decl_id":null,"docs":" The texture format of the inner glyph cache.\n","sig":null,"attributes":[{"value":"/ The texture format of the inner glyph cache.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":309340,"byte_end":309388,"line_start":354,"line_end":354,"column_start":5,"column_end":53}}]},{"kind":"Const","id":{"krate":0,"index":2911},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":309551,"byte_end":309563,"line_start":357,"line_end":357,"column_start":15,"column_end":27},"name":"INDEX_FORMAT","qualname":"::draw::renderer::Renderer::INDEX_FORMAT","value":"wgpu::IndexFormat","parent":{"krate":0,"index":2903},"children":[],"decl_id":null,"docs":" The index format used to index into vertices.\n","sig":null,"attributes":[{"value":"/ The index format used to index into vertices.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":309487,"byte_end":309536,"line_start":356,"line_end":356,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2912},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":310145,"byte_end":310148,"line_start":369,"line_end":369,"column_start":12,"column_end":15},"name":"new","qualname":"<Renderer>::new","value":"fn new(&wgpu::Device, [u32; ], f32, u32, wgpu::TextureFormat,\nwgpu::TextureFormat, [u32; ], f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new **Renderer**, ready to target an output attachment with the given size, sample\n count and color format.","sig":null,"attributes":[{"value":"/ Create a new **Renderer**, ready to target an output attachment with the given size, sample","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":309617,"byte_end":309712,"line_start":359,"line_end":359,"column_start":5,"column_end":100}},{"value":"/ count and color format.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":309717,"byte_end":309744,"line_start":360,"line_end":360,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":309749,"byte_end":309752,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ See the **RendererBuilder** type for a simplified approach to building a renderer that will","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":309757,"byte_end":309852,"line_start":362,"line_end":362,"column_start":5,"column_end":100}},{"value":"/ fall back to a set of reasonable defaults.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":309857,"byte_end":309903,"line_start":363,"line_end":363,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":309908,"byte_end":309911,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The `depth_format` will be used to construct a depth texture for depth testing.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":309916,"byte_end":309999,"line_start":365,"line_end":365,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":310004,"byte_end":310007,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ The `glyph_cache_size` will be used to create a texture on which glyphs will be stored for","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":310012,"byte_end":310106,"line_start":367,"line_end":367,"column_start":5,"column_end":99}},{"value":"/ efficient look-up.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":310111,"byte_end":310133,"line_start":368,"line_end":368,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2916},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":314829,"byte_end":314834,"line_start":486,"line_end":486,"column_start":12,"column_end":17},"name":"clear","qualname":"<Renderer>::clear","value":"fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear all pending render commands vertex data.\n","sig":null,"attributes":[{"value":"/ Clear all pending render commands vertex data.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":314767,"byte_end":314817,"line_start":485,"line_end":485,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2917},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":315185,"byte_end":315189,"line_start":496,"line_end":496,"column_start":12,"column_end":16},"name":"fill","qualname":"<Renderer>::fill","value":"fn fill(&mut Self, &wgpu::Device, &draw::Draw, f32, [u32; ])","parent":null,"children":[],"decl_id":null,"docs":" Generate a list of `RenderCommand`s from the given **Draw** instance and prepare any\n necessary vertex data.","sig":null,"attributes":[{"value":"/ Generate a list of `RenderCommand`s from the given **Draw** instance and prepare any","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":314965,"byte_end":315053,"line_start":492,"line_end":492,"column_start":5,"column_end":93}},{"value":"/ necessary vertex data.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":315058,"byte_end":315084,"line_start":493,"line_end":493,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":315089,"byte_end":315092,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ Note that the given **Draw** instance will be *drained* of its commands.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":315097,"byte_end":315173,"line_start":495,"line_end":495,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2933},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":328384,"byte_end":328402,"line_start":773,"line_end":773,"column_start":12,"column_end":30},"name":"encode_render_pass","qualname":"<Renderer>::encode_render_pass","value":"fn encode_render_pass(&mut Self, &wgpu::Device, &mut wgpu::CommandEncoder,\n&draw::Draw, f32, [u32; ], &wgpu::TextureView, Option<&wgpu::TextureView>)","parent":null,"children":[],"decl_id":null,"docs":" Encode a render pass with the given **Draw**ing to the given `output_attachment`.","sig":null,"attributes":[{"value":"/ Encode a render pass with the given **Draw**ing to the given `output_attachment`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":327961,"byte_end":328046,"line_start":766,"line_end":766,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":328051,"byte_end":328054,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ If the **Draw**ing has been scaled for handling DPI, specify the necessary `scale_factor`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":328059,"byte_end":328152,"line_start":768,"line_end":768,"column_start":5,"column_end":98}},{"value":"/ for scaling back to the `output_attachment_size` (physical dimensions).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":328157,"byte_end":328232,"line_start":769,"line_end":769,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":328237,"byte_end":328240,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ If the `output_attachment` is multisampled and should be resolved to another texture,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":328245,"byte_end":328334,"line_start":771,"line_end":771,"column_start":5,"column_end":94}},{"value":"/ include the `resolve_target`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":328339,"byte_end":328372,"line_start":772,"line_end":772,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2937},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":335418,"byte_end":335435,"line_start":943,"line_end":943,"column_start":12,"column_end":29},"name":"render_to_texture","qualname":"<Renderer>::render_to_texture","value":"fn render_to_texture(&mut Self, &wgpu::Device, &mut wgpu::CommandEncoder,\n&draw::Draw, &wgpu::Texture)","parent":null,"children":[],"decl_id":null,"docs":" Encode the necessary commands to render the contents of the given **Draw**ing to the given\n **Texture**.\n","sig":null,"attributes":[{"value":"/ Encode the necessary commands to render the contents of the given **Draw**ing to the given","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":335291,"byte_end":335385,"line_start":941,"line_end":941,"column_start":5,"column_end":99}},{"value":"/ **Texture**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":335390,"byte_end":335406,"line_start":942,"line_end":942,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2938},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":336140,"byte_end":336155,"line_start":968,"line_end":968,"column_start":12,"column_end":27},"name":"render_to_frame","qualname":"<Renderer>::render_to_frame","value":"fn render_to_frame(&mut Self, &wgpu::Device, &draw::Draw, f32, &Frame)","parent":null,"children":[],"decl_id":null,"docs":" Encode the necessary commands to render the contents of the given **Draw**ing to the given\n **Frame**.\n","sig":null,"attributes":[{"value":"/ Encode the necessary commands to render the contents of the given **Draw**ing to the given","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":336015,"byte_end":336109,"line_start":966,"line_end":966,"column_start":5,"column_end":99}},{"value":"/ **Frame**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":336114,"byte_end":336128,"line_start":967,"line_end":967,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2940},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":336732,"byte_end":336739,"line_start":992,"line_end":992,"column_start":8,"column_end":15},"name":"default","qualname":"<Builder as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2943},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":336861,"byte_end":336866,"line_start":999,"line_end":999,"column_start":8,"column_end":13},"name":"deref","qualname":"<GlyphCache as std::ops::Deref>::deref","value":"fn deref(&Self) -> &Self::Target","parent":{"krate":2,"index":3369},"children":[],"decl_id":{"krate":2,"index":3371},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2945},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":336960,"byte_end":336969,"line_start":1005,"line_end":1005,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<GlyphCache as std::ops::DerefMut>::deref_mut","value":"fn deref_mut(&mut Self) -> &mut Self::Target","parent":{"krate":2,"index":3382},"children":[],"decl_id":{"krate":2,"index":3383},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2965},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"theme","qualname":"::draw::theme","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","parent":null,"children":[{"krate":0,"index":2966},{"krate":0,"index":2967},{"krate":0,"index":2970},{"krate":0,"index":2973},{"krate":0,"index":5101},{"krate":0,"index":5104},{"krate":0,"index":5106},{"krate":0,"index":5108},{"krate":0,"index":5111},{"krate":0,"index":5113},{"krate":0,"index":5115},{"krate":0,"index":5140},{"krate":0,"index":5141},{"krate":0,"index":5143},{"krate":0,"index":5145},{"krate":0,"index":5146},{"krate":0,"index":5148},{"krate":0,"index":5151},{"krate":0,"index":5152},{"krate":0,"index":2976},{"krate":0,"index":2983}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5101},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343377,"byte_end":343382,"line_start":7,"line_end":7,"column_start":12,"column_end":17},"name":"Theme","qualname":"::draw::theme::Theme","value":"Theme { fill_color, stroke_color }","parent":null,"children":[{"krate":0,"index":5102},{"krate":0,"index":5103}],"decl_id":null,"docs":" A set of styling defaults used for coloring texturing geometric primitives that have no entry\n within the **Draw**'s inner **ColorMap**.\n","sig":null,"attributes":[{"value":"/ A set of styling defaults used for coloring texturing geometric primitives that have no entry","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343198,"byte_end":343295,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ within the **Draw**'s inner **ColorMap**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343296,"byte_end":343341,"line_start":5,"line_end":5,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":5102},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343422,"byte_end":343432,"line_start":9,"line_end":9,"column_start":9,"column_end":19},"name":"fill_color","qualname":"::draw::theme::Theme::fill_color","value":"draw::theme::Color","parent":{"krate":0,"index":5101},"children":[],"decl_id":null,"docs":" Fill color defaults.\n","sig":null,"attributes":[{"value":"/ Fill color defaults.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343389,"byte_end":343413,"line_start":8,"line_end":8,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":5103},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343480,"byte_end":343492,"line_start":11,"line_end":11,"column_start":9,"column_end":21},"name":"stroke_color","qualname":"::draw::theme::Theme::stroke_color","value":"draw::theme::Color","parent":{"krate":0,"index":5101},"children":[],"decl_id":null,"docs":" Stroke color defaults.\n","sig":null,"attributes":[{"value":"/ Stroke color defaults.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343445,"byte_end":343471,"line_start":10,"line_end":10,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5108},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343580,"byte_end":343585,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"Color","qualname":"::draw::theme::Color","value":"Color { default, primitive }","parent":null,"children":[{"krate":0,"index":5109},{"krate":0,"index":5110}],"decl_id":null,"docs":" A set of defaults used for coloring.\n","sig":null,"attributes":[{"value":"/ A set of defaults used for coloring.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343504,"byte_end":343544,"line_start":14,"line_end":14,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":5109},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343596,"byte_end":343603,"line_start":17,"line_end":17,"column_start":9,"column_end":16},"name":"default","qualname":"::draw::theme::Color::default","value":"nannou_core::color::Alpha<nannou_core::color::rgb::Rgb, f32>","parent":{"krate":0,"index":5108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5110},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343620,"byte_end":343629,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"name":"primitive","qualname":"::draw::theme::Color::primitive","value":"std::collections::HashMap<draw::theme::Primitive, nannou_core::color::Alpha<nannou_core::color::rgb::Rgb, f32>>","parent":{"krate":0,"index":5108},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5116},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343890,"byte_end":343895,"line_start":26,"line_end":26,"column_start":5,"column_end":10},"name":"Arrow","qualname":"::draw::theme::Primitive::Arrow","value":"Primitive::Arrow","parent":{"krate":0,"index":5115},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5118},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343901,"byte_end":343907,"line_start":27,"line_end":27,"column_start":5,"column_end":11},"name":"Cuboid","qualname":"::draw::theme::Primitive::Cuboid","value":"Primitive::Cuboid","parent":{"krate":0,"index":5115},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5120},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343913,"byte_end":343920,"line_start":28,"line_end":28,"column_start":5,"column_end":12},"name":"Ellipse","qualname":"::draw::theme::Primitive::Ellipse","value":"Primitive::Ellipse","parent":{"krate":0,"index":5115},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5122},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343926,"byte_end":343930,"line_start":29,"line_end":29,"column_start":5,"column_end":9},"name":"Line","qualname":"::draw::theme::Primitive::Line","value":"Primitive::Line","parent":{"krate":0,"index":5115},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5124},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343936,"byte_end":343940,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Mesh","qualname":"::draw::theme::Primitive::Mesh","value":"Primitive::Mesh","parent":{"krate":0,"index":5115},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5126},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343946,"byte_end":343950,"line_start":31,"line_end":31,"column_start":5,"column_end":9},"name":"Path","qualname":"::draw::theme::Primitive::Path","value":"Primitive::Path","parent":{"krate":0,"index":5115},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5128},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343956,"byte_end":343963,"line_start":32,"line_end":32,"column_start":5,"column_end":12},"name":"Polygon","qualname":"::draw::theme::Primitive::Polygon","value":"Primitive::Polygon","parent":{"krate":0,"index":5115},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5130},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343969,"byte_end":343973,"line_start":33,"line_end":33,"column_start":5,"column_end":9},"name":"Quad","qualname":"::draw::theme::Primitive::Quad","value":"Primitive::Quad","parent":{"krate":0,"index":5115},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5132},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343979,"byte_end":343983,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"name":"Rect","qualname":"::draw::theme::Primitive::Rect","value":"Primitive::Rect","parent":{"krate":0,"index":5115},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5134},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343989,"byte_end":343993,"line_start":35,"line_end":35,"column_start":5,"column_end":9},"name":"Text","qualname":"::draw::theme::Primitive::Text","value":"Primitive::Text","parent":{"krate":0,"index":5115},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5136},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343999,"byte_end":344006,"line_start":36,"line_end":36,"column_start":5,"column_end":12},"name":"Texture","qualname":"::draw::theme::Primitive::Texture","value":"Primitive::Texture","parent":{"krate":0,"index":5115},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5138},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":344012,"byte_end":344015,"line_start":37,"line_end":37,"column_start":5,"column_end":8},"name":"Tri","qualname":"::draw::theme::Primitive::Tri","value":"Primitive::Tri","parent":{"krate":0,"index":5115},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5115},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343874,"byte_end":343883,"line_start":25,"line_end":25,"column_start":10,"column_end":19},"name":"Primitive","qualname":"::draw::theme::Primitive","value":"enum Primitive {\n    Arrow,\n    Cuboid,\n    Ellipse,\n    Line,\n    Mesh,\n    Path,\n    Polygon,\n    Quad,\n    Rect,\n    Text,\n    Texture,\n    Tri,\n}","parent":null,"children":[{"krate":0,"index":5116},{"krate":0,"index":5118},{"krate":0,"index":5120},{"krate":0,"index":5122},{"krate":0,"index":5124},{"krate":0,"index":5126},{"krate":0,"index":5128},{"krate":0,"index":5130},{"krate":0,"index":5132},{"krate":0,"index":5134},{"krate":0,"index":5136},{"krate":0,"index":5138}],"decl_id":null,"docs":" Primitive geometry types that may have unique default styles.","sig":null,"attributes":[{"value":"/ Primitive geometry types that may have unique default styles.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343661,"byte_end":343726,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343727,"byte_end":343730,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ These are used as keys into the **Theme**'s geometry primitive default values.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":343731,"byte_end":343813,"line_start":23,"line_end":23,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2977},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":344133,"byte_end":344143,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"fill_srgba","qualname":"<Theme>::fill_srgba","value":"fn fill_srgba(&Self, &Primitive) -> Srgba","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the non-linear sRGBA fill color representation for the given primitive.\n","sig":null,"attributes":[{"value":"/ Retrieve the non-linear sRGBA fill color representation for the given primitive.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":344037,"byte_end":344121,"line_start":41,"line_end":41,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":2979},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":344426,"byte_end":344440,"line_start":51,"line_end":51,"column_start":12,"column_end":26},"name":"fill_lin_srgba","qualname":"<Theme>::fill_lin_srgba","value":"fn fill_lin_srgba(&Self, &Primitive) -> LinSrgba","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the linaer sRGBA fill color representation for the given primitive.\n","sig":null,"attributes":[{"value":"/ Retrieve the linaer sRGBA fill color representation for the given primitive.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":344334,"byte_end":344414,"line_start":50,"line_end":50,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2980},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":344633,"byte_end":344645,"line_start":56,"line_end":56,"column_start":12,"column_end":24},"name":"stroke_srgba","qualname":"<Theme>::stroke_srgba","value":"fn stroke_srgba(&Self, &Primitive) -> Srgba","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the non-linear sRGBA stroke color representation for the given primitive.\n","sig":null,"attributes":[{"value":"/ Retrieve the non-linear sRGBA stroke color representation for the given primitive.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":344535,"byte_end":344621,"line_start":55,"line_end":55,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":2982},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":344934,"byte_end":344950,"line_start":65,"line_end":65,"column_start":12,"column_end":28},"name":"stroke_lin_srgba","qualname":"<Theme>::stroke_lin_srgba","value":"fn stroke_lin_srgba(&Self, &Primitive) -> LinSrgba","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the linaer sRGBA stroke color representation for the given primitive.\n","sig":null,"attributes":[{"value":"/ Retrieve the linaer sRGBA stroke color representation for the given primitive.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":344840,"byte_end":344922,"line_start":64,"line_end":64,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2984},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":345077,"byte_end":345084,"line_start":71,"line_end":71,"column_start":8,"column_end":15},"name":"default","qualname":"<Theme as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5154},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":74294,"byte_end":74298,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"Draw","qualname":"::draw::Draw","value":"Draw {  }","parent":null,"children":[{"krate":0,"index":5155},{"krate":0,"index":5156}],"decl_id":null,"docs":" A simple API for drawing 2D and 3D graphics.","sig":null,"attributes":[{"value":"/ A simple API for drawing 2D and 3D graphics.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":73362,"byte_end":73410,"line_start":31,"line_end":31,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":73411,"byte_end":73414,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ **Draw** provides a simple way to compose together geometry and text with custom colours and","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":73415,"byte_end":73511,"line_start":33,"line_end":33,"column_start":1,"column_end":97}},{"value":"/ textures and draw them to the screen. A suite of methods have been provided for drawing","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":73512,"byte_end":73603,"line_start":34,"line_end":34,"column_start":1,"column_end":92}},{"value":"/ polygons, paths, meshes, text and textures in an accessible-yet-efficient manner.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":73604,"byte_end":73689,"line_start":35,"line_end":35,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":73690,"byte_end":73693,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ **Draw** can also be used to create new **Draw** instances that refer to the same inner draw","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":73694,"byte_end":73790,"line_start":37,"line_end":37,"column_start":1,"column_end":97}},{"value":"/ state but are slightly different from one another. E.g. `draw.rotate(radians)` produces a new","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":73791,"byte_end":73888,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ **Draw** instance where all drawings will be rotated by the given amount. `draw.x(x)` produces","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":73889,"byte_end":73987,"line_start":39,"line_end":39,"column_start":1,"column_end":99}},{"value":"/ a new **Draw** instance where all drawings are translated along the *x* axis by the given","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":73988,"byte_end":74081,"line_start":40,"line_end":40,"column_start":1,"column_end":94}},{"value":"/ amount.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":74082,"byte_end":74093,"line_start":41,"line_end":41,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":74094,"byte_end":74097,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ See the [draw](https://github.com/nannou-org/nannou/blob/master/examples) examples for a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":74098,"byte_end":74190,"line_start":43,"line_end":43,"column_start":1,"column_end":93}},{"value":"/ variety of demonstrations of how the **Draw** type can be used!","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":74191,"byte_end":74258,"line_start":44,"line_end":44,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5161},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":75132,"byte_end":75139,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"Context","qualname":"::draw::Context","value":"Context { transform, blend, scissor, topology, sampler }","parent":null,"children":[{"krate":0,"index":5162},{"krate":0,"index":5163},{"krate":0,"index":5164},{"krate":0,"index":5165},{"krate":0,"index":5166}],"decl_id":null,"docs":" The current **Transform**, alpha **BlendState** and **Scissor** of a **Draw** instance.\n","sig":null,"attributes":[{"value":"/ The current **Transform**, alpha **BlendState** and **Scissor** of a **Draw** instance.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":74994,"byte_end":75085,"line_start":61,"line_end":61,"column_start":1,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":5162},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":75150,"byte_end":75159,"line_start":64,"line_end":64,"column_start":9,"column_end":18},"name":"transform","qualname":"::draw::Context::transform","value":"nannou_core::prelude::Mat4","parent":{"krate":0,"index":5161},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5163},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":75175,"byte_end":75180,"line_start":65,"line_end":65,"column_start":9,"column_end":14},"name":"blend","qualname":"::draw::Context::blend","value":"nannou_wgpu::BlendState","parent":{"krate":0,"index":5161},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5164},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":75208,"byte_end":75215,"line_start":66,"line_end":66,"column_start":9,"column_end":16},"name":"scissor","qualname":"::draw::Context::scissor","value":"draw::Scissor","parent":{"krate":0,"index":5161},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5165},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":75347,"byte_end":75355,"line_start":69,"line_end":69,"column_start":9,"column_end":17},"name":"topology","qualname":"::draw::Context::topology","value":"nannou_wgpu::PrimitiveTopology","parent":{"krate":0,"index":5161},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5166},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":75390,"byte_end":75397,"line_start":70,"line_end":70,"column_start":9,"column_end":16},"name":"sampler","qualname":"::draw::Context::sampler","value":"nannou_wgpu::SamplerDescriptor<'static>","parent":{"krate":0,"index":5161},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5176},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":75722,"byte_end":75731,"line_start":80,"line_end":80,"column_start":5,"column_end":14},"name":"Primitive","qualname":"::draw::DrawCommand::Primitive","value":"DrawCommand::Primitive(Primitive)","parent":{"krate":0,"index":5175},"children":[],"decl_id":null,"docs":" Draw a primitive.\n","sig":null,"attributes":[{"value":"/ Draw a primitive.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":75696,"byte_end":75717,"line_start":79,"line_end":79,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":5178},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":75732,"byte_end":75741,"line_start":80,"line_end":80,"column_start":15,"column_end":24},"name":"0","qualname":"::draw::DrawCommand::Primitive::0","value":"draw::primitive::Primitive","parent":{"krate":0,"index":5176},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5179},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":75800,"byte_end":75807,"line_start":82,"line_end":82,"column_start":5,"column_end":12},"name":"Context","qualname":"::draw::DrawCommand::Context","value":"DrawCommand::Context(Context)","parent":{"krate":0,"index":5175},"children":[],"decl_id":null,"docs":" A change in the rendering context occurred.\n","sig":null,"attributes":[{"value":"/ A change in the rendering context occurred.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":75748,"byte_end":75795,"line_start":81,"line_end":81,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5181},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":75808,"byte_end":75815,"line_start":82,"line_end":82,"column_start":13,"column_end":20},"name":"0","qualname":"::draw::DrawCommand::Context::0","value":"draw::Context","parent":{"krate":0,"index":5179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5175},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":75678,"byte_end":75689,"line_start":78,"line_end":78,"column_start":10,"column_end":21},"name":"DrawCommand","qualname":"::draw::DrawCommand","value":"enum DrawCommand { Primitive(Primitive), Context(Context), }","parent":null,"children":[{"krate":0,"index":5176},{"krate":0,"index":5179}],"decl_id":null,"docs":" Commands generated by drawings.","sig":null,"attributes":[{"value":"/ Commands generated by drawings.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":75436,"byte_end":75471,"line_start":73,"line_end":73,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":75472,"byte_end":75475,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ During rendering, the list of **DrawCommand**s are converted into a list of **RenderCommands**","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":75476,"byte_end":75574,"line_start":75,"line_end":75,"column_start":1,"column_end":99}},{"value":"/ that are directly associated with encodable render pass commands.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":75575,"byte_end":75644,"line_start":76,"line_end":76,"column_start":1,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5187},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":76010,"byte_end":76014,"line_start":89,"line_end":89,"column_start":5,"column_end":9},"name":"Full","qualname":"::draw::Scissor::Full","value":"Scissor::Full","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" The extent of the scissor matches the bounds of the target texture.\n","sig":null,"attributes":[{"value":"/ The extent of the scissor matches the bounds of the target texture.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":75934,"byte_end":76005,"line_start":88,"line_end":88,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5189},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":76061,"byte_end":76065,"line_start":91,"line_end":91,"column_start":5,"column_end":9},"name":"Rect","qualname":"::draw::Scissor::Rect","value":"Scissor::Rect(geom::Rect)","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" Crop the view to the given rect.\n","sig":null,"attributes":[{"value":"/ Crop the view to the given rect.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":76020,"byte_end":76056,"line_start":90,"line_end":90,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":5191},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":76066,"byte_end":76076,"line_start":91,"line_end":91,"column_start":10,"column_end":20},"name":"0","qualname":"::draw::Scissor::Rect::0","value":"nannou_core::geom::Rect","parent":{"krate":0,"index":5189},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5192},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":76174,"byte_end":76183,"line_start":93,"line_end":93,"column_start":5,"column_end":14},"name":"NoOverlap","qualname":"::draw::Scissor::NoOverlap","value":"Scissor::NoOverlap","parent":{"krate":0,"index":5186},"children":[],"decl_id":null,"docs":" The scissor has no overlap with the previous window, resulting in nothing to draw.\n","sig":null,"attributes":[{"value":"/ The scissor has no overlap with the previous window, resulting in nothing to draw.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":76083,"byte_end":76169,"line_start":92,"line_end":92,"column_start":5,"column_end":91}}]},{"kind":"Enum","id":{"krate":0,"index":5186},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":75920,"byte_end":75927,"line_start":87,"line_end":87,"column_start":10,"column_end":17},"name":"Scissor","qualname":"::draw::Scissor","value":"enum Scissor { Full, Rect(geom::Rect), NoOverlap, }","parent":null,"children":[{"krate":0,"index":5187},{"krate":0,"index":5189},{"krate":0,"index":5192}],"decl_id":null,"docs":" The scissor for a **Draw**'s render context.\n","sig":null,"attributes":[{"value":"/ The scissor for a **Draw**'s render context.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":75821,"byte_end":75869,"line_start":85,"line_end":85,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":5203},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":76752,"byte_end":76757,"line_start":104,"line_end":104,"column_start":12,"column_end":17},"name":"State","qualname":"::draw::State","value":"State {  }","parent":null,"children":[{"krate":0,"index":5204},{"krate":0,"index":5205},{"krate":0,"index":5206},{"krate":0,"index":5207},{"krate":0,"index":5208},{"krate":0,"index":5209}],"decl_id":null,"docs":" The inner state of the **Draw** type.","sig":null,"attributes":[{"value":"/ The inner state of the **Draw** type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":76188,"byte_end":76229,"line_start":96,"line_end":96,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":76230,"byte_end":76233,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ The **Draw** type stores its **State** behind a **RefCell** - a type used for moving mutability","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":76234,"byte_end":76333,"line_start":98,"line_end":98,"column_start":1,"column_end":100}},{"value":"/ checks from compile time to runtime. We do this in order to avoid requiring a `mut` handle to a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":76334,"byte_end":76433,"line_start":99,"line_end":99,"column_start":1,"column_end":100}},{"value":"/ `draw`. The primary purpose of a **Draw** is to be an easy-as-possible, high-level API for","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":76434,"byte_end":76528,"line_start":100,"line_end":100,"column_start":1,"column_end":95}},{"value":"/ drawing stuff. In order to be friendlier to new users, we want to avoid requiring them to think","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":76529,"byte_end":76628,"line_start":101,"line_end":101,"column_start":1,"column_end":100}},{"value":"/ about mutability and instead focus on creativity. Rust-lang nuances can come later.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":76629,"byte_end":76716,"line_start":102,"line_end":102,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":5214},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":77649,"byte_end":77666,"line_start":125,"line_end":125,"column_start":12,"column_end":29},"name":"IntermediaryState","qualname":"::draw::IntermediaryState","value":"IntermediaryState {  }","parent":null,"children":[{"krate":0,"index":5215},{"krate":0,"index":5216},{"krate":0,"index":5217},{"krate":0,"index":5218},{"krate":0,"index":5219}],"decl_id":null,"docs":" State made accessible via the `DrawingContext`.\n","sig":null,"attributes":[{"value":"/ State made accessible via the `DrawingContext`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":77562,"byte_end":77613,"line_start":123,"line_end":123,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2986},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":78236,"byte_end":78241,"line_start":139,"line_end":139,"column_start":12,"column_end":17},"name":"reset","qualname":"<IntermediaryState>::reset","value":"fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2993},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":79816,"byte_end":79819,"line_start":186,"line_end":186,"column_start":12,"column_end":15},"name":"new","qualname":"<Draw>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new **Draw** instance.","sig":null,"attributes":[{"value":"/ Create a new **Draw** instance.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":79706,"byte_end":79741,"line_start":183,"line_end":183,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":79746,"byte_end":79749,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This is the same as calling **Draw::default**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":79754,"byte_end":79804,"line_start":185,"line_end":185,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2994},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":79927,"byte_end":79932,"line_start":191,"line_end":191,"column_start":12,"column_end":17},"name":"reset","qualname":"<Draw>::reset","value":"fn reset(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets all state within the `Draw` instance.\n","sig":null,"attributes":[{"value":"/ Resets all state within the `Draw` instance.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":79867,"byte_end":79915,"line_start":190,"line_end":190,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2995},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":80252,"byte_end":80261,"line_start":201,"line_end":201,"column_start":12,"column_end":21},"name":"transform","qualname":"<Draw>::transform","value":"fn transform(&Self, Mat4) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Produce a new **Draw** instance transformed by the given transform matrix.","sig":null,"attributes":[{"value":"/ Produce a new **Draw** instance transformed by the given transform matrix.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":80019,"byte_end":80097,"line_start":197,"line_end":197,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":80102,"byte_end":80105,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ The resulting **Draw** instance will be have a transform equal to the new transform applied","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":80110,"byte_end":80205,"line_start":199,"line_end":199,"column_start":5,"column_end":100}},{"value":"/ to the existing transform.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":80210,"byte_end":80240,"line_start":200,"line_end":200,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2996},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":80543,"byte_end":80552,"line_start":208,"line_end":208,"column_start":12,"column_end":21},"name":"translate","qualname":"<Draw>::translate","value":"fn translate(&Self, Vec3) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Translate the position of the origin by the given translation vector.\n","sig":null,"attributes":[{"value":"/ Translate the position of the origin by the given translation vector.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":80458,"byte_end":80531,"line_start":207,"line_end":207,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2997},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":80779,"byte_end":80782,"line_start":215,"line_end":215,"column_start":12,"column_end":15},"name":"xyz","qualname":"<Draw>::xyz","value":"fn xyz(&Self, Vec3) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Translate the position of the origin by the given translation vector.","sig":null,"attributes":[{"value":"/ Translate the position of the origin by the given translation vector.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":80640,"byte_end":80713,"line_start":212,"line_end":212,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":80718,"byte_end":80721,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ This method is short for `translate`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":80726,"byte_end":80767,"line_start":214,"line_end":214,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2998},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":80931,"byte_end":80933,"line_start":220,"line_end":220,"column_start":12,"column_end":14},"name":"xy","qualname":"<Draw>::xy","value":"fn xy(&Self, Vec2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Translate the position of the origin by the given translation vector.\n","sig":null,"attributes":[{"value":"/ Translate the position of the origin by the given translation vector.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":80846,"byte_end":80919,"line_start":219,"line_end":219,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2999},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":81093,"byte_end":81098,"line_start":225,"line_end":225,"column_start":12,"column_end":17},"name":"x_y_z","qualname":"<Draw>::x_y_z","value":"fn x_y_z(&Self, f32, f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Translate the position of the origin by the given amount across each axis.\n","sig":null,"attributes":[{"value":"/ Translate the position of the origin by the given amount across each axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":81003,"byte_end":81081,"line_start":224,"line_end":224,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3000},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":81276,"byte_end":81279,"line_start":230,"line_end":230,"column_start":12,"column_end":15},"name":"x_y","qualname":"<Draw>::x_y","value":"fn x_y(&Self, f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Translate the position of the origin by the given amount across each axis.\n","sig":null,"attributes":[{"value":"/ Translate the position of the origin by the given amount across each axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":81186,"byte_end":81264,"line_start":229,"line_end":229,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3001},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":81425,"byte_end":81426,"line_start":235,"line_end":235,"column_start":12,"column_end":13},"name":"x","qualname":"<Draw>::x","value":"fn x(&Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Translate the position of the origin along the x axis.\n","sig":null,"attributes":[{"value":"/ Translate the position of the origin along the x axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":81355,"byte_end":81413,"line_start":234,"line_end":234,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3002},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":81558,"byte_end":81559,"line_start":240,"line_end":240,"column_start":12,"column_end":13},"name":"y","qualname":"<Draw>::y","value":"fn y(&Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Translate the position of the origin along the y axis.\n","sig":null,"attributes":[{"value":"/ Translate the position of the origin along the y axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":81488,"byte_end":81546,"line_start":239,"line_end":239,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3003},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":81691,"byte_end":81692,"line_start":245,"line_end":245,"column_start":12,"column_end":13},"name":"z","qualname":"<Draw>::z","value":"fn z(&Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Translate the position of the origin along the z axis.\n","sig":null,"attributes":[{"value":"/ Translate the position of the origin along the z axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":81621,"byte_end":81679,"line_start":244,"line_end":244,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3004},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":81868,"byte_end":81873,"line_start":250,"line_end":250,"column_start":12,"column_end":17},"name":"scale","qualname":"<Draw>::scale","value":"fn scale(&Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Produce a new **Draw** instance where the contents are scaled uniformly by the given value.\n","sig":null,"attributes":[{"value":"/ Produce a new **Draw** instance where the contents are scaled uniformly by the given value.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":81761,"byte_end":81856,"line_start":249,"line_end":249,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":3005},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":82072,"byte_end":82082,"line_start":256,"line_end":256,"column_start":12,"column_end":22},"name":"scale_axes","qualname":"<Draw>::scale_axes","value":"fn scale_axes(&Self, Vec3) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Produce a new **Draw** instance where the contents are scaled by the given amount across\n each axis.\n","sig":null,"attributes":[{"value":"/ Produce a new **Draw** instance where the contents are scaled by the given amount across","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":81949,"byte_end":82041,"line_start":254,"line_end":254,"column_start":5,"column_end":97}},{"value":"/ each axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":82046,"byte_end":82060,"line_start":255,"line_end":255,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3006},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":82286,"byte_end":82293,"line_start":262,"line_end":262,"column_start":12,"column_end":19},"name":"scale_x","qualname":"<Draw>::scale_x","value":"fn scale_x(&Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Produce a new **Draw** instance where the contents are scaled by the given amount along the\n x axis\n","sig":null,"attributes":[{"value":"/ Produce a new **Draw** instance where the contents are scaled by the given amount along the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":82164,"byte_end":82259,"line_start":260,"line_end":260,"column_start":5,"column_end":100}},{"value":"/ x axis","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":82264,"byte_end":82274,"line_start":261,"line_end":261,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3007},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":82495,"byte_end":82502,"line_start":268,"line_end":268,"column_start":12,"column_end":19},"name":"scale_y","qualname":"<Draw>::scale_y","value":"fn scale_y(&Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Produce a new **Draw** instance where the contents are scaled by the given amount along the\n y axis\n","sig":null,"attributes":[{"value":"/ Produce a new **Draw** instance where the contents are scaled by the given amount along the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":82373,"byte_end":82468,"line_start":266,"line_end":266,"column_start":5,"column_end":100}},{"value":"/ y axis","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":82473,"byte_end":82483,"line_start":267,"line_end":267,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3008},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":82704,"byte_end":82711,"line_start":274,"line_end":274,"column_start":12,"column_end":19},"name":"scale_z","qualname":"<Draw>::scale_z","value":"fn scale_z(&Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Produce a new **Draw** instance where the contents are scaled by the given amount along the\n z axis\n","sig":null,"attributes":[{"value":"/ Produce a new **Draw** instance where the contents are scaled by the given amount along the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":82582,"byte_end":82677,"line_start":272,"line_end":272,"column_start":5,"column_end":100}},{"value":"/ z axis","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":82682,"byte_end":82692,"line_start":273,"line_end":273,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3009},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":82914,"byte_end":82919,"line_start":280,"line_end":280,"column_start":12,"column_end":17},"name":"euler","qualname":"<Draw>::euler","value":"fn euler(&Self, Vec3) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The given vector is interpreted as a Euler angle in radians and a transform is applied\n accordingly.\n","sig":null,"attributes":[{"value":"/ The given vector is interpreted as a Euler angle in radians and a transform is applied","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":82791,"byte_end":82881,"line_start":278,"line_end":278,"column_start":5,"column_end":95}},{"value":"/ accordingly.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":82886,"byte_end":82902,"line_start":279,"line_end":279,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3010},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":83114,"byte_end":83124,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"quaternion","qualname":"<Draw>::quaternion","value":"fn quaternion(&Self, Quat) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation with the given **Quaternion**.\n","sig":null,"attributes":[{"value":"/ Specify the orientation with the given **Quaternion**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":83044,"byte_end":83102,"line_start":284,"line_end":284,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3011},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":83369,"byte_end":83376,"line_start":292,"line_end":292,"column_start":12,"column_end":19},"name":"radians","qualname":"<Draw>::radians","value":"fn radians(&Self, Vec3) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation along each axis with the given **Vector** of radians.","sig":null,"attributes":[{"value":"/ Specify the orientation along each axis with the given **Vector** of radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":83205,"byte_end":83286,"line_start":289,"line_end":289,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":83291,"byte_end":83294,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This currently has the same affect as calling `euler`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":83299,"byte_end":83357,"line_start":291,"line_end":291,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3012},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":83507,"byte_end":83516,"line_start":297,"line_end":297,"column_start":12,"column_end":21},"name":"x_radians","qualname":"<Draw>::x_radians","value":"fn x_radians(&Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation around the *x* axis in radians.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *x* axis in radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":83436,"byte_end":83495,"line_start":296,"line_end":296,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3013},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":83664,"byte_end":83673,"line_start":302,"line_end":302,"column_start":12,"column_end":21},"name":"y_radians","qualname":"<Draw>::y_radians","value":"fn y_radians(&Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation around the *y* axis in radians.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *y* axis in radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":83593,"byte_end":83652,"line_start":301,"line_end":301,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3014},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":83821,"byte_end":83830,"line_start":307,"line_end":307,"column_start":12,"column_end":21},"name":"z_radians","qualname":"<Draw>::z_radians","value":"fn z_radians(&Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation around the *z* axis in radians.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *z* axis in radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":83750,"byte_end":83809,"line_start":306,"line_end":306,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3015},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":84000,"byte_end":84007,"line_start":312,"line_end":312,"column_start":12,"column_end":19},"name":"degrees","qualname":"<Draw>::degrees","value":"fn degrees(&Self, Vec3) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation along each axis with the given **Vector** of degrees.\n","sig":null,"attributes":[{"value":"/ Specify the orientation along each axis with the given **Vector** of degrees.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":83907,"byte_end":83988,"line_start":311,"line_end":311,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":3016},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":84194,"byte_end":84203,"line_start":317,"line_end":317,"column_start":12,"column_end":21},"name":"x_degrees","qualname":"<Draw>::x_degrees","value":"fn x_degrees(&Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation around the *x* axis in degrees.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *x* axis in degrees.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":84123,"byte_end":84182,"line_start":316,"line_end":316,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3017},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":84349,"byte_end":84358,"line_start":322,"line_end":322,"column_start":12,"column_end":21},"name":"y_degrees","qualname":"<Draw>::y_degrees","value":"fn y_degrees(&Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation around the *y* axis in degrees.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *y* axis in degrees.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":84278,"byte_end":84337,"line_start":321,"line_end":321,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3018},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":84504,"byte_end":84513,"line_start":327,"line_end":327,"column_start":12,"column_end":21},"name":"z_degrees","qualname":"<Draw>::z_degrees","value":"fn z_degrees(&Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation around the *z* axis in degrees.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *z* axis in degrees.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":84433,"byte_end":84492,"line_start":326,"line_end":326,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3019},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":84681,"byte_end":84686,"line_start":332,"line_end":332,"column_start":12,"column_end":17},"name":"turns","qualname":"<Draw>::turns","value":"fn turns(&Self, Vec3) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation along each axis with the given **Vector** of degrees.\n","sig":null,"attributes":[{"value":"/ Specify the orientation along each axis with the given **Vector** of degrees.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":84588,"byte_end":84669,"line_start":331,"line_end":331,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":3020},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":84952,"byte_end":84959,"line_start":341,"line_end":341,"column_start":12,"column_end":19},"name":"x_turns","qualname":"<Draw>::x_turns","value":"fn x_turns(&Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation around the *x* axis as a number of turns around the axis.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *x* axis as a number of turns around the axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":84855,"byte_end":84940,"line_start":340,"line_end":340,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":3021},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":85133,"byte_end":85140,"line_start":346,"line_end":346,"column_start":12,"column_end":19},"name":"y_turns","qualname":"<Draw>::y_turns","value":"fn y_turns(&Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation around the *y* axis as a number of turns around the axis.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *y* axis as a number of turns around the axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":85036,"byte_end":85121,"line_start":345,"line_end":345,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":3022},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":85314,"byte_end":85321,"line_start":351,"line_end":351,"column_start":12,"column_end":19},"name":"z_turns","qualname":"<Draw>::z_turns","value":"fn z_turns(&Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the orientation around the *z* axis as a number of turns around the axis.\n","sig":null,"attributes":[{"value":"/ Specify the orientation around the *z* axis as a number of turns around the axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":85217,"byte_end":85302,"line_start":350,"line_end":350,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":3023},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":85529,"byte_end":85534,"line_start":358,"line_end":358,"column_start":12,"column_end":17},"name":"pitch","qualname":"<Draw>::pitch","value":"fn pitch(&Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the \"pitch\" of the orientation in radians.","sig":null,"attributes":[{"value":"/ Specify the \"pitch\" of the orientation in radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":85398,"byte_end":85452,"line_start":355,"line_end":355,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":85457,"byte_end":85460,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ This has the same effect as calling `x_radians`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":85465,"byte_end":85517,"line_start":357,"line_end":357,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3024},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":85734,"byte_end":85737,"line_start":365,"line_end":365,"column_start":12,"column_end":15},"name":"yaw","qualname":"<Draw>::yaw","value":"fn yaw(&Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the \"yaw\" of the orientation in radians.","sig":null,"attributes":[{"value":"/ Specify the \"yaw\" of the orientation in radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":85605,"byte_end":85657,"line_start":362,"line_end":362,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":85662,"byte_end":85665,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ This has the same effect as calling `y_radians`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":85670,"byte_end":85722,"line_start":364,"line_end":364,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3025},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":85934,"byte_end":85938,"line_start":372,"line_end":372,"column_start":12,"column_end":16},"name":"roll","qualname":"<Draw>::roll","value":"fn roll(&Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the \"roll\" of the orientation in radians.","sig":null,"attributes":[{"value":"/ Specify the \"roll\" of the orientation in radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":85804,"byte_end":85857,"line_start":369,"line_end":369,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":85862,"byte_end":85865,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ This has the same effect as calling `z_radians`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":85870,"byte_end":85922,"line_start":371,"line_end":371,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3026},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":86239,"byte_end":86245,"line_start":380,"line_end":380,"column_start":12,"column_end":18},"name":"rotate","qualname":"<Draw>::rotate","value":"fn rotate(&Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Assuming we're looking at a 2D plane, positive values cause a clockwise rotation where the\n given value is specified in radians.","sig":null,"attributes":[{"value":"/ Assuming we're looking at a 2D plane, positive values cause a clockwise rotation where the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":86007,"byte_end":86101,"line_start":376,"line_end":376,"column_start":5,"column_end":99}},{"value":"/ given value is specified in radians.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":86106,"byte_end":86146,"line_start":377,"line_end":377,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":86151,"byte_end":86154,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling the `z_radians` or `roll` methods.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":86159,"byte_end":86227,"line_start":379,"line_end":379,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3027},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":86421,"byte_end":86432,"line_start":385,"line_end":385,"column_start":12,"column_end":23},"name":"alpha_blend","qualname":"<Draw>::alpha_blend","value":"fn alpha_blend(&Self, wgpu::BlendComponent) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Produce a new **Draw** instance that will draw with the given alpha blend descriptor.\n","sig":null,"attributes":[{"value":"/ Produce a new **Draw** instance that will draw with the given alpha blend descriptor.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":86320,"byte_end":86409,"line_start":384,"line_end":384,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":3028},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":86728,"byte_end":86739,"line_start":392,"line_end":392,"column_start":12,"column_end":23},"name":"color_blend","qualname":"<Draw>::color_blend","value":"fn color_blend(&Self, wgpu::BlendComponent) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Produce a new **Draw** instance that will draw with the given color blend descriptor.\n","sig":null,"attributes":[{"value":"/ Produce a new **Draw** instance that will draw with the given color blend descriptor.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":86627,"byte_end":86716,"line_start":391,"line_end":391,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":3029},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":87000,"byte_end":87005,"line_start":399,"line_end":399,"column_start":12,"column_end":17},"name":"blend","qualname":"<Draw>::blend","value":"fn blend(&Self, wgpu::BlendComponent) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Short-hand for `color_blend`, the common use-case.\n","sig":null,"attributes":[{"value":"/ Short-hand for `color_blend`, the common use-case.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":86934,"byte_end":86988,"line_start":398,"line_end":398,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3030},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":87371,"byte_end":87378,"line_start":407,"line_end":407,"column_start":12,"column_end":19},"name":"scissor","qualname":"<Draw>::scissor","value":"fn scissor(&Self, geom::Rect<f32>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Produce a new **Draw** instance that will be cropped to the given rectangle.","sig":null,"attributes":[{"value":"/ Produce a new **Draw** instance that will be cropped to the given rectangle.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":87117,"byte_end":87197,"line_start":403,"line_end":403,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":87202,"byte_end":87205,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ If the current **Draw** instance already contains a scissor, the result will be the overlap","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":87210,"byte_end":87305,"line_start":405,"line_end":405,"column_start":5,"column_end":100}},{"value":"/ between the original scissor and the new one.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":87310,"byte_end":87359,"line_start":406,"line_end":406,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3031},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":88229,"byte_end":88238,"line_start":428,"line_end":428,"column_start":12,"column_end":21},"name":"line_mode","qualname":"<Draw>::line_mode","value":"fn line_mode(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Produce a new **Draw** instance.","sig":null,"attributes":[{"value":"/ Produce a new **Draw** instance.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":87837,"byte_end":87873,"line_start":420,"line_end":420,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":87878,"byte_end":87881,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ All drawing that occurs on the new instance will be rendered as a \"wireframe\" between all","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":87886,"byte_end":87979,"line_start":422,"line_end":422,"column_start":5,"column_end":98}},{"value":"/ vertices.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":87984,"byte_end":87997,"line_start":423,"line_end":423,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":88002,"byte_end":88005,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ This will cause the **draw::Renderer** to switch render pipelines in order to use the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":88010,"byte_end":88099,"line_start":425,"line_end":425,"column_start":5,"column_end":94}},{"value":"/ **LineList** primitive topology. The switch will only occur if this topology was not","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":88104,"byte_end":88192,"line_start":426,"line_end":426,"column_start":5,"column_end":93}},{"value":"/ already enabled.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":88197,"byte_end":88217,"line_start":427,"line_end":427,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3032},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":88707,"byte_end":88717,"line_start":439,"line_end":439,"column_start":12,"column_end":22},"name":"point_mode","qualname":"<Draw>::point_mode","value":"fn point_mode(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Produce a new **Draw** instance.","sig":null,"attributes":[{"value":"/ Produce a new **Draw** instance.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":88334,"byte_end":88370,"line_start":432,"line_end":432,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":88375,"byte_end":88378,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ All drawing that occurs on the new instance will be rendered as points on the vertices.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":88383,"byte_end":88474,"line_start":434,"line_end":434,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":88479,"byte_end":88482,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ This will cause the **draw::Renderer** to switch render pipelines in order to use the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":88487,"byte_end":88576,"line_start":436,"line_end":436,"column_start":5,"column_end":94}},{"value":"/ **PointList** primitive topology. The switch will only occur if this topology was not","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":88581,"byte_end":88670,"line_start":437,"line_end":437,"column_start":5,"column_end":94}},{"value":"/ already enabled.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":88675,"byte_end":88695,"line_start":438,"line_end":438,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3033},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":89254,"byte_end":89267,"line_start":452,"line_end":452,"column_start":12,"column_end":25},"name":"triangle_mode","qualname":"<Draw>::triangle_mode","value":"fn triangle_mode(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Produce a new **Draw** instance.","sig":null,"attributes":[{"value":"/ Produce a new **Draw** instance.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":88814,"byte_end":88850,"line_start":443,"line_end":443,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":88855,"byte_end":88858,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ All drawing that occurs on the new instance will be rendered as triangles on the vertices.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":88863,"byte_end":88957,"line_start":445,"line_end":445,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":88962,"byte_end":88965,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This will cause the **draw::Renderer** to switch render pipelines in order to use the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":88970,"byte_end":89059,"line_start":447,"line_end":447,"column_start":5,"column_end":94}},{"value":"/ **TriangleList** primitive topology. The switch will only occur if this topology was not","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":89064,"byte_end":89156,"line_start":448,"line_end":448,"column_start":5,"column_end":97}},{"value":"/ already enabled.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":89161,"byte_end":89181,"line_start":449,"line_end":449,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":89186,"byte_end":89189,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ This is the default primitive topology mode.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":89194,"byte_end":89242,"line_start":451,"line_end":451,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3034},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":89524,"byte_end":89531,"line_start":458,"line_end":458,"column_start":12,"column_end":19},"name":"sampler","qualname":"<Draw>::sampler","value":"fn sampler(&Self, wgpu::SamplerDescriptor) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Produce a new **Draw** instance where all textures and textured vertices drawn will be\n sampled via a sampler of the given descriptor.\n","sig":null,"attributes":[{"value":"/ Produce a new **Draw** instance where all textures and textured vertices drawn will be","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":89367,"byte_end":89457,"line_start":456,"line_end":456,"column_start":5,"column_end":95}},{"value":"/ sampled via a sampler of the given descriptor.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":89462,"byte_end":89512,"line_start":457,"line_end":457,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3037},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":90378,"byte_end":90388,"line_start":482,"line_end":482,"column_start":12,"column_end":22},"name":"background","qualname":"<Draw>::background","value":"fn background(&Self) -> Background","parent":null,"children":[],"decl_id":null,"docs":" Specify a color with which the background should be cleared.\n","sig":null,"attributes":[{"value":"/ Specify a color with which the background should be cleared.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":90302,"byte_end":90366,"line_start":481,"line_end":481,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3038},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":90500,"byte_end":90501,"line_start":487,"line_end":487,"column_start":12,"column_end":13},"name":"a","qualname":"<Draw>::a","value":"fn a<T>(&Self, T) -> Drawing<, T> where T: Into<Primitive>,\nPrimitive: Into<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Add the given type to be drawn.\n","sig":null,"attributes":[{"value":"/ Add the given type to be drawn.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":90453,"byte_end":90488,"line_start":486,"line_end":486,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3040},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":91467,"byte_end":91471,"line_start":512,"line_end":512,"column_start":12,"column_end":16},"name":"path","qualname":"<Draw>::path","value":"fn path(&Self) -> Drawing<, primitive::PathInit>","parent":null,"children":[],"decl_id":null,"docs":" Begin drawing a **Path**.\n","sig":null,"attributes":[{"value":"/ Begin drawing a **Path**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":91426,"byte_end":91455,"line_start":511,"line_end":511,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3041},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":91604,"byte_end":91611,"line_start":517,"line_end":517,"column_start":12,"column_end":19},"name":"ellipse","qualname":"<Draw>::ellipse","value":"fn ellipse(&Self) -> Drawing<, primitive::Ellipse>","parent":null,"children":[],"decl_id":null,"docs":" Begin drawing an **Ellipse**.\n","sig":null,"attributes":[{"value":"/ Begin drawing an **Ellipse**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":91559,"byte_end":91592,"line_start":516,"line_end":516,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3042},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":91739,"byte_end":91743,"line_start":522,"line_end":522,"column_start":12,"column_end":16},"name":"line","qualname":"<Draw>::line","value":"fn line(&Self) -> Drawing<, primitive::Line>","parent":null,"children":[],"decl_id":null,"docs":" Begin drawing a **Line**.\n","sig":null,"attributes":[{"value":"/ Begin drawing a **Line**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":91698,"byte_end":91727,"line_start":521,"line_end":521,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3043},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":91870,"byte_end":91875,"line_start":527,"line_end":527,"column_start":12,"column_end":17},"name":"arrow","qualname":"<Draw>::arrow","value":"fn arrow(&Self) -> Drawing<, primitive::Arrow>","parent":null,"children":[],"decl_id":null,"docs":" Begin drawing an **Arrow**.\n","sig":null,"attributes":[{"value":"/ Begin drawing an **Arrow**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":91827,"byte_end":91858,"line_start":526,"line_end":526,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3044},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":92001,"byte_end":92005,"line_start":532,"line_end":532,"column_start":12,"column_end":16},"name":"quad","qualname":"<Draw>::quad","value":"fn quad(&Self) -> Drawing<, primitive::Quad>","parent":null,"children":[],"decl_id":null,"docs":" Begin drawing a **Quad**.\n","sig":null,"attributes":[{"value":"/ Begin drawing a **Quad**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":91960,"byte_end":91989,"line_start":531,"line_end":531,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3045},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":92130,"byte_end":92134,"line_start":537,"line_end":537,"column_start":12,"column_end":16},"name":"rect","qualname":"<Draw>::rect","value":"fn rect(&Self) -> Drawing<, primitive::Rect>","parent":null,"children":[],"decl_id":null,"docs":" Begin drawing a **Rect**.\n","sig":null,"attributes":[{"value":"/ Begin drawing a **Rect**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":92089,"byte_end":92118,"line_start":536,"line_end":536,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3046},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":92263,"byte_end":92266,"line_start":542,"line_end":542,"column_start":12,"column_end":15},"name":"tri","qualname":"<Draw>::tri","value":"fn tri(&Self) -> Drawing<, primitive::Tri>","parent":null,"children":[],"decl_id":null,"docs":" Begin drawing a **Triangle**.\n","sig":null,"attributes":[{"value":"/ Begin drawing a **Triangle**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":92218,"byte_end":92251,"line_start":541,"line_end":541,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3047},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":92393,"byte_end":92400,"line_start":547,"line_end":547,"column_start":12,"column_end":19},"name":"polygon","qualname":"<Draw>::polygon","value":"fn polygon(&Self) -> Drawing<, primitive::PolygonInit>","parent":null,"children":[],"decl_id":null,"docs":" Begin drawing a **Polygon**.\n","sig":null,"attributes":[{"value":"/ Begin drawing a **Polygon**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":92349,"byte_end":92381,"line_start":546,"line_end":546,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3048},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":92532,"byte_end":92536,"line_start":552,"line_end":552,"column_start":12,"column_end":16},"name":"mesh","qualname":"<Draw>::mesh","value":"fn mesh(&Self) -> Drawing<, primitive::mesh::Vertexless>","parent":null,"children":[],"decl_id":null,"docs":" Begin drawing a **Mesh**.\n","sig":null,"attributes":[{"value":"/ Begin drawing a **Mesh**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":92491,"byte_end":92520,"line_start":551,"line_end":551,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3049},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":92756,"byte_end":92764,"line_start":559,"line_end":559,"column_start":12,"column_end":20},"name":"polyline","qualname":"<Draw>::polyline","value":"fn polyline(&Self) -> Drawing<, primitive::PathStroke>","parent":null,"children":[],"decl_id":null,"docs":" Begin drawing a **Polyline**.","sig":null,"attributes":[{"value":"/ Begin drawing a **Polyline**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":92632,"byte_end":92665,"line_start":556,"line_end":556,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":92670,"byte_end":92673,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ Note that this is simply short-hand for `draw.path().stroke()`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":92678,"byte_end":92744,"line_start":558,"line_end":558,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3050},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":92889,"byte_end":92893,"line_start":564,"line_end":564,"column_start":12,"column_end":16},"name":"text","qualname":"<Draw>::text","value":"fn text(&Self, &str) -> Drawing<, primitive::Text>","parent":null,"children":[],"decl_id":null,"docs":" Begin drawing a **Text**.\n","sig":null,"attributes":[{"value":"/ Begin drawing a **Text**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":92848,"byte_end":92877,"line_start":563,"line_end":563,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3051},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":93311,"byte_end":93318,"line_start":575,"line_end":575,"column_start":12,"column_end":19},"name":"texture","qualname":"<Draw>::texture","value":"fn texture(&Self, &dyn wgpu::ToTextureView) -> Drawing<, primitive::Texture>","parent":null,"children":[],"decl_id":null,"docs":" Begin drawing a **Texture**.\n","sig":null,"attributes":[{"value":"/ Begin drawing a **Texture**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":93267,"byte_end":93299,"line_start":574,"line_end":574,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3052},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":93588,"byte_end":93602,"line_start":581,"line_end":581,"column_start":12,"column_end":26},"name":"drain_commands","qualname":"<Draw>::drain_commands","value":"fn drain_commands(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Finish any drawings-in-progress and produce an iterator draining the inner draw commands\n and yielding them by value.\n","sig":null,"attributes":[{"value":"/ Finish any drawings-in-progress and produce an iterator draining the inner draw commands","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":93448,"byte_end":93540,"line_start":579,"line_end":579,"column_start":5,"column_end":97}},{"value":"/ and yielding them by value.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":93545,"byte_end":93576,"line_start":580,"line_end":580,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3055},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":94049,"byte_end":94074,"line_start":592,"line_end":592,"column_start":12,"column_end":37},"name":"finish_remaining_drawings","qualname":"<Draw>::finish_remaining_drawings","value":"fn finish_remaining_drawings(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Drain any remaining `drawing`s and convert them to draw commands.\n","sig":null,"attributes":[{"value":"/ Drain any remaining `drawing`s and convert them to draw commands.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":93968,"byte_end":94037,"line_start":591,"line_end":591,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3057},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":94197,"byte_end":94204,"line_start":598,"line_end":598,"column_start":8,"column_end":15},"name":"default","qualname":"<IntermediaryState as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3059},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":94737,"byte_end":94744,"line_start":615,"line_end":615,"column_start":8,"column_end":15},"name":"default","qualname":"<State as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3061},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":95269,"byte_end":95276,"line_start":634,"line_end":634,"column_start":8,"column_end":15},"name":"default","qualname":"<Draw as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3063},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":95489,"byte_end":95496,"line_start":642,"line_end":642,"column_start":8,"column_end":15},"name":"default","qualname":"<Context as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3064},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/ease.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ease","qualname":"::ease","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/ease.rs","parent":null,"children":[{"krate":0,"index":3065}],"decl_id":null,"docs":" A suite of common interpolation functions often referred to as \"easing\" and \"tweening\"\n functions. This API is provided by the [pennereq crate](https://docs.rs/pennereq).\n","sig":null,"attributes":[{"value":"/ A suite of common interpolation functions often referred to as \"easing\" and \"tweening\"","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/ease.rs","byte_start":345696,"byte_end":345786,"line_start":1,"line_end":1,"column_start":1,"column_end":91}},{"value":"/ functions. This API is provided by the [pennereq crate](https://docs.rs/pennereq).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/ease.rs","byte_start":345787,"byte_end":345873,"line_start":2,"line_end":2,"column_start":1,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":3066},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"event","qualname":"::event","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","parent":null,"children":[{"krate":0,"index":3067},{"krate":0,"index":3068},{"krate":0,"index":3071},{"krate":0,"index":3074},{"krate":0,"index":3077},{"krate":0,"index":3080},{"krate":0,"index":3083},{"krate":0,"index":3086},{"krate":0,"index":3089},{"krate":0,"index":3090},{"krate":0,"index":3093},{"krate":0,"index":3096},{"krate":0,"index":3099},{"krate":0,"index":3102},{"krate":0,"index":3105},{"krate":0,"index":3108},{"krate":0,"index":3111},{"krate":0,"index":5224},{"krate":0,"index":5227},{"krate":0,"index":5228},{"krate":0,"index":5230},{"krate":0,"index":5232},{"krate":0,"index":5233},{"krate":0,"index":5236},{"krate":0,"index":5237},{"krate":0,"index":5239},{"krate":0,"index":5242},{"krate":0,"index":5257},{"krate":0,"index":5259},{"krate":0,"index":5263},{"krate":0,"index":5264},{"krate":0,"index":5266},{"krate":0,"index":5268},{"krate":0,"index":5269},{"krate":0,"index":5272},{"krate":0,"index":5276},{"krate":0,"index":5277},{"krate":0,"index":5279},{"krate":0,"index":5281},{"krate":0,"index":5282},{"krate":0,"index":5285},{"krate":0,"index":5289},{"krate":0,"index":5290},{"krate":0,"index":5292},{"krate":0,"index":5294},{"krate":0,"index":5295},{"krate":0,"index":5298},{"krate":0,"index":5351},{"krate":0,"index":5353},{"krate":0,"index":5355},{"krate":0,"index":5356},{"krate":0,"index":3115},{"krate":0,"index":3122},{"krate":0,"index":3126}],"decl_id":null,"docs":" Application, event loop and window event definitions and implementations.","sig":null,"attributes":[{"value":"/ Application, event loop and window event definitions and implementations.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":345897,"byte_end":345974,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":345975,"byte_end":345978,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ - [**Event**](./enum.Event.html) - the default application event type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":345979,"byte_end":346053,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ - [**winit::event::WindowEvent**](https://docs.rs/winit/latest/winit/event/enum.WindowEvent.html) -","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":346054,"byte_end":346157,"line_start":4,"line_end":4,"column_start":1,"column_end":104}},{"value":"/   events related to a single window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":346158,"byte_end":346198,"line_start":5,"line_end":5,"column_start":1,"column_end":41}},{"value":"/ - [**WindowEvent**](./enum.WindowEvent.html) - a stripped-back, simplified, newcomer-friendly","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":346199,"byte_end":346296,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/   version of the **raw**, low-level winit event.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":346297,"byte_end":346349,"line_start":7,"line_end":7,"column_start":1,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":3111},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":346697,"byte_end":346706,"line_start":22,"line_end":22,"column_start":11,"column_end":20},"name":"LoopEvent","qualname":"::event::LoopEvent","value":"LoopEvent: 'static + From<Update>","parent":null,"children":[{"krate":0,"index":3112}],"decl_id":null,"docs":" Event types that are compatible with the nannou app loop.\n","sig":null,"attributes":[{"value":"/ Event types that are compatible with the nannou app loop.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":346625,"byte_end":346686,"line_start":21,"line_end":21,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3112},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":346797,"byte_end":346813,"line_start":24,"line_end":24,"column_start":8,"column_end":24},"name":"from_winit_event","qualname":"::event::LoopEvent::from_winit_event","value":"fn from_winit_event<'a, T>(&winit::event::Event, &App) -> Option<Self>","parent":{"krate":0,"index":3111},"children":[],"decl_id":null,"docs":" Produce a loop event from the given winit event.\n","sig":null,"attributes":[{"value":"/ Produce a loop event from the given winit event.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":346737,"byte_end":346789,"line_start":23,"line_end":23,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":5224},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":347007,"byte_end":347013,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"Update","qualname":"::event::Update","value":"Update { since_last, since_start }","parent":null,"children":[{"krate":0,"index":5225},{"krate":0,"index":5226}],"decl_id":null,"docs":" Update event, emitted on each pass of an application loop.\n","sig":null,"attributes":[{"value":"/ Update event, emitted on each pass of an application loop.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":346882,"byte_end":346944,"line_start":27,"line_end":27,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":5225},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":347181,"byte_end":347191,"line_start":33,"line_end":33,"column_start":9,"column_end":19},"name":"since_last","qualname":"::event::Update::since_last","value":"instant::Duration","parent":{"krate":0,"index":5224},"children":[],"decl_id":null,"docs":" The duration since the last update was emitted.","sig":null,"attributes":[{"value":"/ The duration since the last update was emitted.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":347020,"byte_end":347071,"line_start":30,"line_end":30,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":347076,"byte_end":347079,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ The first update's delta will be the time since the given `model` function returned.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":347084,"byte_end":347172,"line_start":32,"line_end":32,"column_start":5,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":5226},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":347378,"byte_end":347389,"line_start":37,"line_end":37,"column_start":9,"column_end":20},"name":"since_start","qualname":"::event::Update::since_start","value":"instant::Duration","parent":{"krate":0,"index":5224},"children":[],"decl_id":null,"docs":" The duration since the start of the app loop.","sig":null,"attributes":[{"value":"/ The duration since the start of the app loop.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":347218,"byte_end":347267,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":347272,"byte_end":347275,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Specifically, this is the duration of time since the given `model` function returned.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":347280,"byte_end":347369,"line_start":36,"line_end":36,"column_start":5,"column_end":94}}]},{"kind":"StructVariant","id":{"krate":0,"index":5243},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":347841,"byte_end":347852,"line_start":49,"line_end":49,"column_start":5,"column_end":16},"name":"WindowEvent","qualname":"::event::Event::WindowEvent","value":"Event::WindowEvent { id, simple }","parent":{"krate":0,"index":5242},"children":[],"decl_id":null,"docs":" A window-specific event has occurred for the window with the given Id.","sig":null,"attributes":[{"value":"/ A window-specific event has occurred for the window with the given Id.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":347497,"byte_end":347571,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":347576,"byte_end":347579,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The event is available as a **WindowEvent**, a more user-friendly form of","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":347584,"byte_end":347661,"line_start":45,"line_end":45,"column_start":5,"column_end":82}},{"value":"/ **winit::event::WindowEvent**. Once","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":347666,"byte_end":347705,"line_start":46,"line_end":46,"column_start":5,"column_end":44}},{"value":"/ [winit#1387](https://github.com/rust-windowing/winit/issues/1387) is fixed, its \"raw\" form","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":347710,"byte_end":347804,"line_start":47,"line_end":47,"column_start":5,"column_end":99}},{"value":"/ will also be available.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":347809,"byte_end":347836,"line_start":48,"line_end":48,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5244},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":347863,"byte_end":347865,"line_start":50,"line_end":50,"column_start":9,"column_end":11},"name":"id","qualname":"::event::Event::WindowEvent::id","value":"winit::window::WindowId","parent":{"krate":0,"index":5243},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5245},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":347887,"byte_end":347893,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"name":"simple","qualname":"::event::Event::WindowEvent::simple","value":"std::option::Option<event::WindowEvent>","parent":{"krate":0,"index":5243},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5246},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":348108,"byte_end":348119,"line_start":57,"line_end":57,"column_start":5,"column_end":16},"name":"DeviceEvent","qualname":"::event::Event::DeviceEvent","value":"Event::DeviceEvent(winit::event::DeviceId, winit::event::DeviceEvent)","parent":{"krate":0,"index":5242},"children":[],"decl_id":null,"docs":" A device-specific event has occurred for the device with the given Id.\n","sig":null,"attributes":[{"value":"/ A device-specific event has occurred for the device with the given Id.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":348029,"byte_end":348103,"line_start":56,"line_end":56,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":5248},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":348120,"byte_end":348142,"line_start":57,"line_end":57,"column_start":17,"column_end":39},"name":"0","qualname":"::event::Event::DeviceEvent::0","value":"winit::event::DeviceId","parent":{"krate":0,"index":5246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5249},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":348144,"byte_end":348169,"line_start":57,"line_end":57,"column_start":41,"column_end":66},"name":"1","qualname":"::event::Event::DeviceEvent::1","value":"winit::event::DeviceEvent","parent":{"krate":0,"index":5246},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5250},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":348353,"byte_end":348359,"line_start":62,"line_end":62,"column_start":5,"column_end":11},"name":"Update","qualname":"::event::Event::Update","value":"Event::Update(Update)","parent":{"krate":0,"index":5242},"children":[],"decl_id":null,"docs":" A timed update alongside the duration since the last update was emitted.","sig":null,"attributes":[{"value":"/ A timed update alongside the duration since the last update was emitted.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":348177,"byte_end":348253,"line_start":59,"line_end":59,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":348258,"byte_end":348261,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The first update's delta will be the time since the `model` function returned.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":348266,"byte_end":348348,"line_start":61,"line_end":61,"column_start":5,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":5252},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":348360,"byte_end":348366,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"0","qualname":"::event::Event::Update::0","value":"event::Update","parent":{"krate":0,"index":5250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5253},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":348429,"byte_end":348438,"line_start":65,"line_end":65,"column_start":5,"column_end":14},"name":"Suspended","qualname":"::event::Event::Suspended","value":"Event::Suspended","parent":{"krate":0,"index":5242},"children":[],"decl_id":null,"docs":" The application has been suspended or resumed.\n","sig":null,"attributes":[{"value":"/ The application has been suspended or resumed.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":348374,"byte_end":348424,"line_start":64,"line_end":64,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5255},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":348487,"byte_end":348494,"line_start":67,"line_end":67,"column_start":5,"column_end":12},"name":"Resumed","qualname":"::event::Event::Resumed","value":"Event::Resumed","parent":{"krate":0,"index":5242},"children":[],"decl_id":null,"docs":" The application has been awakened.\n","sig":null,"attributes":[{"value":"/ The application has been awakened.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":348444,"byte_end":348482,"line_start":66,"line_end":66,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":5242},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":347485,"byte_end":347490,"line_start":42,"line_end":42,"column_start":10,"column_end":15},"name":"Event","qualname":"::event::Event","value":"enum Event {\n    WindowEvent {\n            id: window::Id,\n            simple: Option<WindowEvent>,\n        },\n    DeviceEvent(winit::event::DeviceId, winit::event::DeviceEvent),\n    Update(Update),\n    Suspended,\n    Resumed,\n}","parent":null,"children":[{"krate":0,"index":5243},{"krate":0,"index":5246},{"krate":0,"index":5250},{"krate":0,"index":5253},{"krate":0,"index":5255}],"decl_id":null,"docs":" The default application **Event** type.\n","sig":null,"attributes":[{"value":"/ The default application **Event** type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":347415,"byte_end":347458,"line_start":40,"line_end":40,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":5259},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":348608,"byte_end":348618,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"TouchEvent","qualname":"::event::TouchEvent","value":"TouchEvent { id, phase, position }","parent":null,"children":[{"krate":0,"index":5260},{"krate":0,"index":5261},{"krate":0,"index":5262}],"decl_id":null,"docs":" The event associated with a touch at a single point.\n","sig":null,"attributes":[{"value":"/ The event associated with a touch at a single point.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":348499,"byte_end":348555,"line_start":70,"line_end":70,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":5260},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":348727,"byte_end":348729,"line_start":74,"line_end":74,"column_start":9,"column_end":11},"name":"id","qualname":"::event::TouchEvent::id","value":"u64","parent":{"krate":0,"index":5259},"children":[],"decl_id":null,"docs":" The unique ID associated with this touch, e.g. useful for distinguishing between fingers.\n","sig":null,"attributes":[{"value":"/ The unique ID associated with this touch, e.g. useful for distinguishing between fingers.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":348625,"byte_end":348718,"line_start":73,"line_end":73,"column_start":5,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":5261},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":348776,"byte_end":348781,"line_start":76,"line_end":76,"column_start":9,"column_end":14},"name":"phase","qualname":"::event::TouchEvent::phase","value":"winit::event::TouchPhase","parent":{"krate":0,"index":5259},"children":[],"decl_id":null,"docs":" The state of the touch.\n","sig":null,"attributes":[{"value":"/ The state of the touch.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":348740,"byte_end":348767,"line_start":75,"line_end":75,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5262},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":348838,"byte_end":348846,"line_start":78,"line_end":78,"column_start":9,"column_end":17},"name":"position","qualname":"::event::TouchEvent::position","value":"nannou_core::geom::Vec2","parent":{"krate":0,"index":5259},"children":[],"decl_id":null,"docs":" The position of the touch.\n","sig":null,"attributes":[{"value":"/ The position of the touch.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":348799,"byte_end":348829,"line_start":77,"line_end":77,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5272},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":348940,"byte_end":348956,"line_start":83,"line_end":83,"column_start":12,"column_end":28},"name":"TouchpadPressure","qualname":"::event::TouchpadPressure","value":"TouchpadPressure { device_id, pressure, stage }","parent":null,"children":[{"krate":0,"index":5273},{"krate":0,"index":5274},{"krate":0,"index":5275}],"decl_id":null,"docs":" Pressure on a touch pad.\n","sig":null,"attributes":[{"value":"/ Pressure on a touch pad.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":348859,"byte_end":348887,"line_start":81,"line_end":81,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":5273},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":349041,"byte_end":349050,"line_start":85,"line_end":85,"column_start":9,"column_end":18},"name":"device_id","qualname":"::event::TouchpadPressure::device_id","value":"winit::event::DeviceId","parent":{"krate":0,"index":5272},"children":[],"decl_id":null,"docs":" The unique ID associated with the device that emitted this event.\n","sig":null,"attributes":[{"value":"/ The unique ID associated with the device that emitted this event.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":348963,"byte_end":349032,"line_start":84,"line_end":84,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":5274},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":349124,"byte_end":349132,"line_start":87,"line_end":87,"column_start":9,"column_end":17},"name":"pressure","qualname":"::event::TouchpadPressure::pressure","value":"f32","parent":{"krate":0,"index":5272},"children":[],"decl_id":null,"docs":" The amount of pressure applied.\n","sig":null,"attributes":[{"value":"/ The amount of pressure applied.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":349080,"byte_end":349115,"line_start":86,"line_end":86,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":5275},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":349193,"byte_end":349198,"line_start":89,"line_end":89,"column_start":9,"column_end":14},"name":"stage","qualname":"::event::TouchpadPressure::stage","value":"i64","parent":{"krate":0,"index":5272},"children":[],"decl_id":null,"docs":" Integer representing the click level.\n","sig":null,"attributes":[{"value":"/ Integer representing the click level.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":349143,"byte_end":349184,"line_start":88,"line_end":88,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5285},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":349325,"byte_end":349335,"line_start":94,"line_end":94,"column_start":12,"column_end":22},"name":"AxisMotion","qualname":"::event::AxisMotion","value":"AxisMotion { device_id, axis, value }","parent":null,"children":[{"krate":0,"index":5286},{"krate":0,"index":5287},{"krate":0,"index":5288}],"decl_id":null,"docs":" Motion along some axis of a device e.g. joystick or gamepad.\n","sig":null,"attributes":[{"value":"/ Motion along some axis of a device e.g. joystick or gamepad.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":349208,"byte_end":349272,"line_start":92,"line_end":92,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":5286},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":349407,"byte_end":349416,"line_start":96,"line_end":96,"column_start":9,"column_end":18},"name":"device_id","qualname":"::event::AxisMotion::device_id","value":"winit::event::DeviceId","parent":{"krate":0,"index":5285},"children":[],"decl_id":null,"docs":" The unique ID of the device that emitted this event.\n","sig":null,"attributes":[{"value":"/ The unique ID of the device that emitted this event.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":349342,"byte_end":349398,"line_start":95,"line_end":95,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":5287},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":349493,"byte_end":349497,"line_start":98,"line_end":98,"column_start":9,"column_end":13},"name":"axis","qualname":"::event::AxisMotion::axis","value":"u32","parent":{"krate":0,"index":5285},"children":[],"decl_id":null,"docs":" The axis on which motion occurred.\n","sig":null,"attributes":[{"value":"/ The axis on which motion occurred.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":349446,"byte_end":349484,"line_start":97,"line_end":97,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":5288},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":349555,"byte_end":349560,"line_start":100,"line_end":100,"column_start":9,"column_end":14},"name":"value","qualname":"::event::AxisMotion::value","value":"f32","parent":{"krate":0,"index":5285},"children":[],"decl_id":null,"docs":" The motion value.\n","sig":null,"attributes":[{"value":"/ The motion value.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":349525,"byte_end":349546,"line_start":99,"line_end":99,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5299},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350190,"byte_end":350195,"line_start":116,"line_end":116,"column_start":5,"column_end":10},"name":"Moved","qualname":"::event::WindowEvent::Moved","value":"WindowEvent::Moved(Point2)","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":" The window has been moved to a new position.\n","sig":null,"attributes":[{"value":"/ The window has been moved to a new position.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350137,"byte_end":350185,"line_start":115,"line_end":115,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":5301},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350196,"byte_end":350202,"line_start":116,"line_end":116,"column_start":11,"column_end":17},"name":"0","qualname":"::event::WindowEvent::Moved::0","value":"nannou_core::geom::Vec2","parent":{"krate":0,"index":5299},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5302},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350254,"byte_end":350264,"line_start":119,"line_end":119,"column_start":5,"column_end":15},"name":"KeyPressed","qualname":"::event::WindowEvent::KeyPressed","value":"WindowEvent::KeyPressed(Key)","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":" The given keyboard key was pressed.\n","sig":null,"attributes":[{"value":"/ The given keyboard key was pressed.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350210,"byte_end":350249,"line_start":118,"line_end":118,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":5304},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350265,"byte_end":350268,"line_start":119,"line_end":119,"column_start":16,"column_end":19},"name":"0","qualname":"::event::WindowEvent::KeyPressed::0","value":"winit::event::VirtualKeyCode","parent":{"krate":0,"index":5302},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5305},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350321,"byte_end":350332,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"KeyReleased","qualname":"::event::WindowEvent::KeyReleased","value":"WindowEvent::KeyReleased(Key)","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":" The given keyboard key was released.\n","sig":null,"attributes":[{"value":"/ The given keyboard key was released.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350276,"byte_end":350316,"line_start":121,"line_end":121,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":5307},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350333,"byte_end":350336,"line_start":122,"line_end":122,"column_start":17,"column_end":20},"name":"0","qualname":"::event::WindowEvent::KeyReleased::0","value":"winit::event::VirtualKeyCode","parent":{"krate":0,"index":5305},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5308},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350384,"byte_end":350401,"line_start":125,"line_end":125,"column_start":5,"column_end":22},"name":"ReceivedCharacter","qualname":"::event::WindowEvent::ReceivedCharacter","value":"WindowEvent::ReceivedCharacter(char)","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":" Character input received event.\n","sig":null,"attributes":[{"value":"/ Character input received event.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350344,"byte_end":350379,"line_start":124,"line_end":124,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":5310},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350402,"byte_end":350406,"line_start":125,"line_end":125,"column_start":23,"column_end":27},"name":"0","qualname":"::event::WindowEvent::ReceivedCharacter::0","value":"char","parent":{"krate":0,"index":5308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5311},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350466,"byte_end":350476,"line_start":128,"line_end":128,"column_start":5,"column_end":15},"name":"MouseMoved","qualname":"::event::WindowEvent::MouseMoved","value":"WindowEvent::MouseMoved(Point2)","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":" The mouse moved to the given x, y position.\n","sig":null,"attributes":[{"value":"/ The mouse moved to the given x, y position.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350414,"byte_end":350461,"line_start":127,"line_end":127,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5313},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350477,"byte_end":350483,"line_start":128,"line_end":128,"column_start":16,"column_end":22},"name":"0","qualname":"::event::WindowEvent::MouseMoved::0","value":"nannou_core::geom::Vec2","parent":{"krate":0,"index":5311},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5314},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350535,"byte_end":350547,"line_start":131,"line_end":131,"column_start":5,"column_end":17},"name":"MousePressed","qualname":"::event::WindowEvent::MousePressed","value":"WindowEvent::MousePressed(MouseButton)","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":" The given mouse button was pressed.\n","sig":null,"attributes":[{"value":"/ The given mouse button was pressed.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350491,"byte_end":350530,"line_start":130,"line_end":130,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":5316},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350548,"byte_end":350559,"line_start":131,"line_end":131,"column_start":18,"column_end":29},"name":"0","qualname":"::event::WindowEvent::MousePressed::0","value":"winit::event::MouseButton","parent":{"krate":0,"index":5314},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5317},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350612,"byte_end":350625,"line_start":134,"line_end":134,"column_start":5,"column_end":18},"name":"MouseReleased","qualname":"::event::WindowEvent::MouseReleased","value":"WindowEvent::MouseReleased(MouseButton)","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":" The given mouse button was released.\n","sig":null,"attributes":[{"value":"/ The given mouse button was released.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350567,"byte_end":350607,"line_start":133,"line_end":133,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":5319},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350626,"byte_end":350637,"line_start":134,"line_end":134,"column_start":19,"column_end":30},"name":"0","qualname":"::event::WindowEvent::MouseReleased::0","value":"winit::event::MouseButton","parent":{"krate":0,"index":5317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5320},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350683,"byte_end":350695,"line_start":137,"line_end":137,"column_start":5,"column_end":17},"name":"MouseEntered","qualname":"::event::WindowEvent::MouseEntered","value":"WindowEvent::MouseEntered","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":" The mouse entered the window.\n","sig":null,"attributes":[{"value":"/ The mouse entered the window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350645,"byte_end":350678,"line_start":136,"line_end":136,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5322},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350739,"byte_end":350750,"line_start":140,"line_end":140,"column_start":5,"column_end":16},"name":"MouseExited","qualname":"::event::WindowEvent::MouseExited","value":"WindowEvent::MouseExited","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":" The mouse exited the window.\n","sig":null,"attributes":[{"value":"/ The mouse exited the window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350702,"byte_end":350734,"line_start":139,"line_end":139,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5324},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350817,"byte_end":350827,"line_start":143,"line_end":143,"column_start":5,"column_end":15},"name":"MouseWheel","qualname":"::event::WindowEvent::MouseWheel","value":"WindowEvent::MouseWheel(MouseScrollDelta, TouchPhase)","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":" A mouse wheel movement or touchpad scroll occurred.\n","sig":null,"attributes":[{"value":"/ A mouse wheel movement or touchpad scroll occurred.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350757,"byte_end":350812,"line_start":142,"line_end":142,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":5326},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350828,"byte_end":350844,"line_start":143,"line_end":143,"column_start":16,"column_end":32},"name":"0","qualname":"::event::WindowEvent::MouseWheel::0","value":"winit::event::MouseScrollDelta","parent":{"krate":0,"index":5324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5327},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350846,"byte_end":350856,"line_start":143,"line_end":143,"column_start":34,"column_end":44},"name":"1","qualname":"::event::WindowEvent::MouseWheel::1","value":"winit::event::TouchPhase","parent":{"krate":0,"index":5324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5328},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350957,"byte_end":350964,"line_start":146,"line_end":146,"column_start":5,"column_end":12},"name":"Resized","qualname":"::event::WindowEvent::Resized","value":"WindowEvent::Resized(Vec2)","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":" The window was resized to the given dimensions (in DPI-agnostic points, not pixels).\n","sig":null,"attributes":[{"value":"/ The window was resized to the given dimensions (in DPI-agnostic points, not pixels).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350864,"byte_end":350952,"line_start":145,"line_end":145,"column_start":5,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":5330},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350965,"byte_end":350969,"line_start":146,"line_end":146,"column_start":13,"column_end":17},"name":"0","qualname":"::event::WindowEvent::Resized::0","value":"nannou_core::geom::Vec2","parent":{"krate":0,"index":5328},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5331},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351039,"byte_end":351050,"line_start":149,"line_end":149,"column_start":5,"column_end":16},"name":"HoveredFile","qualname":"::event::WindowEvent::HoveredFile","value":"WindowEvent::HoveredFile(PathBuf)","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":" A file at the given path was hovered over the window.\n","sig":null,"attributes":[{"value":"/ A file at the given path was hovered over the window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350977,"byte_end":351034,"line_start":148,"line_end":148,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":5333},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351051,"byte_end":351058,"line_start":149,"line_end":149,"column_start":17,"column_end":24},"name":"0","qualname":"::event::WindowEvent::HoveredFile::0","value":"std::path::PathBuf","parent":{"krate":0,"index":5331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5334},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351128,"byte_end":351139,"line_start":152,"line_end":152,"column_start":5,"column_end":16},"name":"DroppedFile","qualname":"::event::WindowEvent::DroppedFile","value":"WindowEvent::DroppedFile(PathBuf)","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":" A file at the given path was dropped onto the window.\n","sig":null,"attributes":[{"value":"/ A file at the given path was dropped onto the window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351066,"byte_end":351123,"line_start":151,"line_end":151,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":5336},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351140,"byte_end":351147,"line_start":152,"line_end":152,"column_start":17,"column_end":24},"name":"0","qualname":"::event::WindowEvent::DroppedFile::0","value":"std::path::PathBuf","parent":{"krate":0,"index":5334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5337},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351236,"byte_end":351256,"line_start":155,"line_end":155,"column_start":5,"column_end":25},"name":"HoveredFileCancelled","qualname":"::event::WindowEvent::HoveredFileCancelled","value":"WindowEvent::HoveredFileCancelled","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":" A file at the given path that was hovered over the window was cancelled.\n","sig":null,"attributes":[{"value":"/ A file at the given path that was hovered over the window was cancelled.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351155,"byte_end":351231,"line_start":154,"line_end":154,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5339},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351295,"byte_end":351300,"line_start":158,"line_end":158,"column_start":5,"column_end":10},"name":"Touch","qualname":"::event::WindowEvent::Touch","value":"WindowEvent::Touch(TouchEvent)","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":" Received a touch event.\n","sig":null,"attributes":[{"value":"/ Received a touch event.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351263,"byte_end":351290,"line_start":157,"line_end":157,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":5341},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351301,"byte_end":351311,"line_start":158,"line_end":158,"column_start":11,"column_end":21},"name":"0","qualname":"::event::WindowEvent::Touch::0","value":"event::TouchEvent","parent":{"krate":0,"index":5339},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5342},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351613,"byte_end":351626,"line_start":165,"line_end":165,"column_start":5,"column_end":18},"name":"TouchPressure","qualname":"::event::WindowEvent::TouchPressure","value":"WindowEvent::TouchPressure(TouchpadPressure)","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":" Touchpad pressure event.","sig":null,"attributes":[{"value":"/ Touchpad pressure event.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351319,"byte_end":351347,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351352,"byte_end":351355,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ At the moment, only supported on Apple forcetouch-capable macbooks.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351360,"byte_end":351431,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ The parameters are: pressure level (value between 0 and 1 representing how hard the touchpad","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351436,"byte_end":351532,"line_start":163,"line_end":163,"column_start":5,"column_end":101}},{"value":"/ is being pressed) and stage (integer representing the click level).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351537,"byte_end":351608,"line_start":164,"line_end":164,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":5344},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351627,"byte_end":351643,"line_start":165,"line_end":165,"column_start":19,"column_end":35},"name":"0","qualname":"::event::WindowEvent::TouchPressure::0","value":"event::TouchpadPressure","parent":{"krate":0,"index":5342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5345},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351684,"byte_end":351691,"line_start":168,"line_end":168,"column_start":5,"column_end":12},"name":"Focused","qualname":"::event::WindowEvent::Focused","value":"WindowEvent::Focused","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":" The window gained focus.\n","sig":null,"attributes":[{"value":"/ The window gained focus.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351651,"byte_end":351679,"line_start":167,"line_end":167,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5347},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351729,"byte_end":351738,"line_start":171,"line_end":171,"column_start":5,"column_end":14},"name":"Unfocused","qualname":"::event::WindowEvent::Unfocused","value":"WindowEvent::Unfocused","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":" The window lost focus.\n","sig":null,"attributes":[{"value":"/ The window lost focus.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351698,"byte_end":351724,"line_start":170,"line_end":170,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5349},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351813,"byte_end":351819,"line_start":174,"line_end":174,"column_start":5,"column_end":11},"name":"Closed","qualname":"::event::WindowEvent::Closed","value":"WindowEvent::Closed","parent":{"krate":0,"index":5298},"children":[],"decl_id":null,"docs":" The window was closed and is no longer stored in the `App`.\n","sig":null,"attributes":[{"value":"/ The window was closed and is no longer stored in the `App`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351745,"byte_end":351808,"line_start":173,"line_end":173,"column_start":5,"column_end":68}}]},{"kind":"Enum","id":{"krate":0,"index":5298},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":350119,"byte_end":350130,"line_start":114,"line_end":114,"column_start":10,"column_end":21},"name":"WindowEvent","qualname":"::event::WindowEvent","value":"enum WindowEvent {\n    Moved(Point2),\n    KeyPressed(Key),\n    KeyReleased(Key),\n    ReceivedCharacter(char),\n    MouseMoved(Point2),\n    MousePressed(MouseButton),\n    MouseReleased(MouseButton),\n    MouseEntered,\n    MouseExited,\n    MouseWheel(MouseScrollDelta, TouchPhase),\n    Resized(Vec2),\n    HoveredFile(PathBuf),\n    DroppedFile(PathBuf),\n    HoveredFileCancelled,\n    Touch(TouchEvent),\n    TouchPressure(TouchpadPressure),\n    Focused,\n    Unfocused,\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":5299},{"krate":0,"index":5302},{"krate":0,"index":5305},{"krate":0,"index":5308},{"krate":0,"index":5311},{"krate":0,"index":5314},{"krate":0,"index":5317},{"krate":0,"index":5320},{"krate":0,"index":5322},{"krate":0,"index":5324},{"krate":0,"index":5328},{"krate":0,"index":5331},{"krate":0,"index":5334},{"krate":0,"index":5337},{"krate":0,"index":5339},{"krate":0,"index":5342},{"krate":0,"index":5345},{"krate":0,"index":5347},{"krate":0,"index":5349}],"decl_id":null,"docs":" A simplified version of winit's `WindowEvent` type to make it easier to get started.","sig":null,"attributes":[{"value":"/ A simplified version of winit's `WindowEvent` type to make it easier to get started.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":349588,"byte_end":349676,"line_start":103,"line_end":103,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":349677,"byte_end":349680,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ All co-ordinates and dimensions are DPI-agnostic scalar values.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":349681,"byte_end":349748,"line_start":105,"line_end":105,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":349749,"byte_end":349752,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ Co-ordinates for each window are as follows:","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":349753,"byte_end":349801,"line_start":107,"line_end":107,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":349802,"byte_end":349805,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ - `(0.0, 0.0)` is the centre of the window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":349806,"byte_end":349853,"line_start":109,"line_end":109,"column_start":1,"column_end":48}},{"value":"/ - positive `x` points to the right, negative `x` points to the left.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":349854,"byte_end":349926,"line_start":110,"line_end":110,"column_start":1,"column_end":73}},{"value":"/ - positive `y` points upwards, negative `y` points downwards.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":349927,"byte_end":349992,"line_start":111,"line_end":111,"column_start":1,"column_end":66}},{"value":"/ - positive `z` points into the screen, negative `z` points out of the screen.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":349993,"byte_end":350074,"line_start":112,"line_end":112,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3116},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":352611,"byte_end":352634,"line_start":190,"line_end":190,"column_start":12,"column_end":35},"name":"from_winit_window_event","qualname":"<WindowEvent>::from_winit_window_event","value":"fn from_winit_window_event(&winit::event::WindowEvent, f64, f64, f64)\n-> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Produce a simplified, new-user-friendly version of the given `winit::event::WindowEvent`.","sig":null,"attributes":[{"value":"/ Produce a simplified, new-user-friendly version of the given `winit::event::WindowEvent`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351847,"byte_end":351940,"line_start":178,"line_end":178,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351945,"byte_end":351948,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ This strips rarely needed technical information from the event type such as information","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351953,"byte_end":352044,"line_start":180,"line_end":180,"column_start":5,"column_end":96}},{"value":"/ about the source device, scancodes for keyboard events, etc to make the experience of","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":352049,"byte_end":352138,"line_start":181,"line_end":181,"column_start":5,"column_end":94}},{"value":"/ pattern matching on window events nicer for new users.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":352143,"byte_end":352201,"line_start":182,"line_end":182,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":352206,"byte_end":352209,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ This also interprets the raw pixel positions and dimensions of the raw event into a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":352214,"byte_end":352301,"line_start":184,"line_end":184,"column_start":5,"column_end":92}},{"value":"/ dpi-agnostic scalar value where (0, 0, 0) is the centre of the screen with the `y` axis","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":352306,"byte_end":352397,"line_start":185,"line_end":185,"column_start":5,"column_end":96}},{"value":"/ increasing in the upwards direction.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":352402,"byte_end":352442,"line_start":186,"line_end":186,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":352447,"byte_end":352450,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ If the user requires this extra information, they should use the `raw` field of the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":352455,"byte_end":352542,"line_start":188,"line_end":188,"column_start":5,"column_end":92}},{"value":"/ `WindowEvent` type rather than the `simple` one.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":352547,"byte_end":352599,"line_start":189,"line_end":189,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3123},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":357223,"byte_end":357239,"line_start":318,"line_end":318,"column_start":8,"column_end":24},"name":"from_winit_event","qualname":"<Event as event::LoopEvent>::from_winit_event","value":"fn from_winit_event<'a, T>(&winit::event::Event, &App) -> Option<Self>","parent":{"krate":0,"index":3111},"children":[],"decl_id":{"krate":0,"index":3112},"docs":" Convert the given `winit::event::Event` to a nannou `Event`.\n","sig":null,"attributes":[{"value":"/ Convert the given `winit::event::Event` to a nannou `Event`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":357151,"byte_end":357215,"line_start":317,"line_end":317,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3127},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":359014,"byte_end":359018,"line_start":357,"line_end":357,"column_start":8,"column_end":12},"name":"from","qualname":"<Event as std::convert::From>::from","value":"fn from(Update) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3128},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"frame","qualname":"::frame","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","parent":null,"children":[{"krate":0,"index":3129},{"krate":0,"index":3132},{"krate":0,"index":3135},{"krate":0,"index":3138},{"krate":0,"index":3141},{"krate":0,"index":3144},{"krate":0,"index":3147},{"krate":0,"index":3193},{"krate":0,"index":3196},{"krate":0,"index":5359},{"krate":0,"index":5365},{"krate":0,"index":5367},{"krate":0,"index":5370},{"krate":0,"index":5372},{"krate":0,"index":5376},{"krate":0,"index":3201},{"krate":0,"index":3205},{"krate":0,"index":3224},{"krate":0,"index":3226},{"krate":0,"index":3231},{"krate":0,"index":3234},{"krate":0,"index":3236},{"krate":0,"index":3238}],"decl_id":null,"docs":" Items related to the **Frame** type, describing a single frame of graphics for a single window.\n","sig":null,"attributes":[{"value":"/ Items related to the **Frame** type, describing a single frame of graphics for a single window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":359084,"byte_end":359183,"line_start":1,"line_end":1,"column_start":1,"column_end":100}}]},{"kind":"Mod","id":{"krate":0,"index":3147},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"raw","qualname":"::frame::raw","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","parent":null,"children":[{"krate":0,"index":3148},{"krate":0,"index":3151},{"krate":0,"index":3154},{"krate":0,"index":3157},{"krate":0,"index":3158},{"krate":0,"index":3161},{"krate":0,"index":3164},{"krate":0,"index":3167},{"krate":0,"index":3176},{"krate":0,"index":3190}],"decl_id":null,"docs":" The lower-level \"raw\" frame type allowing to draw directly to the window's swap chain image.\n","sig":null,"attributes":[{"value":"/ The lower-level \"raw\" frame type allowing to draw directly to the window's swap chain image.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":372980,"byte_end":373076,"line_start":1,"line_end":1,"column_start":1,"column_end":97}}]},{"kind":"Struct","id":{"krate":0,"index":3167},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":374416,"byte_end":374424,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"RawFrame","qualname":"::frame::raw::RawFrame","value":"RawFrame {  }","parent":null,"children":[{"krate":0,"index":3169},{"krate":0,"index":3170},{"krate":0,"index":3171},{"krate":0,"index":3172},{"krate":0,"index":3173},{"krate":0,"index":3174},{"krate":0,"index":3175}],"decl_id":null,"docs":" Allows the user to draw a single **RawFrame** to the surface of a window.","sig":null,"attributes":[{"value":"/ Allows the user to draw a single **RawFrame** to the surface of a window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":373186,"byte_end":373263,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":373264,"byte_end":373267,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The application's **view** function is called each time the application is ready to retrieve a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":373268,"byte_end":373366,"line_start":11,"line_end":11,"column_start":1,"column_end":99}},{"value":"/ new image that will be displayed to a window. The **RawFrame** type can be thought of as the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":373367,"byte_end":373463,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"/ canvas to which you draw this image.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":373464,"byte_end":373504,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":373505,"byte_end":373508,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ## Under the hood - WGPU","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":373509,"byte_end":373537,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":373538,"byte_end":373541,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ **RawFrame** provides access to the **wgpu::TextureViewHandle** associated with the swap","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":373542,"byte_end":373634,"line_start":17,"line_end":17,"column_start":1,"column_end":93}},{"value":"/ chain's current target texture for a single window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":373635,"byte_end":373690,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":373691,"byte_end":373694,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ In the case that your **view** function is shared between multiple windows, can determine which","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":373695,"byte_end":373794,"line_start":20,"line_end":20,"column_start":1,"column_end":100}},{"value":"/ window the **RawFrame** is associated with via the **RawFrame::window_id** method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":373795,"byte_end":373881,"line_start":21,"line_end":21,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":373882,"byte_end":373885,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The user can draw to the swap chain texture by building a list of commands via a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":373886,"byte_end":373970,"line_start":23,"line_end":23,"column_start":1,"column_end":85}},{"value":"/ `wgpu::CommandEncoder` and submitting them to the `wgpu::Queue` associated with the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":373971,"byte_end":374058,"line_start":24,"line_end":24,"column_start":1,"column_end":88}},{"value":"/ `wgpu::Device` that was used to create the swap chain. It is important that the queue","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":374059,"byte_end":374148,"line_start":25,"line_end":25,"column_start":1,"column_end":90}},{"value":"/ matches the device. In an effort to reduce the chance for errors to occur, **RawFrame**","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":374149,"byte_end":374240,"line_start":26,"line_end":26,"column_start":1,"column_end":92}},{"value":"/ provides access to a `wgpu::CommandEncoder` whose commands are guaranteed to be submitted to","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":374241,"byte_end":374337,"line_start":27,"line_end":27,"column_start":1,"column_end":97}},{"value":"/ the correct `wgpu::Queue` at the end of the **view** function.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":374338,"byte_end":374404,"line_start":28,"line_end":28,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3181},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":376516,"byte_end":376531,"line_start":86,"line_end":86,"column_start":12,"column_end":27},"name":"command_encoder","qualname":"<RawFrame>::command_encoder","value":"fn command_encoder(&Self) -> RefMut<, wgpu::CommandEncoder>","parent":null,"children":[],"decl_id":null,"docs":" Access the command encoder in order to encode commands that will be submitted to the swap\n chain queue at the end of the call to **view**.\n","sig":null,"attributes":[{"value":"/ Access the command encoder in order to encode commands that will be submitted to the swap","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":376355,"byte_end":376448,"line_start":84,"line_end":84,"column_start":5,"column_end":98}},{"value":"/ chain queue at the end of the call to **view**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":376453,"byte_end":376504,"line_start":85,"line_end":85,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3182},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":376841,"byte_end":376850,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"window_id","qualname":"<RawFrame>::window_id","value":"fn window_id(&Self) -> window::Id","parent":null,"children":[],"decl_id":null,"docs":" The `Id` of the window whose wgpu surface is associated with this frame.\n","sig":null,"attributes":[{"value":"/ The `Id` of the window whose wgpu surface is associated with this frame.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":376753,"byte_end":376829,"line_start":93,"line_end":93,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3183},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":377126,"byte_end":377130,"line_start":102,"line_end":102,"column_start":12,"column_end":16},"name":"rect","qualname":"<RawFrame>::rect","value":"fn rect(&Self) -> geom::Rect","parent":null,"children":[],"decl_id":null,"docs":" A **Rect** representing the full surface of the frame.","sig":null,"attributes":[{"value":"/ A **Rect** representing the full surface of the frame.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":376908,"byte_end":376966,"line_start":98,"line_end":98,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":376971,"byte_end":376974,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The returned **Rect** is equivalent to the result of calling **Window::rect** on the window","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":376979,"byte_end":377074,"line_start":100,"line_end":100,"column_start":5,"column_end":100}},{"value":"/ associated with this **Frame**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":377079,"byte_end":377114,"line_start":101,"line_end":101,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3184},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":377379,"byte_end":377382,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"nth","qualname":"<RawFrame>::nth","value":"fn nth(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The `nth` frame for the associated window since the application started.","sig":null,"attributes":[{"value":"/ The `nth` frame for the associated window since the application started.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":377190,"byte_end":377266,"line_start":106,"line_end":106,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":377271,"byte_end":377274,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ E.g. the first frame yielded will return `0`, the second will return `1`, and so on.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":377279,"byte_end":377367,"line_start":108,"line_end":108,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3185},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":377513,"byte_end":377531,"line_start":114,"line_end":114,"column_start":12,"column_end":30},"name":"swap_chain_texture","qualname":"<RawFrame>::swap_chain_texture","value":"fn swap_chain_texture(&Self) -> &wgpu::TextureViewHandle","parent":null,"children":[],"decl_id":null,"docs":" The swap chain texture that will be the target for drawing this frame.\n","sig":null,"attributes":[{"value":"/ The swap chain texture that will be the target for drawing this frame.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":377427,"byte_end":377501,"line_start":113,"line_end":113,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3186},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":377682,"byte_end":377696,"line_start":119,"line_end":119,"column_start":12,"column_end":26},"name":"texture_format","qualname":"<RawFrame>::texture_format","value":"fn texture_format(&Self) -> wgpu::TextureFormat","parent":null,"children":[],"decl_id":null,"docs":" The texture format of the frame's swap chain texture.\n","sig":null,"attributes":[{"value":"/ The texture format of the frame's swap chain texture.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":377613,"byte_end":377670,"line_start":118,"line_end":118,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3187},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":378036,"byte_end":378053,"line_start":128,"line_end":128,"column_start":12,"column_end":29},"name":"device_queue_pair","qualname":"<RawFrame>::device_queue_pair","value":"fn device_queue_pair(&Self) -> &Arc<wgpu::DeviceQueuePair>","parent":null,"children":[],"decl_id":null,"docs":" The device and queue on which the swap chain was created and which will be used to submit\n the **RawFrame**'s encoded commands.","sig":null,"attributes":[{"value":"/ The device and queue on which the swap chain was created and which will be used to submit","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":377768,"byte_end":377861,"line_start":123,"line_end":123,"column_start":5,"column_end":98}},{"value":"/ the **RawFrame**'s encoded commands.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":377866,"byte_end":377906,"line_start":124,"line_end":124,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":377911,"byte_end":377914,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This refers to the same **DeviceQueuePair** as held by the window associated with this","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":377919,"byte_end":378009,"line_start":126,"line_end":126,"column_start":5,"column_end":95}},{"value":"/ frame.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":378014,"byte_end":378024,"line_start":127,"line_end":127,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3188},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":378694,"byte_end":378700,"line_start":143,"line_end":143,"column_start":12,"column_end":18},"name":"submit","qualname":"<RawFrame>::submit","value":"fn submit(Self)","parent":null,"children":[],"decl_id":null,"docs":" Submit the frame to the GPU!","sig":null,"attributes":[{"value":"/ Submit the frame to the GPU!","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":378137,"byte_end":378169,"line_start":132,"line_end":132,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":378174,"byte_end":378177,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Specifically, this submits the encoded commands to the queue of the device that was used to","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":378182,"byte_end":378277,"line_start":134,"line_end":134,"column_start":5,"column_end":100}},{"value":"/ create the swap chain texture.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":378282,"byte_end":378316,"line_start":135,"line_end":135,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":378321,"byte_end":378324,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Note: You do not need to call this manually as submission will occur automatically when","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":378329,"byte_end":378420,"line_start":137,"line_end":137,"column_start":5,"column_end":96}},{"value":"/ the **Frame** is dropped.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":378425,"byte_end":378454,"line_start":138,"line_end":138,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":378459,"byte_end":378462,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Note: Be careful that you do not currently possess a lock to either the frame's command","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":378467,"byte_end":378558,"line_start":140,"line_end":140,"column_start":5,"column_end":96}},{"value":"/ encoder *or* the queue of the window associated with this frame or this method will lock","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":378563,"byte_end":378655,"line_start":141,"line_end":141,"column_start":5,"column_end":97}},{"value":"/ and block forever.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":378660,"byte_end":378682,"line_start":142,"line_end":142,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3189},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":378808,"byte_end":378813,"line_start":148,"line_end":148,"column_start":12,"column_end":17},"name":"clear","qualname":"<RawFrame>::clear","value":"fn clear(&Self, &wgpu::TextureView, wgpu::Color)","parent":null,"children":[],"decl_id":null,"docs":" Clear the texture with the given color.\n","sig":null,"attributes":[{"value":"/ Clear the texture with the given color.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":378753,"byte_end":378796,"line_start":147,"line_end":147,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3192},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":379023,"byte_end":379027,"line_start":154,"line_end":154,"column_start":8,"column_end":12},"name":"drop","qualname":"<RawFrame as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3196},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":359878,"byte_end":359883,"line_start":22,"line_end":22,"column_start":12,"column_end":17},"name":"Frame","qualname":"::frame::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":3198},{"krate":0,"index":3199},{"krate":0,"index":3200}],"decl_id":null,"docs":" A **Frame** to which the user can draw graphics before it is presented to the display.","sig":null,"attributes":[{"value":"/ A **Frame** to which the user can draw graphics before it is presented to the display.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":359364,"byte_end":359454,"line_start":14,"line_end":14,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":359455,"byte_end":359458,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ **Frame**s are delivered to the user for drawing via the user's **view** function.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":359459,"byte_end":359545,"line_start":16,"line_end":16,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":359546,"byte_end":359549,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ See the **RawFrame** docs for more details on how the implementation works under the hood. The","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":359550,"byte_end":359648,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ **Frame** type differs in that rather than drawing directly to the swapchain image the user may","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":359649,"byte_end":359748,"line_start":19,"line_end":19,"column_start":1,"column_end":100}},{"value":"/ draw to an intermediary linear sRGBA image. There are several advantages of drawing to an","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":359749,"byte_end":359842,"line_start":20,"line_end":20,"column_start":1,"column_end":94}},{"value":"/ intermediary image.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":359843,"byte_end":359866,"line_start":21,"line_end":21,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":5359},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":360102,"byte_end":360112,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"RenderData","qualname":"::frame::RenderData","value":"RenderData {  }","parent":null,"children":[{"krate":0,"index":5360},{"krate":0,"index":5361},{"krate":0,"index":5362},{"krate":0,"index":5364}],"decl_id":null,"docs":" Data specific to the intermediary textures.\n","sig":null,"attributes":[{"value":"/ Data specific to the intermediary textures.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":360026,"byte_end":360073,"line_start":28,"line_end":28,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3204},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":361093,"byte_end":361098,"line_start":58,"line_end":58,"column_start":8,"column_end":13},"name":"deref","qualname":"<Frame as std::ops::Deref>::deref","value":"fn deref(&Self) -> &Self::Target","parent":{"krate":2,"index":3369},"children":[],"decl_id":{"krate":2,"index":3371},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3207},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":361352,"byte_end":361372,"line_start":66,"line_end":66,"column_start":15,"column_end":35},"name":"DEFAULT_MSAA_SAMPLES","qualname":"::frame::Frame::<'swap_chain>::DEFAULT_MSAA_SAMPLES","value":"u32","parent":{"krate":0,"index":3205},"children":[],"decl_id":null,"docs":" The default number of multisample anti-aliasing samples used if the window with which the\n `Frame` is associated supports it.\n","sig":null,"attributes":[{"value":"/ The default number of multisample anti-aliasing samples used if the window with which the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":361201,"byte_end":361294,"line_start":64,"line_end":64,"column_start":5,"column_end":98}},{"value":"/ `Frame` is associated supports it.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":361299,"byte_end":361337,"line_start":65,"line_end":65,"column_start":5,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":3208},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":361747,"byte_end":361761,"line_start":73,"line_end":73,"column_start":15,"column_end":29},"name":"TEXTURE_FORMAT","qualname":"::frame::Frame::<'swap_chain>::TEXTURE_FORMAT","value":"wgpu::TextureFormat","parent":{"krate":0,"index":3205},"children":[],"decl_id":null,"docs":" The texture format used by the intermediary linear sRGBA image.","sig":null,"attributes":[{"value":"/ The texture format used by the intermediary linear sRGBA image.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":361387,"byte_end":361454,"line_start":67,"line_end":67,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":361459,"byte_end":361462,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ We use a high bit depth format in order to retain as much information as possible when","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":361467,"byte_end":361557,"line_start":69,"line_end":69,"column_start":5,"column_end":95}},{"value":"/ converting from the linear representation to the swapchain format (normally a non-linear","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":361562,"byte_end":361654,"line_start":70,"line_end":70,"column_start":5,"column_end":97}},{"value":"/ representation).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":361659,"byte_end":361679,"line_start":71,"line_end":71,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3212},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":366235,"byte_end":366242,"line_start":178,"line_end":178,"column_start":12,"column_end":19},"name":"texture","qualname":"<Frame>::texture","value":"fn texture(&Self) -> &wgpu::Texture","parent":null,"children":[],"decl_id":null,"docs":" The texture to which all graphics should be drawn this frame.","sig":null,"attributes":[{"value":"/ The texture to which all graphics should be drawn this frame.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":365160,"byte_end":365225,"line_start":161,"line_end":161,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":365230,"byte_end":365233,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This is **not** the swapchain texture, but rather an intermediary linear sRGBA image. This","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":365238,"byte_end":365332,"line_start":163,"line_end":163,"column_start":5,"column_end":99}},{"value":"/ intermediary image is used in order to:","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":365337,"byte_end":365380,"line_start":164,"line_end":164,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":365385,"byte_end":365388,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ - Ensure consistent MSAA resolve behaviour across platforms.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":365393,"byte_end":365457,"line_start":166,"line_end":166,"column_start":5,"column_end":69}},{"value":"/ - Avoid the need for multiple implicit conversions to and from linear sRGBA for each","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":365462,"byte_end":365550,"line_start":167,"line_end":167,"column_start":5,"column_end":93}},{"value":"/ graphics pipeline render pass that is used.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":365555,"byte_end":365602,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/ - Allow for the user's rendered image to persist between frames.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":365607,"byte_end":365675,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":365680,"byte_end":365683,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ The exact format of the texture is equal to `Frame::TEXTURE_FORMAT`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":365688,"byte_end":365760,"line_start":171,"line_end":171,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":365765,"byte_end":365768,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ If the number of MSAA samples specified is greater than `1` (which it is by default if","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":365773,"byte_end":365863,"line_start":173,"line_end":173,"column_start":5,"column_end":95}},{"value":"/ supported by the platform), this will be a multisampled texture. After the **view**","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":365868,"byte_end":365955,"line_start":174,"line_end":174,"column_start":5,"column_end":92}},{"value":"/ function returns, this texture will be resolved to a non-multisampled linear sRGBA texture.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":365960,"byte_end":366055,"line_start":175,"line_end":175,"column_start":5,"column_end":100}},{"value":"/ After the texture has been resolved if necessary, it will then be used as a shader input","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":366060,"byte_end":366152,"line_start":176,"line_end":176,"column_start":5,"column_end":97}},{"value":"/ within a graphics pipeline used to draw the swapchain texture.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":366157,"byte_end":366223,"line_start":177,"line_end":177,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3214},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":366592,"byte_end":366604,"line_start":190,"line_end":190,"column_start":12,"column_end":24},"name":"texture_view","qualname":"<Frame>::texture_view","value":"fn texture_view(&Self) -> &wgpu::TextureView","parent":null,"children":[],"decl_id":null,"docs":" A full view into the frame's texture.","sig":null,"attributes":[{"value":"/ A full view into the frame's texture.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":366496,"byte_end":366537,"line_start":187,"line_end":187,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":366542,"byte_end":366545,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ See `texture` for details.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":366550,"byte_end":366580,"line_start":189,"line_end":189,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3215},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":366771,"byte_end":366785,"line_start":195,"line_end":195,"column_start":12,"column_end":26},"name":"resolve_target","qualname":"<Frame>::resolve_target","value":"fn resolve_target(&Self) -> Option<&wgpu::TextureView>","parent":null,"children":[],"decl_id":null,"docs":" Returns the resolve target texture in the case that MSAA is enabled.\n","sig":null,"attributes":[{"value":"/ Returns the resolve target texture in the case that MSAA is enabled.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":366687,"byte_end":366759,"line_start":194,"line_end":194,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3216},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":367127,"byte_end":367141,"line_start":205,"line_end":205,"column_start":12,"column_end":26},"name":"texture_format","qualname":"<Frame>::texture_format","value":"fn texture_format(&Self) -> wgpu::TextureFormat","parent":null,"children":[],"decl_id":null,"docs":" The color format of the `Frame`'s intermediary linear sRGBA texture (equal to\n `Frame::TEXTURE_FORMAT`).\n","sig":null,"attributes":[{"value":"/ The color format of the `Frame`'s intermediary linear sRGBA texture (equal to","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":367000,"byte_end":367081,"line_start":203,"line_end":203,"column_start":5,"column_end":86}},{"value":"/ `Frame::TEXTURE_FORMAT`).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":367086,"byte_end":367115,"line_start":204,"line_end":204,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3217},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":367308,"byte_end":367328,"line_start":210,"line_end":210,"column_start":12,"column_end":32},"name":"texture_msaa_samples","qualname":"<Frame>::texture_msaa_samples","value":"fn texture_msaa_samples(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of MSAA samples of the `Frame`'s intermediary linear sRGBA texture.\n","sig":null,"attributes":[{"value":"/ The number of MSAA samples of the `Frame`'s intermediary linear sRGBA texture.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":367214,"byte_end":367296,"line_start":209,"line_end":209,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3218},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":367452,"byte_end":367464,"line_start":215,"line_end":215,"column_start":12,"column_end":24},"name":"texture_size","qualname":"<Frame>::texture_size","value":"fn texture_size(&Self) -> [u32; ]","parent":null,"children":[],"decl_id":null,"docs":" The size of the frame's texture in pixels.\n","sig":null,"attributes":[{"value":"/ The size of the frame's texture in pixels.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":367394,"byte_end":367440,"line_start":214,"line_end":214,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3220},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":368058,"byte_end":368085,"line_start":226,"line_end":226,"column_start":12,"column_end":39},"name":"color_attachment_descriptor","qualname":"<Frame>::color_attachment_descriptor","value":"fn color_attachment_descriptor(&Self) -> wgpu::RenderPassColorAttachment","parent":null,"children":[],"decl_id":null,"docs":" Short-hand for constructing a `wgpu::RenderPassColorAttachment` for use within a\n render pass that targets this frame's texture. The returned descriptor's `attachment` will\n the same `wgpu::TextureView` returned by the `Frame::texture` method.","sig":null,"attributes":[{"value":"/ Short-hand for constructing a `wgpu::RenderPassColorAttachment` for use within a","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":367527,"byte_end":367611,"line_start":219,"line_end":219,"column_start":5,"column_end":89}},{"value":"/ render pass that targets this frame's texture. The returned descriptor's `attachment` will","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":367616,"byte_end":367710,"line_start":220,"line_end":220,"column_start":5,"column_end":99}},{"value":"/ the same `wgpu::TextureView` returned by the `Frame::texture` method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":367715,"byte_end":367788,"line_start":221,"line_end":221,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":367793,"byte_end":367796,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Note that this method will not perform any resolving. In the case that `msaa_samples` is","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":367801,"byte_end":367893,"line_start":223,"line_end":223,"column_start":5,"column_end":97}},{"value":"/ greater than `1`, a render pass will be automatically added after the `view` completes and","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":367898,"byte_end":367992,"line_start":224,"line_end":224,"column_start":5,"column_end":99}},{"value":"/ before the texture is drawn to the swapchain.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":367997,"byte_end":368046,"line_start":225,"line_end":225,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3221},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":368696,"byte_end":368701,"line_start":242,"line_end":242,"column_start":12,"column_end":17},"name":"clear","qualname":"<Frame>::clear","value":"fn clear<C>(&Self, C) where C: IntoLinSrgba<f32>","parent":null,"children":[],"decl_id":null,"docs":" Clear the texture with the given color.\n","sig":null,"attributes":[{"value":"/ Clear the texture with the given color.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":368641,"byte_end":368684,"line_start":241,"line_end":241,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3223},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":369679,"byte_end":369685,"line_start":266,"line_end":266,"column_start":12,"column_end":18},"name":"submit","qualname":"<Frame>::submit","value":"fn submit(Self)","parent":null,"children":[],"decl_id":null,"docs":" Submit the frame to the GPU!","sig":null,"attributes":[{"value":"/ Submit the frame to the GPU!","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":369059,"byte_end":369091,"line_start":254,"line_end":254,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":369096,"byte_end":369099,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ Note that you do not need to call this manually as submission will occur automatically when","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":369104,"byte_end":369199,"line_start":256,"line_end":256,"column_start":5,"column_end":100}},{"value":"/ the **Frame** is dropped.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":369204,"byte_end":369233,"line_start":257,"line_end":257,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":369238,"byte_end":369241,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Before submission, the frame does the following:","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":369246,"byte_end":369298,"line_start":259,"line_end":259,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":369303,"byte_end":369306,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ - If the frame's intermediary linear sRGBA texture is multisampled, resolve it.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":369311,"byte_end":369394,"line_start":261,"line_end":261,"column_start":5,"column_end":88}},{"value":"/ - Write the intermediary linear sRGBA image to the swap chain texture.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":369399,"byte_end":369473,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":369478,"byte_end":369481,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ It can sometimes be useful to submit the **Frame** before `view` completes in order to read","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":369486,"byte_end":369581,"line_start":264,"line_end":264,"column_start":5,"column_end":100}},{"value":"/ the frame's texture back to the CPU (e.g. for screen shots, recordings, etc).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":369586,"byte_end":369667,"line_start":265,"line_end":265,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":3233},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":371544,"byte_end":371548,"line_start":326,"line_end":326,"column_start":8,"column_end":12},"name":"drop","qualname":"<Frame as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3240},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"geom","qualname":"::geom","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/mod.rs","parent":null,"children":[{"krate":0,"index":3241},{"krate":0,"index":3308},{"krate":0,"index":3309},{"krate":0,"index":3312},{"krate":0,"index":3315}],"decl_id":null,"docs":" Types, functions and other items related to geometry. This module is the source of all graphics\n and lazer primitives and aids work in 2D and 3D space.","sig":null,"attributes":[{"value":"/ Types, functions and other items related to geometry. This module is the source of all graphics","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/mod.rs","byte_start":379194,"byte_end":379293,"line_start":1,"line_end":1,"column_start":1,"column_end":100}},{"value":"/ and lazer primitives and aids work in 2D and 3D space.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/mod.rs","byte_start":379294,"byte_end":379352,"line_start":2,"line_end":2,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/mod.rs","byte_start":379353,"byte_end":379356,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Each module provides a set of general tools for working with the named geometry including:","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/mod.rs","byte_start":379357,"byte_end":379451,"line_start":4,"line_end":4,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/mod.rs","byte_start":379452,"byte_end":379455,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - A typed, object representation.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/mod.rs","byte_start":379456,"byte_end":379493,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"/ - Functions for producing vertices, triangles and triangulation indices.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/mod.rs","byte_start":379494,"byte_end":379570,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ - Functions for checking whether or not the geometry contains a point.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/mod.rs","byte_start":379571,"byte_end":379645,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ - Functions for determining the bounding rectangle or cuboid.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/mod.rs","byte_start":379646,"byte_end":379711,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/ - A function for finding the centroid.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/mod.rs","byte_start":379712,"byte_end":379754,"line_start":10,"line_end":10,"column_start":1,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":3241},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"path","qualname":"::geom::path","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","parent":null,"children":[{"krate":0,"index":3242},{"krate":0,"index":3245},{"krate":0,"index":3247},{"krate":0,"index":3249},{"krate":0,"index":3261},{"krate":0,"index":3274},{"krate":0,"index":3277},{"krate":0,"index":3283},{"krate":0,"index":3286},{"krate":0,"index":3289},{"krate":0,"index":3294},{"krate":0,"index":3296},{"krate":0,"index":3298},{"krate":0,"index":3300},{"krate":0,"index":3302},{"krate":0,"index":3305},{"krate":0,"index":3306},{"krate":0,"index":3307}],"decl_id":null,"docs":" Items related to working with paths for 2D geometry and vector graphics.","sig":null,"attributes":[{"value":"/ Items related to working with paths for 2D geometry and vector graphics.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":379836,"byte_end":379912,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":379913,"byte_end":379916,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module attempts to provide abstractions around the various `Path` and `Builder` types","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":379917,"byte_end":380011,"line_start":3,"line_end":3,"column_start":1,"column_end":95}},{"value":"/ offerred by `lyon` in a way that interoperates a little more fluidly and consistently with the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":380012,"byte_end":380110,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ rest of nannou's API.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":380111,"byte_end":380136,"line_start":5,"line_end":5,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":3245},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":380243,"byte_end":380247,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Path","qualname":"::geom::path::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":3246}],"decl_id":null,"docs":" A wrapper around a 2D lyon path exposing a nannou-friendly API.\n","sig":null,"attributes":[{"value":"/ A wrapper around a 2D lyon path exposing a nannou-friendly API.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":380164,"byte_end":380231,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3247},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":380337,"byte_end":380344,"line_start":15,"line_end":15,"column_start":12,"column_end":19},"name":"Builder","qualname":"::geom::path::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":3248}],"decl_id":null,"docs":" A type used for building a 2D lyon path.\n","sig":null,"attributes":[{"value":"/ A type used for building a 2D lyon path.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":380281,"byte_end":380325,"line_start":14,"line_end":14,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3250},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":380448,"byte_end":380455,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"builder","qualname":"<Path>::builder","value":"fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Begin building a new path.\n","sig":null,"attributes":[{"value":"/ Begin building a new path.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":380406,"byte_end":380436,"line_start":20,"line_end":20,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3251},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":380542,"byte_end":380545,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<Path>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty path.\n","sig":null,"attributes":[{"value":"/ Create an empty path.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":380505,"byte_end":380530,"line_start":25,"line_end":25,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3252},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":380661,"byte_end":380669,"line_start":31,"line_end":31,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Path>::as_slice","value":"fn as_slice(&Self) -> lyon::path::PathSlice","parent":null,"children":[],"decl_id":null,"docs":" Returns a lyon view on this **Path**.\n","sig":null,"attributes":[{"value":"/ Returns a lyon view on this **Path**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":380608,"byte_end":380649,"line_start":30,"line_end":30,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3253},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":380813,"byte_end":380823,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"attributes","qualname":"<Path>::attributes","value":"fn attributes(&Self, lyon::path::EndpointId) -> &[f32]","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice over an endpoint's custom attributes.\n","sig":null,"attributes":[{"value":"/ Returns a slice over an endpoint's custom attributes.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":380744,"byte_end":380801,"line_start":35,"line_end":35,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3254},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":381001,"byte_end":381005,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"iter","qualname":"<Path>::iter","value":"fn iter(&Self) -> lyon::path::path::Iter","parent":null,"children":[],"decl_id":null,"docs":" Iterates over the entire **Path** yielding **PathEvent**s.\n","sig":null,"attributes":[{"value":"/ Iterates over the entire **Path** yielding **PathEvent**s.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":380927,"byte_end":380989,"line_start":40,"line_end":40,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3255},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":381158,"byte_end":381165,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"id_iter","qualname":"<Path>::id_iter","value":"fn id_iter(&Self) -> lyon::path::path::IdIter","parent":null,"children":[],"decl_id":null,"docs":" Iterates over the endpoint and control point ids of the **Path**.\n","sig":null,"attributes":[{"value":"/ Iterates over the endpoint and control point ids of the **Path**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":381077,"byte_end":381146,"line_start":45,"line_end":45,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3256},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":381305,"byte_end":381325,"line_start":51,"line_end":51,"column_start":12,"column_end":32},"name":"iter_with_attributes","qualname":"<Path>::iter_with_attributes","value":"fn iter_with_attributes(&Self) -> lyon::path::path::IterWithAttributes","parent":null,"children":[],"decl_id":null,"docs":" Iterate over points alongside their attributes.\n","sig":null,"attributes":[{"value":"/ Iterate over points alongside their attributes.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":381242,"byte_end":381293,"line_start":50,"line_end":50,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3257},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":381543,"byte_end":381554,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"name":"transformed","qualname":"<Path>::transformed","value":"fn transformed<T>(Self, &T) -> Self where\nT: lyon::geom::traits::Transformation<f32>","parent":null,"children":[],"decl_id":null,"docs":" Applies a transform to all endpoints and control points of this path and returns the\n result.\n","sig":null,"attributes":[{"value":"/ Applies a transform to all endpoints and control points of this path and returns the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":381427,"byte_end":381515,"line_start":55,"line_end":55,"column_start":5,"column_end":93}},{"value":"/ result.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":381520,"byte_end":381531,"line_start":56,"line_end":56,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3259},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":381808,"byte_end":381816,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"reversed","qualname":"<Path>::reversed","value":"fn reversed(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Reversed version of this path with edge loops specified in the opposite order.\n","sig":null,"attributes":[{"value":"/ Reversed version of this path with edge loops specified in the opposite order.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":381714,"byte_end":381796,"line_start":64,"line_end":64,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3260},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":381919,"byte_end":381924,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"merge","qualname":"<Path>::merge","value":"fn merge(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Concatenate two paths.\n","sig":null,"attributes":[{"value":"/ Concatenate two paths.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":381881,"byte_end":381907,"line_start":69,"line_end":69,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3262},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":382117,"byte_end":382120,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Begin building a new path.\n","sig":null,"attributes":[{"value":"/ Begin building a new path.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":382075,"byte_end":382105,"line_start":78,"line_end":78,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3263},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":382278,"byte_end":382291,"line_start":84,"line_end":84,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Builder>::with_capacity","value":"fn with_capacity(usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Build a path with the given capacity for the inner path event storage.\n","sig":null,"attributes":[{"value":"/ Build a path with the given capacity for the inner path event storage.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":382192,"byte_end":382266,"line_start":83,"line_end":83,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3264},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":382479,"byte_end":382487,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"name":"with_svg","qualname":"<Builder>::with_svg","value":"fn with_svg(Self) -> lyon::path::builder::WithSvg<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns a lyon builder that supports SVG commands.\n","sig":null,"attributes":[{"value":"/ Returns a lyon builder that supports SVG commands.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":382413,"byte_end":382467,"line_start":88,"line_end":88,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3265},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":382693,"byte_end":382702,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"flattened","qualname":"<Builder>::flattened","value":"fn flattened(Self, f32) -> lyon::path::builder::Flattened<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns a lyon builder that approximates all curves with sequences of line segments.\n","sig":null,"attributes":[{"value":"/ Returns a lyon builder that approximates all curves with sequences of line segments.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":382593,"byte_end":382681,"line_start":93,"line_end":93,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3266},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":383009,"byte_end":383014,"line_start":101,"line_end":101,"column_start":12,"column_end":17},"name":"begin","qualname":"<Builder>::begin","value":"fn begin(Self, Point2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the position in preparation for the next sub-path.","sig":null,"attributes":[{"value":"/ Sets the position in preparation for the next sub-path.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":382839,"byte_end":382898,"line_start":98,"line_end":98,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":382903,"byte_end":382906,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ If the current sub-path contains edges, this ends the sub-path without closing it.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":382911,"byte_end":382997,"line_start":100,"line_end":100,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":3267},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":383211,"byte_end":383218,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"line_to","qualname":"<Builder>::line_to","value":"fn line_to(Self, Point2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a line segment to the current sub-path and sets the current position.\n","sig":null,"attributes":[{"value":"/ Adds a line segment to the current sub-path and sets the current position.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":383121,"byte_end":383199,"line_start":106,"line_end":106,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3268},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":383455,"byte_end":383460,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"close","qualname":"<Builder>::close","value":"fn close(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Closes the current sub path and sets the current position to the first position of the\n current sub-path.\n","sig":null,"attributes":[{"value":"/ Closes the current sub path and sets the current position to the first position of the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":383327,"byte_end":383417,"line_start":112,"line_end":112,"column_start":5,"column_end":95}},{"value":"/ current sub-path.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":383422,"byte_end":383443,"line_start":113,"line_end":113,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3269},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":383592,"byte_end":383611,"line_start":120,"line_end":120,"column_start":12,"column_end":31},"name":"quadratic_bezier_to","qualname":"<Builder>::quadratic_bezier_to","value":"fn quadratic_bezier_to(Self, Point2, Point2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a quadratic bezier curve to the path.\n","sig":null,"attributes":[{"value":"/ Add a quadratic bezier curve to the path.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":383535,"byte_end":383580,"line_start":119,"line_end":119,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3270},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":383836,"byte_end":383851,"line_start":127,"line_end":127,"column_start":12,"column_end":27},"name":"cubic_bezier_to","qualname":"<Builder>::cubic_bezier_to","value":"fn cubic_bezier_to(Self, Point2, Point2, Point2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a cubic bezier curve to the path.\n","sig":null,"attributes":[{"value":"/ Add a cubic bezier curve to the path.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":383783,"byte_end":383824,"line_start":126,"line_end":126,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3271},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":384140,"byte_end":384145,"line_start":137,"line_end":137,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"fn build(Self) -> Path","parent":null,"children":[],"decl_id":null,"docs":" Build the path and return it.\n","sig":null,"attributes":[{"value":"/ Build the path and return it.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":384095,"byte_end":384128,"line_start":136,"line_end":136,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3272},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":384267,"byte_end":384272,"line_start":142,"line_end":142,"column_start":12,"column_end":17},"name":"inner","qualname":"<Builder>::inner","value":"fn inner(&Self) -> &lyon::path::path::Builder","parent":null,"children":[],"decl_id":null,"docs":" Access to the inner `lyon::path::Builder`.\n","sig":null,"attributes":[{"value":"/ Access to the inner `lyon::path::Builder`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":384209,"byte_end":384255,"line_start":141,"line_end":141,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3273},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":384411,"byte_end":384420,"line_start":147,"line_end":147,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<Builder>::inner_mut","value":"fn inner_mut(&mut Self) -> &mut lyon::path::path::Builder","parent":null,"children":[],"decl_id":null,"docs":" Mutable access to the inner `lyon::path::Builder`.\n","sig":null,"attributes":[{"value":"/ Mutable access to the inner `lyon::path::Builder`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":384345,"byte_end":384399,"line_start":146,"line_end":146,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3276},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":384607,"byte_end":384612,"line_start":157,"line_end":157,"column_start":8,"column_end":13},"name":"build","qualname":"<Builder as lyon::lyon_path::builder::Build>::build","value":"fn build(Self) -> Self::PathType","parent":{"krate":23,"index":98},"children":[],"decl_id":{"krate":23,"index":100},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3278},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":384743,"byte_end":384762,"line_start":163,"line_end":163,"column_start":8,"column_end":27},"name":"quadratic_bezier_to","qualname":"<Builder as lyon::lyon_path::builder::PathBuilder>::quadratic_bezier_to","value":"fn quadratic_bezier_to(&mut Self, lyon::math::Point, lyon::math::Point)\n-> lyon::path::EndpointId","parent":{"krate":23,"index":50},"children":[],"decl_id":{"krate":23,"index":55},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3279},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":384946,"byte_end":384961,"line_start":171,"line_end":171,"column_start":8,"column_end":23},"name":"cubic_bezier_to","qualname":"<Builder as lyon::lyon_path::builder::PathBuilder>::cubic_bezier_to","value":"fn cubic_bezier_to(&mut Self, lyon::math::Point, lyon::math::Point,\nlyon::math::Point) -> lyon::path::EndpointId","parent":{"krate":23,"index":50},"children":[],"decl_id":{"krate":23,"index":56},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3280},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":385184,"byte_end":385189,"line_start":180,"line_end":180,"column_start":8,"column_end":13},"name":"begin","qualname":"<Builder as lyon::lyon_path::builder::PathBuilder>::begin","value":"fn begin(&mut Self, lyon::math::Point) -> lyon::path::EndpointId","parent":{"krate":23,"index":50},"children":[],"decl_id":{"krate":23,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3281},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":385297,"byte_end":385300,"line_start":184,"line_end":184,"column_start":8,"column_end":11},"name":"end","qualname":"<Builder as lyon::lyon_path::builder::PathBuilder>::end","value":"fn end(&mut Self, bool)","parent":{"krate":23,"index":50},"children":[],"decl_id":{"krate":23,"index":52},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3282},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":385373,"byte_end":385380,"line_start":188,"line_end":188,"column_start":8,"column_end":15},"name":"line_to","qualname":"<Builder as lyon::lyon_path::builder::PathBuilder>::line_to","value":"fn line_to(&mut Self, lyon::math::Point) -> lyon::path::EndpointId","parent":{"krate":23,"index":50},"children":[],"decl_id":{"krate":23,"index":54},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3285},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":385591,"byte_end":385596,"line_start":197,"line_end":197,"column_start":8,"column_end":13},"name":"index","qualname":"<Path as std::ops::Index>::index","value":"fn index(&Self, lyon::path::ControlPointId) -> &Self::Output","parent":{"krate":2,"index":3454},"children":[],"decl_id":{"krate":2,"index":3457},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3288},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":385803,"byte_end":385808,"line_start":204,"line_end":204,"column_start":8,"column_end":13},"name":"index","qualname":"<Path as std::ops::Index>::index","value":"fn index(&Self, lyon::path::EndpointId) -> &Self::Output","parent":{"krate":2,"index":3454},"children":[],"decl_id":{"krate":2,"index":3457},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3293},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":386073,"byte_end":386082,"line_start":215,"line_end":215,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a Path as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":7998},"children":[],"decl_id":{"krate":2,"index":8001},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3295},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":386200,"byte_end":386204,"line_start":223,"line_end":223,"column_start":8,"column_end":12},"name":"from","qualname":"<Path as std::convert::From>::from","value":"fn from(lyon::path::Path) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3297},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":386328,"byte_end":386332,"line_start":229,"line_end":229,"column_start":8,"column_end":12},"name":"from","qualname":"<Builder as std::convert::From>::from","value":"fn from(lyon::path::path::Builder) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3299},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":386462,"byte_end":386466,"line_start":235,"line_end":235,"column_start":8,"column_end":12},"name":"into","qualname":"<Path as std::convert::Into>::into","value":"fn into(Self) -> lyon::path::Path","parent":{"krate":2,"index":3053},"children":[],"decl_id":{"krate":2,"index":3055},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3301},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":386580,"byte_end":386584,"line_start":241,"line_end":241,"column_start":8,"column_end":12},"name":"into","qualname":"<Builder as std::convert::Into>::into","value":"fn into(Self) -> lyon::path::path::Builder","parent":{"krate":2,"index":3053},"children":[],"decl_id":{"krate":2,"index":3055},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3304},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":386715,"byte_end":386719,"line_start":247,"line_end":247,"column_start":8,"column_end":12},"name":"into","qualname":"<&'a Path as std::convert::Into>::into","value":"fn into(Self) -> lyon::path::PathSlice","parent":{"krate":2,"index":3053},"children":[],"decl_id":{"krate":2,"index":3055},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3305},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":386852,"byte_end":386856,"line_start":255,"line_end":255,"column_start":8,"column_end":12},"name":"path","qualname":"::geom::path::path","value":"fn path() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Begin building a path.\n","sig":null,"attributes":[{"value":"/ Begin building a path.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":386818,"byte_end":386844,"line_start":254,"line_end":254,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":3306},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":386976,"byte_end":386994,"line_start":260,"line_end":260,"column_start":8,"column_end":26},"name":"path_with_capacity","qualname":"::geom::path::path_with_capacity","value":"fn path_with_capacity(usize, usize) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Build a path with the given capacity for the inner path event storage.\n","sig":null,"attributes":[{"value":"/ Build a path with the given capacity for the inner path event storage.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":386894,"byte_end":386968,"line_start":259,"line_end":259,"column_start":1,"column_end":75}}]},{"kind":"Mod","id":{"krate":0,"index":3316},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/image.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"image","qualname":"::image","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/image.rs","parent":null,"children":[{"krate":0,"index":3317}],"decl_id":null,"docs":" Items related to working with images. Currently, this module simply re-exports the renown\n [image crate](https://docs.rs/image) which supports reading and writing PNG, JPEG, GIF, WEBP,\n BMP and more.\n","sig":null,"attributes":[{"value":"/ Items related to working with images. Currently, this module simply re-exports the renown","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/image.rs","byte_start":387354,"byte_end":387447,"line_start":1,"line_end":1,"column_start":1,"column_end":94}},{"value":"/ [image crate](https://docs.rs/image) which supports reading and writing PNG, JPEG, GIF, WEBP,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/image.rs","byte_start":387448,"byte_end":387545,"line_start":2,"line_end":2,"column_start":1,"column_end":98}},{"value":"/ BMP and more.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/image.rs","byte_start":387546,"byte_end":387563,"line_start":3,"line_end":3,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":3318},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","parent":null,"children":[{"krate":0,"index":3319},{"krate":0,"index":3322},{"krate":0,"index":3325},{"krate":0,"index":3328},{"krate":0,"index":3329},{"krate":0,"index":3332},{"krate":0,"index":3335},{"krate":0,"index":3338},{"krate":0,"index":3339},{"krate":0,"index":3342},{"krate":0,"index":3345},{"krate":0,"index":3348},{"krate":0,"index":5378},{"krate":0,"index":5386},{"krate":0,"index":3351},{"krate":0,"index":3352},{"krate":0,"index":3353},{"krate":0,"index":3354},{"krate":0,"index":3357},{"krate":0,"index":3359},{"krate":0,"index":3361},{"krate":0,"index":3363},{"krate":0,"index":3366},{"krate":0,"index":3369},{"krate":0,"index":3371},{"krate":0,"index":3374},{"krate":0,"index":3379},{"krate":0,"index":3382},{"krate":0,"index":3387}],"decl_id":null,"docs":" An extension of the `std::io` module. Includes functions for safely saving and loading files\n from any serializable types, along with functions specifically for working with JSON and TOML.\n","sig":null,"attributes":[{"value":"/ An extension of the `std::io` module. Includes functions for safely saving and loading files","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":387584,"byte_end":387680,"line_start":1,"line_end":1,"column_start":1,"column_end":97}},{"value":"/ from any serializable types, along with functions specifically for working with JSON and TOML.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":387681,"byte_end":387779,"line_start":2,"line_end":2,"column_start":1,"column_end":99}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5380},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":388008,"byte_end":388010,"line_start":15,"line_end":15,"column_start":5,"column_end":7},"name":"Io","qualname":"::io::FileError::Io","value":"FileError::Io(io::Error)","parent":{"krate":0,"index":5378},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5382},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":388011,"byte_end":388020,"line_start":15,"line_end":15,"column_start":8,"column_end":17},"name":"0","qualname":"::io::FileError::Io::0","value":"std::io::Error","parent":{"krate":0,"index":5380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5383},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":388027,"byte_end":388033,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Format","qualname":"::io::FileError::Format","value":"FileError::Format(E)","parent":{"krate":0,"index":5378},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5385},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":388034,"byte_end":388035,"line_start":16,"line_end":16,"column_start":12,"column_end":13},"name":"0","qualname":"::io::FileError::Format::0","value":"E","parent":{"krate":0,"index":5383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5378},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":387989,"byte_end":387998,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"FileError","qualname":"::io::FileError","value":"enum FileError<E> { Io(io::Error), Format(E), }","parent":null,"children":[{"krate":0,"index":5380},{"krate":0,"index":5383}],"decl_id":null,"docs":" Errors that might occur when saving a file.\n","sig":null,"attributes":[{"value":"/ Errors that might occur when saving a file.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":387915,"byte_end":387962,"line_start":12,"line_end":12,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":3351},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":388050,"byte_end":388063,"line_start":19,"line_end":19,"column_start":10,"column_end":23},"name":"JsonFileError","qualname":"::io::JsonFileError","value":"FileError<serde_json::Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3352},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":388105,"byte_end":388122,"line_start":20,"line_end":20,"column_start":10,"column_end":27},"name":"TomlFileSaveError","qualname":"::io::TomlFileSaveError","value":"FileError<toml::ser::Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3353},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":388163,"byte_end":388180,"line_start":21,"line_end":21,"column_start":10,"column_end":27},"name":"TomlFileLoadError","qualname":"::io::TomlFileLoadError","value":"FileError<toml::de::Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3356},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":388262,"byte_end":388266,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"from","qualname":"<FileError<E> as std::convert::From>::from","value":"fn from(io::Error) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3358},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":388385,"byte_end":388389,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"from","qualname":"<JsonFileError as std::convert::From>::from","value":"fn from(serde_json::Error) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3360},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":388523,"byte_end":388527,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"from","qualname":"<TomlFileSaveError as std::convert::From>::from","value":"fn from(toml::ser::Error) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3362},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":388659,"byte_end":388663,"line_start":42,"line_end":42,"column_start":8,"column_end":12},"name":"from","qualname":"<TomlFileLoadError as std::convert::From>::from","value":"fn from(toml::de::Error) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3365},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":388796,"byte_end":388801,"line_start":51,"line_end":51,"column_start":8,"column_end":13},"name":"cause","qualname":"<FileError<E> as std::error::Error>::cause","value":"fn cause(&Self) -> Option<&dyn Error>","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2560},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3368},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":389043,"byte_end":389046,"line_start":63,"line_end":63,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FileError<E> as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9916},"children":[],"decl_id":{"krate":2,"index":9917},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3369},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":389824,"byte_end":389838,"line_start":84,"line_end":84,"column_start":8,"column_end":22},"name":"safe_file_save","qualname":"::io::safe_file_save","value":"fn safe_file_save<P>(P, &[u8]) -> io::Result<()> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Safely save a file with the given contents, replacing the original if necessary.","sig":null,"attributes":[{"value":"/ Safely save a file with the given contents, replacing the original if necessary.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":389270,"byte_end":389354,"line_start":71,"line_end":71,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":389355,"byte_end":389358,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Works as follows:","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":389359,"byte_end":389380,"line_start":73,"line_end":73,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":389381,"byte_end":389384,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ 1. Writes the content to a `.tmp` file.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":389385,"byte_end":389428,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ 2. Renames the original file (if there is one) to `.backup`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":389429,"byte_end":389493,"line_start":76,"line_end":76,"column_start":1,"column_end":65}},{"value":"/ 3. Renames the `.tmp` file to the desired path file name.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":389494,"byte_end":389555,"line_start":77,"line_end":77,"column_start":1,"column_end":62}},{"value":"/ 4. Removes the `.backup` file.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":389556,"byte_end":389590,"line_start":78,"line_end":78,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":389591,"byte_end":389594,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ This should at least ensure that a `.backup` of the original file exists if something goes","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":389595,"byte_end":389689,"line_start":80,"line_end":80,"column_start":1,"column_end":95}},{"value":"/ wrong while writing the new one.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":389690,"byte_end":389726,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":389727,"byte_end":389730,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ This function also creates all necessary parent directories if they do not exist.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":389731,"byte_end":389816,"line_start":83,"line_end":83,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":3371},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":391553,"byte_end":391565,"line_start":142,"line_end":142,"column_start":8,"column_end":20},"name":"save_to_json","qualname":"::io::save_to_json","value":"fn save_to_json<P, T>(P, &T) -> Result<(), JsonFileError> where\nP: AsRef<Path>, T: serde::Serialize","parent":null,"children":[],"decl_id":null,"docs":" A generic function for safely saving a serializable type to a JSON file.\n","sig":null,"attributes":[{"value":"/ A generic function for safely saving a serializable type to a JSON file.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":391469,"byte_end":391545,"line_start":141,"line_end":141,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":3374},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":391847,"byte_end":391861,"line_start":153,"line_end":153,"column_start":8,"column_end":22},"name":"load_from_json","qualname":"::io::load_from_json","value":"fn load_from_json<'a, P, T>(P) -> Result<T, JsonFileError> where\nP: AsRef<Path>, T: for<'de> serde::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" A generic funtion for loading a type from a JSON file.\n","sig":null,"attributes":[{"value":"/ A generic funtion for loading a type from a JSON file.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":391781,"byte_end":391839,"line_start":152,"line_end":152,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":3379},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":392157,"byte_end":392169,"line_start":164,"line_end":164,"column_start":8,"column_end":20},"name":"save_to_toml","qualname":"::io::save_to_toml","value":"fn save_to_toml<P, T>(P, &T) -> Result<(), TomlFileSaveError> where\nP: AsRef<Path>, T: serde::Serialize","parent":null,"children":[],"decl_id":null,"docs":" A generic function for safely saving a serializable type to a TOML file.\n","sig":null,"attributes":[{"value":"/ A generic function for safely saving a serializable type to a TOML file.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":392073,"byte_end":392149,"line_start":163,"line_end":163,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":3382},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":392449,"byte_end":392463,"line_start":175,"line_end":175,"column_start":8,"column_end":22},"name":"load_from_toml","qualname":"::io::load_from_toml","value":"fn load_from_toml<'a, P, T>(P) -> Result<T, TomlFileLoadError> where\nP: AsRef<Path>, T: for<'de> serde::Deserialize","parent":null,"children":[],"decl_id":null,"docs":" A generic funtion for loading a type from a TOML file.\n","sig":null,"attributes":[{"value":"/ A generic funtion for loading a type from a TOML file.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":392383,"byte_end":392441,"line_start":174,"line_end":174,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":3387},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":392978,"byte_end":392986,"line_start":191,"line_end":191,"column_start":8,"column_end":16},"name":"walk_dir","qualname":"::io::walk_dir","value":"fn walk_dir<P>(P) -> walkdir::WalkDir where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to recursively walk the given directory and all its sub-directories.","sig":null,"attributes":[{"value":"/ Attempt to recursively walk the given directory and all its sub-directories.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":392801,"byte_end":392881,"line_start":188,"line_end":188,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":392882,"byte_end":392885,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ This function is shorthand for the `walkdir` crate's `WalkDir::new` constructor.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":392886,"byte_end":392970,"line_start":190,"line_end":190,"column_start":1,"column_end":85}}]},{"kind":"Mod","id":{"krate":0,"index":3389},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/noise.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"noise","qualname":"::noise","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/noise.rs","parent":null,"children":[{"krate":0,"index":3390}],"decl_id":null,"docs":" Items related to [noise generation](https://docs.rs/noise/0.5.1/noise/), API offered via the\n [noise-rs crate](https://docs.rs/noise).\n","sig":null,"attributes":[{"value":"/ Items related to [noise generation](https://docs.rs/noise/0.5.1/noise/), API offered via the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/noise.rs","byte_start":393082,"byte_end":393178,"line_start":1,"line_end":1,"column_start":1,"column_end":97}},{"value":"/ [noise-rs crate](https://docs.rs/noise).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/noise.rs","byte_start":393179,"byte_end":393223,"line_start":2,"line_end":2,"column_start":1,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":3391},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","parent":null,"children":[{"krate":0,"index":3392},{"krate":0,"index":3393},{"krate":0,"index":3396},{"krate":0,"index":3399},{"krate":0,"index":3402},{"krate":0,"index":3405},{"krate":0,"index":3406},{"krate":0,"index":3407},{"krate":0,"index":3410},{"krate":0,"index":3413},{"krate":0,"index":3416},{"krate":0,"index":3419},{"krate":0,"index":3422},{"krate":0,"index":3425},{"krate":0,"index":3428},{"krate":0,"index":3431},{"krate":0,"index":3434},{"krate":0,"index":3437},{"krate":0,"index":3438},{"krate":0,"index":3441},{"krate":0,"index":3444},{"krate":0,"index":3445},{"krate":0,"index":3448},{"krate":0,"index":3451},{"krate":0,"index":3454},{"krate":0,"index":3457},{"krate":0,"index":3460},{"krate":0,"index":3461},{"krate":0,"index":3464},{"krate":0,"index":3467},{"krate":0,"index":3470},{"krate":0,"index":3473},{"krate":0,"index":3474},{"krate":0,"index":3477},{"krate":0,"index":3480},{"krate":0,"index":3483},{"krate":0,"index":3486},{"krate":0,"index":3489},{"krate":0,"index":3492},{"krate":0,"index":3493},{"krate":0,"index":3496},{"krate":0,"index":3499},{"krate":0,"index":3500},{"krate":0,"index":3503},{"krate":0,"index":3506},{"krate":0,"index":3507},{"krate":0,"index":3510},{"krate":0,"index":3513}],"decl_id":null,"docs":" A collection of commonly used items that we recommend importing for ease of use.\n","sig":null,"attributes":[{"value":"/ A collection of commonly used items that we recommend importing for ease of use.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/prelude.rs","byte_start":393244,"byte_end":393328,"line_start":1,"line_end":1,"column_start":1,"column_end":85}}]},{"kind":"Mod","id":{"krate":0,"index":3514},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"state","qualname":"::state","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","parent":null,"children":[{"krate":0,"index":3515},{"krate":0,"index":3518},{"krate":0,"index":3521},{"krate":0,"index":3524},{"krate":0,"index":3527},{"krate":0,"index":3538},{"krate":0,"index":3555},{"krate":0,"index":3595}],"decl_id":null,"docs":" Small tracked parts of the application state. Includes **window**, **keys**, **mouse**, and\n **time** - each of which are stored in the **App**.\n","sig":null,"attributes":[{"value":"/ Small tracked parts of the application state. Includes **window**, **keys**, **mouse**, and","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":394216,"byte_end":394311,"line_start":1,"line_end":1,"column_start":1,"column_end":96}},{"value":"/ **time** - each of which are stored in the **App**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":394312,"byte_end":394367,"line_start":2,"line_end":2,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":3527},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":394537,"byte_end":394543,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"name":"window","qualname":"::state::window","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","parent":null,"children":[{"krate":0,"index":3528},{"krate":0,"index":3531},{"krate":0,"index":3534},{"krate":0,"index":5389},{"krate":0,"index":5391},{"krate":0,"index":5392},{"krate":0,"index":5394},{"krate":0,"index":5396},{"krate":0,"index":5397},{"krate":0,"index":3535}],"decl_id":null,"docs":" Tracked state related to the focused window.\n","sig":null,"attributes":[{"value":"/ Tracked state related to the focused window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":394480,"byte_end":394528,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":3534},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":394677,"byte_end":394690,"line_start":15,"line_end":15,"column_start":14,"column_end":27},"name":"DefaultScalar","qualname":"::state::window::DefaultScalar","value":"geom::scalar::Default","parent":null,"children":[],"decl_id":null,"docs":" The default scalar value used for window positioning and sizing.\n","sig":null,"attributes":[{"value":"/ The default scalar value used for window positioning and sizing.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":394595,"byte_end":394663,"line_start":14,"line_end":14,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":5389},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":394815,"byte_end":394821,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Window","qualname":"::state::window::Window","value":"Window { id }","parent":null,"children":[{"krate":0,"index":5390}],"decl_id":null,"docs":" State of the window in focus.\n","sig":null,"attributes":[{"value":"/ State of the window in focus.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":394721,"byte_end":394754,"line_start":17,"line_end":17,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":5390},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":394885,"byte_end":394887,"line_start":21,"line_end":21,"column_start":13,"column_end":15},"name":"id","qualname":"::state::window::Window::id","value":"std::option::Option<winit::window::WindowId>","parent":{"krate":0,"index":5389},"children":[],"decl_id":null,"docs":" ID of the window currently in focus.\n","sig":null,"attributes":[{"value":"/ ID of the window currently in focus.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":394832,"byte_end":394872,"line_start":20,"line_end":20,"column_start":9,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3536},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":394990,"byte_end":394993,"line_start":26,"line_end":26,"column_start":16,"column_end":19},"name":"new","qualname":"<Window>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initialise the window state.\n","sig":null,"attributes":[{"value":"/ Initialise the window state.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":394942,"byte_end":394974,"line_start":25,"line_end":25,"column_start":9,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3537},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":395163,"byte_end":395165,"line_start":31,"line_end":31,"column_start":16,"column_end":18},"name":"id","qualname":"<Window>::id","value":"fn id(&Self) -> window::Id","parent":null,"children":[],"decl_id":null,"docs":" Expects that there will be a `window::Id` (the common case) and **panic!**s otherwise.\n","sig":null,"attributes":[{"value":"/ Expects that there will be a `window::Id` (the common case) and **panic!**s otherwise.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":395057,"byte_end":395147,"line_start":30,"line_end":30,"column_start":9,"column_end":99}}]},{"kind":"Mod","id":{"krate":0,"index":3538},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":395288,"byte_end":395292,"line_start":38,"line_end":38,"column_start":9,"column_end":13},"name":"keys","qualname":"::state::keys","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","parent":null,"children":[{"krate":0,"index":3539},{"krate":0,"index":3540},{"krate":0,"index":3543},{"krate":0,"index":3546},{"krate":0,"index":3549},{"krate":0,"index":5400},{"krate":0,"index":5403},{"krate":0,"index":5405},{"krate":0,"index":5407},{"krate":0,"index":5409},{"krate":0,"index":5411},{"krate":0,"index":5413},{"krate":0,"index":5415},{"krate":0,"index":3552}],"decl_id":null,"docs":" Tracked state related to the keyboard.\n","sig":null,"attributes":[{"value":"/ Tracked state related to the keyboard.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":395237,"byte_end":395279,"line_start":37,"line_end":37,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":5400},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":395488,"byte_end":395492,"line_start":45,"line_end":45,"column_start":16,"column_end":20},"name":"Keys","qualname":"::state::keys::Keys","value":"Keys { mods, down }","parent":null,"children":[{"krate":0,"index":5401},{"krate":0,"index":5402}],"decl_id":null,"docs":" The state of the keyboard.\n","sig":null,"attributes":[{"value":"/ The state of the keyboard.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":395405,"byte_end":395435,"line_start":43,"line_end":43,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":5401},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":395578,"byte_end":395582,"line_start":47,"line_end":47,"column_start":13,"column_end":17},"name":"mods","qualname":"::state::keys::Keys::mods","value":"winit::event::ModifiersState","parent":{"krate":0,"index":5400},"children":[],"decl_id":null,"docs":" The state of the modifier keys as last indicated by winit.\n","sig":null,"attributes":[{"value":"/ The state of the modifier keys as last indicated by winit.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":395503,"byte_end":395565,"line_start":46,"line_end":46,"column_start":9,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":5402},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":395692,"byte_end":395696,"line_start":49,"line_end":49,"column_start":13,"column_end":17},"name":"down","qualname":"::state::keys::Keys::down","value":"state::keys::Down","parent":{"krate":0,"index":5400},"children":[],"decl_id":null,"docs":" The state of all keys as tracked via the nannou App event handling.\n","sig":null,"attributes":[{"value":"/ The state of all keys as tracked via the nannou App event handling.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":395608,"byte_end":395679,"line_start":48,"line_end":48,"column_start":9,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":5409},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":395815,"byte_end":395819,"line_start":54,"line_end":54,"column_start":16,"column_end":20},"name":"Down","qualname":"::state::keys::Down","value":"Down {  }","parent":null,"children":[{"krate":0,"index":5410}],"decl_id":null,"docs":" The set of keys that are currently pressed.\n","sig":null,"attributes":[{"value":"/ The set of keys that are currently pressed.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":395715,"byte_end":395762,"line_start":52,"line_end":52,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3554},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":395941,"byte_end":395946,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"deref","qualname":"<Down as std::ops::Deref>::deref","value":"fn deref(&Self) -> &Self::Target","parent":{"krate":2,"index":3369},"children":[],"decl_id":{"krate":2,"index":3371},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3555},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":396063,"byte_end":396068,"line_start":67,"line_end":67,"column_start":9,"column_end":14},"name":"mouse","qualname":"::state::mouse","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","parent":null,"children":[{"krate":0,"index":3556},{"krate":0,"index":3559},{"krate":0,"index":3562},{"krate":0,"index":3565},{"krate":0,"index":5417},{"krate":0,"index":5422},{"krate":0,"index":5424},{"krate":0,"index":5426},{"krate":0,"index":5427},{"krate":0,"index":5430},{"krate":0,"index":5436},{"krate":0,"index":5437},{"krate":0,"index":5439},{"krate":0,"index":5441},{"krate":0,"index":5442},{"krate":0,"index":5445},{"krate":0,"index":5447},{"krate":0,"index":5449},{"krate":0,"index":5451},{"krate":0,"index":5452},{"krate":0,"index":3568},{"krate":0,"index":3571},{"krate":0,"index":3576},{"krate":0,"index":3590},{"krate":0,"index":3593}],"decl_id":null,"docs":" Tracked state related to the mouse.\n","sig":null,"attributes":[{"value":"/ Tracked state related to the mouse.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":396015,"byte_end":396054,"line_start":66,"line_end":66,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":5417},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":396343,"byte_end":396348,"line_start":77,"line_end":77,"column_start":16,"column_end":21},"name":"Mouse","qualname":"::state::mouse::Mouse","value":"Mouse { window, x, y, buttons }","parent":null,"children":[{"krate":0,"index":5418},{"krate":0,"index":5419},{"krate":0,"index":5420},{"krate":0,"index":5421}],"decl_id":null,"docs":" The state of the `Mouse` at a single moment in time.\n","sig":null,"attributes":[{"value":"/ The state of the `Mouse` at a single moment in time.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":396232,"byte_end":396288,"line_start":75,"line_end":75,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":5418},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":396421,"byte_end":396427,"line_start":79,"line_end":79,"column_start":13,"column_end":19},"name":"window","qualname":"::state::mouse::Mouse::window","value":"std::option::Option<winit::window::WindowId>","parent":{"krate":0,"index":5417},"children":[],"decl_id":null,"docs":" The ID of the last window currently in focus.\n","sig":null,"attributes":[{"value":"/ The ID of the last window currently in focus.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":396359,"byte_end":396408,"line_start":78,"line_end":78,"column_start":9,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":5419},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":396522,"byte_end":396523,"line_start":81,"line_end":81,"column_start":13,"column_end":14},"name":"x","qualname":"::state::mouse::Mouse::x","value":"f32","parent":{"krate":0,"index":5417},"children":[],"decl_id":null,"docs":" *x* position relative to the middle of `window`.\n","sig":null,"attributes":[{"value":"/ *x* position relative to the middle of `window`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":396457,"byte_end":396509,"line_start":80,"line_end":80,"column_start":9,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":5420},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":396603,"byte_end":396604,"line_start":83,"line_end":83,"column_start":13,"column_end":14},"name":"y","qualname":"::state::mouse::Mouse::y","value":"f32","parent":{"krate":0,"index":5417},"children":[],"decl_id":null,"docs":" *y* position relative to the middle of `window`.\n","sig":null,"attributes":[{"value":"/ *y* position relative to the middle of `window`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":396538,"byte_end":396590,"line_start":82,"line_end":82,"column_start":9,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":5421},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":396684,"byte_end":396691,"line_start":85,"line_end":85,"column_start":13,"column_end":20},"name":"buttons","qualname":"::state::mouse::Mouse::buttons","value":"state::mouse::ButtonMap","parent":{"krate":0,"index":5417},"children":[],"decl_id":null,"docs":" A map describing the state of each mouse button.\n","sig":null,"attributes":[{"value":"/ A map describing the state of each mouse button.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":396619,"byte_end":396671,"line_start":84,"line_end":84,"column_start":9,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5431},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":396883,"byte_end":396885,"line_start":92,"line_end":92,"column_start":9,"column_end":11},"name":"Up","qualname":"::state::mouse::ButtonPosition::Up","value":"ButtonPosition::Up","parent":{"krate":0,"index":5430},"children":[],"decl_id":null,"docs":" The button is up (i.e. unpressed).\n","sig":null,"attributes":[{"value":"/ The button is up (i.e. unpressed).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":396836,"byte_end":396874,"line_start":91,"line_end":91,"column_start":9,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5433},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":396981,"byte_end":396985,"line_start":94,"line_end":94,"column_start":9,"column_end":13},"name":"Down","qualname":"::state::mouse::ButtonPosition::Down","value":"ButtonPosition::Down(Point2)","parent":{"krate":0,"index":5430},"children":[],"decl_id":null,"docs":" The button is down and was originally pressed down at the given `Point2`.\n","sig":null,"attributes":[{"value":"/ The button is down and was originally pressed down at the given `Point2`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":396895,"byte_end":396972,"line_start":93,"line_end":93,"column_start":9,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":5435},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":396986,"byte_end":396992,"line_start":94,"line_end":94,"column_start":14,"column_end":20},"name":"0","qualname":"::state::mouse::ButtonPosition::Down::0","value":"nannou_core::geom::Vec2","parent":{"krate":0,"index":5433},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5430},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":396811,"byte_end":396825,"line_start":90,"line_end":90,"column_start":14,"column_end":28},"name":"ButtonPosition","qualname":"::state::mouse::ButtonPosition","value":"enum ButtonPosition { Up, Down(Point2), }","parent":null,"children":[{"krate":0,"index":5431},{"krate":0,"index":5433}],"decl_id":null,"docs":" Whether the button is up or down.\n","sig":null,"attributes":[{"value":"/ Whether the button is up or down.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":396715,"byte_end":396752,"line_start":88,"line_end":88,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5445},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":397212,"byte_end":397221,"line_start":101,"line_end":101,"column_start":16,"column_end":25},"name":"ButtonMap","qualname":"::state::mouse::ButtonMap","value":"ButtonMap {  }","parent":null,"children":[{"krate":0,"index":5446}],"decl_id":null,"docs":" Stores the state of all mouse buttons.","sig":null,"attributes":[{"value":"/ Stores the state of all mouse buttons.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":397006,"byte_end":397048,"line_start":97,"line_end":97,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":397053,"byte_end":397056,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ If the mouse button is down, it stores the position of the mouse when the button was pressed","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":397061,"byte_end":397157,"line_start":99,"line_end":99,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":3569},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":397358,"byte_end":397361,"line_start":107,"line_end":107,"column_start":16,"column_end":19},"name":"new","qualname":"<Mouse>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new default `Mouse`.\n","sig":null,"attributes":[{"value":"/ Construct a new default `Mouse`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":397306,"byte_end":397342,"line_start":106,"line_end":106,"column_start":9,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3570},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":397641,"byte_end":397649,"line_start":117,"line_end":117,"column_start":16,"column_end":24},"name":"position","qualname":"<Mouse>::position","value":"fn position(&Self) -> Point2","parent":null,"children":[],"decl_id":null,"docs":" The position of the mouse relative to the middle of the window in focus..\n","sig":null,"attributes":[{"value":"/ The position of the mouse relative to the middle of the window in focus..","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":397548,"byte_end":397625,"line_start":116,"line_end":116,"column_start":9,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":3572},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":397863,"byte_end":397874,"line_start":124,"line_end":124,"column_start":16,"column_end":27},"name":"relative_to","qualname":"<ButtonPosition>::relative_to","value":"fn relative_to(Self, Point2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If the mouse button is down, return a new one with position relative to the given `xy`.\n","sig":null,"attributes":[{"value":"/ If the mouse button is down, return a new one with position relative to the given `xy`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":397756,"byte_end":397847,"line_start":123,"line_end":123,"column_start":9,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":3573},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":398227,"byte_end":398234,"line_start":135,"line_end":135,"column_start":16,"column_end":23},"name":"is_down","qualname":"<ButtonPosition>::is_down","value":"fn is_down(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the `ButtonPosition` down.\n","sig":null,"attributes":[{"value":"/ Is the `ButtonPosition` down.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":398178,"byte_end":398211,"line_start":134,"line_end":134,"column_start":9,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3574},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":398435,"byte_end":398440,"line_start":143,"line_end":143,"column_start":16,"column_end":21},"name":"is_up","qualname":"<ButtonPosition>::is_up","value":"fn is_up(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the `ButtonPosition` up.\n","sig":null,"attributes":[{"value":"/ Is the `ButtonPosition` up.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":398388,"byte_end":398419,"line_start":142,"line_end":142,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3575},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":398662,"byte_end":398669,"line_start":151,"line_end":151,"column_start":16,"column_end":23},"name":"if_down","qualname":"<ButtonPosition>::if_down","value":"fn if_down(&Self) -> Option<Point2>","parent":null,"children":[],"decl_id":null,"docs":" Returns the position at which the button was pressed.\n","sig":null,"attributes":[{"value":"/ Returns the position at which the button was pressed.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":398589,"byte_end":398646,"line_start":150,"line_end":150,"column_start":9,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3577},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":398935,"byte_end":398938,"line_start":161,"line_end":161,"column_start":16,"column_end":19},"name":"new","qualname":"<ButtonMap>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new button map with all buttons unpressed\n","sig":null,"attributes":[{"value":"/ Returns a new button map with all buttons unpressed","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":398864,"byte_end":398919,"line_start":160,"line_end":160,"column_start":9,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3578},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":399142,"byte_end":399153,"line_start":168,"line_end":168,"column_start":16,"column_end":27},"name":"relative_to","qualname":"<ButtonMap>::relative_to","value":"fn relative_to(Self, Point2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the ButtonMap relative to the given `Point2`\n","sig":null,"attributes":[{"value":"/ Returns a copy of the ButtonMap relative to the given `Point2`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":399060,"byte_end":399126,"line_start":167,"line_end":167,"column_start":9,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3580},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":399486,"byte_end":399490,"line_start":179,"line_end":179,"column_start":16,"column_end":20},"name":"left","qualname":"<ButtonMap>::left","value":"fn left(&Self) -> &ButtonPosition","parent":null,"children":[],"decl_id":null,"docs":" The state of the left mouse button.\n","sig":null,"attributes":[{"value":"/ The state of the left mouse button.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":399431,"byte_end":399470,"line_start":178,"line_end":178,"column_start":9,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3581},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":399627,"byte_end":399633,"line_start":184,"line_end":184,"column_start":16,"column_end":22},"name":"middle","qualname":"<ButtonMap>::middle","value":"fn middle(&Self) -> &ButtonPosition","parent":null,"children":[],"decl_id":null,"docs":" The state of the middle mouse button.\n","sig":null,"attributes":[{"value":"/ The state of the middle mouse button.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":399570,"byte_end":399611,"line_start":183,"line_end":183,"column_start":9,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3582},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":399771,"byte_end":399776,"line_start":189,"line_end":189,"column_start":16,"column_end":21},"name":"right","qualname":"<ButtonMap>::right","value":"fn right(&Self) -> &ButtonPosition","parent":null,"children":[],"decl_id":null,"docs":" The state of the right mouse button.\n","sig":null,"attributes":[{"value":"/ The state of the right mouse button.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":399715,"byte_end":399755,"line_start":188,"line_end":188,"column_start":9,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3583},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":399918,"byte_end":399923,"line_start":194,"line_end":194,"column_start":16,"column_end":21},"name":"press","qualname":"<ButtonMap>::press","value":"fn press(&mut Self, Button, Point2)","parent":null,"children":[],"decl_id":null,"docs":" Sets the `Button` in the `Down` position.\n","sig":null,"attributes":[{"value":"/ Sets the `Button` in the `Down` position.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":399857,"byte_end":399902,"line_start":193,"line_end":193,"column_start":9,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3584},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":400097,"byte_end":400104,"line_start":199,"line_end":199,"column_start":16,"column_end":23},"name":"release","qualname":"<ButtonMap>::release","value":"fn release(&mut Self, Button)","parent":null,"children":[],"decl_id":null,"docs":" Set's the `Button` in the `Up` position.\n","sig":null,"attributes":[{"value":"/ Set's the `Button` in the `Up` position.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":400037,"byte_end":400081,"line_start":198,"line_end":198,"column_start":9,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3585},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":400341,"byte_end":400348,"line_start":205,"line_end":205,"column_start":16,"column_end":23},"name":"pressed","qualname":"<ButtonMap>::pressed","value":"fn pressed<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" An iterator yielding all pressed mouse buttons along with the location at which they\n were originally pressed.\n","sig":null,"attributes":[{"value":"/ An iterator yielding all pressed mouse buttons along with the location at which they","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":400200,"byte_end":400288,"line_start":203,"line_end":203,"column_start":9,"column_end":97}},{"value":"/ were originally pressed.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":400297,"byte_end":400325,"line_start":204,"line_end":204,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3592},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":400670,"byte_end":400675,"line_start":214,"line_end":214,"column_start":12,"column_end":17},"name":"index","qualname":"<ButtonMap as std::ops::Index>::index","value":"fn index(&Self, Button) -> &Self::Output","parent":{"krate":2,"index":3454},"children":[],"decl_id":{"krate":2,"index":3457},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3594},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":400867,"byte_end":400876,"line_start":220,"line_end":220,"column_start":12,"column_end":21},"name":"index_mut","qualname":"<ButtonMap as std::ops::IndexMut>::index_mut","value":"fn index_mut(&mut Self, Button) -> &mut Self::Output","parent":{"krate":2,"index":3458},"children":[],"decl_id":{"krate":2,"index":3460},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3595},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":401065,"byte_end":401069,"line_start":227,"line_end":227,"column_start":9,"column_end":13},"name":"time","qualname":"::state::time","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","parent":null,"children":[{"krate":0,"index":5455},{"krate":0,"index":5458},{"krate":0,"index":5459},{"krate":0,"index":5461},{"krate":0,"index":5463},{"krate":0,"index":5465},{"krate":0,"index":5466},{"krate":0,"index":5468},{"krate":0,"index":5469},{"krate":0,"index":5472},{"krate":0,"index":3596}],"decl_id":null,"docs":" Tracked durations related to the App.\n","sig":null,"attributes":[{"value":"/ Tracked durations related to the App.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":401015,"byte_end":401056,"line_start":226,"line_end":226,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5455},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":401197,"byte_end":401201,"line_start":230,"line_end":230,"column_start":16,"column_end":20},"name":"Time","qualname":"::state::time::Time","value":"Time { since_start, since_prev_update }","parent":null,"children":[{"krate":0,"index":5456},{"krate":0,"index":5457}],"decl_id":null,"docs":" The state of time tracked by the App.\n","sig":null,"attributes":[{"value":"/ The state of time tracked by the App.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":401076,"byte_end":401117,"line_start":228,"line_end":228,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":5456},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":401272,"byte_end":401283,"line_start":232,"line_end":232,"column_start":13,"column_end":24},"name":"since_start","qualname":"::state::time::Time::since_start","value":"instant::Duration","parent":{"krate":0,"index":5455},"children":[],"decl_id":null,"docs":" The duration since the app started running.\n","sig":null,"attributes":[{"value":"/ The duration since the app started running.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":401212,"byte_end":401259,"line_start":231,"line_end":231,"column_start":9,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":5457},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":401370,"byte_end":401387,"line_start":234,"line_end":234,"column_start":13,"column_end":30},"name":"since_prev_update","qualname":"::state::time::Time::since_prev_update","value":"instant::Duration","parent":{"krate":0,"index":5455},"children":[],"decl_id":null,"docs":" The duration since the previous update.\n","sig":null,"attributes":[{"value":"/ The duration since the previous update.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":401314,"byte_end":401357,"line_start":233,"line_end":233,"column_start":9,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3597},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":401540,"byte_end":401558,"line_start":239,"line_end":239,"column_start":16,"column_end":34},"name":"updates_per_second","qualname":"<Time>::updates_per_second","value":"fn updates_per_second(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The number of updates per second if `since_prev_update` were to remain constant\n","sig":null,"attributes":[{"value":"/ The number of updates per second if `since_prev_update` were to remain constant","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":401441,"byte_end":401524,"line_start":238,"line_end":238,"column_start":9,"column_end":92}}]},{"kind":"Mod","id":{"krate":0,"index":3598},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"text","qualname":"::text","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","parent":null,"children":[{"krate":0,"index":3599},{"krate":0,"index":3682},{"krate":0,"index":3745},{"krate":0,"index":3854},{"krate":0,"index":3899},{"krate":0,"index":3996},{"krate":0,"index":4016},{"krate":0,"index":4019},{"krate":0,"index":4022},{"krate":0,"index":4023},{"krate":0,"index":4026},{"krate":0,"index":4027},{"krate":0,"index":4029},{"krate":0,"index":4032},{"krate":0,"index":4035},{"krate":0,"index":4038},{"krate":0,"index":4041},{"krate":0,"index":4044},{"krate":0,"index":4047},{"krate":0,"index":4050},{"krate":0,"index":4051},{"krate":0,"index":4052},{"krate":0,"index":4053},{"krate":0,"index":4054},{"krate":0,"index":4055},{"krate":0,"index":4056},{"krate":0,"index":5638},{"krate":0,"index":5645},{"krate":0,"index":5648},{"krate":0,"index":5653},{"krate":0,"index":4060},{"krate":0,"index":4062},{"krate":0,"index":4064},{"krate":0,"index":5657},{"krate":0,"index":5661},{"krate":0,"index":4066},{"krate":0,"index":4068},{"krate":0,"index":4070},{"krate":0,"index":5664},{"krate":0,"index":5671},{"krate":0,"index":5672},{"krate":0,"index":5674},{"krate":0,"index":5676},{"krate":0,"index":5679},{"krate":0,"index":5680},{"krate":0,"index":5682},{"krate":0,"index":5683},{"krate":0,"index":5685},{"krate":0,"index":5687},{"krate":0,"index":5689},{"krate":0,"index":5696},{"krate":0,"index":5697},{"krate":0,"index":5699},{"krate":0,"index":5701},{"krate":0,"index":5702},{"krate":0,"index":5704},{"krate":0,"index":5705},{"krate":0,"index":5707},{"krate":0,"index":5712},{"krate":0,"index":5713},{"krate":0,"index":5715},{"krate":0,"index":5717},{"krate":0,"index":5718},{"krate":0,"index":4072},{"krate":0,"index":4075},{"krate":0,"index":4078},{"krate":0,"index":4080},{"krate":0,"index":4118},{"krate":0,"index":4155},{"krate":0,"index":4161},{"krate":0,"index":4166},{"krate":0,"index":4167},{"krate":0,"index":4168},{"krate":0,"index":4170},{"krate":0,"index":4171},{"krate":0,"index":4179},{"krate":0,"index":4180},{"krate":0,"index":4181},{"krate":0,"index":4182},{"krate":0,"index":4183}],"decl_id":null,"docs":" Text layout logic.","sig":null,"attributes":[{"value":"/ Text layout logic.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":401876,"byte_end":401898,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":401899,"byte_end":401902,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Currently, this crate is used primarily by the `draw.text()` API but will also play an","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":401903,"byte_end":401993,"line_start":3,"line_end":3,"column_start":1,"column_end":91}},{"value":"/ important role in future GUI work.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":401994,"byte_end":402032,"line_start":4,"line_end":4,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":3599},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cursor","qualname":"::text::cursor","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","parent":null,"children":[{"krate":0,"index":3600},{"krate":0,"index":3601},{"krate":0,"index":3604},{"krate":0,"index":3607},{"krate":0,"index":3608},{"krate":0,"index":3611},{"krate":0,"index":3614},{"krate":0,"index":3617},{"krate":0,"index":5475},{"krate":0,"index":5478},{"krate":0,"index":5479},{"krate":0,"index":5481},{"krate":0,"index":5483},{"krate":0,"index":5484},{"krate":0,"index":5487},{"krate":0,"index":5488},{"krate":0,"index":5490},{"krate":0,"index":5492},{"krate":0,"index":5494},{"krate":0,"index":5501},{"krate":0,"index":5505},{"krate":0,"index":5508},{"krate":0,"index":3620},{"krate":0,"index":3625},{"krate":0,"index":3643},{"krate":0,"index":3646},{"krate":0,"index":3648},{"krate":0,"index":3650},{"krate":0,"index":3653},{"krate":0,"index":3657},{"krate":0,"index":3661},{"krate":0,"index":3663},{"krate":0,"index":3669},{"krate":0,"index":3673}],"decl_id":null,"docs":" Logic related to the positioning of the cursor within text.\n","sig":null,"attributes":[{"value":"/ Logic related to the positioning of the cursor within text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":424532,"byte_end":424595,"line_start":1,"line_end":1,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":5475},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":424822,"byte_end":424827,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Index","qualname":"::text::cursor::Index","value":"Index { line, char }","parent":null,"children":[{"krate":0,"index":5476},{"krate":0,"index":5477}],"decl_id":null,"docs":" An index representing the position of a cursor within some text.\n","sig":null,"attributes":[{"value":"/ An index representing the position of a cursor within some text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":424680,"byte_end":424748,"line_start":6,"line_end":6,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":5476},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":424908,"byte_end":424912,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"name":"line","qualname":"::text::cursor::Index::line","value":"usize","parent":{"krate":0,"index":5475},"children":[],"decl_id":null,"docs":" The byte index of the line upon which the cursor is situated.\n","sig":null,"attributes":[{"value":"/ The byte index of the line upon which the cursor is situated.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":424834,"byte_end":424899,"line_start":9,"line_end":9,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":5477},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":425143,"byte_end":425147,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"char","qualname":"::text::cursor::Index::char","value":"usize","parent":{"krate":0,"index":5475},"children":[],"decl_id":null,"docs":" The index within all possible cursor positions for the line.","sig":null,"attributes":[{"value":"/ The index within all possible cursor positions for the line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":424925,"byte_end":424989,"line_start":11,"line_end":11,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":424994,"byte_end":424997,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ For example, for the line `foo`, a `char` of `1` would indicate the cursor's position","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":425002,"byte_end":425091,"line_start":13,"line_end":13,"column_start":5,"column_end":94}},{"value":"/ as `f|oo` where `|` is the cursor.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":425096,"byte_end":425134,"line_start":14,"line_end":14,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":5494},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":425448,"byte_end":425458,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"name":"XysPerLine","qualname":"::text::cursor::XysPerLine","value":"XysPerLine {  }","parent":null,"children":[{"krate":0,"index":5497},{"krate":0,"index":5498},{"krate":0,"index":5499},{"krate":0,"index":5500}],"decl_id":null,"docs":" Every possible cursor position within each line of text yielded by the given iterator.","sig":null,"attributes":[{"value":"/ Every possible cursor position within each line of text yielded by the given iterator.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":425159,"byte_end":425249,"line_start":18,"line_end":18,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":425250,"byte_end":425253,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Yields `(xs, y_range)`, where `y_range` is the `Range` occupied by the line across the *y*","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":425254,"byte_end":425348,"line_start":20,"line_end":20,"column_start":1,"column_end":95}},{"value":"/ axis and `xs` is every possible cursor position along the *x* axis","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":425349,"byte_end":425419,"line_start":21,"line_end":21,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":5505},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":426111,"byte_end":426129,"line_start":40,"line_end":40,"column_start":12,"column_end":30},"name":"XysPerLineFromText","qualname":"::text::cursor::XysPerLineFromText","value":"XysPerLineFromText {  }","parent":null,"children":[{"krate":0,"index":5507}],"decl_id":null,"docs":" Similarly to `XysPerLine`, yields every possible cursor position within each line of text\n yielded by the given iterator.","sig":null,"attributes":[{"value":"/ Similarly to `XysPerLine`, yields every possible cursor position within each line of text","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":425566,"byte_end":425659,"line_start":30,"line_end":30,"column_start":1,"column_end":94}},{"value":"/ yielded by the given iterator.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":425660,"byte_end":425694,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":425695,"byte_end":425698,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Rather than taking an iterator type yielding lines and positioning data, this method","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":425699,"byte_end":425787,"line_start":33,"line_end":33,"column_start":1,"column_end":89}},{"value":"/ constructs its own iterator to do so internally, saving some boilerplate involved in common","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":425788,"byte_end":425883,"line_start":34,"line_end":34,"column_start":1,"column_end":96}},{"value":"/ `XysPerLine` use cases.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":425884,"byte_end":425911,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":425912,"byte_end":425915,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Yields `(xs, y_range)`, where `y_range` is the `Range` occupied by the line across the *y*","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":425916,"byte_end":426010,"line_start":37,"line_end":37,"column_start":1,"column_end":95}},{"value":"/ axis and `xs` is every possible cursor position along the *x* axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":426011,"byte_end":426082,"line_start":38,"line_end":38,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3620},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":426537,"byte_end":426539,"line_start":53,"line_end":53,"column_start":12,"column_end":14},"name":"Xs","qualname":"::text::cursor::Xs","value":"Xs {  }","parent":null,"children":[{"krate":0,"index":3623},{"krate":0,"index":3624}],"decl_id":null,"docs":" Each possible cursor position along the *x* axis within a line of text.","sig":null,"attributes":[{"value":"/ Each possible cursor position along the *x* axis within a line of text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":426384,"byte_end":426459,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":426460,"byte_end":426463,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ `Xs` iterators are produced by the `XysPerLine` iterator.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":426464,"byte_end":426525,"line_start":52,"line_end":52,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3626},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":427174,"byte_end":427193,"line_start":68,"line_end":68,"column_start":12,"column_end":31},"name":"previous_word_start","qualname":"<Index>::previous_word_start","value":"fn previous_word_start<I>(Self, &str, I) -> Option<Self> where\nI: Iterator<Item = text::line::Info>","parent":null,"children":[],"decl_id":null,"docs":" The cursor index of the beginning of the word (block of non-whitespace) before `self`.","sig":null,"attributes":[{"value":"/ The cursor index of the beginning of the word (block of non-whitespace) before `self`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":426636,"byte_end":426726,"line_start":59,"line_end":59,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":426731,"byte_end":426734,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ If `self` is at the beginning of the line, call previous, which returns the last","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":426739,"byte_end":426823,"line_start":61,"line_end":61,"column_start":5,"column_end":89}},{"value":"/ index position of the previous line, or None if it's the first line","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":426828,"byte_end":426899,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":426904,"byte_end":426907,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ If `self` points to whitespace, skip past that whitespace, then return the index of","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":426912,"byte_end":426999,"line_start":64,"line_end":64,"column_start":5,"column_end":92}},{"value":"/ the start of the word that precedes the whitespace","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":427004,"byte_end":427058,"line_start":65,"line_end":65,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":427063,"byte_end":427066,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ If `self` is in the middle or end of a word, return the index of the start of that word","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":427071,"byte_end":427162,"line_start":67,"line_end":67,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":3629},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":428991,"byte_end":429004,"line_start":113,"line_end":113,"column_start":12,"column_end":25},"name":"next_word_end","qualname":"<Index>::next_word_end","value":"fn next_word_end<I>(Self, &str, I) -> Option<Self> where I: Iterator<Item =\ntext::line::Info>","parent":null,"children":[],"decl_id":null,"docs":" The cursor index of the end of the first word (block of non-whitespace) after `self`.","sig":null,"attributes":[{"value":"/ The cursor index of the end of the first word (block of non-whitespace) after `self`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":428437,"byte_end":428526,"line_start":102,"line_end":102,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":428531,"byte_end":428534,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ If `self` is at the end of the text, this returns `None`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":428539,"byte_end":428600,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":428605,"byte_end":428608,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ If `self` is at the end of a line other than the last, this returns the first index of","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":428613,"byte_end":428703,"line_start":106,"line_end":106,"column_start":5,"column_end":95}},{"value":"/ the next line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":428708,"byte_end":428726,"line_start":107,"line_end":107,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":428731,"byte_end":428734,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ If `self` points to whitespace, skip past that whitespace, then return the index of","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":428739,"byte_end":428826,"line_start":109,"line_end":109,"column_start":5,"column_end":92}},{"value":"/ the end of the word after the whitespace","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":428831,"byte_end":428875,"line_start":110,"line_end":110,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":428880,"byte_end":428883,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ If `self` is in the middle or start of a word, return the index of the end of that word","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":428888,"byte_end":428979,"line_start":112,"line_end":112,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":3633},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":430746,"byte_end":430754,"line_start":159,"line_end":159,"column_start":12,"column_end":20},"name":"previous","qualname":"<Index>::previous","value":"fn previous<I>(Self, I) -> Option<Self> where I: Iterator<Item =\ntext::line::Info>","parent":null,"children":[],"decl_id":null,"docs":" The cursor index that comes before `self`.","sig":null,"attributes":[{"value":"/ The cursor index that comes before `self`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":430322,"byte_end":430368,"line_start":150,"line_end":150,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":430373,"byte_end":430376,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If `self` is at the beginning of the text, this returns `None`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":430381,"byte_end":430448,"line_start":152,"line_end":152,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":430453,"byte_end":430456,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ If `self` is at the beginning of a line other than the first, this returns the last","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":430461,"byte_end":430548,"line_start":154,"line_end":154,"column_start":5,"column_end":92}},{"value":"/ index position of the previous line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":430553,"byte_end":430593,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":430598,"byte_end":430601,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ If `self` is a position other than the start of a line, it will return the position","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":430606,"byte_end":430693,"line_start":157,"line_end":157,"column_start":5,"column_end":92}},{"value":"/ that is immediately to the left.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":430698,"byte_end":430734,"line_start":158,"line_end":158,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3637},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":432045,"byte_end":432049,"line_start":199,"line_end":199,"column_start":12,"column_end":16},"name":"next","qualname":"<Index>::next","value":"fn next<I>(Self, I) -> Option<Self> where I: Iterator<Item = text::line::Info>","parent":null,"children":[],"decl_id":null,"docs":" The cursor index that follows `self`.","sig":null,"attributes":[{"value":"/ The cursor index that follows `self`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":431652,"byte_end":431693,"line_start":190,"line_end":190,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":431698,"byte_end":431701,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ If `self` is at the end of the text, this returns `None`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":431706,"byte_end":431767,"line_start":192,"line_end":192,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":431772,"byte_end":431775,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ If `self` is at the end of a line other than the last, this returns the first index of","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":431780,"byte_end":431870,"line_start":194,"line_end":194,"column_start":5,"column_end":95}},{"value":"/ the next line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":431875,"byte_end":431893,"line_start":195,"line_end":195,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":431898,"byte_end":431901,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ If `self` is a position other than the end of a line, it will return the position that","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":431906,"byte_end":431996,"line_start":197,"line_end":197,"column_start":5,"column_end":95}},{"value":"/ is immediately to the right.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":432001,"byte_end":432033,"line_start":198,"line_end":198,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3641},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":432848,"byte_end":432862,"line_start":225,"line_end":225,"column_start":12,"column_end":26},"name":"clamp_to_lines","qualname":"<Index>::clamp_to_lines","value":"fn clamp_to_lines<I>(Self, I) -> Self where I: Iterator<Item =\ntext::line::Info>","parent":null,"children":[],"decl_id":null,"docs":" Clamps `self` to the given lines.","sig":null,"attributes":[{"value":"/ Clamps `self` to the given lines.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":432602,"byte_end":432639,"line_start":219,"line_end":219,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":432644,"byte_end":432647,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ If `self` would lie after the end of the last line, return the index at the end of the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":432652,"byte_end":432742,"line_start":221,"line_end":221,"column_start":5,"column_end":95}},{"value":"/ last line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":432747,"byte_end":432761,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":432766,"byte_end":432769,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ If `line_infos` is empty, returns cursor at line=0 char=0.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":432774,"byte_end":432836,"line_start":224,"line_end":224,"column_start":5,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":3643},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":433842,"byte_end":433854,"line_start":255,"line_end":255,"column_start":8,"column_end":20},"name":"xys_per_line","qualname":"::text::cursor::xys_per_line","value":"fn xys_per_line<'a, I>(I, &'a text::Font, &'a str, FontSize) -> XysPerLine","parent":null,"children":[],"decl_id":null,"docs":" Every possible cursor position within each line of text yielded by the given iterator.","sig":null,"attributes":[{"value":"/ Every possible cursor position within each line of text yielded by the given iterator.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":433574,"byte_end":433664,"line_start":251,"line_end":251,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":433665,"byte_end":433668,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ Yields `(xs, y_range)`, where `y_range` is the `Range` occupied by the line across the *y*","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":433669,"byte_end":433763,"line_start":253,"line_end":253,"column_start":1,"column_end":95}},{"value":"/ axis and `xs` is every possible cursor position along the *x* axis","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":433764,"byte_end":433834,"line_start":254,"line_end":254,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":3646},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":434680,"byte_end":434702,"line_start":278,"line_end":278,"column_start":8,"column_end":30},"name":"xys_per_line_from_text","qualname":"::text::cursor::xys_per_line_from_text","value":"fn xys_per_line_from_text<'a>(&'a str, &'a [text::line::Info], &'a text::Font,\nFontSize, Scalar, text::Justify, Scalar) -> XysPerLineFromText","parent":null,"children":[],"decl_id":null,"docs":" Similarly to `xys_per_line`, this produces an iterator yielding every possible cursor\n position within each line of text yielded by the given iterator.","sig":null,"attributes":[{"value":"/ Similarly to `xys_per_line`, this produces an iterator yielding every possible cursor","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":434123,"byte_end":434212,"line_start":269,"line_end":269,"column_start":1,"column_end":90}},{"value":"/ position within each line of text yielded by the given iterator.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":434213,"byte_end":434281,"line_start":270,"line_end":270,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":434282,"byte_end":434285,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ Rather than taking an iterator yielding lines and their positioning data, this method","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":434286,"byte_end":434375,"line_start":272,"line_end":272,"column_start":1,"column_end":90}},{"value":"/ constructs its own iterator to do so internally, saving some boilerplate involved in common","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":434376,"byte_end":434471,"line_start":273,"line_end":273,"column_start":1,"column_end":96}},{"value":"/ `xys_per_line` use cases.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":434472,"byte_end":434501,"line_start":274,"line_end":274,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":434502,"byte_end":434505,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ Yields `(xs, y_range)`, where `y_range` is the `Range` occupied by the line across the *y*","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":434506,"byte_end":434600,"line_start":276,"line_end":276,"column_start":1,"column_end":95}},{"value":"/ axis and `xs` is every possible cursor position along the *x* axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":434601,"byte_end":434672,"line_start":277,"line_end":277,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":3648},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":435413,"byte_end":435430,"line_start":303,"line_end":303,"column_start":8,"column_end":25},"name":"index_before_char","qualname":"::text::cursor::index_before_char","value":"fn index_before_char<I>(I, usize) -> Option<Index> where I: Iterator<Item =\ntext::line::Info>","parent":null,"children":[],"decl_id":null,"docs":" Convert the given character index into a cursor `Index`.\n","sig":null,"attributes":[{"value":"/ Convert the given character index into a cursor `Index`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":435345,"byte_end":435405,"line_start":302,"line_end":302,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":3650},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":435972,"byte_end":435977,"line_start":321,"line_end":321,"column_start":8,"column_end":13},"name":"xy_at","qualname":"::text::cursor::xy_at","value":"fn xy_at<'a, I>(I, Index) -> Option<(Scalar, Range)> where I: Iterator<Item =\n(Xs, Range)>","parent":null,"children":[],"decl_id":null,"docs":" Determine the *xy* location of the cursor at the given cursor `Index`.\n","sig":null,"attributes":[{"value":"/ Determine the *xy* location of the cursor at the given cursor `Index`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":435890,"byte_end":435964,"line_start":320,"line_end":320,"column_start":1,"column_end":75}}]},{"kind":"Function","id":{"krate":0,"index":3653},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":436522,"byte_end":436534,"line_start":340,"line_end":340,"column_start":8,"column_end":20},"name":"closest_line","qualname":"::text::cursor::closest_line","value":"fn closest_line<'a, I>(Scalar, I) -> Option<(usize, Xs, Range)> where\nI: Iterator<Item = (Xs, Range)>","parent":null,"children":[],"decl_id":null,"docs":" Find the closest line for the given `y` position, and return the line index, Xs iterator, and y-range of that line","sig":null,"attributes":[{"value":"/ Find the closest line for the given `y` position, and return the line index, Xs iterator, and y-range of that line","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":436351,"byte_end":436469,"line_start":337,"line_end":337,"column_start":1,"column_end":119}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":436470,"byte_end":436473,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/ Returns `None` if there are no lines","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":436474,"byte_end":436514,"line_start":339,"line_end":339,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":3657},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":437780,"byte_end":437807,"line_start":372,"line_end":372,"column_start":8,"column_end":35},"name":"closest_cursor_index_and_xy","qualname":"::text::cursor::closest_cursor_index_and_xy","value":"fn closest_cursor_index_and_xy<'a, I>(Point, I) -> Option<(Index, Point)>\nwhere I: Iterator<Item = (Xs, Range)>","parent":null,"children":[],"decl_id":null,"docs":" Find the closest cursor index to the given `xy` position, and the center `Point` of that\n cursor.","sig":null,"attributes":[{"value":"/ Find the closest cursor index to the given `xy` position, and the center `Point` of that","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":437615,"byte_end":437707,"line_start":368,"line_end":368,"column_start":1,"column_end":93}},{"value":"/ cursor.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":437708,"byte_end":437719,"line_start":369,"line_end":369,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":437720,"byte_end":437723,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ Returns `None` if the given `text` is empty.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":437724,"byte_end":437772,"line_start":371,"line_end":371,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3661},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":438534,"byte_end":438562,"line_start":392,"line_end":392,"column_start":8,"column_end":36},"name":"closest_cursor_index_on_line","qualname":"::text::cursor::closest_cursor_index_on_line","value":"fn closest_cursor_index_on_line<'a>(Scalar, Xs) -> (usize, Scalar)","parent":null,"children":[],"decl_id":null,"docs":" Find the closest cursor index to the given `x` position on the given line along with the\n `x` position of that cursor.\n","sig":null,"attributes":[{"value":"/ Find the closest cursor index to the given `x` position on the given line along with the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":438401,"byte_end":438493,"line_start":390,"line_end":390,"column_start":1,"column_end":93}},{"value":"/ `x` position of that cursor.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":438494,"byte_end":438526,"line_start":391,"line_end":391,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3667},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":439462,"byte_end":439466,"line_start":418,"line_end":418,"column_start":8,"column_end":12},"name":"next","qualname":"<XysPerLine as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3672},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":440286,"byte_end":440290,"line_start":443,"line_end":443,"column_start":8,"column_end":12},"name":"next","qualname":"<XysPerLineFromText as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3677},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":440495,"byte_end":440499,"line_start":451,"line_end":451,"column_start":8,"column_end":12},"name":"next","qualname":"<Xs as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3682},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"font","qualname":"::text::font","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","parent":null,"children":[{"krate":0,"index":3683},{"krate":0,"index":3684},{"krate":0,"index":3687},{"krate":0,"index":3690},{"krate":0,"index":3693},{"krate":0,"index":3694},{"krate":0,"index":3695},{"krate":0,"index":3697},{"krate":0,"index":3700},{"krate":0,"index":3701},{"krate":0,"index":3704},{"krate":0,"index":5511},{"krate":0,"index":5514},{"krate":0,"index":5515},{"krate":0,"index":5517},{"krate":0,"index":5519},{"krate":0,"index":5522},{"krate":0,"index":5523},{"krate":0,"index":5526},{"krate":0,"index":5527},{"krate":0,"index":5529},{"krate":0,"index":5531},{"krate":0,"index":5533},{"krate":0,"index":5536},{"krate":0,"index":3707},{"krate":0,"index":5538},{"krate":0,"index":5541},{"krate":0,"index":5544},{"krate":0,"index":5550},{"krate":0,"index":3709},{"krate":0,"index":3710},{"krate":0,"index":3712},{"krate":0,"index":3719},{"krate":0,"index":3720},{"krate":0,"index":3725},{"krate":0,"index":3727},{"krate":0,"index":3728},{"krate":0,"index":3729},{"krate":0,"index":3730},{"krate":0,"index":3734},{"krate":0,"index":3739},{"krate":0,"index":3741},{"krate":0,"index":3743}],"decl_id":null,"docs":" The `font::Id` and `font::Map` types.\n","sig":null,"attributes":[{"value":"/ The `font::Id` and `font::Map` types.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":440854,"byte_end":440895,"line_start":1,"line_end":1,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5511},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":441306,"byte_end":441308,"line_start":15,"line_end":15,"column_start":12,"column_end":14},"name":"Id","qualname":"::text::font::Id","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type-safe wrapper around the `FontId`.","sig":null,"attributes":[{"value":"/ A type-safe wrapper around the `FontId`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":441033,"byte_end":441077,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":441078,"byte_end":441081,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is used as both:","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":441082,"byte_end":441107,"line_start":10,"line_end":10,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":441108,"byte_end":441111,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ - The key for the `font::Map`'s inner `HashMap`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":441112,"byte_end":441164,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/ - The `font_id` field for the rusttype::gpu_cache::Cache.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":441165,"byte_end":441226,"line_start":13,"line_end":13,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":5533},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":441414,"byte_end":441417,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"Map","qualname":"::text::font::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":5534},{"krate":0,"index":5535}],"decl_id":null,"docs":" A collection of mappings from `font::Id`s to `rusttype::Font`s.\n","sig":null,"attributes":[{"value":"/ A collection of mappings from `font::Id`s to `rusttype::Font`s.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":441318,"byte_end":441385,"line_start":17,"line_end":17,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3707},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":441612,"byte_end":441618,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"NewIds","qualname":"::text::font::NewIds","value":"NewIds {  }","parent":null,"children":[{"krate":0,"index":3708}],"decl_id":null,"docs":" An iterator yielding an `Id` for each new `rusttype::Font` inserted into the `Map` via the\n `insert_collection` method.\n","sig":null,"attributes":[{"value":"/ An iterator yielding an `Id` for each new `rusttype::Font` inserted into the `Map` via the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":441474,"byte_end":441568,"line_start":24,"line_end":24,"column_start":1,"column_end":95}},{"value":"/ `insert_collection` method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":441569,"byte_end":441600,"line_start":25,"line_end":25,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":5538},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":441747,"byte_end":441750,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"Ids","qualname":"::text::font::Ids","value":"Ids {  }","parent":null,"children":[{"krate":0,"index":5540}],"decl_id":null,"docs":" Yields the `Id` for each `Font` within the `Map`.\n","sig":null,"attributes":[{"value":"/ Yields the `Id` for each `Font` within the `Map`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":441665,"byte_end":441718,"line_start":30,"line_end":30,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5545},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":441986,"byte_end":441988,"line_start":40,"line_end":40,"column_start":5,"column_end":7},"name":"Io","qualname":"::text::font::Error::Io","value":"Error::Io(std::io::Error)","parent":{"krate":0,"index":5544},"children":[],"decl_id":null,"docs":" Some error occurred while loading a `FontCollection` from a file.\n","sig":null,"attributes":[{"value":"/ Some error occurred while loading a `FontCollection` from a file.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":441912,"byte_end":441981,"line_start":39,"line_end":39,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":5547},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":441989,"byte_end":442003,"line_start":40,"line_end":40,"column_start":8,"column_end":22},"name":"0","qualname":"::text::font::Error::Io::0","value":"std::io::Error","parent":{"krate":0,"index":5545},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5548},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":442073,"byte_end":442079,"line_start":42,"line_end":42,"column_start":5,"column_end":11},"name":"NoFont","qualname":"::text::font::Error::NoFont","value":"Error::NoFont","parent":{"krate":0,"index":5544},"children":[],"decl_id":null,"docs":" No `Font`s could be yielded from the `FontCollection`.\n","sig":null,"attributes":[{"value":"/ No `Font`s could be yielded from the `FontCollection`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":442010,"byte_end":442068,"line_start":41,"line_end":41,"column_start":5,"column_end":63}}]},{"kind":"Enum","id":{"krate":0,"index":5544},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":441900,"byte_end":441905,"line_start":38,"line_end":38,"column_start":10,"column_end":15},"name":"Error","qualname":"::text::font::Error","value":"enum Error { Io(std::io::Error), NoFont, }","parent":null,"children":[{"krate":0,"index":5545},{"krate":0,"index":5548}],"decl_id":null,"docs":" Returned when loading new fonts from file or bytes.\n","sig":null,"attributes":[{"value":"/ Returned when loading new fonts from file or bytes.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":441818,"byte_end":441873,"line_start":36,"line_end":36,"column_start":1,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":3709},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":442160,"byte_end":442182,"line_start":46,"line_end":46,"column_start":11,"column_end":33},"name":"DEFAULT_DIRECTORY_NAME","qualname":"::text::font::DEFAULT_DIRECTORY_NAME","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" The name of the default directory that is searched for fonts.\n","sig":null,"attributes":[{"value":"/ The name of the default directory that is searched for fonts.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":442084,"byte_end":442149,"line_start":45,"line_end":45,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3711},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":442271,"byte_end":442276,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"index","qualname":"<Id>::index","value":"fn index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner `usize` from the `Id`.\n","sig":null,"attributes":[{"value":"/ Returns the inner `usize` from the `Id`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":442215,"byte_end":442259,"line_start":49,"line_end":49,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3713},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":442380,"byte_end":442383,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<Map>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the new, empty `Map`.\n","sig":null,"attributes":[{"value":"/ Construct the new, empty `Map`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":442333,"byte_end":442368,"line_start":56,"line_end":56,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3714},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":442576,"byte_end":442579,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"get","qualname":"<Map>::get","value":"fn get(&Self, Id) -> Option<&Font>","parent":null,"children":[],"decl_id":null,"docs":" Borrow the `rusttype::Font` associated with the given `font::Id`.\n","sig":null,"attributes":[{"value":"/ Borrow the `rusttype::Font` associated with the given `font::Id`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":442495,"byte_end":442564,"line_start":64,"line_end":64,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3715},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":442745,"byte_end":442751,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"insert","qualname":"<Map>::insert","value":"fn insert(&mut Self, Font) -> Id","parent":null,"children":[],"decl_id":null,"docs":" Adds the given `rusttype::Font` to the `Map` and returns a unique `Id` for it.\n","sig":null,"attributes":[{"value":"/ Adds the given `rusttype::Font` to the `Map` and returns a unique `Id` for it.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":442651,"byte_end":442733,"line_start":69,"line_end":69,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3716},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":443045,"byte_end":443061,"line_start":79,"line_end":79,"column_start":12,"column_end":28},"name":"insert_from_file","qualname":"<Map>::insert_from_file","value":"fn insert_from_file<P>(&mut Self, P) -> Result<Id, Error> where\nP: AsRef<std::path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Insert a single `Font` into the map by loading it from the given file path.\n","sig":null,"attributes":[{"value":"/ Insert a single `Font` into the map by loading it from the given file path.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":442954,"byte_end":443033,"line_start":78,"line_end":78,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3718},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":443991,"byte_end":443994,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"ids","qualname":"<Map>::ids","value":"fn ids(&Self) -> Ids","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator yielding the `Id` for each `Font` within the `Map`.\n","sig":null,"attributes":[{"value":"/ Produces an iterator yielding the `Id` for each `Font` within the `Map`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":443903,"byte_end":443979,"line_start":104,"line_end":104,"column_start":5,"column_end":81}}]},{"kind":"Function","id":{"krate":0,"index":3719},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":444130,"byte_end":444132,"line_start":113,"line_end":113,"column_start":8,"column_end":10},"name":"id","qualname":"::text::font::id","value":"fn id(&Font) -> Id","parent":null,"children":[],"decl_id":null,"docs":" Produce a unique ID for the given font.\n","sig":null,"attributes":[{"value":"/ Produce a unique ID for the given font.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":444079,"byte_end":444122,"line_start":112,"line_end":112,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":3720},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":444433,"byte_end":444453,"line_start":122,"line_end":122,"column_start":8,"column_end":28},"name":"collection_from_file","qualname":"::text::font::collection_from_file","value":"fn collection_from_file<P>(P) -> Result<FontCollection, std::io::Error> where\nP: AsRef<std::path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Load a `FontCollection` from a file at a given path.\n","sig":null,"attributes":[{"value":"/ Load a `FontCollection` from a file at a given path.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":444369,"byte_end":444425,"line_start":121,"line_end":121,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":3725},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":444841,"byte_end":444850,"line_start":135,"line_end":135,"column_start":8,"column_end":17},"name":"from_file","qualname":"::text::font::from_file","value":"fn from_file<P>(P) -> Result<Font, Error> where P: AsRef<std::path::Path>","parent":null,"children":[],"decl_id":null,"docs":" Load a single `Font` from a file at the given path.\n","sig":null,"attributes":[{"value":"/ Load a single `Font` from a file at the given path.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":444778,"byte_end":444833,"line_start":134,"line_end":134,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":3727},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":445202,"byte_end":445218,"line_start":147,"line_end":147,"column_start":8,"column_end":24},"name":"default_notosans","qualname":"::text::font::default_notosans","value":"fn default_notosans() -> Font","parent":null,"children":[],"decl_id":null,"docs":" Load the default notosans font.","sig":null,"attributes":[{"value":"/ Load the default notosans font.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":445028,"byte_end":445063,"line_start":143,"line_end":143,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":445064,"byte_end":445067,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ This function is only available if the `notosans` feature is enabled, which it is by default.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":445068,"byte_end":445165,"line_start":145,"line_end":145,"column_start":1,"column_end":98}},{"value":"cfg(feature = \"notosans\")","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":445166,"byte_end":445194,"line_start":146,"line_end":146,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":3728},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":445563,"byte_end":445580,"line_start":156,"line_end":156,"column_start":8,"column_end":25},"name":"default_directory","qualname":"::text::font::default_directory","value":"fn default_directory(&Path) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" The directory that is searched for default fonts.\n","sig":null,"attributes":[{"value":"/ The directory that is searched for default fonts.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":445502,"byte_end":445555,"line_start":155,"line_end":155,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":3729},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":446039,"byte_end":446046,"line_start":168,"line_end":168,"column_start":8,"column_end":15},"name":"default","qualname":"::text::font::default","value":"fn default(&Path) -> Result<Font, Error>","parent":null,"children":[],"decl_id":null,"docs":" Load the default font.","sig":null,"attributes":[{"value":"/ Load the default font.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":445652,"byte_end":445678,"line_start":160,"line_end":160,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":445679,"byte_end":445682,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ If the `notosans` feature is enabled, this will return the font loaded from","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":445683,"byte_end":445762,"line_start":162,"line_end":162,"column_start":1,"column_end":80}},{"value":"/ `notosans::REGULAR_TTF`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":445763,"byte_end":445791,"line_start":163,"line_end":163,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":445792,"byte_end":445795,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Otherwise this will attempt to locate the `assets/fonts` directory. If the directory exists,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":445796,"byte_end":445892,"line_start":165,"line_end":165,"column_start":1,"column_end":97}},{"value":"/ the first font that is found will be loaded. If no fonts are found, an error is returned.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":445893,"byte_end":445986,"line_start":166,"line_end":166,"column_start":1,"column_end":94}},{"value":"allow(unreachable_code, unused_variables)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":445987,"byte_end":446031,"line_start":167,"line_end":167,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3732},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":446711,"byte_end":446715,"line_start":194,"line_end":194,"column_start":8,"column_end":12},"name":"next","qualname":"<NewIds as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3737},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":446866,"byte_end":446870,"line_start":201,"line_end":201,"column_start":8,"column_end":12},"name":"next","qualname":"<Ids as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3740},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":446999,"byte_end":447003,"line_start":207,"line_end":207,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(std::io::Error) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3742},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":447105,"byte_end":447110,"line_start":213,"line_end":213,"column_start":8,"column_end":13},"name":"cause","qualname":"<Error as std::error::Error>::cause","value":"fn cause(&Self) -> Option<&dyn std::error::Error>","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2560},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3744},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":447313,"byte_end":447316,"line_start":222,"line_end":222,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut std::fmt::Formatter) -> Result<(), std::fmt::Error>","parent":{"krate":2,"index":9916},"children":[],"decl_id":{"krate":2,"index":9917},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3745},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"glyph","qualname":"::text::glyph","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","parent":null,"children":[{"krate":0,"index":3746},{"krate":0,"index":3747},{"krate":0,"index":3750},{"krate":0,"index":3753},{"krate":0,"index":3754},{"krate":0,"index":3757},{"krate":0,"index":3760},{"krate":0,"index":3763},{"krate":0,"index":3766},{"krate":0,"index":3767},{"krate":0,"index":3768},{"krate":0,"index":3773},{"krate":0,"index":3779},{"krate":0,"index":3784},{"krate":0,"index":3790},{"krate":0,"index":3796},{"krate":0,"index":3804},{"krate":0,"index":3810},{"krate":0,"index":3816},{"krate":0,"index":3822},{"krate":0,"index":3826},{"krate":0,"index":3829},{"krate":0,"index":3832},{"krate":0,"index":3835},{"krate":0,"index":3836},{"krate":0,"index":3837},{"krate":0,"index":3838},{"krate":0,"index":3839},{"krate":0,"index":3840},{"krate":0,"index":3841},{"krate":0,"index":3842},{"krate":0,"index":3849}],"decl_id":null,"docs":" Logic and types specific to individual glyph layout.\n","sig":null,"attributes":[{"value":"/ Logic and types specific to individual glyph layout.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":447580,"byte_end":447636,"line_start":1,"line_end":1,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":3766},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":447795,"byte_end":447796,"line_start":7,"line_end":7,"column_start":10,"column_end":11},"name":"X","qualname":"::text::glyph::X","value":"Scalar","parent":null,"children":[],"decl_id":null,"docs":" Some position along the X axis (used within `CharXs`).\n","sig":null,"attributes":[{"value":"/ Some position along the X axis (used within `CharXs`).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":447727,"byte_end":447785,"line_start":6,"line_end":6,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":3767},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":447885,"byte_end":447890,"line_start":10,"line_end":10,"column_start":10,"column_end":15},"name":"HalfW","qualname":"::text::glyph::HalfW","value":"Scalar","parent":null,"children":[],"decl_id":null,"docs":" The half of the width of some character (used within `CharXs`).\n","sig":null,"attributes":[{"value":"/ The half of the width of some character (used within `CharXs`).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":447808,"byte_end":447875,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3768},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":447996,"byte_end":448001,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"Rects","qualname":"::text::glyph::Rects","value":"Rects {  }","parent":null,"children":[{"krate":0,"index":3771},{"krate":0,"index":3772}],"decl_id":null,"docs":" An iterator yielding the `Rect` for each `char`'s `Glyph` in the given `text`.\n","sig":null,"attributes":[{"value":"/ An iterator yielding the `Rect` for each `char`'s `Glyph` in the given `text`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":447902,"byte_end":447984,"line_start":12,"line_end":12,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":3773},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":448472,"byte_end":448484,"line_start":24,"line_end":24,"column_start":12,"column_end":24},"name":"RectsPerLine","qualname":"::text::glyph::RectsPerLine","value":"RectsPerLine {  }","parent":null,"children":[{"krate":0,"index":3776},{"krate":0,"index":3777},{"krate":0,"index":3778}],"decl_id":null,"docs":" An iterator that, for every `(line, line_rect)` pair yielded by the given iterator,\n produces an iterator that yields a `Rect` for every character in that line.\n","sig":null,"attributes":[{"value":"/ An iterator that, for every `(line, line_rect)` pair yielded by the given iterator,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":448293,"byte_end":448380,"line_start":22,"line_end":22,"column_start":1,"column_end":88}},{"value":"/ produces an iterator that yields a `Rect` for every character in that line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":448381,"byte_end":448460,"line_start":23,"line_end":23,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":3779},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":448745,"byte_end":448758,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"SelectedRects","qualname":"::text::glyph::SelectedRects","value":"SelectedRects {  }","parent":null,"children":[{"krate":0,"index":3782},{"krate":0,"index":3783}],"decl_id":null,"docs":" Yields a `Rect` for each selected character in a single line of text.","sig":null,"attributes":[{"value":"/ Yields a `Rect` for each selected character in a single line of text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":448573,"byte_end":448646,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":448647,"byte_end":448650,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This iterator can only be produced by the `SelectedCharRectsPerLine` iterator.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":448651,"byte_end":448733,"line_start":32,"line_end":32,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":3784},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":449192,"byte_end":449212,"line_start":45,"line_end":45,"column_start":12,"column_end":32},"name":"SelectedRectsPerLine","qualname":"::text::glyph::SelectedRectsPerLine","value":"SelectedRectsPerLine {  }","parent":null,"children":[{"krate":0,"index":3787},{"krate":0,"index":3788},{"krate":0,"index":3789}],"decl_id":null,"docs":" Yields an iteraor yielding `Rect`s for each selected character in each line of text within\n the given iterator yielding char `Rect`s.","sig":null,"attributes":[{"value":"/ Yields an iteraor yielding `Rect`s for each selected character in each line of text within","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":448856,"byte_end":448950,"line_start":38,"line_end":38,"column_start":1,"column_end":95}},{"value":"/ the given iterator yielding char `Rect`s.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":448951,"byte_end":448996,"line_start":39,"line_end":39,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":448997,"byte_end":449000,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Given some `start` and `end` indices, only `Rect`s for `char`s between these two indices","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":449001,"byte_end":449093,"line_start":41,"line_end":41,"column_start":1,"column_end":93}},{"value":"/ will be produced.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":449094,"byte_end":449115,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":449116,"byte_end":449119,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ All lines that have no selected `Rect`s will be skipped.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":449120,"byte_end":449180,"line_start":44,"line_end":44,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3800},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":449727,"byte_end":449731,"line_start":61,"line_end":61,"column_start":8,"column_end":12},"name":"next","qualname":"<Rects as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3808},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":450638,"byte_end":450642,"line_start":88,"line_end":88,"column_start":8,"column_end":12},"name":"next","qualname":"<RectsPerLine as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3814},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":451284,"byte_end":451288,"line_start":108,"line_end":108,"column_start":8,"column_end":12},"name":"next","qualname":"<SelectedRects as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3820},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":451822,"byte_end":451826,"line_start":130,"line_end":130,"column_start":8,"column_end":12},"name":"next","qualname":"<SelectedRectsPerLine as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3826},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":454101,"byte_end":454115,"line_start":195,"line_end":195,"column_start":8,"column_end":22},"name":"rects_per_line","qualname":"::text::glyph::rects_per_line","value":"fn rects_per_line<'a, I>(I, &'a text::Font, FontSize) -> RectsPerLine where\nI: Iterator<Item = (&'a str, Rect)>","parent":null,"children":[],"decl_id":null,"docs":" Produce an iterator that, for every `(line, line_rect)` pair yielded by the given iterator,\n produces an iterator that yields a `Rect` for every character in that line.","sig":null,"attributes":[{"value":"/ Produce an iterator that, for every `(line, line_rect)` pair yielded by the given iterator,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":453802,"byte_end":453897,"line_start":190,"line_end":190,"column_start":1,"column_end":96}},{"value":"/ produces an iterator that yields a `Rect` for every character in that line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":453898,"byte_end":453977,"line_start":191,"line_end":191,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":453978,"byte_end":453981,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ This is useful when information about character positioning is needed when reasoning about","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":453982,"byte_end":454076,"line_start":193,"line_end":193,"column_start":1,"column_end":95}},{"value":"/ text layout.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":454077,"byte_end":454093,"line_start":194,"line_end":194,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":3829},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":454665,"byte_end":454683,"line_start":214,"line_end":214,"column_start":8,"column_end":26},"name":"index_after_cursor","qualname":"::text::glyph::index_after_cursor","value":"fn index_after_cursor<I>(I, text::cursor::Index) -> Option<usize> where\nI: Iterator<Item = text::line::Info>","parent":null,"children":[],"decl_id":null,"docs":" Find the index of the character that directly follows the cursor at the given `cursor_idx`.","sig":null,"attributes":[{"value":"/ Find the index of the character that directly follows the cursor at the given `cursor_idx`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":454396,"byte_end":454491,"line_start":210,"line_end":210,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":454492,"byte_end":454495,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ Returns `None` if either the given `cursor::Index` `line` or `idx` fields are out of bounds","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":454496,"byte_end":454591,"line_start":212,"line_end":212,"column_start":1,"column_end":96}},{"value":"/ of the line information yielded by the `line_infos` iterator.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":454592,"byte_end":454657,"line_start":213,"line_end":213,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":3832},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":455487,"byte_end":455510,"line_start":237,"line_end":237,"column_start":8,"column_end":31},"name":"selected_rects_per_line","qualname":"::text::glyph::selected_rects_per_line","value":"fn selected_rects_per_line<'a,\nI>(I, &'a text::Font, FontSize, text::cursor::Index, text::cursor::Index)\n-> SelectedRectsPerLine where I: Iterator<Item = (&'a str, Rect)>","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator that yields iteraors yielding `Rect`s for each selected character in\n each line of text within the given iterator yielding char `Rect`s.","sig":null,"attributes":[{"value":"/ Produces an iterator that yields iteraors yielding `Rect`s for each selected character in","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":455131,"byte_end":455224,"line_start":230,"line_end":230,"column_start":1,"column_end":94}},{"value":"/ each line of text within the given iterator yielding char `Rect`s.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":455225,"byte_end":455295,"line_start":231,"line_end":231,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":455296,"byte_end":455299,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ Given some `start` and `end` indices, only `Rect`s for `char`s between these two indices","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":455300,"byte_end":455392,"line_start":233,"line_end":233,"column_start":1,"column_end":93}},{"value":"/ will be produced.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":455393,"byte_end":455414,"line_start":234,"line_end":234,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":455415,"byte_end":455418,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ All lines that have no selected `Rect`s will be skipped.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":455419,"byte_end":455479,"line_start":236,"line_end":236,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":3842},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":457629,"byte_end":457645,"line_start":305,"line_end":305,"column_start":8,"column_end":24},"name":"contours_to_path","qualname":"::text::glyph::contours_to_path","value":"fn contours_to_path<'a, I>(rusttype::Rect<f32>, I) -> /*impl Trait*/ where\nI: IntoIterator<Item = rusttype::Contour>","parent":null,"children":[],"decl_id":null,"docs":" Convert the given sequence of contours to a `geom::Path`.","sig":null,"attributes":[{"value":"/ Convert the given sequence of contours to a `geom::Path`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":457480,"byte_end":457541,"line_start":302,"line_end":302,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":457542,"byte_end":457545,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ In the resulting path events [0.0, 0.0] is the bottom left of the rect.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":457546,"byte_end":457621,"line_start":304,"line_end":304,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":3849},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":458850,"byte_end":458861,"line_start":339,"line_end":339,"column_start":8,"column_end":19},"name":"path_events","qualname":"::text::glyph::path_events","value":"fn path_events(ScaledGlyph) -> Option</*impl Trait*/>","parent":null,"children":[],"decl_id":null,"docs":" Produce the lyon path for the given scaled glyph.","sig":null,"attributes":[{"value":"/ Produce the lyon path for the given scaled glyph.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":458600,"byte_end":458653,"line_start":334,"line_end":334,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":458654,"byte_end":458657,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ Returns `None` if `glyph.shape()` or `glyph.exact_bounding_box()` returns `None`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":458658,"byte_end":458743,"line_start":336,"line_end":336,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":458744,"byte_end":458747,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ TODO: This could be optimised by caching path events glyph ID and using normalised glyphs.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":458748,"byte_end":458842,"line_start":338,"line_end":338,"column_start":1,"column_end":95}}]},{"kind":"Mod","id":{"krate":0,"index":3854},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"layout","qualname":"::text::layout","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","parent":null,"children":[{"krate":0,"index":3855},{"krate":0,"index":3856},{"krate":0,"index":3859},{"krate":0,"index":3862},{"krate":0,"index":3865},{"krate":0,"index":3868},{"krate":0,"index":3871},{"krate":0,"index":5552},{"krate":0,"index":5559},{"krate":0,"index":5561},{"krate":0,"index":5563},{"krate":0,"index":5565},{"krate":0,"index":5572},{"krate":0,"index":5574},{"krate":0,"index":3874},{"krate":0,"index":3875},{"krate":0,"index":3876},{"krate":0,"index":3877},{"krate":0,"index":3878},{"krate":0,"index":3879},{"krate":0,"index":3897}],"decl_id":null,"docs":" Items related to the styling of text.\n","sig":null,"attributes":[{"value":"/ Items related to the styling of text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":459097,"byte_end":459138,"line_start":1,"line_end":1,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5552},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":459292,"byte_end":459299,"line_start":7,"line_end":7,"column_start":12,"column_end":19},"name":"Builder","qualname":"::text::layout::Builder","value":"Builder { line_spacing, line_wrap, font_size, justify, font, y_align }","parent":null,"children":[{"krate":0,"index":5553},{"krate":0,"index":5554},{"krate":0,"index":5555},{"krate":0,"index":5556},{"krate":0,"index":5557},{"krate":0,"index":5558}],"decl_id":null,"docs":" A context for building a text layout.\n","sig":null,"attributes":[{"value":"/ A context for building a text layout.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":459206,"byte_end":459247,"line_start":5,"line_end":5,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":5553},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":459310,"byte_end":459322,"line_start":8,"line_end":8,"column_start":9,"column_end":21},"name":"line_spacing","qualname":"::text::layout::Builder::line_spacing","value":"std::option::Option<f32>","parent":{"krate":0,"index":5552},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5554},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":459348,"byte_end":459357,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"name":"line_wrap","qualname":"::text::layout::Builder::line_wrap","value":"std::option::Option<std::option::Option<text::Wrap>>","parent":{"krate":0,"index":5552},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5555},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":459389,"byte_end":459398,"line_start":10,"line_end":10,"column_start":9,"column_end":18},"name":"font_size","qualname":"::text::layout::Builder::font_size","value":"std::option::Option<u32>","parent":{"krate":0,"index":5552},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5556},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":459426,"byte_end":459433,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"name":"justify","qualname":"::text::layout::Builder::justify","value":"std::option::Option<text::Justify>","parent":{"krate":0,"index":5552},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5557},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":459460,"byte_end":459464,"line_start":12,"line_end":12,"column_start":9,"column_end":13},"name":"font","qualname":"::text::layout::Builder::font","value":"std::option::Option<std::option::Option<rusttype::Font<'static>>>","parent":{"krate":0,"index":5552},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5558},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":459496,"byte_end":459503,"line_start":13,"line_end":13,"column_start":9,"column_end":16},"name":"y_align","qualname":"::text::layout::Builder::y_align","value":"std::option::Option<text::Align>","parent":{"krate":0,"index":5552},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5565},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":459647,"byte_end":459653,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"Layout","qualname":"::text::layout::Layout","value":"Layout { line_spacing, line_wrap, justify, font_size, font, y_align }","parent":null,"children":[{"krate":0,"index":5566},{"krate":0,"index":5567},{"krate":0,"index":5568},{"krate":0,"index":5569},{"krate":0,"index":5570},{"krate":0,"index":5571}],"decl_id":null,"docs":" Properties related to the layout of multi-line text for a single font and font size.\n","sig":null,"attributes":[{"value":"/ Properties related to the layout of multi-line text for a single font and font size.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":459523,"byte_end":459611,"line_start":16,"line_end":16,"column_start":1,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":5566},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":459664,"byte_end":459676,"line_start":19,"line_end":19,"column_start":9,"column_end":21},"name":"line_spacing","qualname":"::text::layout::Layout::line_spacing","value":"f32","parent":{"krate":0,"index":5565},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5567},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":459694,"byte_end":459703,"line_start":20,"line_end":20,"column_start":9,"column_end":18},"name":"line_wrap","qualname":"::text::layout::Layout::line_wrap","value":"std::option::Option<text::Wrap>","parent":{"krate":0,"index":5565},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5568},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":459727,"byte_end":459734,"line_start":21,"line_end":21,"column_start":9,"column_end":16},"name":"justify","qualname":"::text::layout::Layout::justify","value":"text::Justify","parent":{"krate":0,"index":5565},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5569},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":459753,"byte_end":459762,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"name":"font_size","qualname":"::text::layout::Layout::font_size","value":"u32","parent":{"krate":0,"index":5565},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5570},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":459782,"byte_end":459786,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"name":"font","qualname":"::text::layout::Layout::font","value":"std::option::Option<rusttype::Font<'static>>","parent":{"krate":0,"index":5565},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5571},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":459810,"byte_end":459817,"line_start":24,"line_end":24,"column_start":9,"column_end":16},"name":"y_align","qualname":"::text::layout::Layout::y_align","value":"text::Align","parent":{"krate":0,"index":5565},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3874},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":459839,"byte_end":459856,"line_start":27,"line_end":27,"column_start":11,"column_end":28},"name":"DEFAULT_LINE_WRAP","qualname":"::text::layout::DEFAULT_LINE_WRAP","value":"Option<Wrap>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3875},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":459907,"byte_end":459924,"line_start":28,"line_end":28,"column_start":11,"column_end":28},"name":"DEFAULT_FONT_SIZE","qualname":"::text::layout::DEFAULT_FONT_SIZE","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3876},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":459946,"byte_end":459966,"line_start":29,"line_end":29,"column_start":11,"column_end":31},"name":"DEFAULT_LINE_SPACING","qualname":"::text::layout::DEFAULT_LINE_SPACING","value":"f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3877},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":459989,"byte_end":460004,"line_start":30,"line_end":30,"column_start":11,"column_end":26},"name":"DEFAULT_JUSTIFY","qualname":"::text::layout::DEFAULT_JUSTIFY","value":"Justify","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3878},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":460043,"byte_end":460058,"line_start":31,"line_end":31,"column_start":11,"column_end":26},"name":"DEFAULT_Y_ALIGN","qualname":"::text::layout::DEFAULT_Y_ALIGN","value":"Align","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3880},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":460153,"byte_end":460162,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"font_size","qualname":"<Builder>::font_size","value":"fn font_size(Self, FontSize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The font size to use for the text.\n","sig":null,"attributes":[{"value":"/ The font size to use for the text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":460103,"byte_end":460141,"line_start":34,"line_end":34,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3881},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":460415,"byte_end":460424,"line_start":43,"line_end":43,"column_start":12,"column_end":21},"name":"line_wrap","qualname":"<Builder>::line_wrap","value":"fn line_wrap(Self, Option<Wrap>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify whether or not text should be wrapped around some width and how to do so.","sig":null,"attributes":[{"value":"/ Specify whether or not text should be wrapped around some width and how to do so.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":460260,"byte_end":460345,"line_start":40,"line_end":40,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":460350,"byte_end":460353,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ The default value is `DEFAULT_LINE_WRAP`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":460358,"byte_end":460403,"line_start":42,"line_end":42,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3882},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":460674,"byte_end":460686,"line_start":51,"line_end":51,"column_start":12,"column_end":24},"name":"no_line_wrap","qualname":"<Builder>::no_line_wrap","value":"fn no_line_wrap(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify that the **Text** should not wrap lines around the width.","sig":null,"attributes":[{"value":"/ Specify that the **Text** should not wrap lines around the width.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":460536,"byte_end":460605,"line_start":48,"line_end":48,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":460610,"byte_end":460613,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Shorthand for `builder.line_wrap(None)`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":460618,"byte_end":460662,"line_start":50,"line_end":50,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3883},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":460915,"byte_end":460927,"line_start":58,"line_end":58,"column_start":12,"column_end":24},"name":"wrap_by_word","qualname":"<Builder>::wrap_by_word","value":"fn wrap_by_word(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Line wrap the **Text** at the beginning of the first word that exceeds the width.","sig":null,"attributes":[{"value":"/ Line wrap the **Text** at the beginning of the first word that exceeds the width.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":460743,"byte_end":460828,"line_start":55,"line_end":55,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":460833,"byte_end":460836,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Shorthand for `builder.line_wrap(Some(Wrap::Whitespace))`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":460841,"byte_end":460903,"line_start":57,"line_end":57,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3884},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":461178,"byte_end":461195,"line_start":65,"line_end":65,"column_start":12,"column_end":29},"name":"wrap_by_character","qualname":"<Builder>::wrap_by_character","value":"fn wrap_by_character(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Line wrap the **Text** at the beginning of the first character that exceeds the width.","sig":null,"attributes":[{"value":"/ Line wrap the **Text** at the beginning of the first character that exceeds the width.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":461002,"byte_end":461092,"line_start":62,"line_end":62,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":461097,"byte_end":461100,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Shorthand for `builder.line_wrap(Some(Wrap::Character))`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":461105,"byte_end":461166,"line_start":64,"line_end":64,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3885},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":461351,"byte_end":461355,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"font","qualname":"<Builder>::font","value":"fn font(Self, Font) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A method for specifying the `Font` used for displaying the `Text`.\n","sig":null,"attributes":[{"value":"/ A method for specifying the `Font` used for displaying the `Text`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":461269,"byte_end":461339,"line_start":69,"line_end":69,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3886},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":461538,"byte_end":461545,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"justify","qualname":"<Builder>::justify","value":"fn justify(Self, Justify) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe the end along the *x* axis to which the text should be aligned.\n","sig":null,"attributes":[{"value":"/ Describe the end along the *x* axis to which the text should be aligned.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":461450,"byte_end":461526,"line_start":75,"line_end":75,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3887},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":461731,"byte_end":461743,"line_start":82,"line_end":82,"column_start":12,"column_end":24},"name":"left_justify","qualname":"<Builder>::left_justify","value":"fn left_justify(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align the text to the left of its bounding **Rect**'s *x* axis range.\n","sig":null,"attributes":[{"value":"/ Align the text to the left of its bounding **Rect**'s *x* axis range.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":461646,"byte_end":461719,"line_start":81,"line_end":81,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3888},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":461894,"byte_end":461908,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"center_justify","qualname":"<Builder>::center_justify","value":"fn center_justify(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align the text to the middle of its bounding **Rect**'s *x* axis range.\n","sig":null,"attributes":[{"value":"/ Align the text to the middle of its bounding **Rect**'s *x* axis range.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":461807,"byte_end":461882,"line_start":86,"line_end":86,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3889},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":462060,"byte_end":462073,"line_start":92,"line_end":92,"column_start":12,"column_end":25},"name":"right_justify","qualname":"<Builder>::right_justify","value":"fn right_justify(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align the text to the right of its bounding **Rect**'s *x* axis range.\n","sig":null,"attributes":[{"value":"/ Align the text to the right of its bounding **Rect**'s *x* axis range.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":461974,"byte_end":462048,"line_start":91,"line_end":91,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3890},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":462220,"byte_end":462232,"line_start":97,"line_end":97,"column_start":12,"column_end":24},"name":"line_spacing","qualname":"<Builder>::line_spacing","value":"fn line_spacing(Self, Scalar) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify how much vertical space should separate each line of text.\n","sig":null,"attributes":[{"value":"/ Specify how much vertical space should separate each line of text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":462138,"byte_end":462208,"line_start":96,"line_end":96,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3891},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":462440,"byte_end":462447,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"y_align","qualname":"<Builder>::y_align","value":"fn y_align(Self, Align) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify how the whole text should be aligned along the y axis of its bounding rectangle\n","sig":null,"attributes":[{"value":"/ Specify how the whole text should be aligned along the y axis of its bounding rectangle","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":462337,"byte_end":462428,"line_start":102,"line_end":102,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":3892},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":462633,"byte_end":462642,"line_start":109,"line_end":109,"column_start":12,"column_end":21},"name":"align_top","qualname":"<Builder>::align_top","value":"fn align_top(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align the top edge of the text with the top edge of its bounding rectangle.\n","sig":null,"attributes":[{"value":"/ Align the top edge of the text with the top edge of its bounding rectangle.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":462542,"byte_end":462621,"line_start":108,"line_end":108,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3893},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":462850,"byte_end":462864,"line_start":116,"line_end":116,"column_start":12,"column_end":26},"name":"align_middle_y","qualname":"<Builder>::align_middle_y","value":"fn align_middle_y(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align the middle of the text with the middle of the bounding rect along the y axis..","sig":null,"attributes":[{"value":"/ Align the middle of the text with the middle of the bounding rect along the y axis..","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":462703,"byte_end":462791,"line_start":113,"line_end":113,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":462796,"byte_end":462799,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ This is the default behaviour.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":462804,"byte_end":462838,"line_start":115,"line_end":115,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3894},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":463025,"byte_end":463037,"line_start":121,"line_end":121,"column_start":12,"column_end":24},"name":"align_bottom","qualname":"<Builder>::align_bottom","value":"fn align_bottom(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align the bottom edge of the text with the bottom edge of its bounding rectangle.\n","sig":null,"attributes":[{"value":"/ Align the bottom edge of the text with the bottom edge of its bounding rectangle.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":462928,"byte_end":463013,"line_start":120,"line_end":120,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":3895},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":463163,"byte_end":463169,"line_start":126,"line_end":126,"column_start":12,"column_end":18},"name":"layout","qualname":"<Builder>::layout","value":"fn layout(Self, &Layout) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set all the parameters via an existing `Layout`\n","sig":null,"attributes":[{"value":"/ Set all the parameters via an existing `Layout`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":463100,"byte_end":463151,"line_start":125,"line_end":125,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3896},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":463506,"byte_end":463511,"line_start":136,"line_end":136,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"fn build(Self) -> Layout","parent":null,"children":[],"decl_id":null,"docs":" Build the text layout.\n","sig":null,"attributes":[{"value":"/ Build the text layout.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":463468,"byte_end":463494,"line_start":135,"line_end":135,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3898},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":463981,"byte_end":463988,"line_start":149,"line_end":149,"column_start":8,"column_end":15},"name":"default","qualname":"<Layout as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3899},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"line","qualname":"::text::line","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","parent":null,"children":[{"krate":0,"index":3900},{"krate":0,"index":3901},{"krate":0,"index":3904},{"krate":0,"index":3907},{"krate":0,"index":3908},{"krate":0,"index":3911},{"krate":0,"index":3914},{"krate":0,"index":3917},{"krate":0,"index":5576},{"krate":0,"index":5590},{"krate":0,"index":5591},{"krate":0,"index":5593},{"krate":0,"index":5595},{"krate":0,"index":5596},{"krate":0,"index":5599},{"krate":0,"index":5603},{"krate":0,"index":5604},{"krate":0,"index":5606},{"krate":0,"index":5608},{"krate":0,"index":5609},{"krate":0,"index":5612},{"krate":0,"index":5618},{"krate":0,"index":5619},{"krate":0,"index":5621},{"krate":0,"index":5623},{"krate":0,"index":5624},{"krate":0,"index":3920},{"krate":0,"index":5627},{"krate":0,"index":5635},{"krate":0,"index":3931},{"krate":0,"index":3935},{"krate":0,"index":3936},{"krate":0,"index":3939},{"krate":0,"index":3943},{"krate":0,"index":3948},{"krate":0,"index":3952},{"krate":0,"index":3955},{"krate":0,"index":3956},{"krate":0,"index":3957},{"krate":0,"index":3962},{"krate":0,"index":3963},{"krate":0,"index":3967},{"krate":0,"index":3970},{"krate":0,"index":3972},{"krate":0,"index":3975},{"krate":0,"index":3978},{"krate":0,"index":3984},{"krate":0,"index":3990}],"decl_id":null,"docs":" Text handling logic related to individual lines of text.","sig":null,"attributes":[{"value":"/ Text handling logic related to individual lines of text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":464269,"byte_end":464329,"line_start":1,"line_end":1,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":464330,"byte_end":464333,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is the core of multi-line text handling.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":464334,"byte_end":464390,"line_start":3,"line_end":3,"column_start":1,"column_end":57}}]},{"kind":"StructVariant","id":{"krate":0,"index":5577},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":464685,"byte_end":464689,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Wrap","qualname":"::text::line::Break::Wrap","value":"Break::Wrap { byte, char, len_bytes, len_chars }","parent":{"krate":0,"index":5576},"children":[],"decl_id":null,"docs":" A break caused by the text exceeding some maximum width.\n","sig":null,"attributes":[{"value":"/ A break caused by the text exceeding some maximum width.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":464620,"byte_end":464680,"line_start":11,"line_end":11,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":5578},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":464754,"byte_end":464758,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"byte","qualname":"::text::line::Break::Wrap::byte","value":"usize","parent":{"krate":0,"index":5577},"children":[],"decl_id":null,"docs":" The byte index at which the break occurs.\n","sig":null,"attributes":[{"value":"/ The byte index at which the break occurs.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":464700,"byte_end":464745,"line_start":13,"line_end":13,"column_start":9,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":5579},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":464868,"byte_end":464872,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"name":"char","qualname":"::text::line::Break::Wrap::char","value":"usize","parent":{"krate":0,"index":5577},"children":[],"decl_id":null,"docs":" The char index at which the string should wrap due to exceeding a maximum width.\n","sig":null,"attributes":[{"value":"/ The char index at which the string should wrap due to exceeding a maximum width.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":464775,"byte_end":464859,"line_start":15,"line_end":15,"column_start":9,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":5580},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":465048,"byte_end":465057,"line_start":19,"line_end":19,"column_start":9,"column_end":18},"name":"len_bytes","qualname":"::text::line::Break::Wrap::len_bytes","value":"usize","parent":{"krate":0,"index":5577},"children":[],"decl_id":null,"docs":" The byte length which should be skipped in order to reach the first non-whitespace\n character to use as the beginning of the next line.\n","sig":null,"attributes":[{"value":"/ The byte length which should be skipped in order to reach the first non-whitespace","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":464889,"byte_end":464975,"line_start":17,"line_end":17,"column_start":9,"column_end":95}},{"value":"/ character to use as the beginning of the next line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":464984,"byte_end":465039,"line_start":18,"line_end":18,"column_start":9,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":5581},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":465237,"byte_end":465246,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"name":"len_chars","qualname":"::text::line::Break::Wrap::len_chars","value":"usize","parent":{"krate":0,"index":5577},"children":[],"decl_id":null,"docs":" The number of chars which should be skipped in order to reach the first non-whitespace\n character to use as the beginning of the next line.\n","sig":null,"attributes":[{"value":"/ The number of chars which should be skipped in order to reach the first non-whitespace","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":465074,"byte_end":465164,"line_start":20,"line_end":20,"column_start":9,"column_end":99}},{"value":"/ character to use as the beginning of the next line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":465173,"byte_end":465228,"line_start":21,"line_end":21,"column_start":9,"column_end":64}}]},{"kind":"StructVariant","id":{"krate":0,"index":5582},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":465313,"byte_end":465320,"line_start":25,"line_end":25,"column_start":5,"column_end":12},"name":"Newline","qualname":"::text::line::Break::Newline","value":"Break::Newline { byte, char, len_bytes, len_chars }","parent":{"krate":0,"index":5576},"children":[],"decl_id":null,"docs":" A break caused by a newline character.\n","sig":null,"attributes":[{"value":"/ A break caused by a newline character.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":465266,"byte_end":465308,"line_start":24,"line_end":24,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":5583},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":465424,"byte_end":465428,"line_start":27,"line_end":27,"column_start":9,"column_end":13},"name":"byte","qualname":"::text::line::Break::Newline::byte","value":"usize","parent":{"krate":0,"index":5582},"children":[],"decl_id":null,"docs":" The byte index at which the string should wrap due to exceeding a maximum width.\n","sig":null,"attributes":[{"value":"/ The byte index at which the string should wrap due to exceeding a maximum width.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":465331,"byte_end":465415,"line_start":26,"line_end":26,"column_start":9,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":5584},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":465538,"byte_end":465542,"line_start":29,"line_end":29,"column_start":9,"column_end":13},"name":"char","qualname":"::text::line::Break::Newline::char","value":"usize","parent":{"krate":0,"index":5582},"children":[],"decl_id":null,"docs":" The char index at which the string should wrap due to exceeding a maximum width.\n","sig":null,"attributes":[{"value":"/ The char index at which the string should wrap due to exceeding a maximum width.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":465445,"byte_end":465529,"line_start":28,"line_end":28,"column_start":9,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":5585},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":465614,"byte_end":465623,"line_start":31,"line_end":31,"column_start":9,"column_end":18},"name":"len_bytes","qualname":"::text::line::Break::Newline::len_bytes","value":"usize","parent":{"krate":0,"index":5582},"children":[],"decl_id":null,"docs":" The width of the \"newline\" token in bytes.\n","sig":null,"attributes":[{"value":"/ The width of the \"newline\" token in bytes.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":465559,"byte_end":465605,"line_start":30,"line_end":30,"column_start":9,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":5586},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":465695,"byte_end":465704,"line_start":33,"line_end":33,"column_start":9,"column_end":18},"name":"len_chars","qualname":"::text::line::Break::Newline::len_chars","value":"usize","parent":{"krate":0,"index":5582},"children":[],"decl_id":null,"docs":" The width of the \"newline\" token in chars.\n","sig":null,"attributes":[{"value":"/ The width of the \"newline\" token in chars.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":465640,"byte_end":465686,"line_start":32,"line_end":32,"column_start":9,"column_end":55}}]},{"kind":"StructVariant","id":{"krate":0,"index":5587},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":465795,"byte_end":465798,"line_start":36,"line_end":36,"column_start":5,"column_end":8},"name":"End","qualname":"::text::line::Break::End","value":"Break::End { byte, char }","parent":{"krate":0,"index":5576},"children":[],"decl_id":null,"docs":" The end of the string has been reached, with the given length.\n","sig":null,"attributes":[{"value":"/ The end of the string has been reached, with the given length.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":465724,"byte_end":465790,"line_start":35,"line_end":35,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":5588},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":465844,"byte_end":465848,"line_start":38,"line_end":38,"column_start":9,"column_end":13},"name":"byte","qualname":"::text::line::Break::End::byte","value":"usize","parent":{"krate":0,"index":5587},"children":[],"decl_id":null,"docs":" The ending byte index.\n","sig":null,"attributes":[{"value":"/ The ending byte index.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":465809,"byte_end":465835,"line_start":37,"line_end":37,"column_start":9,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":5589},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":465900,"byte_end":465904,"line_start":40,"line_end":40,"column_start":9,"column_end":13},"name":"char","qualname":"::text::line::Break::End::char","value":"usize","parent":{"krate":0,"index":5587},"children":[],"decl_id":null,"docs":" The ending char index.\n","sig":null,"attributes":[{"value":"/ The ending char index.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":465865,"byte_end":465891,"line_start":39,"line_end":39,"column_start":9,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":5576},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":464608,"byte_end":464613,"line_start":10,"line_end":10,"column_start":10,"column_end":15},"name":"Break","qualname":"::text::line::Break","value":"enum Break {\n    Wrap {\n            byte: usize,\n            char: usize,\n            len_bytes: usize,\n            len_chars: usize,\n        },\n    Newline {\n            byte: usize,\n            char: usize,\n            len_bytes: usize,\n            len_chars: usize,\n        },\n    End {\n            byte: usize,\n            char: usize,\n        },\n}","parent":null,"children":[{"krate":0,"index":5577},{"krate":0,"index":5582},{"krate":0,"index":5587}],"decl_id":null,"docs":" The two types of **Break** indices returned by the **WrapIndicesBy** iterators.\n","sig":null,"attributes":[{"value":"/ The two types of **Break** indices returned by the **WrapIndicesBy** iterators.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":464474,"byte_end":464557,"line_start":8,"line_end":8,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":5599},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":466051,"byte_end":466060,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"NextBreak","qualname":"::text::line::NextBreak","value":"NextBreak { break_, width, height }","parent":null,"children":[{"krate":0,"index":5600},{"krate":0,"index":5601},{"krate":0,"index":5602}],"decl_id":null,"docs":" The type yielded by functions dedicated to finding the next line break.\n","sig":null,"attributes":[{"value":"/ The type yielded by functions dedicated to finding the next line break.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":465923,"byte_end":465998,"line_start":44,"line_end":44,"column_start":1,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":5600},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":466105,"byte_end":466111,"line_start":48,"line_end":48,"column_start":9,"column_end":15},"name":"break_","qualname":"::text::line::NextBreak::break_","value":"text::line::Break","parent":{"krate":0,"index":5599},"children":[],"decl_id":null,"docs":" The reason for the break.\n","sig":null,"attributes":[{"value":"/ The reason for the break.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":466067,"byte_end":466096,"line_start":47,"line_end":47,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":5601},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":466165,"byte_end":466170,"line_start":50,"line_end":50,"column_start":9,"column_end":14},"name":"width","qualname":"::text::line::NextBreak::width","value":"f32","parent":{"krate":0,"index":5599},"children":[],"decl_id":null,"docs":" The total width of the line.\n","sig":null,"attributes":[{"value":"/ The total width of the line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":466124,"byte_end":466156,"line_start":49,"line_end":49,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5602},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":466227,"byte_end":466233,"line_start":52,"line_end":52,"column_start":9,"column_end":15},"name":"height","qualname":"::text::line::NextBreak::height","value":"f32","parent":{"krate":0,"index":5599},"children":[],"decl_id":null,"docs":" The maximum heigh of the line.\n","sig":null,"attributes":[{"value":"/ The maximum heigh of the line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":466184,"byte_end":466218,"line_start":51,"line_end":51,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":5612},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":466644,"byte_end":466648,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"Info","qualname":"::text::line::Info","value":"Info { start_byte, start_char, end_break, width, height }","parent":null,"children":[{"krate":0,"index":5613},{"krate":0,"index":5614},{"krate":0,"index":5615},{"krate":0,"index":5616},{"krate":0,"index":5617}],"decl_id":null,"docs":" Information about a single line of text within a `&str`.","sig":null,"attributes":[{"value":"/ Information about a single line of text within a `&str`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":466246,"byte_end":466306,"line_start":55,"line_end":55,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":466307,"byte_end":466310,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ `Info` is a minimal amount of information that can be stored for efficient reasoning about","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":466311,"byte_end":466405,"line_start":57,"line_end":57,"column_start":1,"column_end":95}},{"value":"/ blocks of text given some `&str`. The `start` and `end_break` can be used for indexing into","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":466406,"byte_end":466501,"line_start":58,"line_end":58,"column_start":1,"column_end":96}},{"value":"/ the `&str`, and the `width` can be used for calculating line `Rect`s, alignment, etc.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":466502,"byte_end":466591,"line_start":59,"line_end":59,"column_start":1,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":5613},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":466746,"byte_end":466756,"line_start":63,"line_end":63,"column_start":9,"column_end":19},"name":"start_byte","qualname":"::text::line::Info::start_byte","value":"usize","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" The index into the `&str` that represents the first character within the line.\n","sig":null,"attributes":[{"value":"/ The index into the `&str` that represents the first character within the line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":466655,"byte_end":466737,"line_start":62,"line_end":62,"column_start":5,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":5614},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":466853,"byte_end":466863,"line_start":65,"line_end":65,"column_start":9,"column_end":19},"name":"start_char","qualname":"::text::line::Info::start_char","value":"usize","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" The character index into the `&str` of the first character in the line.\n","sig":null,"attributes":[{"value":"/ The character index into the `&str` of the first character in the line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":466769,"byte_end":466844,"line_start":64,"line_end":64,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":5615},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":467147,"byte_end":467156,"line_start":69,"line_end":69,"column_start":9,"column_end":18},"name":"end_break","qualname":"::text::line::Info::end_break","value":"text::line::Break","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" The index within the `&str` at which this line breaks into a new line, along with the\n index at which the following line begins. The variant describes whether the break is\n caused by a `Newline` character or a `Wrap` by the given wrap function.\n","sig":null,"attributes":[{"value":"/ The index within the `&str` at which this line breaks into a new line, along with the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":466876,"byte_end":466965,"line_start":66,"line_end":66,"column_start":5,"column_end":94}},{"value":"/ index at which the following line begins. The variant describes whether the break is","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":466970,"byte_end":467058,"line_start":67,"line_end":67,"column_start":5,"column_end":93}},{"value":"/ caused by a `Newline` character or a `Wrap` by the given wrap function.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":467063,"byte_end":467138,"line_start":68,"line_end":68,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":5616},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":467232,"byte_end":467237,"line_start":71,"line_end":71,"column_start":9,"column_end":14},"name":"width","qualname":"::text::line::Info::width","value":"f32","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" The total width of all characters within the line.\n","sig":null,"attributes":[{"value":"/ The total width of all characters within the line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":467169,"byte_end":467223,"line_start":70,"line_end":70,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":5617},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":467310,"byte_end":467316,"line_start":73,"line_end":73,"column_start":9,"column_end":15},"name":"height","qualname":"::text::line::Info::height","value":"f32","parent":{"krate":0,"index":5612},"children":[],"decl_id":null,"docs":" The greatest height of all characters yielded.\n","sig":null,"attributes":[{"value":"/ The greatest height of all characters yielded.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":467251,"byte_end":467301,"line_start":72,"line_end":72,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":3920},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":467807,"byte_end":467812,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"Infos","qualname":"::text::line::Infos","value":"Infos {  }","parent":null,"children":[{"krate":0,"index":3923},{"krate":0,"index":3924},{"krate":0,"index":3925},{"krate":0,"index":3926},{"krate":0,"index":3927},{"krate":0,"index":3928},{"krate":0,"index":3929},{"krate":0,"index":3930}],"decl_id":null,"docs":" An iterator yielding an `Info` struct for each line in the given `text` wrapped by the\n given `next_break_fn`.","sig":null,"attributes":[{"value":"/ An iterator yielding an `Info` struct for each line in the given `text` wrapped by the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":467329,"byte_end":467419,"line_start":76,"line_end":76,"column_start":1,"column_end":91}},{"value":"/ given `next_break_fn`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":467420,"byte_end":467446,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":467447,"byte_end":467450,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ `Infos` is a fundamental part of performing lazy reasoning about text within conrod.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":467451,"byte_end":467539,"line_start":79,"line_end":79,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":467540,"byte_end":467543,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ Construct an `Infos` iterator via the [infos function](./fn.infos.html) and its two builder","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":467544,"byte_end":467639,"line_start":81,"line_end":81,"column_start":1,"column_end":96}},{"value":"/ methods, [wrap_by_character](./struct.Infos.html#method.wrap_by_character) and","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":467640,"byte_end":467722,"line_start":82,"line_end":82,"column_start":1,"column_end":83}},{"value":"/ [wrap_by_whitespace](./struct.Infos.html#method.wrap_by_whitespace).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":467723,"byte_end":467795,"line_start":83,"line_end":83,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":5627},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":468310,"byte_end":468315,"line_start":100,"line_end":100,"column_start":12,"column_end":17},"name":"Rects","qualname":"::text::line::Rects","value":"Rects {  }","parent":null,"children":[{"krate":0,"index":5629},{"krate":0,"index":5630},{"krate":0,"index":5631},{"krate":0,"index":5632},{"krate":0,"index":5633},{"krate":0,"index":5634}],"decl_id":null,"docs":" An iterator yielding a `Rect` for each line in\n","sig":null,"attributes":[{"value":"/ An iterator yielding a `Rect` for each line in","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":468231,"byte_end":468281,"line_start":98,"line_end":98,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":3931},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":468708,"byte_end":468721,"line_start":114,"line_end":114,"column_start":12,"column_end":25},"name":"SelectedRects","qualname":"::text::line::SelectedRects","value":"SelectedRects {  }","parent":null,"children":[{"krate":0,"index":3934}],"decl_id":null,"docs":" An iterator yielding a `Rect` for each selected line in a block of text.","sig":null,"attributes":[{"value":"/ An iterator yielding a `Rect` for each selected line in a block of text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":468468,"byte_end":468544,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":468545,"byte_end":468548,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ The yielded `Rect`s represent the selected range within each line of text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":468549,"byte_end":468627,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":468628,"byte_end":468631,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ Lines that do not contain any selected text will be skipped.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":468632,"byte_end":468696,"line_start":113,"line_end":113,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":3935},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":468930,"byte_end":468944,"line_start":120,"line_end":120,"column_start":10,"column_end":24},"name":"NextBreakFnPtr","qualname":"::text::line::NextBreakFnPtr","value":"fn(: &str, : &text::Font, : FontSize, : Scalar) -> NextBreak","parent":null,"children":[],"decl_id":null,"docs":" An alias for function pointers that are compatible with the `Block`'s required text\n wrapping function.\n","sig":null,"attributes":[{"value":"/ An alias for function pointers that are compatible with the `Block`'s required text","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":468810,"byte_end":468897,"line_start":118,"line_end":118,"column_start":1,"column_end":88}},{"value":"/ wrapping function.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":468898,"byte_end":468920,"line_start":119,"line_end":119,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3937},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":469078,"byte_end":469088,"line_start":124,"line_end":124,"column_start":12,"column_end":22},"name":"byte_index","qualname":"<Break>::byte_index","value":"fn byte_index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index at which the break occurs.\n","sig":null,"attributes":[{"value":"/ Return the index at which the break occurs.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":469019,"byte_end":469066,"line_start":123,"line_end":123,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3938},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":469444,"byte_end":469454,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"char_index","qualname":"<Break>::char_index","value":"fn char_index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index of the `char` at which the break occurs.","sig":null,"attributes":[{"value":"/ Return the index of the `char` at which the break occurs.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":469281,"byte_end":469342,"line_start":132,"line_end":132,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":469347,"byte_end":469350,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ To clarify, this index is to be used in relation to the `Chars` iterator.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":469355,"byte_end":469432,"line_start":134,"line_end":134,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3942},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":469709,"byte_end":469714,"line_start":148,"line_end":148,"column_start":8,"column_end":13},"name":"clone","qualname":"<Infos as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3944},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":470162,"byte_end":470170,"line_start":164,"line_end":164,"column_start":12,"column_end":20},"name":"end_byte","qualname":"<Info>::end_byte","value":"fn end_byte(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The end of the byte index range for indexing into the slice.\n","sig":null,"attributes":[{"value":"/ The end of the byte index range for indexing into the slice.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":470086,"byte_end":470150,"line_start":163,"line_end":163,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3945},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":470307,"byte_end":470315,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"end_char","qualname":"<Info>::end_char","value":"fn end_char(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The end of the index range for indexing into the slice.\n","sig":null,"attributes":[{"value":"/ The end of the index range for indexing into the slice.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":470236,"byte_end":470295,"line_start":168,"line_end":168,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3946},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":470466,"byte_end":470476,"line_start":174,"line_end":174,"column_start":12,"column_end":22},"name":"byte_range","qualname":"<Info>::byte_range","value":"fn byte_range(Self) -> std::ops::Range<usize>","parent":null,"children":[],"decl_id":null,"docs":" The index range for indexing (via bytes) into the original str slice.\n","sig":null,"attributes":[{"value":"/ The index range for indexing (via bytes) into the original str slice.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":470381,"byte_end":470454,"line_start":173,"line_end":173,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3947},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":470659,"byte_end":470669,"line_start":179,"line_end":179,"column_start":12,"column_end":22},"name":"char_range","qualname":"<Info>::char_range","value":"fn char_range(Self) -> std::ops::Range<usize>","parent":null,"children":[],"decl_id":null,"docs":" The index range for indexing into a `char` iterator over the original str slice.\n","sig":null,"attributes":[{"value":"/ The index range for indexing into a `char` iterator over the original str slice.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":470563,"byte_end":470647,"line_start":178,"line_end":178,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":3950},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":470957,"byte_end":470974,"line_start":187,"line_end":187,"column_start":12,"column_end":29},"name":"wrap_by_character","qualname":"<Infos>::wrap_by_character","value":"fn wrap_by_character(Self, Scalar) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts `Self` into an `Infos` whose lines are wrapped at the character that first\n causes the line width to exceed the given `max_width`.\n","sig":null,"attributes":[{"value":"/ Converts `Self` into an `Infos` whose lines are wrapped at the character that first","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":470795,"byte_end":470882,"line_start":185,"line_end":185,"column_start":5,"column_end":92}},{"value":"/ causes the line width to exceed the given `max_width`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":470887,"byte_end":470945,"line_start":186,"line_end":186,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3951},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":471308,"byte_end":471326,"line_start":195,"line_end":195,"column_start":12,"column_end":30},"name":"wrap_by_whitespace","qualname":"<Infos>::wrap_by_whitespace","value":"fn wrap_by_whitespace(Self, Scalar) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts `Self` into an `Infos` whose lines are wrapped at the whitespace prior to the\n character that causes the line width to exceed the given `max_width`.\n","sig":null,"attributes":[{"value":"/ Converts `Self` into an `Infos` whose lines are wrapped at the whitespace prior to the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":471128,"byte_end":471218,"line_start":193,"line_end":193,"column_start":5,"column_end":95}},{"value":"/ character that causes the line width to exceed the given `max_width`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":471223,"byte_end":471296,"line_start":194,"line_end":194,"column_start":5,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":3962},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":480145,"byte_end":480150,"line_start":491,"line_end":491,"column_start":8,"column_end":13},"name":"width","qualname":"::text::line::width","value":"fn width(&str, &text::Font, FontSize) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Produce the width of the given line of text including spaces (i.e. ' ').\n","sig":null,"attributes":[{"value":"/ Produce the width of the given line of text including spaces (i.e. ' ').","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":480061,"byte_end":480137,"line_start":490,"line_end":490,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":3963},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":480691,"byte_end":480707,"line_start":507,"line_end":507,"column_start":8,"column_end":24},"name":"infos_wrapped_by","qualname":"::text::line::infos_wrapped_by","value":"fn infos_wrapped_by<'a, F>(&'a str, &'a text::Font, FontSize, Scalar, F)\n-> Infos where F: for<'b> FnMut(&'b str, &'b text::Font, FontSize, Scalar) ->\nNextBreak","parent":null,"children":[],"decl_id":null,"docs":" Produce an `Infos` iterator wrapped by the given `next_break_fn`.\n","sig":null,"attributes":[{"value":"/ Produce an `Infos` iterator wrapped by the given `next_break_fn`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":480614,"byte_end":480683,"line_start":506,"line_end":506,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":3967},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":481416,"byte_end":481421,"line_start":533,"line_end":533,"column_start":8,"column_end":13},"name":"infos","qualname":"::text::line::infos","value":"fn infos<'a>(&'a str, &'a text::Font, FontSize) -> Infos","parent":null,"children":[],"decl_id":null,"docs":" Produce an `Infos` iterator that yields an `Info` for every line in the given text.","sig":null,"attributes":[{"value":"/ Produce an `Infos` iterator that yields an `Info` for every line in the given text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":481166,"byte_end":481253,"line_start":529,"line_end":529,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":481254,"byte_end":481257,"line_start":530,"line_end":530,"column_start":1,"column_end":4}},{"value":"/ The produced `Infos` iterator will not wrap the text, and only break each line via newline","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":481258,"byte_end":481352,"line_start":531,"line_end":531,"column_start":1,"column_end":95}},{"value":"/ characters within the text (either `\\n` or `\\r\\n`).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":481353,"byte_end":481408,"line_start":532,"line_end":532,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":3970},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":481886,"byte_end":481905,"line_start":551,"line_end":551,"column_start":8,"column_end":27},"name":"infos_maybe_wrapped","qualname":"::text::line::infos_maybe_wrapped","value":"fn infos_maybe_wrapped<'a>(&'a str, &'a text::Font, FontSize, Option<Wrap>,\nScalar) -> Infos","parent":null,"children":[],"decl_id":null,"docs":" Simplify the retrieval of line information for text that may or may not be wrapped.\n","sig":null,"attributes":[{"value":"/ Simplify the retrieval of line information for text that may or may not be wrapped.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":481791,"byte_end":481878,"line_start":550,"line_end":550,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":3972},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":482656,"byte_end":482661,"line_start":571,"line_end":571,"column_start":8,"column_end":13},"name":"rects","qualname":"::text::line::rects","value":"fn rects<I>(I, FontSize, Scalar, text::Justify, Scalar) -> Rects<I> where\nI: Iterator<Item = Info>","parent":null,"children":[],"decl_id":null,"docs":" Produce an iterator yielding the bounding `Rect` for each line in the text.","sig":null,"attributes":[{"value":"/ Produce an iterator yielding the bounding `Rect` for each line in the text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":482331,"byte_end":482410,"line_start":565,"line_end":565,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":482411,"byte_end":482414,"line_start":566,"line_end":566,"column_start":1,"column_end":4}},{"value":"/ Yielded `Rect`s will begin with the top-left of the first line at a [0.0, 0.0].","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":482415,"byte_end":482498,"line_start":567,"line_end":567,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":482499,"byte_end":482502,"line_start":568,"line_end":568,"column_start":1,"column_end":4}},{"value":"/ This function assumes that `font_size` and `max_width` are the same as those used to produce","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":482503,"byte_end":482599,"line_start":569,"line_end":569,"column_start":1,"column_end":97}},{"value":"/ the `Info`s yielded by the `infos` Iterator.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":482600,"byte_end":482648,"line_start":570,"line_end":570,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":3975},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":483994,"byte_end":484008,"line_start":612,"line_end":612,"column_start":8,"column_end":22},"name":"selected_rects","qualname":"::text::line::selected_rects","value":"fn selected_rects<'a,\nI>(I, &'a text::Font, FontSize, text::cursor::Index, text::cursor::Index)\n-> SelectedRects where I: Iterator<Item = (&'a str, Rect)>","parent":null,"children":[],"decl_id":null,"docs":" Produces an iterator yielding a `Rect` for the selected range in each selected line in a block\n of text.","sig":null,"attributes":[{"value":"/ Produces an iterator yielding a `Rect` for the selected range in each selected line in a block","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":483723,"byte_end":483821,"line_start":606,"line_end":606,"column_start":1,"column_end":99}},{"value":"/ of text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":483822,"byte_end":483834,"line_start":607,"line_end":607,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":483835,"byte_end":483838,"line_start":608,"line_end":608,"column_start":1,"column_end":4}},{"value":"/ The yielded `Rect`s represent the selected range within each line of text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":483839,"byte_end":483917,"line_start":609,"line_end":609,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":483918,"byte_end":483921,"line_start":610,"line_end":610,"column_start":1,"column_end":4}},{"value":"/ Lines that do not contain any selected text will be skipped.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":483922,"byte_end":483986,"line_start":611,"line_end":611,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3983},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":484606,"byte_end":484610,"line_start":638,"line_end":638,"column_start":8,"column_end":12},"name":"next","qualname":"<Infos as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3987},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":488613,"byte_end":488617,"line_start":753,"line_end":753,"column_start":8,"column_end":12},"name":"next","qualname":"<Rects<I> as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3994},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":489973,"byte_end":489977,"line_start":795,"line_end":795,"column_start":8,"column_end":12},"name":"next","qualname":"<SelectedRects as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3996},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402117,"byte_end":402119,"line_start":11,"line_end":11,"column_start":9,"column_end":11},"name":"rt","qualname":"::text::rt","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","parent":null,"children":[{"krate":0,"index":3997},{"krate":0,"index":3998},{"krate":0,"index":4001},{"krate":0,"index":4004},{"krate":0,"index":4007},{"krate":0,"index":4010},{"krate":0,"index":4013}],"decl_id":null,"docs":" Re-exported RustType geometric types.\n","sig":null,"attributes":[{"value":"/ Re-exported RustType geometric types.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402126,"byte_end":402167,"line_start":12,"line_end":12,"column_start":5,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":4050},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402576,"byte_end":402590,"line_start":26,"line_end":26,"column_start":10,"column_end":24},"name":"FontCollection","qualname":"::text::FontCollection","value":"rusttype::FontCollection","parent":null,"children":[],"decl_id":null,"docs":" The RustType `FontCollection` type used by nannou.\n","sig":null,"attributes":[{"value":"/ The RustType `FontCollection` type used by nannou.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402512,"byte_end":402566,"line_start":25,"line_end":25,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":4051},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402682,"byte_end":402686,"line_start":28,"line_end":28,"column_start":10,"column_end":14},"name":"Font","qualname":"::text::Font","value":"rusttype::Font","parent":null,"children":[],"decl_id":null,"docs":" The RustType `Font` type used by nannou.\n","sig":null,"attributes":[{"value":"/ The RustType `Font` type used by nannou.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402628,"byte_end":402672,"line_start":27,"line_end":27,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":4052},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402779,"byte_end":402794,"line_start":30,"line_end":30,"column_start":10,"column_end":25},"name":"PositionedGlyph","qualname":"::text::PositionedGlyph","value":"rusttype::PositionedGlyph","parent":null,"children":[],"decl_id":null,"docs":" The RustType `PositionedGlyph` type used by nannou.\n","sig":null,"attributes":[{"value":"/ The RustType `PositionedGlyph` type used by nannou.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402714,"byte_end":402769,"line_start":29,"line_end":29,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":4053},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402880,"byte_end":402886,"line_start":33,"line_end":33,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::text::Scalar","value":"crate::geom::scalar::Default","parent":null,"children":[],"decl_id":null,"docs":" The type used for scalar values.\n","sig":null,"attributes":[{"value":"/ The type used for scalar values.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402834,"byte_end":402870,"line_start":32,"line_end":32,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":4054},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402977,"byte_end":402982,"line_start":36,"line_end":36,"column_start":10,"column_end":15},"name":"Point","qualname":"::text::Point","value":"crate::geom::Point2","parent":null,"children":[],"decl_id":null,"docs":" The point type used when working with text.\n","sig":null,"attributes":[{"value":"/ The point type used when working with text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402920,"byte_end":402967,"line_start":35,"line_end":35,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":4055},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":403072,"byte_end":403080,"line_start":39,"line_end":39,"column_start":10,"column_end":18},"name":"FontSize","qualname":"::text::FontSize","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" The type used to specify `FontSize` in font points.\n","sig":null,"attributes":[{"value":"/ The type used to specify `FontSize` in font points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":403007,"byte_end":403062,"line_start":38,"line_end":38,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4056},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":403142,"byte_end":403149,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"Builder","qualname":"::text::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":4058},{"krate":0,"index":4059}],"decl_id":null,"docs":" A context for building some **Text**.\n","sig":null,"attributes":[{"value":"/ A context for building some **Text**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":403089,"byte_end":403130,"line_start":41,"line_end":41,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5638},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":403304,"byte_end":403308,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"Text","qualname":"::text::Text","value":"Text {  }","parent":null,"children":[{"krate":0,"index":5640},{"krate":0,"index":5641},{"krate":0,"index":5642},{"krate":0,"index":5643},{"krate":0,"index":5644}],"decl_id":null,"docs":" An instance of some multi-line text and its layout.\n","sig":null,"attributes":[{"value":"/ An instance of some multi-line text and its layout.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":403220,"byte_end":403275,"line_start":47,"line_end":47,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":5648},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":403624,"byte_end":403629,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"Lines","qualname":"::text::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":5651},{"krate":0,"index":5652}],"decl_id":null,"docs":" An iterator yielding each line within the given `text` as a new `&str`, where the start and end\n indices into each line are provided by the given iterator.\n","sig":null,"attributes":[{"value":"/ An iterator yielding each line within the given `text` as a new `&str`, where the start and end","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":403433,"byte_end":403532,"line_start":57,"line_end":57,"column_start":1,"column_end":100}},{"value":"/ indices into each line are provided by the given iterator.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":403533,"byte_end":403595,"line_start":58,"line_end":58,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":4060},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":403756,"byte_end":403769,"line_start":66,"line_end":66,"column_start":10,"column_end":23},"name":"TextLineInfos","qualname":"::text::TextLineInfos","value":"line::Infos","parent":null,"children":[],"decl_id":null,"docs":" An alias for the line info iterator yielded by `Text::line_infos`.\n","sig":null,"attributes":[{"value":"/ An alias for the line info iterator yielded by `Text::line_infos`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":403676,"byte_end":403746,"line_start":65,"line_end":65,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":4062},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":403886,"byte_end":403895,"line_start":69,"line_end":69,"column_start":10,"column_end":19},"name":"TextLines","qualname":"::text::TextLines","value":"Lines","parent":null,"children":[],"decl_id":null,"docs":" An alias for the line iterator yielded by `Text::lines`.\n","sig":null,"attributes":[{"value":"/ An alias for the line iterator yielded by `Text::lines`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":403816,"byte_end":403876,"line_start":68,"line_end":68,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":5657},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":404301,"byte_end":404314,"line_start":79,"line_end":79,"column_start":12,"column_end":25},"name":"TextLineRects","qualname":"::text::TextLineRects","value":"TextLineRects {  }","parent":null,"children":[{"krate":0,"index":5659},{"krate":0,"index":5660}],"decl_id":null,"docs":" An alias for the line rect iterator yielded by `Text::line_rects`.\n","sig":null,"attributes":[{"value":"/ An alias for the line rect iterator yielded by `Text::line_rects`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":404202,"byte_end":404272,"line_start":77,"line_end":77,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":4066},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":404449,"byte_end":404467,"line_start":85,"line_end":85,"column_start":10,"column_end":28},"name":"TextLinesWithRects","qualname":"::text::TextLinesWithRects","value":"std::iter::Zip<TextLines, TextLineRects>","parent":null,"children":[],"decl_id":null,"docs":" An alias for the iterator yielded by `Text::lines_with_rects`.\n","sig":null,"attributes":[{"value":"/ An alias for the iterator yielded by `Text::lines_with_rects`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":404373,"byte_end":404439,"line_start":84,"line_end":84,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":4068},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":404600,"byte_end":404617,"line_start":88,"line_end":88,"column_start":10,"column_end":27},"name":"TextGlyphsPerLine","qualname":"::text::TextGlyphsPerLine","value":"glyph::RectsPerLine","parent":null,"children":[],"decl_id":null,"docs":" An alias for the iterator yielded by `Text::glyphs_per_line`.\n","sig":null,"attributes":[{"value":"/ An alias for the iterator yielded by `Text::glyphs_per_line`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":404525,"byte_end":404590,"line_start":87,"line_end":87,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":4070},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":404740,"byte_end":404750,"line_start":91,"line_end":91,"column_start":10,"column_end":20},"name":"TextGlyphs","qualname":"::text::TextGlyphs","value":"std::iter::FlatMap<TextGlyphsPerLine, glyph::Rects,\nfn(: glyph::Rects) -> glyph::Rects>","parent":null,"children":[],"decl_id":null,"docs":" An alias for the iterator yielded by `Text::glyphs`.\n","sig":null,"attributes":[{"value":"/ An alias for the iterator yielded by `Text::glyphs`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":404674,"byte_end":404730,"line_start":90,"line_end":90,"column_start":1,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5665},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":405006,"byte_end":405011,"line_start":100,"line_end":100,"column_start":5,"column_end":10},"name":"Start","qualname":"::text::Align::Start","value":"Align::Start","parent":{"krate":0,"index":5664},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5667},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":405017,"byte_end":405023,"line_start":101,"line_end":101,"column_start":5,"column_end":11},"name":"Middle","qualname":"::text::Align::Middle","value":"Align::Middle","parent":{"krate":0,"index":5664},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5669},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":405029,"byte_end":405032,"line_start":102,"line_end":102,"column_start":5,"column_end":8},"name":"End","qualname":"::text::Align::End","value":"Align::End","parent":{"krate":0,"index":5664},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5664},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":404994,"byte_end":404999,"line_start":99,"line_end":99,"column_start":10,"column_end":15},"name":"Align","qualname":"::text::Align","value":"enum Align { Start, Middle, End, }","parent":null,"children":[{"krate":0,"index":5665},{"krate":0,"index":5667},{"krate":0,"index":5669}],"decl_id":null,"docs":" Alignment along an axis.\n","sig":null,"attributes":[{"value":"/ Alignment along an axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":404888,"byte_end":404916,"line_start":97,"line_end":97,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5690},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":405238,"byte_end":405242,"line_start":109,"line_end":109,"column_start":5,"column_end":9},"name":"Left","qualname":"::text::Justify::Left","value":"Justify::Left","parent":{"krate":0,"index":5689},"children":[],"decl_id":null,"docs":" Align text to the start of the bounding `Rect`'s *x* axis.\n","sig":null,"attributes":[{"value":"/ Align text to the start of the bounding `Rect`'s *x* axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":405171,"byte_end":405233,"line_start":108,"line_end":108,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5692},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":405301,"byte_end":405307,"line_start":111,"line_end":111,"column_start":5,"column_end":11},"name":"Center","qualname":"::text::Justify::Center","value":"Justify::Center","parent":{"krate":0,"index":5689},"children":[],"decl_id":null,"docs":" Symmetrically align text along the *y* axis.\n","sig":null,"attributes":[{"value":"/ Symmetrically align text along the *y* axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":405248,"byte_end":405296,"line_start":110,"line_end":110,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5694},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":405378,"byte_end":405383,"line_start":113,"line_end":113,"column_start":5,"column_end":10},"name":"Right","qualname":"::text::Justify::Right","value":"Justify::Right","parent":{"krate":0,"index":5689},"children":[],"decl_id":null,"docs":" Align text to the end of the bounding `Rect`'s *x* axis.\n","sig":null,"attributes":[{"value":"/ Align text to the end of the bounding `Rect`'s *x* axis.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":405313,"byte_end":405373,"line_start":112,"line_end":112,"column_start":5,"column_end":65}}]},{"kind":"Enum","id":{"krate":0,"index":5689},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":405157,"byte_end":405164,"line_start":107,"line_end":107,"column_start":10,"column_end":17},"name":"Justify","qualname":"::text::Justify","value":"enum Justify { Left, Center, Right, }","parent":null,"children":[{"krate":0,"index":5690},{"krate":0,"index":5692},{"krate":0,"index":5694}],"decl_id":null,"docs":" A type used for referring to typographic alignment of `Text`.\n","sig":null,"attributes":[{"value":"/ A type used for referring to typographic alignment of `Text`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":405037,"byte_end":405102,"line_start":105,"line_end":105,"column_start":1,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5708},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":405767,"byte_end":405776,"line_start":124,"line_end":124,"column_start":5,"column_end":14},"name":"Character","qualname":"::text::Wrap::Character","value":"Wrap::Character","parent":{"krate":0,"index":5707},"children":[],"decl_id":null,"docs":" Wrap at the first character that exceeds the width.\n","sig":null,"attributes":[{"value":"/ Wrap at the first character that exceeds the width.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":405707,"byte_end":405762,"line_start":123,"line_end":123,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5710},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":405837,"byte_end":405847,"line_start":126,"line_end":126,"column_start":5,"column_end":15},"name":"Whitespace","qualname":"::text::Wrap::Whitespace","value":"Wrap::Whitespace","parent":{"krate":0,"index":5707},"children":[],"decl_id":null,"docs":" Wrap at the first word that exceeds the width.\n","sig":null,"attributes":[{"value":"/ Wrap at the first word that exceeds the width.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":405782,"byte_end":405832,"line_start":125,"line_end":125,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":5707},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":405696,"byte_end":405700,"line_start":122,"line_end":122,"column_start":10,"column_end":14},"name":"Wrap","qualname":"::text::Wrap","value":"enum Wrap { Character, Whitespace, }","parent":null,"children":[{"krate":0,"index":5708},{"krate":0,"index":5710}],"decl_id":null,"docs":" The way in which text should wrap around the width.\n","sig":null,"attributes":[{"value":"/ The way in which text should wrap around the width.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":405590,"byte_end":405645,"line_start":120,"line_end":120,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4074},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":405905,"byte_end":405909,"line_start":130,"line_end":130,"column_start":8,"column_end":12},"name":"from","qualname":"<Builder as std::convert::From>::from","value":"fn from(Cow) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4077},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":406120,"byte_end":406124,"line_start":140,"line_end":140,"column_start":8,"column_end":12},"name":"from","qualname":"<Builder as std::convert::From>::from","value":"fn from(&'a str) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4079},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":406266,"byte_end":406270,"line_start":147,"line_end":147,"column_start":8,"column_end":12},"name":"from","qualname":"<Builder as std::convert::From>::from","value":"fn from(String) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4084},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":406690,"byte_end":406699,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"font_size","qualname":"<Builder>::font_size","value":"fn font_size(Self, FontSize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The font size to use for the text.\n","sig":null,"attributes":[{"value":"/ The font size to use for the text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":406640,"byte_end":406678,"line_start":163,"line_end":163,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4086},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":406945,"byte_end":406954,"line_start":171,"line_end":171,"column_start":12,"column_end":21},"name":"line_wrap","qualname":"<Builder>::line_wrap","value":"fn line_wrap(Self, Option<Wrap>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify whether or not text should be wrapped around some width and how to do so.","sig":null,"attributes":[{"value":"/ Specify whether or not text should be wrapped around some width and how to do so.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":406790,"byte_end":406875,"line_start":168,"line_end":168,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":406880,"byte_end":406883,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The default value is `DEFAULT_LINE_WRAP`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":406888,"byte_end":406933,"line_start":170,"line_end":170,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4088},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":407197,"byte_end":407209,"line_start":178,"line_end":178,"column_start":12,"column_end":24},"name":"no_line_wrap","qualname":"<Builder>::no_line_wrap","value":"fn no_line_wrap(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify that the **Text** should not wrap lines around the width.","sig":null,"attributes":[{"value":"/ Specify that the **Text** should not wrap lines around the width.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":407059,"byte_end":407128,"line_start":175,"line_end":175,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":407133,"byte_end":407136,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Shorthand for `builder.line_wrap(None)`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":407141,"byte_end":407185,"line_start":177,"line_end":177,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4090},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":407455,"byte_end":407467,"line_start":185,"line_end":185,"column_start":12,"column_end":24},"name":"wrap_by_word","qualname":"<Builder>::wrap_by_word","value":"fn wrap_by_word(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Line wrap the **Text** at the beginning of the first word that exceeds the width.","sig":null,"attributes":[{"value":"/ Line wrap the **Text** at the beginning of the first word that exceeds the width.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":407283,"byte_end":407368,"line_start":182,"line_end":182,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":407373,"byte_end":407376,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Shorthand for `builder.line_wrap(Some(Wrap::Whitespace))`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":407381,"byte_end":407443,"line_start":184,"line_end":184,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":4092},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":407717,"byte_end":407734,"line_start":192,"line_end":192,"column_start":12,"column_end":29},"name":"wrap_by_character","qualname":"<Builder>::wrap_by_character","value":"fn wrap_by_character(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Line wrap the **Text** at the beginning of the first character that exceeds the width.","sig":null,"attributes":[{"value":"/ Line wrap the **Text** at the beginning of the first character that exceeds the width.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":407541,"byte_end":407631,"line_start":189,"line_end":189,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":407636,"byte_end":407639,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Shorthand for `builder.line_wrap(Some(Wrap::Character))`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":407644,"byte_end":407705,"line_start":191,"line_end":191,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4094},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":407895,"byte_end":407899,"line_start":197,"line_end":197,"column_start":12,"column_end":16},"name":"font","qualname":"<Builder>::font","value":"fn font(Self, Font) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A method for specifying the `Font` used for displaying the `Text`.\n","sig":null,"attributes":[{"value":"/ A method for specifying the `Font` used for displaying the `Text`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":407813,"byte_end":407883,"line_start":196,"line_end":196,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":4096},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":408069,"byte_end":408076,"line_start":202,"line_end":202,"column_start":12,"column_end":19},"name":"justify","qualname":"<Builder>::justify","value":"fn justify(Self, Justify) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe the end along the *x* axis to which the text should be aligned.\n","sig":null,"attributes":[{"value":"/ Describe the end along the *x* axis to which the text should be aligned.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":407981,"byte_end":408057,"line_start":201,"line_end":201,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":4098},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":408255,"byte_end":408267,"line_start":207,"line_end":207,"column_start":12,"column_end":24},"name":"left_justify","qualname":"<Builder>::left_justify","value":"fn left_justify(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align the text to the left of its bounding **Rect**'s *x* axis range.\n","sig":null,"attributes":[{"value":"/ Align the text to the left of its bounding **Rect**'s *x* axis range.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":408170,"byte_end":408243,"line_start":206,"line_end":206,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4100},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":408428,"byte_end":408442,"line_start":212,"line_end":212,"column_start":12,"column_end":26},"name":"center_justify","qualname":"<Builder>::center_justify","value":"fn center_justify(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align the text to the middle of its bounding **Rect**'s *x* axis range.\n","sig":null,"attributes":[{"value":"/ Align the text to the middle of its bounding **Rect**'s *x* axis range.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":408341,"byte_end":408416,"line_start":211,"line_end":211,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":4102},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":408604,"byte_end":408617,"line_start":217,"line_end":217,"column_start":12,"column_end":25},"name":"right_justify","qualname":"<Builder>::right_justify","value":"fn right_justify(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align the text to the right of its bounding **Rect**'s *x* axis range.\n","sig":null,"attributes":[{"value":"/ Align the text to the right of its bounding **Rect**'s *x* axis range.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":408518,"byte_end":408592,"line_start":216,"line_end":216,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":4104},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":408774,"byte_end":408786,"line_start":222,"line_end":222,"column_start":12,"column_end":24},"name":"line_spacing","qualname":"<Builder>::line_spacing","value":"fn line_spacing(Self, Scalar) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify how much vertical space should separate each line of text.\n","sig":null,"attributes":[{"value":"/ Specify how much vertical space should separate each line of text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":408692,"byte_end":408762,"line_start":221,"line_end":221,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":4106},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":408987,"byte_end":408994,"line_start":227,"line_end":227,"column_start":12,"column_end":19},"name":"y_align","qualname":"<Builder>::y_align","value":"fn y_align(Self, Align) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify how the whole text should be aligned along the y axis of its bounding rectangle\n","sig":null,"attributes":[{"value":"/ Specify how the whole text should be aligned along the y axis of its bounding rectangle","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":408884,"byte_end":408975,"line_start":226,"line_end":226,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":4108},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":409173,"byte_end":409182,"line_start":232,"line_end":232,"column_start":12,"column_end":21},"name":"align_top","qualname":"<Builder>::align_top","value":"fn align_top(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align the top edge of the text with the top edge of its bounding rectangle.\n","sig":null,"attributes":[{"value":"/ Align the top edge of the text with the top edge of its bounding rectangle.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":409082,"byte_end":409161,"line_start":231,"line_end":231,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":4110},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":409400,"byte_end":409414,"line_start":239,"line_end":239,"column_start":12,"column_end":26},"name":"align_middle_y","qualname":"<Builder>::align_middle_y","value":"fn align_middle_y(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align the middle of the text with the middle of the bounding rect along the y axis..","sig":null,"attributes":[{"value":"/ Align the middle of the text with the middle of the bounding rect along the y axis..","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":409253,"byte_end":409341,"line_start":236,"line_end":236,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":409346,"byte_end":409349,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ This is the default behaviour.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":409354,"byte_end":409388,"line_start":238,"line_end":238,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":4112},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":409587,"byte_end":409599,"line_start":244,"line_end":244,"column_start":12,"column_end":24},"name":"align_bottom","qualname":"<Builder>::align_bottom","value":"fn align_bottom(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align the bottom edge of the text with the bottom edge of its bounding rectangle.\n","sig":null,"attributes":[{"value":"/ Align the bottom edge of the text with the bottom edge of its bounding rectangle.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":409490,"byte_end":409575,"line_start":243,"line_end":243,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":4114},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":409736,"byte_end":409742,"line_start":249,"line_end":249,"column_start":12,"column_end":18},"name":"layout","qualname":"<Builder>::layout","value":"fn layout(Self, &Layout) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set all the parameters via an existing `Layout`\n","sig":null,"attributes":[{"value":"/ Set all the parameters via an existing `Layout`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":409673,"byte_end":409724,"line_start":248,"line_end":248,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4116},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":410162,"byte_end":410167,"line_start":260,"line_end":260,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"fn build(Self, geom::Rect) -> Text","parent":null,"children":[],"decl_id":null,"docs":" Build the text.","sig":null,"attributes":[{"value":"/ Build the text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":409833,"byte_end":409852,"line_start":253,"line_end":253,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":409857,"byte_end":409860,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This iterates over the text in order to pre-calculates the text's multi-line information","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":409865,"byte_end":409957,"line_start":255,"line_end":255,"column_start":5,"column_end":97}},{"value":"/ using the `line::infos` function.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":409962,"byte_end":409999,"line_start":256,"line_end":256,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":410004,"byte_end":410007,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ The given `rect` will be used for applying the layout including text alignment, positioning","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":410012,"byte_end":410107,"line_start":258,"line_end":258,"column_start":5,"column_end":100}},{"value":"/ of text, multi-line wrapping, etc,","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":410112,"byte_end":410150,"line_start":259,"line_end":259,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4120},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":411158,"byte_end":411168,"line_start":289,"line_end":289,"column_start":12,"column_end":22},"name":"line_infos","qualname":"<Text>::line_infos","value":"fn line_infos(&Self) -> &[line::Info]","parent":null,"children":[],"decl_id":null,"docs":" Produce an iterator yielding information about each line.\n","sig":null,"attributes":[{"value":"/ Produce an iterator yielding information about each line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":411085,"byte_end":411146,"line_start":288,"line_end":288,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4121},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":411282,"byte_end":411286,"line_start":294,"line_end":294,"column_start":12,"column_end":16},"name":"text","qualname":"<Text>::text","value":"fn text(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" The full string of text as a slice.\n","sig":null,"attributes":[{"value":"/ The full string of text as a slice.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":411231,"byte_end":411270,"line_start":293,"line_end":293,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4122},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":411395,"byte_end":411401,"line_start":299,"line_end":299,"column_start":12,"column_end":18},"name":"layout","qualname":"<Text>::layout","value":"fn layout(&Self) -> &Layout","parent":null,"children":[],"decl_id":null,"docs":" The layout parameters for this text instance.\n","sig":null,"attributes":[{"value":"/ The layout parameters for this text instance.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":411334,"byte_end":411383,"line_start":298,"line_end":298,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4123},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":411507,"byte_end":411511,"line_start":304,"line_end":304,"column_start":12,"column_end":16},"name":"font","qualname":"<Text>::font","value":"fn font(&Self) -> &Font","parent":null,"children":[],"decl_id":null,"docs":" The font used for this text instance.\n","sig":null,"attributes":[{"value":"/ The font used for this text instance.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":411454,"byte_end":411495,"line_start":303,"line_end":303,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":4124},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":411608,"byte_end":411617,"line_start":309,"line_end":309,"column_start":12,"column_end":21},"name":"num_lines","qualname":"<Text>::num_lines","value":"fn num_lines(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of lines in the text.\n","sig":null,"attributes":[{"value":"/ The number of lines in the text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":411560,"byte_end":411596,"line_start":308,"line_end":308,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4125},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":411844,"byte_end":411855,"line_start":316,"line_end":316,"column_start":12,"column_end":23},"name":"layout_rect","qualname":"<Text>::layout_rect","value":"fn layout_rect(&Self) -> geom::Rect","parent":null,"children":[],"decl_id":null,"docs":" The rectangle used to layout and build the text instance.","sig":null,"attributes":[{"value":"/ The rectangle used to layout and build the text instance.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":411677,"byte_end":411738,"line_start":313,"line_end":313,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":411743,"byte_end":411746,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ This is the same `Rect` that was passed to the `text::Builder::build` method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":411751,"byte_end":411832,"line_start":315,"line_end":315,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":4126},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":412012,"byte_end":412025,"line_start":321,"line_end":321,"column_start":12,"column_end":25},"name":"bounding_rect","qualname":"<Text>::bounding_rect","value":"fn bounding_rect(&Self) -> geom::Rect","parent":null,"children":[],"decl_id":null,"docs":" The rectangle that describes the min and max bounds along each axis reached by the text.\n","sig":null,"attributes":[{"value":"/ The rectangle that describes the min and max bounds along each axis reached by the text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":411908,"byte_end":412000,"line_start":320,"line_end":320,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":4127},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":412631,"byte_end":412653,"line_start":336,"line_end":336,"column_start":12,"column_end":34},"name":"bounding_rect_by_lines","qualname":"<Text>::bounding_rect_by_lines","value":"fn bounding_rect_by_lines(&Self) -> geom::Rect","parent":null,"children":[],"decl_id":null,"docs":" The rectangle that describes the min and max bounds along each axis reached by the text.","sig":null,"attributes":[{"value":"/ The rectangle that describes the min and max bounds along each axis reached by the text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":412369,"byte_end":412461,"line_start":332,"line_end":332,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":412466,"byte_end":412469,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ This is similar to `bounding_rect` but assumes that all lines have a height equal to","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":412474,"byte_end":412562,"line_start":334,"line_end":334,"column_start":5,"column_end":93}},{"value":"/ `font_size`, rather than using the exact height.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":412567,"byte_end":412619,"line_start":335,"line_end":335,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4129},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":413176,"byte_end":413181,"line_start":350,"line_end":350,"column_start":12,"column_end":17},"name":"width","qualname":"<Text>::width","value":"fn width(&Self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" The width of the widest line of text.\n","sig":null,"attributes":[{"value":"/ The width of the widest line of text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":413123,"byte_end":413164,"line_start":349,"line_end":349,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":4131},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":413405,"byte_end":413411,"line_start":357,"line_end":357,"column_start":12,"column_end":18},"name":"height","qualname":"<Text>::height","value":"fn height(&Self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" The exact height of the full text accounting for font size and line spacing..\n","sig":null,"attributes":[{"value":"/ The exact height of the full text accounting for font size and line spacing..","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":413312,"byte_end":413393,"line_start":356,"line_end":356,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":4132},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":414064,"byte_end":414079,"line_start":375,"line_end":375,"column_start":12,"column_end":27},"name":"height_by_lines","qualname":"<Text>::height_by_lines","value":"fn height_by_lines(&Self) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Determine the total height of a block of text with the given number of lines, font size and\n `line_spacing` (the space that separates each line of text).","sig":null,"attributes":[{"value":"/ Determine the total height of a block of text with the given number of lines, font size and","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":413728,"byte_end":413823,"line_start":370,"line_end":370,"column_start":5,"column_end":100}},{"value":"/ `line_spacing` (the space that separates each line of text).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":413828,"byte_end":413892,"line_start":371,"line_end":371,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":413897,"byte_end":413900,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The height of all lines of text are assumed to match the `font_size`. If looking for the exact","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":413905,"byte_end":414003,"line_start":373,"line_end":373,"column_start":5,"column_end":103}},{"value":"/ height, see the `exact_height` function.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":414008,"byte_end":414052,"line_start":374,"line_end":374,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4133},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":414331,"byte_end":414336,"line_start":384,"line_end":384,"column_start":12,"column_end":17},"name":"lines","qualname":"<Text>::lines","value":"fn lines(&Self) -> TextLines","parent":null,"children":[],"decl_id":null,"docs":" Produce an iterator yielding each wrapped line within the **Text**.\n","sig":null,"attributes":[{"value":"/ Produce an iterator yielding each wrapped line within the **Text**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":414248,"byte_end":414319,"line_start":383,"line_end":383,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":4135},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":414608,"byte_end":414618,"line_start":392,"line_end":392,"column_start":12,"column_end":22},"name":"line_rects","qualname":"<Text>::line_rects","value":"fn line_rects(&Self) -> TextLineRects","parent":null,"children":[],"decl_id":null,"docs":" The bounding rectangle for each line.\n","sig":null,"attributes":[{"value":"/ The bounding rectangle for each line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":414555,"byte_end":414596,"line_start":391,"line_end":391,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":4136},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":415067,"byte_end":415083,"line_start":405,"line_end":405,"column_start":12,"column_end":28},"name":"lines_with_rects","qualname":"<Text>::lines_with_rects","value":"fn lines_with_rects(&Self) -> TextLinesWithRects","parent":null,"children":[],"decl_id":null,"docs":" Produce an iterator yielding all lines of text alongside their bounding rects.\n","sig":null,"attributes":[{"value":"/ Produce an iterator yielding all lines of text alongside their bounding rects.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":414973,"byte_end":415055,"line_start":404,"line_end":404,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":4137},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":415296,"byte_end":415311,"line_start":411,"line_end":411,"column_start":12,"column_end":27},"name":"glyphs_per_line","qualname":"<Text>::glyphs_per_line","value":"fn glyphs_per_line(&Self) -> TextGlyphsPerLine","parent":null,"children":[],"decl_id":null,"docs":" Produce an iterator yielding iterators yielding every glyph alongside its bounding rect for\n each line.\n","sig":null,"attributes":[{"value":"/ Produce an iterator yielding iterators yielding every glyph alongside its bounding rect for","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":415170,"byte_end":415265,"line_start":409,"line_end":409,"column_start":5,"column_end":100}},{"value":"/ each line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":415270,"byte_end":415284,"line_start":410,"line_end":410,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":4138},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":415609,"byte_end":415615,"line_start":418,"line_end":418,"column_start":12,"column_end":18},"name":"glyphs","qualname":"<Text>::glyphs","value":"fn glyphs(&Self) -> TextGlyphs","parent":null,"children":[],"decl_id":null,"docs":" Produce an iterator yielding every glyph alongside its bounding rect.","sig":null,"attributes":[{"value":"/ Produce an iterator yielding every glyph alongside its bounding rect.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":415443,"byte_end":415516,"line_start":415,"line_end":415,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":415521,"byte_end":415524,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ This is the \"flattened\" version of the `glyphs_per_line` method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":415529,"byte_end":415597,"line_start":417,"line_end":417,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4139},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":415805,"byte_end":415816,"line_start":423,"line_end":423,"column_start":12,"column_end":23},"name":"path_events","qualname":"<Text>::path_events","value":"fn path_events<'b>(&'b Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Produce an iterator yielding the path events for every glyph in every line.\n","sig":null,"attributes":[{"value":"/ Produce an iterator yielding the path events for every glyph in every line.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":415714,"byte_end":415793,"line_start":422,"line_end":422,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":4150},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":418276,"byte_end":418285,"line_start":486,"line_end":486,"column_start":12,"column_end":21},"name":"rt_glyphs","qualname":"<Text>::rt_glyphs","value":"fn rt_glyphs<'b>(&'b Self, Vec2, Scalar) -> /*impl Trait*/ where 'b:'a","parent":null,"children":[],"decl_id":null,"docs":" Produce an iterator yielding positioned rusttype glyphs ready for caching.","sig":null,"attributes":[{"value":"/ Produce an iterator yielding positioned rusttype glyphs ready for caching.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":417963,"byte_end":418041,"line_start":481,"line_end":481,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":418046,"byte_end":418049,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ The window dimensions (in logical space) and scale_factor are required to transform glyph","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":418054,"byte_end":418147,"line_start":483,"line_end":483,"column_start":5,"column_end":98}},{"value":"/ positions into rusttype's pixel-space, ready for caching into the rusttype glyph cache","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":418152,"byte_end":418242,"line_start":484,"line_end":484,"column_start":5,"column_end":95}},{"value":"/ pixel buffer.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":418247,"byte_end":418264,"line_start":485,"line_end":485,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4153},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":418722,"byte_end":418732,"line_start":501,"line_end":501,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Text>::into_owned","value":"fn into_owned(Self) -> Text","parent":null,"children":[],"decl_id":null,"docs":" Converts this `Text` instance into an instance that owns the inner text string.\n","sig":null,"attributes":[{"value":"/ Converts this `Text` instance into an instance that owns the inner text string.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":418627,"byte_end":418710,"line_start":500,"line_end":500,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":4159},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":419442,"byte_end":419446,"line_start":535,"line_end":535,"column_start":8,"column_end":12},"name":"next","qualname":"<Lines as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4164},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":419701,"byte_end":419705,"line_start":546,"line_end":546,"column_start":8,"column_end":12},"name":"next","qualname":"<TextLineRects as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8193},"children":[],"decl_id":{"krate":2,"index":8195},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4166},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":420134,"byte_end":420149,"line_start":556,"line_end":556,"column_start":8,"column_end":23},"name":"height_by_lines","qualname":"::text::height_by_lines","value":"fn height_by_lines(usize, FontSize, Scalar) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Determine the total height of a block of text with the given number of lines, font size and\n `line_spacing` (the space that separates each line of text).","sig":null,"attributes":[{"value":"/ Determine the total height of a block of text with the given number of lines, font size and","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":419818,"byte_end":419913,"line_start":551,"line_end":551,"column_start":1,"column_end":96}},{"value":"/ `line_spacing` (the space that separates each line of text).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":419914,"byte_end":419978,"line_start":552,"line_end":552,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":419979,"byte_end":419982,"line_start":553,"line_end":553,"column_start":1,"column_end":4}},{"value":"/ The height of all lines of text are assumed to match the `font_size`. If looking for the exact","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":419983,"byte_end":420081,"line_start":554,"line_end":554,"column_start":1,"column_end":99}},{"value":"/ height, see the `exact_height` function.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":420082,"byte_end":420126,"line_start":555,"line_end":555,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":4167},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":420578,"byte_end":420590,"line_start":568,"line_end":568,"column_start":8,"column_end":20},"name":"exact_height","qualname":"::text::exact_height","value":"fn exact_height(Scalar, usize, FontSize, Scalar) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Determine the exact height of a block of text.","sig":null,"attributes":[{"value":"/ Determine the exact height of a block of text.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":420373,"byte_end":420423,"line_start":564,"line_end":564,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":420424,"byte_end":420427,"line_start":565,"line_end":565,"column_start":1,"column_end":4}},{"value":"/ The `first_line_height` can be retrieved via its `line::Info` which can be retrieved via the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":420428,"byte_end":420524,"line_start":566,"line_end":566,"column_start":1,"column_end":97}},{"value":"/ first element of a `line_infos` iterator.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":420525,"byte_end":420570,"line_start":567,"line_end":567,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":4168},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":421194,"byte_end":421199,"line_start":586,"line_end":586,"column_start":8,"column_end":13},"name":"lines","qualname":"::text::lines","value":"fn lines<I>(&str, I) -> Lines<, I> where I: Iterator<Item =\nstd::ops::Range<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Produce an iterator yielding each line within the given `text` as a new `&str`, where the\n start and end indices into each line are provided by the given iterator.\n","sig":null,"attributes":[{"value":"/ Produce an iterator yielding each line within the given `text` as a new `&str`, where the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":421016,"byte_end":421109,"line_start":584,"line_end":584,"column_start":1,"column_end":94}},{"value":"/ start and end indices into each line are provided by the given iterator.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":421110,"byte_end":421186,"line_start":585,"line_end":585,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":4170},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":421595,"byte_end":421610,"line_start":600,"line_end":600,"column_start":8,"column_end":23},"name":"position_offset","qualname":"::text::position_offset","value":"fn position_offset(usize, FontSize, f32, geom::Rect, Align) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" The position offset required to shift the associated text into the given bounding rectangle.","sig":null,"attributes":[{"value":"/ The position offset required to shift the associated text into the given bounding rectangle.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":421359,"byte_end":421455,"line_start":596,"line_end":596,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":421456,"byte_end":421459,"line_start":597,"line_end":597,"column_start":1,"column_end":4}},{"value":"/ This function assumes the `max_width` used to produce the `line_infos` is equal to the given","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":421460,"byte_end":421556,"line_start":598,"line_end":598,"column_start":1,"column_end":97}},{"value":"/ `bounding_rect` max width.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":421557,"byte_end":421587,"line_start":599,"line_end":599,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":4171},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":422538,"byte_end":422558,"line_start":625,"line_end":625,"column_start":8,"column_end":28},"name":"rt_positioned_glyphs","qualname":"::text::rt_positioned_glyphs","value":"fn rt_positioned_glyphs<'a, I>(I, &'a Font, FontSize, Vec2, Scalar)\n-> /*impl Trait*/ where I: IntoIterator<Item = (&'a str, geom::Rect)>,\nI::IntoIter: 'a","parent":null,"children":[],"decl_id":null,"docs":" Produce the position of each glyph ready for the rusttype glyph cache.","sig":null,"attributes":[{"value":"/ Produce the position of each glyph ready for the rusttype glyph cache.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":422393,"byte_end":422467,"line_start":622,"line_end":622,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":422468,"byte_end":422471,"line_start":623,"line_end":623,"column_start":1,"column_end":4}},{"value":"/ Window dimensions are expected in logical coordinates.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":422472,"byte_end":422530,"line_start":624,"line_end":624,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":4179},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":423724,"byte_end":423736,"line_start":656,"line_end":656,"column_start":8,"column_end":20},"name":"f32_pt_to_px","qualname":"::text::f32_pt_to_px","value":"fn f32_pt_to_px(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Converts the given font size in \"points\" to its font size in pixels.\n This is useful for when the font size is not an integer.\n","sig":null,"attributes":[{"value":"/ Converts the given font size in \"points\" to its font size in pixels.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":423583,"byte_end":423655,"line_start":654,"line_end":654,"column_start":1,"column_end":73}},{"value":"/ This is useful for when the font size is not an integer.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":423656,"byte_end":423716,"line_start":655,"line_end":655,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":4180},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":423956,"byte_end":423971,"line_start":662,"line_end":662,"column_start":8,"column_end":23},"name":"f32_pt_to_scale","qualname":"::text::f32_pt_to_scale","value":"fn f32_pt_to_scale(f32) -> Scale","parent":null,"children":[],"decl_id":null,"docs":" Converts the given font size in \"points\" to a uniform `rusttype::Scale`.\n This is useful for when the font size is not an integer.\n","sig":null,"attributes":[{"value":"/ Converts the given font size in \"points\" to a uniform `rusttype::Scale`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":423811,"byte_end":423887,"line_start":660,"line_end":660,"column_start":1,"column_end":77}},{"value":"/ This is useful for when the font size is not an integer.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":423888,"byte_end":423948,"line_start":661,"line_end":661,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":4181},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":424146,"byte_end":424154,"line_start":667,"line_end":667,"column_start":8,"column_end":16},"name":"pt_to_px","qualname":"::text::pt_to_px","value":"fn pt_to_px(FontSize) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Converts the given font size in \"points\" to its font size in pixels.\n","sig":null,"attributes":[{"value":"/ Converts the given font size in \"points\" to its font size in pixels.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":424066,"byte_end":424138,"line_start":666,"line_end":666,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":4182},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":424327,"byte_end":424338,"line_start":672,"line_end":672,"column_start":8,"column_end":19},"name":"pt_to_scale","qualname":"::text::pt_to_scale","value":"fn pt_to_scale(FontSize) -> Scale","parent":null,"children":[],"decl_id":null,"docs":" Converts the given font size in \"points\" to a uniform `rusttype::Scale`.\n","sig":null,"attributes":[{"value":"/ Converts the given font size in \"points\" to a uniform `rusttype::Scale`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":424243,"byte_end":424319,"line_start":671,"line_end":671,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":4183},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":424481,"byte_end":424485,"line_start":677,"line_end":677,"column_start":8,"column_end":12},"name":"text","qualname":"::text::text","value":"fn text(&str) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Begin building a **Text** instance.\n","sig":null,"attributes":[{"value":"/ Begin building a **Text** instance.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":424434,"byte_end":424473,"line_start":676,"line_end":676,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":4184},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","parent":null,"children":[{"krate":0,"index":4185},{"krate":0,"index":4192}],"decl_id":null,"docs":" Extensions and utilities for working with time.\n","sig":null,"attributes":[{"value":"/ Extensions and utilities for working with time.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","byte_start":490428,"byte_end":490479,"line_start":1,"line_end":1,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":4185},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","byte_start":490834,"byte_end":490845,"line_start":8,"line_end":8,"column_start":11,"column_end":22},"name":"DurationF64","qualname":"::time::DurationF64","value":"DurationF64","parent":null,"children":[{"krate":0,"index":4186},{"krate":0,"index":4187},{"krate":0,"index":4188},{"krate":0,"index":4189},{"krate":0,"index":4190},{"krate":0,"index":4191}],"decl_id":null,"docs":" An extension for the `std::time::Duration` type providing some simple methods for easy access\n to an `f64` representation of seconds, ms, mins, hrs, and other units of time.","sig":null,"attributes":[{"value":"/ An extension for the `std::time::Duration` type providing some simple methods for easy access","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","byte_start":490481,"byte_end":490578,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ to an `f64` representation of seconds, ms, mins, hrs, and other units of time.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","byte_start":490579,"byte_end":490661,"line_start":4,"line_end":4,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","byte_start":490662,"byte_end":490665,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ While these measurements make it easier to work with sketches and artworks, it's worth noting","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","byte_start":490666,"byte_end":490763,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ that resolution may be lost, especially at high values.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","byte_start":490764,"byte_end":490823,"line_start":7,"line_end":7,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4186},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","byte_start":490915,"byte_end":490919,"line_start":10,"line_end":10,"column_start":8,"column_end":12},"name":"secs","qualname":"::time::DurationF64::secs","value":"fn secs(&Self) -> f64","parent":{"krate":0,"index":4185},"children":[],"decl_id":null,"docs":" A simple way of retrieving the duration in seconds.\n","sig":null,"attributes":[{"value":"/ A simple way of retrieving the duration in seconds.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","byte_start":490852,"byte_end":490907,"line_start":9,"line_end":9,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4187},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","byte_start":491084,"byte_end":491086,"line_start":15,"line_end":15,"column_start":8,"column_end":10},"name":"ms","qualname":"::time::DurationF64::ms","value":"fn ms(&Self) -> f64","parent":{"krate":0,"index":4185},"children":[],"decl_id":null,"docs":" A simple way of retrieving the duration in milliseconds.","sig":null,"attributes":[{"value":"/ A simple way of retrieving the duration in milliseconds.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","byte_start":490940,"byte_end":491000,"line_start":12,"line_end":12,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","byte_start":491005,"byte_end":491008,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ By default, this is implemented as `self.secs() * 1_000.0`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","byte_start":491013,"byte_end":491076,"line_start":14,"line_end":14,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4188},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","byte_start":491207,"byte_end":491211,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"mins","qualname":"::time::DurationF64::mins","value":"fn mins(&Self) -> f64","parent":{"krate":0,"index":4185},"children":[],"decl_id":null,"docs":" A simple way of retrieving the duration as minutes.\n","sig":null,"attributes":[{"value":"/ A simple way of retrieving the duration as minutes.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","byte_start":491144,"byte_end":491199,"line_start":19,"line_end":19,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4189},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","byte_start":491325,"byte_end":491328,"line_start":25,"line_end":25,"column_start":8,"column_end":11},"name":"hrs","qualname":"::time::DurationF64::hrs","value":"fn hrs(&Self) -> f64","parent":{"krate":0,"index":4185},"children":[],"decl_id":null,"docs":" A simple way of retrieving the duration as hrs.\n","sig":null,"attributes":[{"value":"/ A simple way of retrieving the duration as hrs.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","byte_start":491266,"byte_end":491317,"line_start":24,"line_end":24,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4190},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","byte_start":491446,"byte_end":491450,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"days","qualname":"::time::DurationF64::days","value":"fn days(&Self) -> f64","parent":{"krate":0,"index":4185},"children":[],"decl_id":null,"docs":" A simple way of retrieving the duration as days.\n","sig":null,"attributes":[{"value":"/ A simple way of retrieving the duration as days.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","byte_start":491386,"byte_end":491438,"line_start":29,"line_end":29,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4191},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","byte_start":491570,"byte_end":491575,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"weeks","qualname":"::time::DurationF64::weeks","value":"fn weeks(&Self) -> f64","parent":{"krate":0,"index":4185},"children":[],"decl_id":null,"docs":" A simple way of retrieving the duration as weeks.\n","sig":null,"attributes":[{"value":"/ A simple way of retrieving the duration as weeks.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","byte_start":491509,"byte_end":491562,"line_start":34,"line_end":34,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4193},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","byte_start":491683,"byte_end":491687,"line_start":41,"line_end":41,"column_start":8,"column_end":12},"name":"secs","qualname":"<std::time::Duration as time::DurationF64>::secs","value":"fn secs(&Self) -> f64","parent":{"krate":0,"index":4185},"children":[],"decl_id":{"krate":0,"index":4186},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4194},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"window","qualname":"::window","value":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","parent":null,"children":[{"krate":0,"index":4195},{"krate":0,"index":4198},{"krate":0,"index":4199},{"krate":0,"index":4202},{"krate":0,"index":4205},{"krate":0,"index":4208},{"krate":0,"index":4211},{"krate":0,"index":4214},{"krate":0,"index":4217},{"krate":0,"index":4220},{"krate":0,"index":4221},{"krate":0,"index":4224},{"krate":0,"index":4227},{"krate":0,"index":4230},{"krate":0,"index":4233},{"krate":0,"index":4236},{"krate":0,"index":4239},{"krate":0,"index":4242},{"krate":0,"index":4245},{"krate":0,"index":4248},{"krate":0,"index":4249},{"krate":0,"index":4252},{"krate":0,"index":4255},{"krate":0,"index":4258},{"krate":0,"index":4261},{"krate":0,"index":4262},{"krate":0,"index":4263},{"krate":0,"index":4265},{"krate":0,"index":4268},{"krate":0,"index":4269},{"krate":0,"index":4272},{"krate":0,"index":4275},{"krate":0,"index":4278},{"krate":0,"index":4281},{"krate":0,"index":4282},{"krate":0,"index":4283},{"krate":0,"index":5720},{"krate":0,"index":5743},{"krate":0,"index":5745},{"krate":0,"index":4297},{"krate":0,"index":4299},{"krate":0,"index":4301},{"krate":0,"index":5747},{"krate":0,"index":5757},{"krate":0,"index":4302},{"krate":0,"index":4304},{"krate":0,"index":4306},{"krate":0,"index":4308},{"krate":0,"index":4310},{"krate":0,"index":4312},{"krate":0,"index":4314},{"krate":0,"index":4316},{"krate":0,"index":4318},{"krate":0,"index":4320},{"krate":0,"index":4322},{"krate":0,"index":4324},{"krate":0,"index":4326},{"krate":0,"index":4328},{"krate":0,"index":4330},{"krate":0,"index":4332},{"krate":0,"index":4334},{"krate":0,"index":4336},{"krate":0,"index":4338},{"krate":0,"index":4340},{"krate":0,"index":4342},{"krate":0,"index":5759},{"krate":0,"index":5765},{"krate":0,"index":4344},{"krate":0,"index":5774},{"krate":0,"index":5776},{"krate":0,"index":5767},{"krate":0,"index":5772},{"krate":0,"index":5785},{"krate":0,"index":5787},{"krate":0,"index":5778},{"krate":0,"index":5783},{"krate":0,"index":5796},{"krate":0,"index":5798},{"krate":0,"index":5789},{"krate":0,"index":5794},{"krate":0,"index":5807},{"krate":0,"index":5809},{"krate":0,"index":5800},{"krate":0,"index":5805},{"krate":0,"index":5818},{"krate":0,"index":5820},{"krate":0,"index":5811},{"krate":0,"index":5816},{"krate":0,"index":5829},{"krate":0,"index":5831},{"krate":0,"index":5822},{"krate":0,"index":5827},{"krate":0,"index":5840},{"krate":0,"index":5842},{"krate":0,"index":5833},{"krate":0,"index":5838},{"krate":0,"index":5851},{"krate":0,"index":5853},{"krate":0,"index":5844},{"krate":0,"index":5849},{"krate":0,"index":5862},{"krate":0,"index":5864},{"krate":0,"index":5855},{"krate":0,"index":5860},{"krate":0,"index":5873},{"krate":0,"index":5875},{"krate":0,"index":5866},{"krate":0,"index":5871},{"krate":0,"index":5884},{"krate":0,"index":5886},{"krate":0,"index":5877},{"krate":0,"index":5882},{"krate":0,"index":5895},{"krate":0,"index":5897},{"krate":0,"index":5888},{"krate":0,"index":5893},{"krate":0,"index":5906},{"krate":0,"index":5908},{"krate":0,"index":5899},{"krate":0,"index":5904},{"krate":0,"index":5917},{"krate":0,"index":5919},{"krate":0,"index":5910},{"krate":0,"index":5915},{"krate":0,"index":5928},{"krate":0,"index":5930},{"krate":0,"index":5921},{"krate":0,"index":5926},{"krate":0,"index":5939},{"krate":0,"index":5941},{"krate":0,"index":5932},{"krate":0,"index":5937},{"krate":0,"index":5950},{"krate":0,"index":5952},{"krate":0,"index":5943},{"krate":0,"index":5948},{"krate":0,"index":5961},{"krate":0,"index":5963},{"krate":0,"index":5954},{"krate":0,"index":5959},{"krate":0,"index":5972},{"krate":0,"index":5974},{"krate":0,"index":5965},{"krate":0,"index":5970},{"krate":0,"index":5983},{"krate":0,"index":5985},{"krate":0,"index":5976},{"krate":0,"index":5981},{"krate":0,"index":5994},{"krate":0,"index":5996},{"krate":0,"index":5987},{"krate":0,"index":5992},{"krate":0,"index":6005},{"krate":0,"index":6007},{"krate":0,"index":5998},{"krate":0,"index":6003},{"krate":0,"index":6016},{"krate":0,"index":6018},{"krate":0,"index":6009},{"krate":0,"index":6014},{"krate":0,"index":6020},{"krate":0,"index":6032},{"krate":0,"index":6034},{"krate":0,"index":6037},{"krate":0,"index":6039},{"krate":0,"index":6042},{"krate":0,"index":6044},{"krate":0,"index":6048},{"krate":0,"index":6050},{"krate":0,"index":6052},{"krate":0,"index":4345},{"krate":0,"index":4357},{"krate":0,"index":4456},{"krate":0,"index":4504},{"krate":0,"index":4506},{"krate":0,"index":4508},{"krate":0,"index":4510},{"krate":0,"index":4512}],"decl_id":null,"docs":" The nannou Window API.","sig":null,"attributes":[{"value":"/ The nannou Window API.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":491779,"byte_end":491805,"line_start":1,"line_end":1,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":491806,"byte_end":491809,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Create a new window via `app.new_window()`. This produces a [**Builder**](./struct.Builder.html)","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":491810,"byte_end":491910,"line_start":3,"line_end":3,"column_start":1,"column_end":101}},{"value":"/ which can be used to build a [**Window**](./struct.Window.html).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":491911,"byte_end":491979,"line_start":4,"line_end":4,"column_start":1,"column_end":69}}]},{"kind":"Const","id":{"krate":0,"index":4281},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":492602,"byte_end":492620,"line_start":27,"line_end":27,"column_start":11,"column_end":29},"name":"DEFAULT_DIMENSIONS","qualname":"::window::DEFAULT_DIMENSIONS","value":"LogicalSize<geom::scalar::Default>","parent":null,"children":[],"decl_id":null,"docs":" The default dimensions used for a window in the case that none are specified.\n","sig":null,"attributes":[{"value":"/ The default dimensions used for a window in the case that none are specified.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":492510,"byte_end":492591,"line_start":26,"line_end":26,"column_start":1,"column_end":82}}]},{"kind":"Const","id":{"krate":0,"index":4282},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":492781,"byte_end":492794,"line_start":33,"line_end":33,"column_start":11,"column_end":24},"name":"MIN_SC_PIXELS","qualname":"::window::MIN_SC_PIXELS","value":"PhysicalSize<u32>","parent":null,"children":[],"decl_id":null,"docs":" The default minimum dimensions used for the surface\n","sig":null,"attributes":[{"value":"/ The default minimum dimensions used for the surface","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":492715,"byte_end":492770,"line_start":32,"line_end":32,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4283},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":492912,"byte_end":492919,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"Builder","qualname":"::window::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":4285},{"krate":0,"index":4286},{"krate":0,"index":4287},{"krate":0,"index":4288},{"krate":0,"index":4289},{"krate":0,"index":4290},{"krate":0,"index":4291},{"krate":0,"index":4292},{"krate":0,"index":4293},{"krate":0,"index":4294},{"krate":0,"index":4295},{"krate":0,"index":4296}],"decl_id":null,"docs":" A context for building a window.\n","sig":null,"attributes":[{"value":"/ A context for building a window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":492864,"byte_end":492900,"line_start":38,"line_end":38,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":4297},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":494758,"byte_end":494764,"line_start":82,"line_end":82,"column_start":10,"column_end":16},"name":"ViewFn","qualname":"::window::ViewFn","value":"fn(: &App, : &Model, : Frame)","parent":null,"children":[],"decl_id":null,"docs":" The user function type for drawing their model to the surface of a single window.\n","sig":null,"attributes":[{"value":"/ The user function type for drawing their model to the surface of a single window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":494663,"byte_end":494748,"line_start":81,"line_end":81,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":4299},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":495055,"byte_end":495064,"line_start":88,"line_end":88,"column_start":10,"column_end":19},"name":"RawViewFn","qualname":"::window::RawViewFn","value":"fn(: &App, : &Model, : RawFrame)","parent":null,"children":[],"decl_id":null,"docs":" The user function type for drawing their model to the surface of a single window.","sig":null,"attributes":[{"value":"/ The user function type for drawing their model to the surface of a single window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":494800,"byte_end":494885,"line_start":84,"line_end":84,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":494886,"byte_end":494889,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Unlike the `ViewFn`, the `RawViewFn` is designed for drawing directly to a window's surface","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":494890,"byte_end":494985,"line_start":86,"line_end":86,"column_start":1,"column_end":96}},{"value":"/ texture rather than to a convenient intermediary image.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":494986,"byte_end":495045,"line_start":87,"line_end":87,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":4301},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":495227,"byte_end":495235,"line_start":93,"line_end":93,"column_start":10,"column_end":18},"name":"SketchFn","qualname":"::window::SketchFn","value":"fn(: &App, : Frame)","parent":null,"children":[],"decl_id":null,"docs":" The same as `ViewFn`, but provides no user model to draw from.","sig":null,"attributes":[{"value":"/ The same as `ViewFn`, but provides no user model to draw from.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":495103,"byte_end":495169,"line_start":90,"line_end":90,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":495170,"byte_end":495173,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ Useful for simple, stateless sketching.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":495174,"byte_end":495217,"line_start":92,"line_end":92,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":4302},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":495510,"byte_end":495520,"line_start":104,"line_end":104,"column_start":10,"column_end":20},"name":"RawEventFn","qualname":"::window::RawEventFn","value":"fn(: &App, : &mut Model, : &winit::event::WindowEvent)","parent":null,"children":[],"decl_id":null,"docs":" A function for processing raw winit window events.\n","sig":null,"attributes":[{"value":"/ A function for processing raw winit window events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":495446,"byte_end":495500,"line_start":103,"line_end":103,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":4304},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":495635,"byte_end":495642,"line_start":107,"line_end":107,"column_start":10,"column_end":17},"name":"EventFn","qualname":"::window::EventFn","value":"fn(: &App, : &mut Model, : WindowEvent)","parent":null,"children":[],"decl_id":null,"docs":" A function for processing window events.\n","sig":null,"attributes":[{"value":"/ A function for processing window events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":495581,"byte_end":495625,"line_start":106,"line_end":106,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":4306},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":495745,"byte_end":495757,"line_start":110,"line_end":110,"column_start":10,"column_end":22},"name":"KeyPressedFn","qualname":"::window::KeyPressedFn","value":"fn(: &App, : &mut Model, : Key)","parent":null,"children":[],"decl_id":null,"docs":" A function for processing key press events.\n","sig":null,"attributes":[{"value":"/ A function for processing key press events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":495688,"byte_end":495735,"line_start":109,"line_end":109,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":4308},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":495854,"byte_end":495867,"line_start":113,"line_end":113,"column_start":10,"column_end":23},"name":"KeyReleasedFn","qualname":"::window::KeyReleasedFn","value":"fn(: &App, : &mut Model, : Key)","parent":null,"children":[],"decl_id":null,"docs":" A function for processing key release events.\n","sig":null,"attributes":[{"value":"/ A function for processing key release events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":495795,"byte_end":495844,"line_start":112,"line_end":112,"column_start":1,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":4310},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":495965,"byte_end":495984,"line_start":116,"line_end":116,"column_start":10,"column_end":29},"name":"ReceivedCharacterFn","qualname":"::window::ReceivedCharacterFn","value":"fn(: &App, : &mut Model, : char)","parent":null,"children":[],"decl_id":null,"docs":" A function for processing received characters.\n","sig":null,"attributes":[{"value":"/ A function for processing received characters.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":495905,"byte_end":495955,"line_start":115,"line_end":115,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":4312},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":496082,"byte_end":496094,"line_start":119,"line_end":119,"column_start":10,"column_end":22},"name":"MouseMovedFn","qualname":"::window::MouseMovedFn","value":"fn(: &App, : &mut Model, : Point2)","parent":null,"children":[],"decl_id":null,"docs":" A function for processing mouse moved events.\n","sig":null,"attributes":[{"value":"/ A function for processing mouse moved events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":496023,"byte_end":496072,"line_start":118,"line_end":118,"column_start":1,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":4314},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":496196,"byte_end":496210,"line_start":122,"line_end":122,"column_start":10,"column_end":24},"name":"MousePressedFn","qualname":"::window::MousePressedFn","value":"fn(: &App, : &mut Model, : MouseButton)","parent":null,"children":[],"decl_id":null,"docs":" A function for processing mouse pressed events.\n","sig":null,"attributes":[{"value":"/ A function for processing mouse pressed events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":496135,"byte_end":496186,"line_start":121,"line_end":121,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":4316},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":496318,"byte_end":496333,"line_start":125,"line_end":125,"column_start":10,"column_end":25},"name":"MouseReleasedFn","qualname":"::window::MouseReleasedFn","value":"fn(: &App, : &mut Model, : MouseButton)","parent":null,"children":[],"decl_id":null,"docs":" A function for processing mouse released events.\n","sig":null,"attributes":[{"value":"/ A function for processing mouse released events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":496256,"byte_end":496308,"line_start":124,"line_end":124,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":4318},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":496440,"byte_end":496454,"line_start":128,"line_end":128,"column_start":10,"column_end":24},"name":"MouseEnteredFn","qualname":"::window::MouseEnteredFn","value":"fn(: &App, : &mut Model)","parent":null,"children":[],"decl_id":null,"docs":" A function for processing mouse entered events.\n","sig":null,"attributes":[{"value":"/ A function for processing mouse entered events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":496379,"byte_end":496430,"line_start":127,"line_end":127,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":4320},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":496547,"byte_end":496560,"line_start":131,"line_end":131,"column_start":10,"column_end":23},"name":"MouseExitedFn","qualname":"::window::MouseExitedFn","value":"fn(: &App, : &mut Model)","parent":null,"children":[],"decl_id":null,"docs":" A function for processing mouse exited events.\n","sig":null,"attributes":[{"value":"/ A function for processing mouse exited events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":496487,"byte_end":496537,"line_start":130,"line_end":130,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":4322},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":496652,"byte_end":496664,"line_start":134,"line_end":134,"column_start":10,"column_end":22},"name":"MouseWheelFn","qualname":"::window::MouseWheelFn","value":"fn(: &App, : &mut Model, : MouseScrollDelta, : TouchPhase)","parent":null,"children":[],"decl_id":null,"docs":" A function for processing mouse wheel events.\n","sig":null,"attributes":[{"value":"/ A function for processing mouse wheel events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":496593,"byte_end":496642,"line_start":133,"line_end":133,"column_start":1,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":4324},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":496787,"byte_end":496794,"line_start":137,"line_end":137,"column_start":10,"column_end":17},"name":"MovedFn","qualname":"::window::MovedFn","value":"fn(: &App, : &mut Model, : Vec2)","parent":null,"children":[],"decl_id":null,"docs":" A function for processing window moved events.\n","sig":null,"attributes":[{"value":"/ A function for processing window moved events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":496727,"byte_end":496777,"line_start":136,"line_end":136,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":4326},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":496895,"byte_end":496904,"line_start":140,"line_end":140,"column_start":10,"column_end":19},"name":"ResizedFn","qualname":"::window::ResizedFn","value":"fn(: &App, : &mut Model, : Vec2)","parent":null,"children":[],"decl_id":null,"docs":" A function for processing window resized events.\n","sig":null,"attributes":[{"value":"/ A function for processing window resized events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":496833,"byte_end":496885,"line_start":139,"line_end":139,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":4328},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":496996,"byte_end":497003,"line_start":143,"line_end":143,"column_start":10,"column_end":17},"name":"TouchFn","qualname":"::window::TouchFn","value":"fn(: &App, : &mut Model, : TouchEvent)","parent":null,"children":[],"decl_id":null,"docs":" A function for processing touch events.\n","sig":null,"attributes":[{"value":"/ A function for processing touch events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":496943,"byte_end":496986,"line_start":142,"line_end":142,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":4330},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":497113,"byte_end":497131,"line_start":146,"line_end":146,"column_start":10,"column_end":28},"name":"TouchpadPressureFn","qualname":"::window::TouchpadPressureFn","value":"fn(: &App, : &mut Model, : TouchpadPressure)","parent":null,"children":[],"decl_id":null,"docs":" A function for processing touchpad pressure events.\n","sig":null,"attributes":[{"value":"/ A function for processing touchpad pressure events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":497048,"byte_end":497103,"line_start":145,"line_end":145,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":4332},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":497242,"byte_end":497255,"line_start":149,"line_end":149,"column_start":10,"column_end":23},"name":"HoveredFileFn","qualname":"::window::HoveredFileFn","value":"fn(: &App, : &mut Model, : PathBuf)","parent":null,"children":[],"decl_id":null,"docs":" A function for processing hovered file events.\n","sig":null,"attributes":[{"value":"/ A function for processing hovered file events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":497182,"byte_end":497232,"line_start":148,"line_end":148,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":4334},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":497367,"byte_end":497389,"line_start":152,"line_end":152,"column_start":10,"column_end":32},"name":"HoveredFileCancelledFn","qualname":"::window::HoveredFileCancelledFn","value":"fn(: &App, : &mut Model)","parent":null,"children":[],"decl_id":null,"docs":" A function for processing hovered file cancelled events.\n","sig":null,"attributes":[{"value":"/ A function for processing hovered file cancelled events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":497297,"byte_end":497357,"line_start":151,"line_end":151,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":4336},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":497482,"byte_end":497495,"line_start":155,"line_end":155,"column_start":10,"column_end":23},"name":"DroppedFileFn","qualname":"::window::DroppedFileFn","value":"fn(: &App, : &mut Model, : PathBuf)","parent":null,"children":[],"decl_id":null,"docs":" A function for processing dropped file events.\n","sig":null,"attributes":[{"value":"/ A function for processing dropped file events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":497422,"byte_end":497472,"line_start":154,"line_end":154,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":4338},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":497599,"byte_end":497608,"line_start":158,"line_end":158,"column_start":10,"column_end":19},"name":"FocusedFn","qualname":"::window::FocusedFn","value":"fn(: &App, : &mut Model)","parent":null,"children":[],"decl_id":null,"docs":" A function for processing window focused events.\n","sig":null,"attributes":[{"value":"/ A function for processing window focused events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":497537,"byte_end":497589,"line_start":157,"line_end":157,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":4340},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":497705,"byte_end":497716,"line_start":161,"line_end":161,"column_start":10,"column_end":21},"name":"UnfocusedFn","qualname":"::window::UnfocusedFn","value":"fn(: &App, : &mut Model)","parent":null,"children":[],"decl_id":null,"docs":" A function for processing window unfocused events.\n","sig":null,"attributes":[{"value":"/ A function for processing window unfocused events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":497641,"byte_end":497695,"line_start":160,"line_end":160,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":4342},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":497810,"byte_end":497818,"line_start":164,"line_end":164,"column_start":10,"column_end":18},"name":"ClosedFn","qualname":"::window::ClosedFn","value":"fn(: &App, : &mut Model)","parent":null,"children":[],"decl_id":null,"docs":" A function for processing window closed events.\n","sig":null,"attributes":[{"value":"/ A function for processing window closed events.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":497749,"byte_end":497800,"line_start":163,"line_end":163,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5760},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":497949,"byte_end":497967,"line_start":169,"line_end":169,"column_start":5,"column_end":23},"name":"NoAvailableAdapter","qualname":"::window::BuildError::NoAvailableAdapter","value":"BuildError::NoAvailableAdapter","parent":{"krate":0,"index":5759},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5762},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":497973,"byte_end":497985,"line_start":170,"line_end":170,"column_start":5,"column_end":17},"name":"WinitOsError","qualname":"::window::BuildError::WinitOsError","value":"BuildError::WinitOsError(winit::error::OsError)","parent":{"krate":0,"index":5759},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5764},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":497986,"byte_end":498007,"line_start":170,"line_end":170,"column_start":18,"column_end":39},"name":"0","qualname":"::window::BuildError::WinitOsError::0","value":"winit::error::OsError","parent":{"krate":0,"index":5762},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5759},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":497932,"byte_end":497942,"line_start":168,"line_end":168,"column_start":10,"column_end":20},"name":"BuildError","qualname":"::window::BuildError","value":"enum BuildError { NoAvailableAdapter, WinitOsError(winit::error::OsError), }","parent":null,"children":[{"krate":0,"index":5760},{"krate":0,"index":5762}],"decl_id":null,"docs":" Errors that might occur while building the window.\n","sig":null,"attributes":[{"value":"/ Errors that might occur while building the window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":497851,"byte_end":497905,"line_start":166,"line_end":166,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":6020},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":500379,"byte_end":500385,"line_start":239,"line_end":239,"column_start":12,"column_end":18},"name":"Window","qualname":"::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":6021},{"krate":0,"index":6022},{"krate":0,"index":6023},{"krate":0,"index":6024},{"krate":0,"index":6025},{"krate":0,"index":6026},{"krate":0,"index":6027},{"krate":0,"index":6028},{"krate":0,"index":6029},{"krate":0,"index":6030},{"krate":0,"index":6031}],"decl_id":null,"docs":" A nannou window.","sig":null,"attributes":[{"value":"/ A nannou window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":500219,"byte_end":500239,"line_start":234,"line_end":234,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":500240,"byte_end":500243,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ The **Window** acts as a wrapper around the `winit::window::Window` and the `wgpu::Surface`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":500244,"byte_end":500339,"line_start":236,"line_end":236,"column_start":1,"column_end":96}},{"value":"/ types.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":500340,"byte_end":500350,"line_start":237,"line_end":237,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":6044},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":501932,"byte_end":501959,"line_start":277,"line_end":277,"column_start":12,"column_end":39},"name":"SurfaceConfigurationBuilder","qualname":"::window::SurfaceConfigurationBuilder","value":"SurfaceConfigurationBuilder { usage, format, present_mode }","parent":null,"children":[{"krate":0,"index":6045},{"krate":0,"index":6046},{"krate":0,"index":6047}],"decl_id":null,"docs":" Surface configuration for which nannou will provide a default if unspecified.","sig":null,"attributes":[{"value":"/ Surface configuration for which nannou will provide a default if unspecified.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":501738,"byte_end":501819,"line_start":273,"line_end":273,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":501820,"byte_end":501823,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ See the builder methods for more details on each parameter.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":501824,"byte_end":501887,"line_start":275,"line_end":275,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":6045},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":501970,"byte_end":501975,"line_start":278,"line_end":278,"column_start":9,"column_end":14},"name":"usage","qualname":"::window::SurfaceConfigurationBuilder::usage","value":"std::option::Option<nannou_wgpu::TextureUsages>","parent":{"krate":0,"index":6044},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6046},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":502014,"byte_end":502020,"line_start":279,"line_end":279,"column_start":9,"column_end":15},"name":"format","qualname":"::window::SurfaceConfigurationBuilder::format","value":"std::option::Option<nannou_wgpu::TextureFormat>","parent":{"krate":0,"index":6044},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6047},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":502059,"byte_end":502071,"line_start":280,"line_end":280,"column_start":9,"column_end":21},"name":"present_mode","qualname":"::window::SurfaceConfigurationBuilder::present_mode","value":"std::option::Option<nannou_wgpu::PresentMode>","parent":{"krate":0,"index":6044},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4346},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":502252,"byte_end":502266,"line_start":285,"line_end":285,"column_start":15,"column_end":29},"name":"DEFAULT_FORMAT","qualname":"::window::SurfaceConfigurationBuilder::DEFAULT_FORMAT","value":"wgpu::TextureFormat","parent":{"krate":0,"index":4345},"children":[],"decl_id":null,"docs":" Only used in the case that the `wgpu::Surface::get_preferred_format` method returns `None`.\n","sig":null,"attributes":[{"value":"/ Only used in the case that the `wgpu::Surface::get_preferred_format` method returns `None`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":502142,"byte_end":502237,"line_start":284,"line_end":284,"column_start":5,"column_end":100}}]},{"kind":"Const","id":{"krate":0,"index":4347},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":502341,"byte_end":502361,"line_start":286,"line_end":286,"column_start":15,"column_end":35},"name":"DEFAULT_PRESENT_MODE","qualname":"::window::SurfaceConfigurationBuilder::DEFAULT_PRESENT_MODE","value":"wgpu::PresentMode","parent":{"krate":0,"index":4345},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4348},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":502422,"byte_end":502435,"line_start":287,"line_end":287,"column_start":15,"column_end":28},"name":"DEFAULT_USAGE","qualname":"::window::SurfaceConfigurationBuilder::DEFAULT_USAGE","value":"wgpu::TextureUsages","parent":{"krate":0,"index":4345},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4349},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":502598,"byte_end":502601,"line_start":290,"line_end":290,"column_start":12,"column_end":15},"name":"new","qualname":"<SurfaceConfigurationBuilder>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" A new empty **SurfaceConfigurationBuilder** with all parameters set to `None`.\n","sig":null,"attributes":[{"value":"/ A new empty **SurfaceConfigurationBuilder** with all parameters set to `None`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":502504,"byte_end":502586,"line_start":289,"line_end":289,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":4350},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":502737,"byte_end":502755,"line_start":295,"line_end":295,"column_start":12,"column_end":30},"name":"from_configuration","qualname":"<SurfaceConfigurationBuilder>::from_configuration","value":"fn from_configuration(&wgpu::SurfaceConfiguration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a **SurfaceConfigurationBuilder** from an existing descriptor.\n","sig":null,"attributes":[{"value":"/ Create a **SurfaceConfigurationBuilder** from an existing descriptor.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":502652,"byte_end":502725,"line_start":294,"line_end":294,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4351},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":503023,"byte_end":503028,"line_start":303,"line_end":303,"column_start":12,"column_end":17},"name":"usage","qualname":"<SurfaceConfigurationBuilder>::usage","value":"fn usage(Self, wgpu::TextureUsages) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the texture usages for the surface.\n","sig":null,"attributes":[{"value":"/ Specify the texture usages for the surface.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":502964,"byte_end":503011,"line_start":302,"line_end":302,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4352},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":503194,"byte_end":503200,"line_start":309,"line_end":309,"column_start":12,"column_end":18},"name":"format","qualname":"<SurfaceConfigurationBuilder>::format","value":"fn format(Self, wgpu::TextureFormat) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the texture format for the surface.\n","sig":null,"attributes":[{"value":"/ Specify the texture format for the surface.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":503135,"byte_end":503182,"line_start":308,"line_end":308,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4353},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":503521,"byte_end":503533,"line_start":318,"line_end":318,"column_start":12,"column_end":24},"name":"present_mode","qualname":"<SurfaceConfigurationBuilder>::present_mode","value":"fn present_mode(Self, wgpu::PresentMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The way in which a surface's frames are presented to the display.","sig":null,"attributes":[{"value":"/ The way in which a surface's frames are presented to the display.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":503310,"byte_end":503379,"line_start":314,"line_end":314,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":503384,"byte_end":503387,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ By default, nannou will attempt to select the ideal present mode depending on the current","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":503392,"byte_end":503485,"line_start":316,"line_end":316,"column_start":5,"column_end":98}},{"value":"/ app `LoopMode`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":503490,"byte_end":503509,"line_start":317,"line_end":317,"column_start":5,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":4359},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":504476,"byte_end":504500,"line_start":348,"line_end":348,"column_start":15,"column_end":39},"name":"DEFAULT_POWER_PREFERENCE","qualname":"::window::Builder::<'app>::DEFAULT_POWER_PREFERENCE","value":"wgpu::PowerPreference","parent":{"krate":0,"index":4357},"children":[],"decl_id":null,"docs":" The default power preference used to request the WGPU adapter.\n","sig":null,"attributes":[{"value":"/ The default power preference used to request the WGPU adapter.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":504395,"byte_end":504461,"line_start":347,"line_end":347,"column_start":5,"column_end":71}}]},{"kind":"Const","id":{"krate":0,"index":4360},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":504657,"byte_end":504687,"line_start":350,"line_end":350,"column_start":15,"column_end":45},"name":"DEFAULT_FORCE_FALLBACK_ADAPTER","qualname":"::window::Builder::<'app>::DEFAULT_FORCE_FALLBACK_ADAPTER","value":"bool","parent":{"krate":0,"index":4357},"children":[],"decl_id":null,"docs":" The default `force_fallback_adapter` field used to request the WGPU adapter.\n","sig":null,"attributes":[{"value":"/ The default `force_fallback_adapter` field used to request the WGPU adapter.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":504562,"byte_end":504642,"line_start":349,"line_end":349,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4361},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":504752,"byte_end":504755,"line_start":353,"line_end":353,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn new(&'app App) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Begin building a new window.\n","sig":null,"attributes":[{"value":"/ Begin building a new window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":504708,"byte_end":504740,"line_start":352,"line_end":352,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4362},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":505440,"byte_end":505446,"line_start":371,"line_end":371,"column_start":12,"column_end":18},"name":"window","qualname":"<Builder>::window","value":"fn window(Self, winit::window::WindowBuilder) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Build the window with some custom window parameters.\n","sig":null,"attributes":[{"value":"/ Build the window with some custom window parameters.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":505372,"byte_end":505428,"line_start":370,"line_end":370,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4363},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":505635,"byte_end":505655,"line_start":377,"line_end":377,"column_start":12,"column_end":32},"name":"surface_conf_builder","qualname":"<Builder>::surface_conf_builder","value":"fn surface_conf_builder(Self, SurfaceConfigurationBuilder) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify a set of parameters for building the window surface.\n","sig":null,"attributes":[{"value":"/ Specify a set of parameters for building the window surface.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":505559,"byte_end":505623,"line_start":376,"line_end":376,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4364},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":505984,"byte_end":506000,"line_start":388,"line_end":388,"column_start":12,"column_end":28},"name":"power_preference","qualname":"<Builder>::power_preference","value":"fn power_preference(Self, wgpu::PowerPreference) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the power preference desired for the WGPU adapter.","sig":null,"attributes":[{"value":"/ Specify the power preference desired for the WGPU adapter.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":505832,"byte_end":505894,"line_start":385,"line_end":385,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":505899,"byte_end":505902,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ By default, this is `wgpu::PowerPreference::HighPerformance`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":505907,"byte_end":505972,"line_start":387,"line_end":387,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4365},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":506298,"byte_end":506320,"line_start":397,"line_end":397,"column_start":12,"column_end":34},"name":"force_fallback_adapter","qualname":"<Builder>::force_fallback_adapter","value":"fn force_fallback_adapter(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates that only a fallback adapter can be returned. This is generally a \"software\"\n implementation on the system..","sig":null,"attributes":[{"value":"/ Indicates that only a fallback adapter can be returned. This is generally a \"software\"","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":506112,"byte_end":506202,"line_start":393,"line_end":393,"column_start":5,"column_end":95}},{"value":"/ implementation on the system..","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":506207,"byte_end":506241,"line_start":394,"line_end":394,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":506246,"byte_end":506249,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ By default, this is `false`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":506254,"byte_end":506286,"line_start":396,"line_end":396,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4366},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":506592,"byte_end":506609,"line_start":404,"line_end":404,"column_start":12,"column_end":29},"name":"device_descriptor","qualname":"<Builder>::device_descriptor","value":"fn device_descriptor(Self, wgpu::DeviceDescriptor) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify a device descriptor to use when requesting the logical device from the adapter.\n This allows for specifying custom wgpu device extensions.\n","sig":null,"attributes":[{"value":"/ Specify a device descriptor to use when requesting the logical device from the adapter.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":506423,"byte_end":506514,"line_start":402,"line_end":402,"column_start":5,"column_end":96}},{"value":"/ This allows for specifying custom wgpu device extensions.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":506519,"byte_end":506580,"line_start":403,"line_end":403,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4367},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":508157,"byte_end":508169,"line_start":429,"line_end":429,"column_start":12,"column_end":24},"name":"msaa_samples","qualname":"<Builder>::msaa_samples","value":"fn msaa_samples(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the number of samples per pixel for the multisample anti-aliasing render pass.","sig":null,"attributes":[{"value":"/ Specify the number of samples per pixel for the multisample anti-aliasing render pass.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":506746,"byte_end":506836,"line_start":409,"line_end":409,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":506841,"byte_end":506844,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ If `msaa_samples` is unspecified, the first default value that nannou will attempt to use","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":506849,"byte_end":506942,"line_start":411,"line_end":411,"column_start":5,"column_end":98}},{"value":"/ can be found via the `Frame::DEFAULT_MSAA_SAMPLES` constant.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":506947,"byte_end":507011,"line_start":412,"line_end":412,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":507016,"byte_end":507019,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ **Note:** This parameter has no meaning if the window uses a **raw_view** function for","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":507024,"byte_end":507114,"line_start":414,"line_end":414,"column_start":5,"column_end":95}},{"value":"/ rendering graphics to the window rather than a **view** function. This is because the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":507119,"byte_end":507208,"line_start":415,"line_end":415,"column_start":5,"column_end":94}},{"value":"/ **raw_view** function provides a **RawFrame** with direct access to the surface texture","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":507213,"byte_end":507304,"line_start":416,"line_end":416,"column_start":5,"column_end":96}},{"value":"/ itself and thus must manage their own MSAA pass.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":507309,"byte_end":507361,"line_start":417,"line_end":417,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":507366,"byte_end":507369,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ On the other hand, the `view` function provides the `Frame` type which allows the user to","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":507374,"byte_end":507467,"line_start":419,"line_end":419,"column_start":5,"column_end":98}},{"value":"/ render to a multisampled intermediary image allowing Nannou to take care of resolving the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":507472,"byte_end":507565,"line_start":420,"line_end":420,"column_start":5,"column_end":98}},{"value":"/ multisampled texture to the surface texture. In order to avoid confusion, The","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":507570,"byte_end":507651,"line_start":421,"line_end":421,"column_start":5,"column_end":86}},{"value":"/ `Window::build` method will `panic!` if the user tries to specify `msaa_samples` as well as","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":507656,"byte_end":507751,"line_start":422,"line_end":422,"column_start":5,"column_end":100}},{"value":"/ a `raw_view` method.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":507756,"byte_end":507780,"line_start":423,"line_end":423,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":507785,"byte_end":507788,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ *TODO: Perhaps it would be worth adding two separate methods for specifying msaa samples.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":507793,"byte_end":507886,"line_start":425,"line_end":425,"column_start":5,"column_end":98}},{"value":"/ One for forcing a certain number of samples and returning an error otherwise, and another","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":507891,"byte_end":507984,"line_start":426,"line_end":426,"column_start":5,"column_end":98}},{"value":"/ for attempting to use the given number of samples but falling back to a supported value in","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":507989,"byte_end":508083,"line_start":427,"line_end":427,"column_start":5,"column_end":99}},{"value":"/ the case that the specified number is not supported.*","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":508088,"byte_end":508145,"line_start":428,"line_end":428,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":4368},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":508530,"byte_end":508536,"line_start":438,"line_end":438,"column_start":12,"column_end":18},"name":"sketch","qualname":"<Builder>::sketch","value":"fn sketch(Self, SketchFn) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Provide a simple function for drawing to the window.","sig":null,"attributes":[{"value":"/ Provide a simple function for drawing to the window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":508281,"byte_end":508337,"line_start":434,"line_end":434,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":508342,"byte_end":508345,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ This is similar to `view` but does not provide access to user data via a Model type. This","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":508350,"byte_end":508443,"line_start":436,"line_end":436,"column_start":5,"column_end":98}},{"value":"/ is useful for sketches where you don't require tracking any state.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":508448,"byte_end":508518,"line_start":437,"line_end":437,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":4369},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":508817,"byte_end":508821,"line_start":445,"line_end":445,"column_start":12,"column_end":16},"name":"view","qualname":"<Builder>::view","value":"fn view<M>(Self, ViewFn<M>) -> Self where M: 'static","parent":null,"children":[],"decl_id":null,"docs":" The **view** function that the app will call to allow you to present your Model to the\n surface of the window on your display.\n","sig":null,"attributes":[{"value":"/ The **view** function that the app will call to allow you to present your Model to the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":508668,"byte_end":508758,"line_start":443,"line_end":443,"column_start":5,"column_end":95}},{"value":"/ surface of the window on your display.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":508763,"byte_end":508805,"line_start":444,"line_end":444,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4371},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":509377,"byte_end":509385,"line_start":459,"line_end":459,"column_start":12,"column_end":20},"name":"raw_view","qualname":"<Builder>::raw_view","value":"fn raw_view<M>(Self, RawViewFn<M>) -> Self where M: 'static","parent":null,"children":[],"decl_id":null,"docs":" The **view** function that the app will call to allow you to present your Model to the\n surface of the window on your display.","sig":null,"attributes":[{"value":"/ The **view** function that the app will call to allow you to present your Model to the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":509014,"byte_end":509104,"line_start":453,"line_end":453,"column_start":5,"column_end":95}},{"value":"/ surface of the window on your display.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":509109,"byte_end":509151,"line_start":454,"line_end":454,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":509156,"byte_end":509159,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ Unlike the **ViewFn**, the **RawViewFn** provides a **RawFrame** that is designed for","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":509164,"byte_end":509253,"line_start":456,"line_end":456,"column_start":5,"column_end":94}},{"value":"/ drawing directly to a window's surface texture, rather than to a convenient intermediary","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":509258,"byte_end":509350,"line_start":457,"line_end":457,"column_start":5,"column_end":97}},{"value":"/ image.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":509355,"byte_end":509365,"line_start":458,"line_end":458,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":4373},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":509725,"byte_end":509736,"line_start":469,"line_end":469,"column_start":12,"column_end":23},"name":"clear_color","qualname":"<Builder>::clear_color","value":"fn clear_color<C>(Self, C) -> Self where C: IntoLinSrgba<f32>","parent":null,"children":[],"decl_id":null,"docs":" Set the initial color of the window background\n when its contents are invalidated, e.g. upon window resize.\n","sig":null,"attributes":[{"value":"/ Set the initial color of the window background","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":509595,"byte_end":509645,"line_start":467,"line_end":467,"column_start":5,"column_end":55}},{"value":"/ when its contents are invalidated, e.g. upon window resize.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":509650,"byte_end":509713,"line_start":468,"line_end":468,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4375},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":511182,"byte_end":511187,"line_start":500,"line_end":500,"column_start":12,"column_end":17},"name":"event","qualname":"<Builder>::event","value":"fn event<M>(Self, EventFn<M>) -> Self where M: 'static","parent":null,"children":[],"decl_id":null,"docs":" A function for updating your model on `WindowEvent`s associated with this window.","sig":null,"attributes":[{"value":"/ A function for updating your model on `WindowEvent`s associated with this window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":510073,"byte_end":510158,"line_start":481,"line_end":481,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":510163,"byte_end":510166,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ These include events such as key presses, mouse movement, clicks, resizing, etc.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":510171,"byte_end":510255,"line_start":483,"line_end":483,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":510260,"byte_end":510263,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ ## Event Function Call Order","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":510268,"byte_end":510300,"line_start":485,"line_end":485,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":510305,"byte_end":510308,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ In nannou, if multiple functions require being called for a single kind of event, the more","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":510313,"byte_end":510407,"line_start":487,"line_end":487,"column_start":5,"column_end":99}},{"value":"/ general event function will always be called before the more specific event function.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":510412,"byte_end":510501,"line_start":488,"line_end":488,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":510506,"byte_end":510509,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ If an `event` function was also submitted to the `App`, that function will always be called","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":510514,"byte_end":510609,"line_start":490,"line_end":490,"column_start":5,"column_end":100}},{"value":"/ immediately before window-specific event functions. Similarly, if a function associated","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":510614,"byte_end":510705,"line_start":491,"line_end":491,"column_start":5,"column_end":96}},{"value":"/ with a more specific event type (e.g. `key_pressed`) was given, that function will be","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":510710,"byte_end":510799,"line_start":492,"line_end":492,"column_start":5,"column_end":94}},{"value":"/ called *after* this function will be called.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":510804,"byte_end":510852,"line_start":493,"line_end":493,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":510857,"byte_end":510860,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ ## Specific Events Variants","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":510865,"byte_end":510896,"line_start":495,"line_end":495,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":510901,"byte_end":510904,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Note that if you only care about a certain kind of event, you can submit a function that","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":510909,"byte_end":511001,"line_start":497,"line_end":497,"column_start":5,"column_end":97}},{"value":"/ only gets called for that specific event instead. For example, if you only care about key","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":511006,"byte_end":511099,"line_start":498,"line_end":498,"column_start":5,"column_end":98}},{"value":"/ presses, you may wish to use the `key_pressed` method instead.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":511104,"byte_end":511170,"line_start":499,"line_end":499,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4377},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":511768,"byte_end":511777,"line_start":515,"line_end":515,"column_start":12,"column_end":21},"name":"raw_event","qualname":"<Builder>::raw_event","value":"fn raw_event<M>(Self, RawEventFn<M>) -> Self where M: 'static","parent":null,"children":[],"decl_id":null,"docs":" The same as the `event` method, but allows for processing raw `winit::event::WindowEvent`s rather\n than Nannou's simplified `event::WindowEvent`s.","sig":null,"attributes":[{"value":"/ The same as the `event` method, but allows for processing raw `winit::event::WindowEvent`s rather","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":511368,"byte_end":511469,"line_start":508,"line_end":508,"column_start":5,"column_end":106}},{"value":"/ than Nannou's simplified `event::WindowEvent`s.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":511474,"byte_end":511525,"line_start":509,"line_end":509,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":511530,"byte_end":511533,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ ## Event Function Call Order","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":511538,"byte_end":511570,"line_start":511,"line_end":511,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":511575,"byte_end":511578,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ If both `raw_event` and `event` functions have been provided, the given `raw_event`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":511583,"byte_end":511670,"line_start":513,"line_end":513,"column_start":5,"column_end":92}},{"value":"/ function will always be called immediately before the given `event` function.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":511675,"byte_end":511756,"line_start":514,"line_end":514,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":4379},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":512063,"byte_end":512074,"line_start":524,"line_end":524,"column_start":12,"column_end":23},"name":"key_pressed","qualname":"<Builder>::key_pressed","value":"fn key_pressed<M>(Self, KeyPressedFn<M>) -> Self where M: 'static","parent":null,"children":[],"decl_id":null,"docs":" A function for processing key press events associated with this window.\n","sig":null,"attributes":[{"value":"/ A function for processing key press events associated with this window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":511976,"byte_end":512051,"line_start":523,"line_end":523,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":4381},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":512346,"byte_end":512358,"line_start":533,"line_end":533,"column_start":12,"column_end":24},"name":"key_released","qualname":"<Builder>::key_released","value":"fn key_released<M>(Self, KeyReleasedFn<M>) -> Self where M: 'static","parent":null,"children":[],"decl_id":null,"docs":" A function for processing key release events associated with this window.\n","sig":null,"attributes":[{"value":"/ A function for processing key release events associated with this window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":512257,"byte_end":512334,"line_start":532,"line_end":532,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":4383},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":512551,"byte_end":512569,"line_start":541,"line_end":541,"column_start":12,"column_end":30},"name":"received_character","qualname":"<Builder>::received_character","value":"fn received_character<M>(Self, ReceivedCharacterFn<M>) -> Self where\nM: 'static","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4385},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":512862,"byte_end":512873,"line_start":550,"line_end":550,"column_start":12,"column_end":23},"name":"mouse_moved","qualname":"<Builder>::mouse_moved","value":"fn mouse_moved<M>(Self, MouseMovedFn<M>) -> Self where M: 'static","parent":null,"children":[],"decl_id":null,"docs":" A function for processing mouse moved events associated with this window.\n","sig":null,"attributes":[{"value":"/ A function for processing mouse moved events associated with this window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":512773,"byte_end":512850,"line_start":549,"line_end":549,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":4387},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":513147,"byte_end":513160,"line_start":559,"line_end":559,"column_start":12,"column_end":25},"name":"mouse_pressed","qualname":"<Builder>::mouse_pressed","value":"fn mouse_pressed<M>(Self, MousePressedFn<M>) -> Self where M: 'static","parent":null,"children":[],"decl_id":null,"docs":" A function for processing mouse pressed events associated with this window.\n","sig":null,"attributes":[{"value":"/ A function for processing mouse pressed events associated with this window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":513056,"byte_end":513135,"line_start":558,"line_end":558,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":4389},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":513441,"byte_end":513455,"line_start":568,"line_end":568,"column_start":12,"column_end":26},"name":"mouse_released","qualname":"<Builder>::mouse_released","value":"fn mouse_released<M>(Self, MouseReleasedFn<M>) -> Self where M: 'static","parent":null,"children":[],"decl_id":null,"docs":" A function for processing mouse released events associated with this window.\n","sig":null,"attributes":[{"value":"/ A function for processing mouse released events associated with this window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":513349,"byte_end":513429,"line_start":567,"line_end":567,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4391},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":513736,"byte_end":513747,"line_start":577,"line_end":577,"column_start":12,"column_end":23},"name":"mouse_wheel","qualname":"<Builder>::mouse_wheel","value":"fn mouse_wheel<M>(Self, MouseWheelFn<M>) -> Self where M: 'static","parent":null,"children":[],"decl_id":null,"docs":" A function for processing mouse wheel events associated with this window.\n","sig":null,"attributes":[{"value":"/ A function for processing mouse wheel events associated with this window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":513647,"byte_end":513724,"line_start":576,"line_end":576,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":4393},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":514021,"byte_end":514034,"line_start":586,"line_end":586,"column_start":12,"column_end":25},"name":"mouse_entered","qualname":"<Builder>::mouse_entered","value":"fn mouse_entered<M>(Self, MouseEnteredFn<M>) -> Self where M: 'static","parent":null,"children":[],"decl_id":null,"docs":" A function for processing mouse entered events associated with this window.\n","sig":null,"attributes":[{"value":"/ A function for processing mouse entered events associated with this window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":513930,"byte_end":514009,"line_start":585,"line_end":585,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":4395},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":514313,"byte_end":514325,"line_start":595,"line_end":595,"column_start":12,"column_end":24},"name":"mouse_exited","qualname":"<Builder>::mouse_exited","value":"fn mouse_exited<M>(Self, MouseExitedFn<M>) -> Self where M: 'static","parent":null,"children":[],"decl_id":null,"docs":" A function for processing mouse exited events associated with this window.\n","sig":null,"attributes":[{"value":"/ A function for processing mouse exited events associated with this window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":514223,"byte_end":514301,"line_start":594,"line_end":594,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":4397},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":514594,"byte_end":514599,"line_start":604,"line_end":604,"column_start":12,"column_end":17},"name":"touch","qualname":"<Builder>::touch","value":"fn touch<M>(Self, TouchFn<M>) -> Self where M: 'static","parent":null,"children":[],"decl_id":null,"docs":" A function for processing touch events associated with this window.\n","sig":null,"attributes":[{"value":"/ A function for processing touch events associated with this window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":514511,"byte_end":514582,"line_start":603,"line_end":603,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":4399},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":514861,"byte_end":514878,"line_start":613,"line_end":613,"column_start":12,"column_end":29},"name":"touchpad_pressure","qualname":"<Builder>::touchpad_pressure","value":"fn touchpad_pressure<M>(Self, TouchpadPressureFn<M>) -> Self where M: 'static","parent":null,"children":[],"decl_id":null,"docs":" A function for processing touchpad pressure events associated with this window.\n","sig":null,"attributes":[{"value":"/ A function for processing touchpad pressure events associated with this window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":514766,"byte_end":514849,"line_start":612,"line_end":612,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":4401},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":515169,"byte_end":515174,"line_start":622,"line_end":622,"column_start":12,"column_end":17},"name":"moved","qualname":"<Builder>::moved","value":"fn moved<M>(Self, MovedFn<M>) -> Self where M: 'static","parent":null,"children":[],"decl_id":null,"docs":" A function for processing window moved events associated with this window.\n","sig":null,"attributes":[{"value":"/ A function for processing window moved events associated with this window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":515079,"byte_end":515157,"line_start":621,"line_end":621,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":4403},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":515433,"byte_end":515440,"line_start":631,"line_end":631,"column_start":12,"column_end":19},"name":"resized","qualname":"<Builder>::resized","value":"fn resized<M>(Self, ResizedFn<M>) -> Self where M: 'static","parent":null,"children":[],"decl_id":null,"docs":" A function for processing window resized events associated with this window.\n","sig":null,"attributes":[{"value":"/ A function for processing window resized events associated with this window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":515341,"byte_end":515421,"line_start":630,"line_end":630,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":4405},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":515703,"byte_end":515715,"line_start":640,"line_end":640,"column_start":12,"column_end":24},"name":"hovered_file","qualname":"<Builder>::hovered_file","value":"fn hovered_file<M>(Self, HoveredFileFn<M>) -> Self where M: 'static","parent":null,"children":[],"decl_id":null,"docs":" A function for processing hovered file events associated with this window.\n","sig":null,"attributes":[{"value":"/ A function for processing hovered file events associated with this window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":515613,"byte_end":515691,"line_start":639,"line_end":639,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":4407},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":516001,"byte_end":516023,"line_start":649,"line_end":649,"column_start":12,"column_end":34},"name":"hovered_file_cancelled","qualname":"<Builder>::hovered_file_cancelled","value":"fn hovered_file_cancelled<M>(Self, HoveredFileCancelledFn<M>) -> Self where\nM: 'static","parent":null,"children":[],"decl_id":null,"docs":" A function for processing hovered file cancelled events associated with this window.\n","sig":null,"attributes":[{"value":"/ A function for processing hovered file cancelled events associated with this window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":515901,"byte_end":515989,"line_start":648,"line_end":648,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4409},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":516339,"byte_end":516351,"line_start":659,"line_end":659,"column_start":12,"column_end":24},"name":"dropped_file","qualname":"<Builder>::dropped_file","value":"fn dropped_file<M>(Self, DroppedFileFn<M>) -> Self where M: 'static","parent":null,"children":[],"decl_id":null,"docs":" A function for processing dropped file events associated with this window.\n","sig":null,"attributes":[{"value":"/ A function for processing dropped file events associated with this window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":516249,"byte_end":516327,"line_start":658,"line_end":658,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":4411},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":516625,"byte_end":516632,"line_start":668,"line_end":668,"column_start":12,"column_end":19},"name":"focused","qualname":"<Builder>::focused","value":"fn focused<M>(Self, FocusedFn<M>) -> Self where M: 'static","parent":null,"children":[],"decl_id":null,"docs":" A function for processing the focused event associated with this window.\n","sig":null,"attributes":[{"value":"/ A function for processing the focused event associated with this window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":516537,"byte_end":516613,"line_start":667,"line_end":667,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":4413},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":516895,"byte_end":516904,"line_start":677,"line_end":677,"column_start":12,"column_end":21},"name":"unfocused","qualname":"<Builder>::unfocused","value":"fn unfocused<M>(Self, UnfocusedFn<M>) -> Self where M: 'static","parent":null,"children":[],"decl_id":null,"docs":" A function for processing the unfocused event associated with this window.\n","sig":null,"attributes":[{"value":"/ A function for processing the unfocused event associated with this window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":516805,"byte_end":516883,"line_start":676,"line_end":676,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":4415},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":517177,"byte_end":517183,"line_start":686,"line_end":686,"column_start":12,"column_end":18},"name":"closed","qualname":"<Builder>::closed","value":"fn closed<M>(Self, ClosedFn<M>) -> Self where M: 'static","parent":null,"children":[],"decl_id":null,"docs":" A function for processing the window closed event associated with this window.\n","sig":null,"attributes":[{"value":"/ A function for processing the window closed event associated with this window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":517083,"byte_end":517165,"line_start":685,"line_end":685,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":4417},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":518273,"byte_end":518295,"line_start":707,"line_end":707,"column_start":12,"column_end":34},"name":"max_capture_frame_jobs","qualname":"<Builder>::max_capture_frame_jobs","value":"fn max_capture_frame_jobs(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The maximum number of simultaneous capture frame jobs that can be run for this window\n before we block and wait for the existing jobs to complete.","sig":null,"attributes":[{"value":"/ The maximum number of simultaneous capture frame jobs that can be run for this window","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":517353,"byte_end":517442,"line_start":694,"line_end":694,"column_start":5,"column_end":94}},{"value":"/ before we block and wait for the existing jobs to complete.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":517447,"byte_end":517510,"line_start":695,"line_end":695,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":517515,"byte_end":517518,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ A \"capture frame job\" refers to the combind process of waiting to read a frame from the GPU","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":517523,"byte_end":517618,"line_start":697,"line_end":697,"column_start":5,"column_end":100}},{"value":"/ and then writing that frame to an image file on the disk. Each call to","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":517623,"byte_end":517697,"line_start":698,"line_end":698,"column_start":5,"column_end":79}},{"value":"/ `window.capture_frame(path)` spawns a new \"capture frame job\" on an internal thread pool.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":517702,"byte_end":517795,"line_start":699,"line_end":699,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":517800,"byte_end":517803,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ By default, this value is equal to the number of physical cpu threads available on the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":517808,"byte_end":517898,"line_start":701,"line_end":701,"column_start":5,"column_end":95}},{"value":"/ system. However, keep in mind that this means there must be room in both RAM and VRAM for","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":517903,"byte_end":517996,"line_start":702,"line_end":702,"column_start":5,"column_end":98}},{"value":"/ this number of textures to exist at any moment in time. If you run into an \"out of memory\"","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":518001,"byte_end":518095,"line_start":703,"line_end":703,"column_start":5,"column_end":99}},{"value":"/ error, try reducing the number of max jobs to a lower value, though never lower than `1`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":518100,"byte_end":518193,"line_start":704,"line_end":704,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":518198,"byte_end":518201,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the specified value is less than `1`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":518206,"byte_end":518261,"line_start":706,"line_end":706,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":4418},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":519071,"byte_end":519092,"line_start":724,"line_end":724,"column_start":12,"column_end":33},"name":"capture_frame_timeout","qualname":"<Builder>::capture_frame_timeout","value":"fn capture_frame_timeout(Self, Option<std::time::Duration>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" In the case that `max_capture_frame_jobs` is reached and the main thread must block, this\n specifies how long to wait for a running capture job to complete. See the\n `max_capture_frame_jobs` docs for more details.","sig":null,"attributes":[{"value":"/ In the case that `max_capture_frame_jobs` is reached and the main thread must block, this","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":518528,"byte_end":518621,"line_start":716,"line_end":716,"column_start":5,"column_end":98}},{"value":"/ specifies how long to wait for a running capture job to complete. See the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":518626,"byte_end":518703,"line_start":717,"line_end":717,"column_start":5,"column_end":82}},{"value":"/ `max_capture_frame_jobs` docs for more details.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":518708,"byte_end":518759,"line_start":718,"line_end":718,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":518764,"byte_end":518767,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ By default, the timeout used is equal to `app::Builder::DEFAULT_CAPTURE_FRAME_TIMEOUT`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":518772,"byte_end":518863,"line_start":720,"line_end":720,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":518868,"byte_end":518871,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ If `None` is specified, the capture process will never time out. This may be necessary on","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":518876,"byte_end":518969,"line_start":722,"line_end":722,"column_start":5,"column_end":98}},{"value":"/ extremely low-powered machines that take a long time to write each frame to disk.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":518974,"byte_end":519059,"line_start":723,"line_end":723,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":4419},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":519322,"byte_end":519327,"line_start":730,"line_end":730,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"fn build(Self) -> Result<Id, BuildError>","parent":null,"children":[],"decl_id":null,"docs":" Builds the window, inserts it into the `App`'s display map and returns the unique ID.\n","sig":null,"attributes":[{"value":"/ Builds the window, inserts it into the `App`'s display map and returns the unique ID.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":519221,"byte_end":519310,"line_start":729,"line_end":729,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":4428},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":528785,"byte_end":528789,"line_start":981,"line_end":981,"column_start":12,"column_end":16},"name":"size","qualname":"<Builder>::size","value":"fn size(Self, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Requests the window to be a specific size in points.","sig":null,"attributes":[{"value":"/ Requests the window to be a specific size in points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":528589,"byte_end":528645,"line_start":977,"line_end":977,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":528650,"byte_end":528653,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ This describes to the \"inner\" part of the window, not including desktop decorations like the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":528658,"byte_end":528754,"line_start":979,"line_end":979,"column_start":5,"column_end":101}},{"value":"/ title bar.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":528759,"byte_end":528773,"line_start":980,"line_end":980,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":4430},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":528994,"byte_end":529002,"line_start":986,"line_end":986,"column_start":12,"column_end":20},"name":"min_size","qualname":"<Builder>::min_size","value":"fn min_size(Self, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the minimum size in points for the window.\n","sig":null,"attributes":[{"value":"/ Set the minimum size in points for the window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":528932,"byte_end":528982,"line_start":985,"line_end":985,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4432},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":529211,"byte_end":529219,"line_start":991,"line_end":991,"column_start":12,"column_end":20},"name":"max_size","qualname":"<Builder>::max_size","value":"fn max_size(Self, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum size in points for the window.\n","sig":null,"attributes":[{"value":"/ Set the maximum size in points for the window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":529149,"byte_end":529199,"line_start":990,"line_end":990,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4434},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":529562,"byte_end":529573,"line_start":999,"line_end":999,"column_start":12,"column_end":23},"name":"size_pixels","qualname":"<Builder>::size_pixels","value":"fn size_pixels(Self, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Requests the window to be a specific size in points.","sig":null,"attributes":[{"value":"/ Requests the window to be a specific size in points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":529366,"byte_end":529422,"line_start":995,"line_end":995,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":529427,"byte_end":529430,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ This describes to the \"inner\" part of the window, not including desktop decorations like the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":529435,"byte_end":529531,"line_start":997,"line_end":997,"column_start":5,"column_end":101}},{"value":"/ title bar.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":529536,"byte_end":529550,"line_start":998,"line_end":998,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":4436},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":529794,"byte_end":529803,"line_start":1004,"line_end":1004,"column_start":12,"column_end":21},"name":"resizable","qualname":"<Builder>::resizable","value":"fn resizable(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether or not the window should be resizable after creation.\n","sig":null,"attributes":[{"value":"/ Whether or not the window should be resizable after creation.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":529717,"byte_end":529782,"line_start":1003,"line_end":1003,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":4438},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":529962,"byte_end":529967,"line_start":1009,"line_end":1009,"column_start":12,"column_end":17},"name":"title","qualname":"<Builder>::title","value":"fn title<T>(Self, T) -> Self where T: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Requests a specific title for the window.\n","sig":null,"attributes":[{"value":"/ Requests a specific title for the window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":529905,"byte_end":529950,"line_start":1008,"line_end":1008,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":4441},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":530205,"byte_end":530215,"line_start":1018,"line_end":1018,"column_start":12,"column_end":22},"name":"fullscreen","qualname":"<Builder>::fullscreen","value":"fn fullscreen(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create the window fullscreened on the current monitor.\n","sig":null,"attributes":[{"value":"/ Create the window fullscreened on the current monitor.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":530135,"byte_end":530193,"line_start":1017,"line_end":1017,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4442},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":530590,"byte_end":530605,"line_start":1027,"line_end":1027,"column_start":12,"column_end":27},"name":"fullscreen_with","qualname":"<Builder>::fullscreen_with","value":"fn fullscreen_with(Self, Option<Fullscreen>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the window fullscreen state with the given settings.","sig":null,"attributes":[{"value":"/ Set the window fullscreen state with the given settings.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":530367,"byte_end":530427,"line_start":1023,"line_end":1023,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":530432,"byte_end":530435,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ - `None` indicates a normal window. This is the default case.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":530440,"byte_end":530505,"line_start":1025,"line_end":1025,"column_start":5,"column_end":70}},{"value":"/ - `Some(Fullscreen)` means fullscreen with the desired settings.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":530510,"byte_end":530578,"line_start":1026,"line_end":1026,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4444},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":530764,"byte_end":530773,"line_start":1032,"line_end":1032,"column_start":12,"column_end":21},"name":"maximized","qualname":"<Builder>::maximized","value":"fn maximized(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Requests maximized mode.\n","sig":null,"attributes":[{"value":"/ Requests maximized mode.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":530724,"byte_end":530752,"line_start":1031,"line_end":1031,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4446},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":530951,"byte_end":530958,"line_start":1037,"line_end":1037,"column_start":12,"column_end":19},"name":"visible","qualname":"<Builder>::visible","value":"fn visible(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether the window will be initially hidden or visible.\n","sig":null,"attributes":[{"value":"/ Sets whether the window will be initially hidden or visible.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":530875,"byte_end":530939,"line_start":1036,"line_end":1036,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":4448},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":531134,"byte_end":531145,"line_start":1042,"line_end":1042,"column_start":12,"column_end":23},"name":"transparent","qualname":"<Builder>::transparent","value":"fn transparent(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether the background of the window should be transparent.\n","sig":null,"attributes":[{"value":"/ Sets whether the background of the window should be transparent.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":531054,"byte_end":531122,"line_start":1041,"line_end":1041,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":4450},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":531332,"byte_end":531343,"line_start":1047,"line_end":1047,"column_start":12,"column_end":23},"name":"decorations","qualname":"<Builder>::decorations","value":"fn decorations(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether the window should have a border, a title bar, etc.\n","sig":null,"attributes":[{"value":"/ Sets whether the window should have a border, a title bar, etc.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":531253,"byte_end":531320,"line_start":1046,"line_end":1046,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":4452},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":531537,"byte_end":531550,"line_start":1052,"line_end":1052,"column_start":12,"column_end":25},"name":"always_on_top","qualname":"<Builder>::always_on_top","value":"fn always_on_top(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the window will always be on top of other windows.\n","sig":null,"attributes":[{"value":"/ Sets whether or not the window will always be on top of other windows.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":531451,"byte_end":531525,"line_start":1051,"line_end":1051,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":4454},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":531701,"byte_end":531712,"line_start":1057,"line_end":1057,"column_start":12,"column_end":23},"name":"window_icon","qualname":"<Builder>::window_icon","value":"fn window_icon(Self, Option<winit::window::Icon>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the window icon.\n","sig":null,"attributes":[{"value":"/ Sets the window icon.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":531664,"byte_end":531689,"line_start":1056,"line_end":1056,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4457},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":532251,"byte_end":532253,"line_start":1070,"line_end":1070,"column_start":12,"column_end":14},"name":"id","qualname":"<Window>::id","value":"fn id(&Self) -> Id","parent":null,"children":[],"decl_id":null,"docs":" A unique identifier associated with this window.\n","sig":null,"attributes":[{"value":"/ A unique identifier associated with this window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":532187,"byte_end":532239,"line_start":1069,"line_end":1069,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4458},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":533219,"byte_end":533231,"line_start":1093,"line_end":1093,"column_start":12,"column_end":24},"name":"scale_factor","qualname":"<Window>::scale_factor","value":"fn scale_factor(&Self) -> geom::scalar::Default","parent":null,"children":[],"decl_id":null,"docs":" Returns the scale factor that can be used to map logical pixels to physical pixels and vice\n versa.","sig":null,"attributes":[{"value":"/ Returns the scale factor that can be used to map logical pixels to physical pixels and vice","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":532305,"byte_end":532400,"line_start":1074,"line_end":1074,"column_start":5,"column_end":100}},{"value":"/ versa.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":532405,"byte_end":532415,"line_start":1075,"line_end":1075,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":532420,"byte_end":532423,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ Throughout nannou, you will see \"logical pixels\" referred to as \"points\", and \"physical","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":532428,"byte_end":532519,"line_start":1077,"line_end":1077,"column_start":5,"column_end":96}},{"value":"/ pixels\" referred to as \"pixels\".","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":532524,"byte_end":532560,"line_start":1078,"line_end":1078,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":532565,"byte_end":532568,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ This is typically `1.0` for a normal display, `2.0` for a retina display and higher on more","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":532573,"byte_end":532668,"line_start":1080,"line_end":1080,"column_start":5,"column_end":100}},{"value":"/ modern displays.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":532673,"byte_end":532693,"line_start":1081,"line_end":1081,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":532698,"byte_end":532701,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ You can read more about what this scale factor means within winit's [dpi module","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":532706,"byte_end":532789,"line_start":1083,"line_end":1083,"column_start":5,"column_end":88}},{"value":"/ documentation](https://docs.rs/winit/latest/winit/dpi/index.html).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":532794,"byte_end":532864,"line_start":1084,"line_end":1084,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":532869,"byte_end":532872,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ ## Platform-specific","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":532877,"byte_end":532901,"line_start":1086,"line_end":1086,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":532906,"byte_end":532909,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ - **X11:** This respects Xft.dpi, and can be overridden using the `WINIT_X11_SCALE_FACTOR`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":532914,"byte_end":533008,"line_start":1088,"line_end":1088,"column_start":5,"column_end":99}},{"value":"/   environment variable.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":533013,"byte_end":533040,"line_start":1089,"line_end":1089,"column_start":5,"column_end":32}},{"value":"/ - **Android:** Always returns 1.0.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":533045,"byte_end":533083,"line_start":1090,"line_end":1090,"column_start":5,"column_end":43}},{"value":"/ - **iOS:** Can only be called on the main thread. Returns the underlying `UiView`'s","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":533088,"byte_end":533175,"line_start":1091,"line_end":1091,"column_start":5,"column_end":92}},{"value":"/   `contentScaleFactor`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":533180,"byte_end":533207,"line_start":1092,"line_end":1092,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":4459},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":534153,"byte_end":534174,"line_start":1112,"line_end":1112,"column_start":12,"column_end":33},"name":"outer_position_pixels","qualname":"<Window>::outer_position_pixels","value":"fn outer_position_pixels(&Self)\n-> Result<(i32, i32), winit::error::NotSupportedError>","parent":null,"children":[],"decl_id":null,"docs":" The position of the top-left hand corner of the window relative to the top-left hand corner\n of the desktop.","sig":null,"attributes":[{"value":"/ The position of the top-left hand corner of the window relative to the top-left hand corner","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":533317,"byte_end":533412,"line_start":1097,"line_end":1097,"column_start":5,"column_end":100}},{"value":"/ of the desktop.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":533417,"byte_end":533436,"line_start":1098,"line_end":1098,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":533441,"byte_end":533444,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ Note that the top-left hand corner of the desktop is not necessarily the same as the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":533449,"byte_end":533537,"line_start":1100,"line_end":1100,"column_start":5,"column_end":93}},{"value":"/ screen. If the user uses a desktop with multiple monitors, the top-left hand corner of the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":533542,"byte_end":533636,"line_start":1101,"line_end":1101,"column_start":5,"column_end":99}},{"value":"/ desktop is the top-left hand corner of the monitor at the top-left of the desktop.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":533641,"byte_end":533727,"line_start":1102,"line_end":1102,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":533732,"byte_end":533735,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ The coordinates can be negative if the top-left hand corner of the window is outside of the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":533740,"byte_end":533835,"line_start":1104,"line_end":1104,"column_start":5,"column_end":100}},{"value":"/ visible screen region.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":533840,"byte_end":533866,"line_start":1105,"line_end":1105,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":533871,"byte_end":533874,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ ## Platform-specific","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":533879,"byte_end":533903,"line_start":1107,"line_end":1107,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":533908,"byte_end":533911,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ - **iOS:** Can only be called on the main thread. Returns the top left coordinates of the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":533916,"byte_end":534009,"line_start":1109,"line_end":1109,"column_start":5,"column_end":98}},{"value":"/ window in the screen space coordinate system.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":534014,"byte_end":534063,"line_start":1110,"line_end":1110,"column_start":5,"column_end":54}},{"value":"/ - **Web:** Returns the top-left coordinates relative to the viewport.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":534068,"byte_end":534141,"line_start":1111,"line_end":1111,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":4460},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":534794,"byte_end":534819,"line_start":1126,"line_end":1126,"column_start":12,"column_end":37},"name":"set_outer_position_pixels","qualname":"<Window>::set_outer_position_pixels","value":"fn set_outer_position_pixels(&Self, i32, i32)","parent":null,"children":[],"decl_id":null,"docs":" Modifies the position of the window.","sig":null,"attributes":[{"value":"/ Modifies the position of the window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":534303,"byte_end":534343,"line_start":1116,"line_end":1116,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":534348,"byte_end":534351,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ See `outer_position_pixels` for more information about the returned coordinates. This","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":534356,"byte_end":534445,"line_start":1118,"line_end":1118,"column_start":5,"column_end":94}},{"value":"/ automatically un-maximizes the window if it is maximized.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":534450,"byte_end":534511,"line_start":1119,"line_end":1119,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":534516,"byte_end":534519,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ ## Platform-specific","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":534524,"byte_end":534548,"line_start":1121,"line_end":1121,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":534553,"byte_end":534556,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ - **iOS:** Can only be called on the main thread. Sets the top left coordinates of the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":534561,"byte_end":534651,"line_start":1123,"line_end":1123,"column_start":5,"column_end":95}},{"value":"/   window in the screen space coordinate system.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":534656,"byte_end":534707,"line_start":1124,"line_end":1124,"column_start":5,"column_end":56}},{"value":"/ - **Web:** Sets the top-left coordinates relative to the viewport.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":534712,"byte_end":534782,"line_start":1125,"line_end":1125,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":4461},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":535126,"byte_end":535143,"line_start":1134,"line_end":1134,"column_start":12,"column_end":29},"name":"inner_size_pixels","qualname":"<Window>::inner_size_pixels","value":"fn inner_size_pixels(&Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The width and height in pixels of the client area of the window.","sig":null,"attributes":[{"value":"/ The width and height in pixels of the client area of the window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":534947,"byte_end":535015,"line_start":1131,"line_end":1131,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":535020,"byte_end":535023,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ The client area is the content of the window, excluding the title bar and borders.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":535028,"byte_end":535114,"line_start":1133,"line_end":1133,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":4462},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":535500,"byte_end":535517,"line_start":1143,"line_end":1143,"column_start":12,"column_end":29},"name":"inner_size_points","qualname":"<Window>::inner_size_points","value":"fn inner_size_points(&Self) -> (geom::scalar::Default, geom::scalar::Default)","parent":null,"children":[],"decl_id":null,"docs":" The width and height in points of the client area of the window.","sig":null,"attributes":[{"value":"/ The width and height in points of the client area of the window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":535218,"byte_end":535286,"line_start":1138,"line_end":1138,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":535291,"byte_end":535294,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ The client area is the content of the window, excluding the title bar and borders.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":535299,"byte_end":535385,"line_start":1140,"line_end":1140,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":535390,"byte_end":535393,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ This is the same as dividing the result  of `inner_size_pixels()` by `scale_factor()`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":535398,"byte_end":535488,"line_start":1142,"line_end":1142,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":4463},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":535857,"byte_end":535878,"line_start":1153,"line_end":1153,"column_start":12,"column_end":33},"name":"set_inner_size_pixels","qualname":"<Window>::set_inner_size_pixels","value":"fn set_inner_size_pixels(&Self, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Modifies the inner size of the window.","sig":null,"attributes":[{"value":"/ Modifies the inner size of the window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":535718,"byte_end":535760,"line_start":1150,"line_end":1150,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":535765,"byte_end":535768,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ See the `inner_size` methods for more informations about the values.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":535773,"byte_end":535845,"line_start":1152,"line_end":1152,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4464},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":536174,"byte_end":536195,"line_start":1161,"line_end":1161,"column_start":12,"column_end":33},"name":"set_inner_size_points","qualname":"<Window>::set_inner_size_points","value":"fn set_inner_size_points(&Self, f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" Modifies the inner size of the window using point values.","sig":null,"attributes":[{"value":"/ Modifies the inner size of the window using point values.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":536016,"byte_end":536077,"line_start":1158,"line_end":1158,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":536082,"byte_end":536085,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ See the `inner_size` methods for more informations about the values.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":536090,"byte_end":536162,"line_start":1160,"line_end":1160,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4465},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":536534,"byte_end":536551,"line_start":1170,"line_end":1170,"column_start":12,"column_end":29},"name":"outer_size_pixels","qualname":"<Window>::outer_size_pixels","value":"fn outer_size_pixels(&Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The width and height of the window in pixels.","sig":null,"attributes":[{"value":"/ The width and height of the window in pixels.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":536332,"byte_end":536381,"line_start":1166,"line_end":1166,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":536386,"byte_end":536389,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ These dimensions include title bar and borders. If you don't want these, you should use","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":536394,"byte_end":536485,"line_start":1168,"line_end":1168,"column_start":5,"column_end":96}},{"value":"/ `inner_size_pixels` instead.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":536490,"byte_end":536522,"line_start":1169,"line_end":1169,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4466},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":536931,"byte_end":536948,"line_start":1180,"line_end":1180,"column_start":12,"column_end":29},"name":"outer_size_points","qualname":"<Window>::outer_size_points","value":"fn outer_size_points(&Self) -> (f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" The width and height of the window in points.","sig":null,"attributes":[{"value":"/ The width and height of the window in points.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":536626,"byte_end":536675,"line_start":1174,"line_end":1174,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":536680,"byte_end":536683,"line_start":1175,"line_end":1175,"column_start":5,"column_end":8}},{"value":"/ These dimensions include title bar and borders. If you don't want these, you should use","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":536688,"byte_end":536779,"line_start":1176,"line_end":1176,"column_start":5,"column_end":96}},{"value":"/ `inner_size_points` instead.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":536784,"byte_end":536816,"line_start":1177,"line_end":1177,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":536821,"byte_end":536824,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ This is the same as dividing the result  of `outer_size_pixels()` by `scale_factor()`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":536829,"byte_end":536919,"line_start":1179,"line_end":1179,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":4467},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":537164,"byte_end":537189,"line_start":1188,"line_end":1188,"column_start":12,"column_end":37},"name":"set_min_inner_size_points","qualname":"<Window>::set_min_inner_size_points","value":"fn set_min_inner_size_points(&Self, Option<(f32, f32)>)","parent":null,"children":[],"decl_id":null,"docs":" Sets a minimum size for the window.\n","sig":null,"attributes":[{"value":"/ Sets a minimum size for the window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":537113,"byte_end":537152,"line_start":1187,"line_end":1187,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4469},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":537422,"byte_end":537447,"line_start":1194,"line_end":1194,"column_start":12,"column_end":37},"name":"set_max_inner_size_points","qualname":"<Window>::set_max_inner_size_points","value":"fn set_max_inner_size_points(&Self, Option<(f32, f32)>)","parent":null,"children":[],"decl_id":null,"docs":" Sets a maximum size for the window.\n","sig":null,"attributes":[{"value":"/ Sets a maximum size for the window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":537371,"byte_end":537410,"line_start":1193,"line_end":1193,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4471},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":537749,"byte_end":537758,"line_start":1202,"line_end":1202,"column_start":12,"column_end":21},"name":"set_title","qualname":"<Window>::set_title","value":"fn set_title(&Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Modifies the title of the window.","sig":null,"attributes":[{"value":"/ Modifies the title of the window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":537629,"byte_end":537666,"line_start":1199,"line_end":1199,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":537671,"byte_end":537674,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ This is a no-op if the window has already been closed.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":537679,"byte_end":537737,"line_start":1201,"line_end":1201,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4472},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":538042,"byte_end":538053,"line_start":1213,"line_end":1213,"column_start":12,"column_end":23},"name":"set_visible","qualname":"<Window>::set_visible","value":"fn set_visible(&Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set the visibility of the window.","sig":null,"attributes":[{"value":"/ Set the visibility of the window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":537830,"byte_end":537867,"line_start":1206,"line_end":1206,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":537872,"byte_end":537875,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ ## Platform-specific","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":537880,"byte_end":537904,"line_start":1208,"line_end":1208,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":537909,"byte_end":537912,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ - Android: Has no effect.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":537917,"byte_end":537946,"line_start":1210,"line_end":1210,"column_start":5,"column_end":34}},{"value":"/ - iOS: Can only be called on the main thread.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":537951,"byte_end":538000,"line_start":1211,"line_end":1211,"column_start":5,"column_end":54}},{"value":"/ - Web: Has no effect.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":538005,"byte_end":538030,"line_start":1212,"line_end":1212,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4473},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":538384,"byte_end":538397,"line_start":1221,"line_end":1221,"column_start":12,"column_end":25},"name":"set_resizable","qualname":"<Window>::set_resizable","value":"fn set_resizable(&Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets whether the window is resizable or not.","sig":null,"attributes":[{"value":"/ Sets whether the window is resizable or not.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":538130,"byte_end":538178,"line_start":1217,"line_end":1217,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":538183,"byte_end":538186,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ Note that making the window unresizable doesn't exempt you from handling **Resized**, as","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":538191,"byte_end":538283,"line_start":1219,"line_end":1219,"column_start":5,"column_end":97}},{"value":"/ that event can still be triggered by DPI scaling, entering fullscreen mode, etc.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":538288,"byte_end":538372,"line_start":1220,"line_end":1220,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":4474},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":538533,"byte_end":538546,"line_start":1226,"line_end":1226,"column_start":12,"column_end":25},"name":"set_minimized","qualname":"<Window>::set_minimized","value":"fn set_minimized(&Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the window to minimized or back.\n","sig":null,"attributes":[{"value":"/ Sets the window to minimized or back.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":538480,"byte_end":538521,"line_start":1225,"line_end":1225,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":4475},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":538682,"byte_end":538695,"line_start":1231,"line_end":1231,"column_start":12,"column_end":25},"name":"set_maximized","qualname":"<Window>::set_maximized","value":"fn set_maximized(&Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the window to maximized or back.\n","sig":null,"attributes":[{"value":"/ Sets the window to maximized or back.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":538629,"byte_end":538670,"line_start":1230,"line_end":1230,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":4476},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":539047,"byte_end":539061,"line_start":1241,"line_end":1241,"column_start":12,"column_end":26},"name":"set_fullscreen","qualname":"<Window>::set_fullscreen","value":"fn set_fullscreen(&Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set the window to fullscreen on the primary monitor.","sig":null,"attributes":[{"value":"/ Set the window to fullscreen on the primary monitor.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":538778,"byte_end":538834,"line_start":1235,"line_end":1235,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":538839,"byte_end":538842,"line_start":1236,"line_end":1236,"column_start":5,"column_end":8}},{"value":"/ `true` enables fullscreen, `false` disables fullscreen.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":538847,"byte_end":538906,"line_start":1237,"line_end":1237,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":538911,"byte_end":538914,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ See the `set_fullscreen_with` method for more options and details about behaviour related","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":538919,"byte_end":539012,"line_start":1239,"line_end":1239,"column_start":5,"column_end":98}},{"value":"/ to fullscreen.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":539017,"byte_end":539035,"line_start":1240,"line_end":1240,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":4477},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":540436,"byte_end":540455,"line_start":1271,"line_end":1271,"column_start":12,"column_end":31},"name":"set_fullscreen_with","qualname":"<Window>::set_fullscreen_with","value":"fn set_fullscreen_with(&Self, Option<Fullscreen>)","parent":null,"children":[],"decl_id":null,"docs":" Set the window to fullscreen.","sig":null,"attributes":[{"value":"/ Set the window to fullscreen.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":539363,"byte_end":539396,"line_start":1251,"line_end":1251,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":539401,"byte_end":539404,"line_start":1252,"line_end":1252,"column_start":5,"column_end":8}},{"value":"/ Call this method again with `None` to revert back from fullscreen.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":539409,"byte_end":539479,"line_start":1253,"line_end":1253,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":539484,"byte_end":539487,"line_start":1254,"line_end":1254,"column_start":5,"column_end":8}},{"value":"/ ## Platform-specific","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":539492,"byte_end":539516,"line_start":1255,"line_end":1255,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":539521,"byte_end":539524,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ - macOS: `Fullscreen::Exclusive` provides true exclusive mode with a video mode change.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":539529,"byte_end":539620,"line_start":1257,"line_end":1257,"column_start":5,"column_end":96}},{"value":"/   Caveat! macOS doesn't provide task switching (or spaces!) while in exclusive fullscreen","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":539625,"byte_end":539718,"line_start":1258,"line_end":1258,"column_start":5,"column_end":98}},{"value":"/   mode. This mode should be used when a video mode change is desired, but for a better user","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":539723,"byte_end":539818,"line_start":1259,"line_end":1259,"column_start":5,"column_end":100}},{"value":"/   experience, borderless fullscreen might be preferred.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":539823,"byte_end":539882,"line_start":1260,"line_end":1260,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":539887,"byte_end":539890,"line_start":1261,"line_end":1261,"column_start":5,"column_end":8}},{"value":"/   `Fullscreen::Borderless` provides a borderless fullscreen window on a separate space.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":539895,"byte_end":539986,"line_start":1262,"line_end":1262,"column_start":5,"column_end":96}},{"value":"/   This is the idiomatic way for fullscreen games to work on macOS. See","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":539991,"byte_end":540065,"line_start":1263,"line_end":1263,"column_start":5,"column_end":79}},{"value":"/   WindowExtMacOs::set_simple_fullscreen if separate spaces are not preferred.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":540070,"byte_end":540151,"line_start":1264,"line_end":1264,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":540156,"byte_end":540159,"line_start":1265,"line_end":1265,"column_start":5,"column_end":8}},{"value":"/   The dock and the menu bar are always disabled in fullscreen mode.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":540164,"byte_end":540235,"line_start":1266,"line_end":1266,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":540240,"byte_end":540243,"line_start":1267,"line_end":1267,"column_start":5,"column_end":8}},{"value":"/ - iOS: Can only be called on the main thread.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":540248,"byte_end":540297,"line_start":1268,"line_end":1268,"column_start":5,"column_end":54}},{"value":"/ - Wayland: Does not support exclusive fullscreen mode.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":540302,"byte_end":540360,"line_start":1269,"line_end":1269,"column_start":5,"column_end":63}},{"value":"/ - Windows: Screen saver is disabled in fullscreen mode.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":540365,"byte_end":540424,"line_start":1270,"line_end":1270,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4478},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":540717,"byte_end":540727,"line_start":1280,"line_end":1280,"column_start":12,"column_end":22},"name":"fullscreen","qualname":"<Window>::fullscreen","value":"fn fullscreen(&Self) -> Option<Fullscreen>","parent":null,"children":[],"decl_id":null,"docs":" Gets the window's current fullscreen state.","sig":null,"attributes":[{"value":"/ Gets the window's current fullscreen state.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":540555,"byte_end":540602,"line_start":1275,"line_end":1275,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":540607,"byte_end":540610,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ ## Platform-specific","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":540615,"byte_end":540639,"line_start":1277,"line_end":1277,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":540644,"byte_end":540647,"line_start":1278,"line_end":1278,"column_start":5,"column_end":8}},{"value":"/ - **iOS:** Can only be called on the main thread.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":540652,"byte_end":540705,"line_start":1279,"line_end":1279,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4479},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":541075,"byte_end":541090,"line_start":1291,"line_end":1291,"column_start":12,"column_end":27},"name":"set_decorations","qualname":"<Window>::set_decorations","value":"fn set_decorations(&Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Turn window decorations on or off.","sig":null,"attributes":[{"value":"/ Turn window decorations on or off.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":540803,"byte_end":540841,"line_start":1284,"line_end":1284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":540846,"byte_end":540849,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ ## Platform-specific","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":540854,"byte_end":540878,"line_start":1286,"line_end":1286,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":540883,"byte_end":540886,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ - **iOS:** Can only be called on the main thread. Controls whether the status bar is hidden","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":540891,"byte_end":540986,"line_start":1288,"line_end":1288,"column_start":5,"column_end":100}},{"value":"/   via `setPrefersStatusBarHidden`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":540991,"byte_end":541029,"line_start":1289,"line_end":1289,"column_start":5,"column_end":43}},{"value":"/ - **Web:** Has no effect.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":541034,"byte_end":541063,"line_start":1290,"line_end":1290,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":4480},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":541267,"byte_end":541284,"line_start":1296,"line_end":1296,"column_start":12,"column_end":29},"name":"set_always_on_top","qualname":"<Window>::set_always_on_top","value":"fn set_always_on_top(&Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Change whether or not the window will always be on top of other windows.\n","sig":null,"attributes":[{"value":"/ Change whether or not the window will always be on top of other windows.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":541179,"byte_end":541255,"line_start":1295,"line_end":1295,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":4481},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":541969,"byte_end":541984,"line_start":1312,"line_end":1312,"column_start":12,"column_end":27},"name":"set_window_icon","qualname":"<Window>::set_window_icon","value":"fn set_window_icon(&Self, Option<winit::window::Icon>)","parent":null,"children":[],"decl_id":null,"docs":" Sets the window icon. On Windows and X11, this is typically the small icon in the top-left\n corner of the titlebar.","sig":null,"attributes":[{"value":"/ Sets the window icon. On Windows and X11, this is typically the small icon in the top-left","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":541379,"byte_end":541473,"line_start":1300,"line_end":1300,"column_start":5,"column_end":99}},{"value":"/ corner of the titlebar.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":541478,"byte_end":541505,"line_start":1301,"line_end":1301,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":541510,"byte_end":541513,"line_start":1302,"line_end":1302,"column_start":5,"column_end":8}},{"value":"/ ## Platform-specific","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":541518,"byte_end":541542,"line_start":1303,"line_end":1303,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":541547,"byte_end":541550,"line_start":1304,"line_end":1304,"column_start":5,"column_end":8}},{"value":"/ This only has effect on Windows and X11.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":541555,"byte_end":541599,"line_start":1305,"line_end":1305,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":541604,"byte_end":541607,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ On Windows, this sets ICON_SMALL. The base size for a window icon is 16x16, but it's","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":541612,"byte_end":541700,"line_start":1307,"line_end":1307,"column_start":5,"column_end":93}},{"value":"/ recommended to account for screen scaling and pick a multiple of that, i.e. 32x32.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":541705,"byte_end":541791,"line_start":1308,"line_end":1308,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":541796,"byte_end":541799,"line_start":1309,"line_end":1309,"column_start":5,"column_end":8}},{"value":"/ X11 has no universal guidelines for icon sizes, so you're at the whims of the WM. That","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":541804,"byte_end":541894,"line_start":1310,"line_end":1310,"column_start":5,"column_end":95}},{"value":"/ said, it's usually in the same ballpark as on Windows.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":541899,"byte_end":541957,"line_start":1311,"line_end":1311,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4482},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":542316,"byte_end":542339,"line_start":1322,"line_end":1322,"column_start":12,"column_end":35},"name":"set_ime_position_points","qualname":"<Window>::set_ime_position_points","value":"fn set_ime_position_points(&Self, f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the location of IME candidate box in client area coordinates relative to the top left.","sig":null,"attributes":[{"value":"/ Sets the location of IME candidate box in client area coordinates relative to the top left.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":542096,"byte_end":542191,"line_start":1316,"line_end":1316,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":542196,"byte_end":542199,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ ## Platform-specific","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":542204,"byte_end":542228,"line_start":1318,"line_end":1318,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":542233,"byte_end":542236,"line_start":1319,"line_end":1319,"column_start":5,"column_end":8}},{"value":"/ - **iOS:** Has no effect.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":542241,"byte_end":542270,"line_start":1320,"line_end":1320,"column_start":5,"column_end":34}},{"value":"/ - **Web:** Has no effect.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":542275,"byte_end":542304,"line_start":1321,"line_end":1321,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":4483},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":542637,"byte_end":542652,"line_start":1333,"line_end":1333,"column_start":12,"column_end":27},"name":"set_cursor_icon","qualname":"<Window>::set_cursor_icon","value":"fn set_cursor_icon(&Self, winit::window::CursorIcon)","parent":null,"children":[],"decl_id":null,"docs":" Modifies the mouse cursor of the window.","sig":null,"attributes":[{"value":"/ Modifies the mouse cursor of the window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":542464,"byte_end":542508,"line_start":1327,"line_end":1327,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":542513,"byte_end":542516,"line_start":1328,"line_end":1328,"column_start":5,"column_end":8}},{"value":"/ ## Platform-specific","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":542521,"byte_end":542545,"line_start":1329,"line_end":1329,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":542550,"byte_end":542553,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ - **iOS:** Has no effect.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":542558,"byte_end":542587,"line_start":1331,"line_end":1331,"column_start":5,"column_end":34}},{"value":"/ - **Android:** Has no effect.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":542592,"byte_end":542625,"line_start":1332,"line_end":1332,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4484},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":542955,"byte_end":542981,"line_start":1343,"line_end":1343,"column_start":12,"column_end":38},"name":"set_cursor_position_points","qualname":"<Window>::set_cursor_position_points","value":"fn set_cursor_position_points(&Self, f32, f32)\n-> Result<(), winit::error::ExternalError>","parent":null,"children":[],"decl_id":null,"docs":" Changes the position of the cursor in logical window coordinates.","sig":null,"attributes":[{"value":"/ Changes the position of the cursor in logical window coordinates.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":542751,"byte_end":542820,"line_start":1337,"line_end":1337,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":542825,"byte_end":542828,"line_start":1338,"line_end":1338,"column_start":5,"column_end":8}},{"value":"/ ## Platform-specific","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":542833,"byte_end":542857,"line_start":1339,"line_end":1339,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":542862,"byte_end":542865,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ - **iOS:** Always returns an `Err`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":542870,"byte_end":542909,"line_start":1341,"line_end":1341,"column_start":5,"column_end":44}},{"value":"/ - **Web:** Has no effect.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":542914,"byte_end":542943,"line_start":1342,"line_end":1342,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":4485},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":543534,"byte_end":543549,"line_start":1361,"line_end":1361,"column_start":12,"column_end":27},"name":"set_cursor_grab","qualname":"<Window>::set_cursor_grab","value":"fn set_cursor_grab(&Self, bool) -> Result<(), winit::error::ExternalError>","parent":null,"children":[],"decl_id":null,"docs":" Grabs the cursor, preventing it from leaving the window.","sig":null,"attributes":[{"value":"/ Grabs the cursor, preventing it from leaving the window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":543183,"byte_end":543243,"line_start":1352,"line_end":1352,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":543248,"byte_end":543251,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ ## Platform-specific","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":543256,"byte_end":543280,"line_start":1354,"line_end":1354,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":543285,"byte_end":543288,"line_start":1355,"line_end":1355,"column_start":5,"column_end":8}},{"value":"/ - **macOS:** Locks the cursor in a fixed location.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":543293,"byte_end":543347,"line_start":1356,"line_end":1356,"column_start":5,"column_end":59}},{"value":"/ - **Wayland:** Locks the cursor in a fixed location.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":543352,"byte_end":543408,"line_start":1357,"line_end":1357,"column_start":5,"column_end":61}},{"value":"/ - **Android:** Has no effect.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":543413,"byte_end":543446,"line_start":1358,"line_end":1358,"column_start":5,"column_end":38}},{"value":"/ - **iOS:** Always returns an Err.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":543451,"byte_end":543488,"line_start":1359,"line_end":1359,"column_start":5,"column_end":42}},{"value":"/ - **Web:** Has no effect.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":543493,"byte_end":543522,"line_start":1360,"line_end":1360,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":4486},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":544154,"byte_end":544172,"line_start":1378,"line_end":1378,"column_start":12,"column_end":30},"name":"set_cursor_visible","qualname":"<Window>::set_cursor_visible","value":"fn set_cursor_visible(&Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set the cursor's visibility.","sig":null,"attributes":[{"value":"/ Set the cursor's visibility.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":543667,"byte_end":543699,"line_start":1365,"line_end":1365,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":543704,"byte_end":543707,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ If `false`, hides the cursor. If `true`, shows the cursor.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":543712,"byte_end":543774,"line_start":1367,"line_end":1367,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":543779,"byte_end":543782,"line_start":1368,"line_end":1368,"column_start":5,"column_end":8}},{"value":"/ ## Platform-specific","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":543787,"byte_end":543811,"line_start":1369,"line_end":1369,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":543816,"byte_end":543819,"line_start":1370,"line_end":1370,"column_start":5,"column_end":8}},{"value":"/ On **Windows**, **X11** and **Wayland**, the cursor is only hidden within the confines of","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":543824,"byte_end":543917,"line_start":1371,"line_end":1371,"column_start":5,"column_end":98}},{"value":"/ the window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":543922,"byte_end":543937,"line_start":1372,"line_end":1372,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":543942,"byte_end":543945,"line_start":1373,"line_end":1373,"column_start":5,"column_end":8}},{"value":"/ On **macOS**, the cursor is hidden as long as the window has input focus, even if the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":543950,"byte_end":544039,"line_start":1374,"line_end":1374,"column_start":5,"column_end":94}},{"value":"/ cursor is outside of the window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":544044,"byte_end":544080,"line_start":1375,"line_end":1375,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":544085,"byte_end":544088,"line_start":1376,"line_end":1376,"column_start":5,"column_end":8}},{"value":"/ This has no effect on **Android** or **iOS**.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":544093,"byte_end":544142,"line_start":1377,"line_end":1377,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":4487},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":544431,"byte_end":544446,"line_start":1384,"line_end":1384,"column_start":12,"column_end":27},"name":"current_monitor","qualname":"<Window>::current_monitor","value":"fn current_monitor(&Self) -> Option<winit::monitor::MonitorHandle>","parent":null,"children":[],"decl_id":null,"docs":" The current monitor that the window is, on or the primary monitor if nothing matches.\n If there's neither a current nor a primary monitor, returns none.\n","sig":null,"attributes":[{"value":"/ The current monitor that the window is, on or the primary monitor if nothing matches.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":544256,"byte_end":544345,"line_start":1382,"line_end":1382,"column_start":5,"column_end":94}},{"value":"/ If there's neither a current nor a primary monitor, returns none.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":544350,"byte_end":544419,"line_start":1383,"line_end":1383,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":4488},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":544639,"byte_end":544646,"line_start":1391,"line_end":1391,"column_start":12,"column_end":19},"name":"surface","qualname":"<Window>::surface","value":"fn surface(&Self) -> &wgpu::Surface","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the window's wgpu surface.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the window's wgpu surface.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":544574,"byte_end":544627,"line_start":1390,"line_end":1390,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":4489},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":544778,"byte_end":544799,"line_start":1396,"line_end":1396,"column_start":12,"column_end":33},"name":"surface_configuration","qualname":"<Window>::surface_configuration","value":"fn surface_configuration(&Self) -> &wgpu::SurfaceConfiguration","parent":null,"children":[],"decl_id":null,"docs":" The current configuration of the window's wgpu surface.\n","sig":null,"attributes":[{"value":"/ The current configuration of the window's wgpu surface.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":544707,"byte_end":544766,"line_start":1395,"line_end":1395,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":4490},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":544964,"byte_end":544970,"line_start":1401,"line_end":1401,"column_start":12,"column_end":18},"name":"device","qualname":"<Window>::device","value":"fn device(&Self) -> &wgpu::Device","parent":null,"children":[],"decl_id":null,"docs":" The wgpu logical device on which the window's wgpu surface is running.\n","sig":null,"attributes":[{"value":"/ The wgpu logical device on which the window's wgpu surface is running.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":544878,"byte_end":544952,"line_start":1400,"line_end":1400,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":4491},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":545144,"byte_end":545149,"line_start":1406,"line_end":1406,"column_start":12,"column_end":17},"name":"queue","qualname":"<Window>::queue","value":"fn queue(&Self) -> &wgpu::Queue","parent":null,"children":[],"decl_id":null,"docs":" The wgpu graphics queue to which the window's wgpu surface frames are submitted.\n","sig":null,"attributes":[{"value":"/ The wgpu graphics queue to which the window's wgpu surface frames are submitted.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":545048,"byte_end":545132,"line_start":1405,"line_end":1405,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":4492},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":545467,"byte_end":545484,"line_start":1413,"line_end":1413,"column_start":12,"column_end":29},"name":"device_queue_pair","qualname":"<Window>::device_queue_pair","value":"fn device_queue_pair(&Self) -> &Arc<wgpu::DeviceQueuePair>","parent":null,"children":[],"decl_id":null,"docs":" Provides access to the device queue pair and the `Arc` behind which it is stored. This can\n be useful in cases where using references provided by the `device` or `queue` methods cause\n awkward ownership problems.\n","sig":null,"attributes":[{"value":"/ Provides access to the device queue pair and the `Arc` behind which it is stored. This can","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":545225,"byte_end":545319,"line_start":1410,"line_end":1410,"column_start":5,"column_end":99}},{"value":"/ be useful in cases where using references provided by the `device` or `queue` methods cause","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":545324,"byte_end":545419,"line_start":1411,"line_end":1411,"column_start":5,"column_end":100}},{"value":"/ awkward ownership problems.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":545424,"byte_end":545455,"line_start":1412,"line_end":1412,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":4493},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":545840,"byte_end":545852,"line_start":1422,"line_end":1422,"column_start":12,"column_end":24},"name":"msaa_samples","qualname":"<Window>::msaa_samples","value":"fn msaa_samples(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of samples used in the MSAA for the image associated with the `view` function's\n `Frame` type.","sig":null,"attributes":[{"value":"/ The number of samples used in the MSAA for the image associated with the `view` function's","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":545568,"byte_end":545662,"line_start":1417,"line_end":1417,"column_start":5,"column_end":99}},{"value":"/ `Frame` type.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":545667,"byte_end":545684,"line_start":1418,"line_end":1418,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":545689,"byte_end":545692,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ **Note:** If the user specified a `raw_view` function rather than a `view` function, this","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":545697,"byte_end":545790,"line_start":1420,"line_end":1420,"column_start":5,"column_end":98}},{"value":"/ value will always return `1`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":545795,"byte_end":545828,"line_start":1421,"line_end":1421,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4496},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":547204,"byte_end":547217,"line_start":1454,"line_end":1454,"column_start":12,"column_end":25},"name":"is_fullscreen","qualname":"<Window>::is_fullscreen","value":"fn is_fullscreen(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Attempts to determine whether or not the window is currently fullscreen.\n","sig":null,"attributes":[{"value":"/ Attempts to determine whether or not the window is currently fullscreen.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":547116,"byte_end":547192,"line_start":1453,"line_end":1453,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":4497},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":547372,"byte_end":547386,"line_start":1459,"line_end":1459,"column_start":12,"column_end":26},"name":"elapsed_frames","qualname":"<Window>::elapsed_frames","value":"fn elapsed_frames(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The number of times `view` has been called with a `Frame` for this window.\n","sig":null,"attributes":[{"value":"/ The number of times `view` has been called with a `Frame` for this window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":547282,"byte_end":547360,"line_start":1458,"line_end":1458,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":4498},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":547907,"byte_end":547911,"line_start":1471,"line_end":1471,"column_start":12,"column_end":16},"name":"rect","qualname":"<Window>::rect","value":"fn rect(&Self) -> geom::Rect","parent":null,"children":[],"decl_id":null,"docs":" The rectangle representing the position and dimensions of the window.","sig":null,"attributes":[{"value":"/ The rectangle representing the position and dimensions of the window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":547439,"byte_end":547512,"line_start":1463,"line_end":1463,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":547517,"byte_end":547520,"line_start":1464,"line_end":1464,"column_start":5,"column_end":8}},{"value":"/ The window's position will always be `[0.0, 0.0]`, as positions are generally described","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":547525,"byte_end":547616,"line_start":1465,"line_end":1465,"column_start":5,"column_end":96}},{"value":"/ relative to the centre of the window itself.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":547621,"byte_end":547669,"line_start":1466,"line_end":1466,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":547674,"byte_end":547677,"line_start":1467,"line_end":1467,"column_start":5,"column_end":8}},{"value":"/ The dimensions will be equal to the result of `inner_size_points`. This represents the area","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":547682,"byte_end":547777,"line_start":1468,"line_end":1468,"column_start":5,"column_end":100}},{"value":"/ of the that we can draw to in a DPI-agnostic manner, typically useful for drawing and UI","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":547782,"byte_end":547874,"line_start":1469,"line_end":1469,"column_start":5,"column_end":97}},{"value":"/ positioning.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":547879,"byte_end":547895,"line_start":1470,"line_end":1470,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":4499},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":548385,"byte_end":548398,"line_start":1481,"line_end":1481,"column_start":12,"column_end":25},"name":"capture_frame","qualname":"<Window>::capture_frame","value":"fn capture_frame<P>(&Self, P) where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Capture the next frame right before it is drawn to this window and write it to an image\n file at the given path. If a frame already exists, it will be captured before its `submit`\n method is called or before it is `drop`ped.","sig":null,"attributes":[{"value":"/ Capture the next frame right before it is drawn to this window and write it to an image","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":548028,"byte_end":548119,"line_start":1476,"line_end":1476,"column_start":5,"column_end":96}},{"value":"/ file at the given path. If a frame already exists, it will be captured before its `submit`","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":548124,"byte_end":548218,"line_start":1477,"line_end":1477,"column_start":5,"column_end":99}},{"value":"/ method is called or before it is `drop`ped.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":548223,"byte_end":548270,"line_start":1478,"line_end":1478,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":548275,"byte_end":548278,"line_start":1479,"line_end":1479,"column_start":5,"column_end":8}},{"value":"/ The destination image file type will be inferred from the extension given in the path.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":548283,"byte_end":548373,"line_start":1480,"line_end":1480,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":4501},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":548682,"byte_end":548694,"line_start":1491,"line_end":1491,"column_start":12,"column_end":24},"name":"winit_window","qualname":"<Window>::winit_window","value":"fn winit_window(&Self) -> &winit::window::Window","parent":null,"children":[],"decl_id":null,"docs":" Produces a reference to the inner winit window.","sig":null,"attributes":[{"value":"/ Produces a reference to the inner winit window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":548518,"byte_end":548569,"line_start":1488,"line_end":1488,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":548574,"byte_end":548577,"line_start":1489,"line_end":1489,"column_start":5,"column_end":8}},{"value":"/ This is sometimes useful for integration with other winit-aware libraries (e.g. UI).","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":548582,"byte_end":548670,"line_start":1490,"line_end":1490,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":4503},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":549674,"byte_end":549698,"line_start":1517,"line_end":1517,"column_start":12,"column_end":36},"name":"await_capture_frame_jobs","qualname":"<Window>::await_capture_frame_jobs","value":"fn await_capture_frame_jobs(&Self)\n-> Result<(), wgpu::TextureCapturerAwaitWorkerTimeout<()>>","parent":null,"children":[],"decl_id":null,"docs":" Block and wait for all active capture frame jobs to complete.","sig":null,"attributes":[{"value":"/ Block and wait for all active capture frame jobs to complete.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":549479,"byte_end":549544,"line_start":1513,"line_end":1513,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":549549,"byte_end":549552,"line_start":1514,"line_end":1514,"column_start":5,"column_end":8}},{"value":"/ This is called implicitly when the window is dropped to ensure any pending captures","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":549557,"byte_end":549644,"line_start":1515,"line_end":1515,"column_start":5,"column_end":92}},{"value":"/ complete.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":549649,"byte_end":549662,"line_start":1516,"line_end":1516,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":4505},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":550106,"byte_end":550110,"line_start":1532,"line_end":1532,"column_start":8,"column_end":12},"name":"drop","qualname":"<Window as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4509},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":550832,"byte_end":550835,"line_start":1556,"line_end":1556,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BuildError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9916},"children":[],"decl_id":{"krate":2,"index":9917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4511},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":551134,"byte_end":551138,"line_start":1565,"line_end":1565,"column_start":8,"column_end":12},"name":"from","qualname":"<BuildError as std::convert::From>::from","value":"fn from(winit::error::OsError) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4514},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":551332,"byte_end":551354,"line_start":1573,"line_end":1573,"column_start":8,"column_end":30},"name":"with_device_queue_pair","qualname":"<&'a crate::window::Window as nannou_wgpu::WithDeviceQueuePair>::with_device_queue_pair","value":"fn with_device_queue_pair<F, O>(Self, F) -> O where\nF: FnOnce(&wgpu::Device, &wgpu::Queue) -> O","parent":{"krate":72,"index":443},"children":[],"decl_id":{"krate":72,"index":444},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4517},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1744,"byte_end":1747,"line_start":57,"line_end":57,"column_start":8,"column_end":11},"name":"app","qualname":"::app","value":"fn app<M>(app::ModelFn<M>) -> app::Builder<M, Event> where M: 'static","parent":null,"children":[],"decl_id":null,"docs":" Begin building the `App`.","sig":null,"attributes":[{"value":"/ Begin building the `App`.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1236,"byte_end":1265,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1266,"byte_end":1269,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The `model` argument is the function that the App will call to initialise your Model.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1270,"byte_end":1359,"line_start":48,"line_end":48,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1360,"byte_end":1363,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ The Model can be thought of as the state that you would like to track throughout the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1364,"byte_end":1452,"line_start":50,"line_end":50,"column_start":1,"column_end":89}},{"value":"/ lifetime of your nannou program from start to exit.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1453,"byte_end":1508,"line_start":51,"line_end":51,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1509,"byte_end":1512,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ The given function is called before any event processing begins within the application.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1513,"byte_end":1604,"line_start":53,"line_end":53,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1605,"byte_end":1608,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The Model that is returned by the function is the same model that will be passed to the","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1609,"byte_end":1700,"line_start":55,"line_end":55,"column_start":1,"column_end":92}},{"value":"/ given event and view functions.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1701,"byte_end":1736,"line_start":56,"line_end":56,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":4519},"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":2150,"byte_end":2156,"line_start":66,"line_end":66,"column_start":8,"column_end":14},"name":"sketch","qualname":"::sketch","value":"fn sketch(app::SketchViewFn) -> app::SketchBuilder<Event>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for building a simple app that has no model, handles no events and simply draws\n to a single window.","sig":null,"attributes":[{"value":"/ Shorthand for building a simple app that has no model, handles no events and simply draws","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1844,"byte_end":1937,"line_start":61,"line_end":61,"column_start":1,"column_end":94}},{"value":"/ to a single window.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1938,"byte_end":1961,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1962,"byte_end":1965,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This is useful for late night hack sessions where you just don't care about all that other","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1966,"byte_end":2060,"line_start":64,"line_end":64,"column_start":1,"column_end":95}},{"value":"/ stuff, you just want to play around with some ideas or make something pretty.","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":2061,"byte_end":2142,"line_start":65,"line_end":65,"column_start":1,"column_end":82}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":11643,"byte_end":11650,"line_start":234,"line_end":234,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":14151,"byte_end":14158,"line_start":309,"line_end":309,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":22437,"byte_end":22450,"line_start":505,"line_end":505,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":23120,"byte_end":23127,"line_start":531,"line_end":531,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":24149,"byte_end":24157,"line_start":555,"line_end":555,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":25384,"byte_end":25392,"line_start":593,"line_end":593,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":25481,"byte_end":25487,"line_start":599,"line_end":599,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":25821,"byte_end":25824,"line_start":612,"line_end":612,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":36890,"byte_end":36895,"line_start":905,"line_end":905,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":37895,"byte_end":37899,"line_start":926,"line_end":926,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":41242,"byte_end":41263,"line_start":1012,"line_end":1012,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":96305,"byte_end":96315,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":102167,"byte_end":102174,"line_start":64,"line_end":64,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":102303,"byte_end":102317,"line_start":72,"line_end":72,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":103075,"byte_end":103082,"line_start":92,"line_end":92,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":107130,"byte_end":107137,"line_start":204,"line_end":204,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":111001,"byte_end":111008,"line_start":303,"line_end":303,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":112641,"byte_end":112648,"line_start":361,"line_end":361,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":616},{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":113942,"byte_end":113949,"line_start":404,"line_end":404,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":625},{"krate":0,"index":627},{"krate":0,"index":629},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":635},{"krate":0,"index":637},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":645},{"krate":0,"index":647},{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":655},{"krate":0,"index":657},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":118380,"byte_end":118387,"line_start":526,"line_end":526,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":670},{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":119915,"byte_end":119922,"line_start":569,"line_end":569,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":679},{"krate":0,"index":681},{"krate":0,"index":683},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":695},{"krate":0,"index":697},{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":703},{"krate":0,"index":705},{"krate":0,"index":707},{"krate":0,"index":709},{"krate":0,"index":711},{"krate":0,"index":713},{"krate":0,"index":715},{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":134578,"byte_end":134589,"line_start":33,"line_end":33,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":134896,"byte_end":134907,"line_start":46,"line_end":46,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":135204,"byte_end":135215,"line_start":57,"line_end":57,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":135470,"byte_end":135481,"line_start":64,"line_end":64,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":135786,"byte_end":135797,"line_start":71,"line_end":71,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":136590,"byte_end":136601,"line_start":95,"line_end":95,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":137339,"byte_end":137350,"line_start":115,"line_end":115,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":138113,"byte_end":138124,"line_start":138,"line_end":138,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":138981,"byte_end":138992,"line_start":162,"line_end":162,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":139851,"byte_end":139862,"line_start":186,"line_end":186,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":140708,"byte_end":140719,"line_start":210,"line_end":210,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":142953,"byte_end":142974,"line_start":52,"line_end":52,"column_start":9,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":143498,"byte_end":143519,"line_start":67,"line_end":67,"column_start":22,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":144562,"byte_end":144576,"line_start":105,"line_end":105,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":145148,"byte_end":145163,"line_start":125,"line_end":125,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":145796,"byte_end":145810,"line_start":146,"line_end":146,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":146238,"byte_end":146253,"line_start":162,"line_end":162,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":126605,"byte_end":126609,"line_start":28,"line_end":28,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":918},{"krate":0,"index":920},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":131290,"byte_end":131294,"line_start":179,"line_end":179,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":131409,"byte_end":131413,"line_start":186,"line_end":186,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":131529,"byte_end":131533,"line_start":193,"line_end":193,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":131649,"byte_end":131653,"line_start":199,"line_end":199,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":943},{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":131835,"byte_end":131839,"line_start":206,"line_end":206,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":131999,"byte_end":132003,"line_start":214,"line_end":214,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":132157,"byte_end":132161,"line_start":222,"line_end":222,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":132323,"byte_end":132327,"line_start":230,"line_end":230,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":132517,"byte_end":132521,"line_start":238,"line_end":238,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":132635,"byte_end":132639,"line_start":244,"line_end":244,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":132949,"byte_end":132953,"line_start":259,"line_end":259,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":133063,"byte_end":133067,"line_start":265,"line_end":265,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":148661,"byte_end":148666,"line_start":25,"line_end":25,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1034},{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1040},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":150333,"byte_end":150345,"line_start":88,"line_end":88,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1048},{"krate":0,"index":1050},{"krate":0,"index":1052},{"krate":0,"index":1054},{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":151620,"byte_end":151625,"line_start":131,"line_end":131,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":151776,"byte_end":151781,"line_start":137,"line_end":137,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":151928,"byte_end":151933,"line_start":143,"line_end":143,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":152084,"byte_end":152089,"line_start":149,"line_end":149,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":152219,"byte_end":152228,"line_start":155,"line_end":155,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":152335,"byte_end":152344,"line_start":161,"line_end":161,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":152538,"byte_end":152543,"line_start":170,"line_end":170,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":155629,"byte_end":155634,"line_start":252,"line_end":252,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":156729,"byte_end":156736,"line_start":27,"line_end":27,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1153},{"krate":0,"index":1155},{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":157535,"byte_end":157542,"line_start":54,"line_end":54,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":159824,"byte_end":159831,"line_start":115,"line_end":115,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1161}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":159981,"byte_end":159988,"line_start":121,"line_end":121,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1163}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":160134,"byte_end":160141,"line_start":127,"line_end":127,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":160301,"byte_end":160308,"line_start":133,"line_end":133,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":160439,"byte_end":160446,"line_start":139,"line_end":139,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1169}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":160596,"byte_end":160603,"line_start":145,"line_end":145,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":160786,"byte_end":160795,"line_start":153,"line_end":153,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":160908,"byte_end":160917,"line_start":159,"line_end":159,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":161104,"byte_end":161118,"line_start":170,"line_end":170,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1181},{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":162461,"byte_end":162465,"line_start":24,"line_end":24,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":163538,"byte_end":163549,"line_start":63,"line_end":63,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1253},{"krate":0,"index":1255},{"krate":0,"index":1257},{"krate":0,"index":1259},{"krate":0,"index":1261}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":164335,"byte_end":164339,"line_start":90,"line_end":90,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":164490,"byte_end":164494,"line_start":96,"line_end":96,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":164641,"byte_end":164645,"line_start":102,"line_end":102,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":164796,"byte_end":164800,"line_start":108,"line_end":108,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":164929,"byte_end":164938,"line_start":114,"line_end":114,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":165042,"byte_end":165051,"line_start":120,"line_end":120,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":165243,"byte_end":165247,"line_start":129,"line_end":129,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":167736,"byte_end":167746,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1347},{"krate":0,"index":1352},{"krate":0,"index":1357},{"krate":0,"index":1360},{"krate":0,"index":1362},{"krate":0,"index":1368},{"krate":0,"index":1374},{"krate":0,"index":1378},{"krate":0,"index":1384},{"krate":0,"index":1390},{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":178032,"byte_end":178036,"line_start":312,"line_end":312,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1399}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":178676,"byte_end":178683,"line_start":335,"line_end":335,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1402},{"krate":0,"index":1405},{"krate":0,"index":1410},{"krate":0,"index":1415},{"krate":0,"index":1419},{"krate":0,"index":1424},{"krate":0,"index":1429},{"krate":0,"index":1433},{"krate":0,"index":1439}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":184775,"byte_end":184779,"line_start":484,"line_end":484,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":187252,"byte_end":187266,"line_start":547,"line_end":547,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1456},{"krate":0,"index":1457}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":187863,"byte_end":187867,"line_start":570,"line_end":570,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1459}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":188021,"byte_end":188025,"line_start":576,"line_end":576,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":188180,"byte_end":188184,"line_start":582,"line_end":582,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":188344,"byte_end":188353,"line_start":588,"line_end":588,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1465}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":188465,"byte_end":188474,"line_start":594,"line_end":594,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1467}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":188584,"byte_end":188593,"line_start":600,"line_end":600,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1469}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":188788,"byte_end":188797,"line_start":609,"line_end":609,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":192517,"byte_end":192525,"line_start":112,"line_end":112,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1582},{"krate":0,"index":1583}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":193106,"byte_end":193117,"line_start":130,"line_end":130,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1586}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":193462,"byte_end":193470,"line_start":145,"line_end":145,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1588},{"krate":0,"index":1589}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":194062,"byte_end":194072,"line_start":163,"line_end":163,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1591},{"krate":0,"index":1592}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":194380,"byte_end":194391,"line_start":175,"line_end":175,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1595},{"krate":0,"index":1597},{"krate":0,"index":1599},{"krate":0,"index":1601},{"krate":0,"index":1605},{"krate":0,"index":1609},{"krate":0,"index":1613},{"krate":0,"index":1617},{"krate":0,"index":1620},{"krate":0,"index":1625}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":204630,"byte_end":204634,"line_start":507,"line_end":507,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1640}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":209565,"byte_end":209569,"line_start":653,"line_end":653,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1647}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":210187,"byte_end":210202,"line_start":676,"line_end":676,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1650},{"krate":0,"index":1652}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":210744,"byte_end":210759,"line_start":692,"line_end":692,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1656},{"krate":0,"index":1658}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":211238,"byte_end":211255,"line_start":706,"line_end":706,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1662},{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":211603,"byte_end":211621,"line_start":718,"line_end":718,"column_start":13,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1669},{"krate":0,"index":1672},{"krate":0,"index":1675},{"krate":0,"index":1678},{"krate":0,"index":1683},{"krate":0,"index":1688},{"krate":0,"index":1693}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":214309,"byte_end":214317,"line_start":805,"line_end":805,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1699}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":214428,"byte_end":214438,"line_start":811,"line_end":811,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1701}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":214563,"byte_end":214574,"line_start":817,"line_end":817,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1703},{"krate":0,"index":1704}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":214722,"byte_end":214735,"line_start":824,"line_end":824,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1706},{"krate":0,"index":1707}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":214885,"byte_end":214896,"line_start":831,"line_end":831,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1710}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":215056,"byte_end":215067,"line_start":837,"line_end":837,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1713}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":215228,"byte_end":215239,"line_start":843,"line_end":843,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":215376,"byte_end":215380,"line_start":849,"line_end":849,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":215534,"byte_end":215538,"line_start":855,"line_end":855,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":215693,"byte_end":215697,"line_start":861,"line_end":861,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":215831,"byte_end":215840,"line_start":867,"line_end":867,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1724}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":215950,"byte_end":215959,"line_start":873,"line_end":873,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1726}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":216071,"byte_end":216080,"line_start":879,"line_end":879,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1728}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":216184,"byte_end":216193,"line_start":885,"line_end":885,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1730}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":216301,"byte_end":216310,"line_start":891,"line_end":891,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1732}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":216501,"byte_end":216510,"line_start":900,"line_end":900,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1734}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":216703,"byte_end":216712,"line_start":909,"line_end":909,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1736}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":216903,"byte_end":216912,"line_start":918,"line_end":918,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1738}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":219447,"byte_end":219458,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1815},{"krate":0,"index":1817},{"krate":0,"index":1819},{"krate":0,"index":1822},{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":224964,"byte_end":224971,"line_start":265,"line_end":265,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1841}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":231376,"byte_end":231383,"line_start":437,"line_end":437,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":231638,"byte_end":231645,"line_start":447,"line_end":447,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1850},{"krate":0,"index":1852},{"krate":0,"index":1855}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":232420,"byte_end":232438,"line_start":474,"line_end":474,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1859},{"krate":0,"index":1862},{"krate":0,"index":1865},{"krate":0,"index":1868},{"krate":0,"index":1873}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":233966,"byte_end":233980,"line_start":525,"line_end":525,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1879}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":234092,"byte_end":234103,"line_start":531,"line_end":531,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1881}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":234262,"byte_end":234273,"line_start":537,"line_end":537,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1883}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":234433,"byte_end":234444,"line_start":543,"line_end":543,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1885}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":234579,"byte_end":234590,"line_start":549,"line_end":549,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1887}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":234740,"byte_end":234751,"line_start":555,"line_end":555,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1889}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":234909,"byte_end":234916,"line_start":561,"line_end":561,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1891}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":235075,"byte_end":235082,"line_start":567,"line_end":567,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1893}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":235242,"byte_end":235249,"line_start":573,"line_end":573,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1895}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":235391,"byte_end":235400,"line_start":579,"line_end":579,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1897}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":235513,"byte_end":235522,"line_start":585,"line_end":585,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1899}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":235639,"byte_end":235648,"line_start":591,"line_end":591,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1901}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":235844,"byte_end":235853,"line_start":600,"line_end":600,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1903}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":236829,"byte_end":236833,"line_start":26,"line_end":26,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1985},{"krate":0,"index":1987}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":237440,"byte_end":237444,"line_start":50,"line_end":50,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1990}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":238868,"byte_end":238872,"line_start":92,"line_end":92,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1995}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":239124,"byte_end":239128,"line_start":104,"line_end":104,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1997}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":239561,"byte_end":239565,"line_start":120,"line_end":120,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1999}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":239715,"byte_end":239719,"line_start":126,"line_end":126,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":239865,"byte_end":239869,"line_start":132,"line_end":132,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2003}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":240029,"byte_end":240033,"line_start":138,"line_end":138,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2005}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":240164,"byte_end":240168,"line_start":144,"line_end":144,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2007}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":240318,"byte_end":240322,"line_start":150,"line_end":150,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2009}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":240503,"byte_end":240512,"line_start":158,"line_end":158,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2011}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":240616,"byte_end":240625,"line_start":164,"line_end":164,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2013}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":240806,"byte_end":240817,"line_start":175,"line_end":175,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2016}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":241797,"byte_end":241801,"line_start":25,"line_end":25,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2090}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":242003,"byte_end":242014,"line_start":35,"line_end":35,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2094}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":242262,"byte_end":242266,"line_start":45,"line_end":45,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2098}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":243264,"byte_end":243268,"line_start":78,"line_end":78,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2100}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":243423,"byte_end":243427,"line_start":85,"line_end":85,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2102}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":243639,"byte_end":243643,"line_start":96,"line_end":96,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2104}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":243793,"byte_end":243797,"line_start":102,"line_end":102,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2106}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":243943,"byte_end":243947,"line_start":108,"line_end":108,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2108}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":244107,"byte_end":244111,"line_start":114,"line_end":114,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2110}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":244242,"byte_end":244246,"line_start":120,"line_end":120,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2112}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":244396,"byte_end":244400,"line_start":126,"line_end":126,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2114}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":244581,"byte_end":244590,"line_start":134,"line_end":134,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2116}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":244694,"byte_end":244703,"line_start":140,"line_end":140,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2118}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":245926,"byte_end":245930,"line_start":32,"line_end":32,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2206},{"krate":0,"index":2207},{"krate":0,"index":2209},{"krate":0,"index":2211},{"krate":0,"index":2213},{"krate":0,"index":2215},{"krate":0,"index":2217},{"krate":0,"index":2219},{"krate":0,"index":2221},{"krate":0,"index":2223},{"krate":0,"index":2225},{"krate":0,"index":2227},{"krate":0,"index":2229},{"krate":0,"index":2231},{"krate":0,"index":2233},{"krate":0,"index":2235},{"krate":0,"index":2237},{"krate":0,"index":2239},{"krate":0,"index":2241},{"krate":0,"index":2242}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":250199,"byte_end":250210,"line_start":161,"line_end":161,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2245},{"krate":0,"index":2247},{"krate":0,"index":2249},{"krate":0,"index":2251},{"krate":0,"index":2253},{"krate":0,"index":2255},{"krate":0,"index":2257},{"krate":0,"index":2259},{"krate":0,"index":2261},{"krate":0,"index":2263},{"krate":0,"index":2265},{"krate":0,"index":2267},{"krate":0,"index":2269},{"krate":0,"index":2271},{"krate":0,"index":2273},{"krate":0,"index":2275},{"krate":0,"index":2277}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":253735,"byte_end":253739,"line_start":262,"line_end":262,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2283}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":260219,"byte_end":260223,"line_start":419,"line_end":419,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2293}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":260373,"byte_end":260377,"line_start":425,"line_end":425,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2295}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":260523,"byte_end":260527,"line_start":431,"line_end":431,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2297}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":260684,"byte_end":260688,"line_start":437,"line_end":437,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2299}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":260851,"byte_end":260860,"line_start":445,"line_end":445,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2301}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":260964,"byte_end":260973,"line_start":451,"line_end":451,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2303}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":261752,"byte_end":261759,"line_start":23,"line_end":23,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2353}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":262353,"byte_end":262360,"line_start":47,"line_end":47,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2355}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":262887,"byte_end":262901,"line_start":63,"line_end":63,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2358}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":263461,"byte_end":263468,"line_start":78,"line_end":78,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2361}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":265140,"byte_end":265147,"line_start":131,"line_end":131,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2363}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":265297,"byte_end":265304,"line_start":137,"line_end":137,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2365}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":265450,"byte_end":265457,"line_start":143,"line_end":143,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2367}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":265633,"byte_end":265642,"line_start":151,"line_end":151,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2369}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":265755,"byte_end":265764,"line_start":157,"line_end":157,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2371}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":266714,"byte_end":266717,"line_start":26,"line_end":26,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":2450},{"krate":0,"index":2452}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":267255,"byte_end":267265,"line_start":50,"line_end":50,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2456},{"krate":0,"index":2459}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":267758,"byte_end":267761,"line_start":70,"line_end":70,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2463}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":269125,"byte_end":269128,"line_start":109,"line_end":109,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2468}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":269368,"byte_end":269371,"line_start":121,"line_end":121,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2470}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":269712,"byte_end":269715,"line_start":133,"line_end":133,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2472}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":269865,"byte_end":269868,"line_start":139,"line_end":139,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2474}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":270014,"byte_end":270017,"line_start":145,"line_end":145,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2476}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":270177,"byte_end":270180,"line_start":151,"line_end":151,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2478}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":270311,"byte_end":270314,"line_start":157,"line_end":157,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2480}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":270464,"byte_end":270467,"line_start":163,"line_end":163,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2482}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":270647,"byte_end":270656,"line_start":171,"line_end":171,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2484}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":270757,"byte_end":270766,"line_start":177,"line_end":177,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2486}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":276629,"byte_end":276635,"line_start":145,"line_end":145,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2573}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":278684,"byte_end":278690,"line_start":52,"line_end":52,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2586}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":281965,"byte_end":281975,"line_start":70,"line_end":70,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2609}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":282520,"byte_end":282530,"line_start":16,"line_end":16,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2635},{"krate":0,"index":2636}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":287682,"byte_end":287692,"line_start":170,"line_end":170,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2659}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":287784,"byte_end":287794,"line_start":176,"line_end":176,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2661}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":289770,"byte_end":289780,"line_start":56,"line_end":56,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2684}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":289901,"byte_end":289911,"line_start":62,"line_end":62,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2686}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":290003,"byte_end":290013,"line_start":68,"line_end":68,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2688}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":279166,"byte_end":279167,"line_start":12,"line_end":12,"column_start":24,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":279440,"byte_end":279450,"line_start":21,"line_end":21,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2702}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":279746,"byte_end":279756,"line_start":34,"line_end":34,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2704}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":279886,"byte_end":279896,"line_start":40,"line_end":40,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2706}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":280030,"byte_end":280040,"line_start":46,"line_end":46,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2708}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":296395,"byte_end":296401,"line_start":154,"line_end":154,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2744}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":302328,"byte_end":302343,"line_start":168,"line_end":168,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2875}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":302435,"byte_end":302444,"line_start":174,"line_end":174,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2877}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":303514,"byte_end":303524,"line_start":193,"line_end":193,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2879}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":303835,"byte_end":303850,"line_start":203,"line_end":203,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2883},{"krate":0,"index":2884}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":304431,"byte_end":304438,"line_start":228,"line_end":228,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2886},{"krate":0,"index":2887},{"krate":0,"index":2889},{"krate":0,"index":2890},{"krate":0,"index":2891},{"krate":0,"index":2892},{"krate":0,"index":2893},{"krate":0,"index":2895},{"krate":0,"index":2896},{"krate":0,"index":2897},{"krate":0,"index":2898}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":308280,"byte_end":308290,"line_start":326,"line_end":326,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2901}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":308841,"byte_end":308849,"line_start":345,"line_end":345,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2904},{"krate":0,"index":2905},{"krate":0,"index":2908},{"krate":0,"index":2909},{"krate":0,"index":2910},{"krate":0,"index":2911},{"krate":0,"index":2912},{"krate":0,"index":2916},{"krate":0,"index":2917},{"krate":0,"index":2933},{"krate":0,"index":2937},{"krate":0,"index":2938}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":336715,"byte_end":336722,"line_start":991,"line_end":991,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2940}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":336796,"byte_end":336806,"line_start":997,"line_end":997,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2942},{"krate":0,"index":2943}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":336940,"byte_end":336950,"line_start":1004,"line_end":1004,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2945}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":344025,"byte_end":344030,"line_start":40,"line_end":40,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2977},{"krate":0,"index":2979},{"krate":0,"index":2980},{"krate":0,"index":2982}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":345062,"byte_end":345067,"line_start":70,"line_end":70,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2984}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":78205,"byte_end":78222,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2986}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":78482,"byte_end":78487,"line_start":148,"line_end":148,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2988},{"krate":0,"index":2989},{"krate":0,"index":2990},{"krate":0,"index":2991}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":79695,"byte_end":79699,"line_start":182,"line_end":182,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2993},{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":2997},{"krate":0,"index":2998},{"krate":0,"index":2999},{"krate":0,"index":3000},{"krate":0,"index":3001},{"krate":0,"index":3002},{"krate":0,"index":3003},{"krate":0,"index":3004},{"krate":0,"index":3005},{"krate":0,"index":3006},{"krate":0,"index":3007},{"krate":0,"index":3008},{"krate":0,"index":3009},{"krate":0,"index":3010},{"krate":0,"index":3011},{"krate":0,"index":3012},{"krate":0,"index":3013},{"krate":0,"index":3014},{"krate":0,"index":3015},{"krate":0,"index":3016},{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3019},{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3023},{"krate":0,"index":3024},{"krate":0,"index":3025},{"krate":0,"index":3026},{"krate":0,"index":3027},{"krate":0,"index":3028},{"krate":0,"index":3029},{"krate":0,"index":3030},{"krate":0,"index":3031},{"krate":0,"index":3032},{"krate":0,"index":3033},{"krate":0,"index":3034},{"krate":0,"index":3035},{"krate":0,"index":3036},{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":3042},{"krate":0,"index":3043},{"krate":0,"index":3044},{"krate":0,"index":3045},{"krate":0,"index":3046},{"krate":0,"index":3047},{"krate":0,"index":3048},{"krate":0,"index":3049},{"krate":0,"index":3050},{"krate":0,"index":3051},{"krate":0,"index":3052},{"krate":0,"index":3055}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":94170,"byte_end":94187,"line_start":597,"line_end":597,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3057}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":94722,"byte_end":94727,"line_start":614,"line_end":614,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3059}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":95255,"byte_end":95259,"line_start":633,"line_end":633,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3061}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":95472,"byte_end":95479,"line_start":641,"line_end":641,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3063}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351829,"byte_end":351840,"line_start":177,"line_end":177,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3116}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":357139,"byte_end":357144,"line_start":316,"line_end":316,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3123}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":358999,"byte_end":359004,"line_start":356,"line_end":356,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3127}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":374745,"byte_end":374753,"line_start":39,"line_end":39,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3178},{"krate":0,"index":3179},{"krate":0,"index":3180},{"krate":0,"index":3181},{"krate":0,"index":3182},{"krate":0,"index":3183},{"krate":0,"index":3184},{"krate":0,"index":3185},{"krate":0,"index":3186},{"krate":0,"index":3187},{"krate":0,"index":3188},{"krate":0,"index":3189}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":378992,"byte_end":379000,"line_start":153,"line_end":153,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3192}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":361024,"byte_end":361029,"line_start":56,"line_end":56,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3203},{"krate":0,"index":3204}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":361176,"byte_end":361181,"line_start":63,"line_end":63,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3207},{"krate":0,"index":3208},{"krate":0,"index":3209},{"krate":0,"index":3210},{"krate":0,"index":3212},{"krate":0,"index":3214},{"krate":0,"index":3215},{"krate":0,"index":3216},{"krate":0,"index":3217},{"krate":0,"index":3218},{"krate":0,"index":3220},{"krate":0,"index":3221},{"krate":0,"index":3223}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":369741,"byte_end":369752,"line_start":271,"line_end":271,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3225}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":370007,"byte_end":370017,"line_start":280,"line_end":280,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3227},{"krate":0,"index":3229}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":371516,"byte_end":371521,"line_start":325,"line_end":325,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3233}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":380395,"byte_end":380399,"line_start":19,"line_end":19,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3250},{"krate":0,"index":3251},{"krate":0,"index":3252},{"krate":0,"index":3253},{"krate":0,"index":3254},{"krate":0,"index":3255},{"krate":0,"index":3256},{"krate":0,"index":3257},{"krate":0,"index":3259},{"krate":0,"index":3260}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":382061,"byte_end":382068,"line_start":77,"line_end":77,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3262},{"krate":0,"index":3263},{"krate":0,"index":3264},{"krate":0,"index":3265},{"krate":0,"index":3266},{"krate":0,"index":3267},{"krate":0,"index":3268},{"krate":0,"index":3269},{"krate":0,"index":3270},{"krate":0,"index":3271},{"krate":0,"index":3272},{"krate":0,"index":3273}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":384563,"byte_end":384570,"line_start":154,"line_end":154,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3275},{"krate":0,"index":3276}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":384726,"byte_end":384733,"line_start":162,"line_end":162,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3278},{"krate":0,"index":3279},{"krate":0,"index":3280},{"krate":0,"index":3281},{"krate":0,"index":3282}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":385551,"byte_end":385555,"line_start":195,"line_end":195,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3284},{"krate":0,"index":3285}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":385763,"byte_end":385767,"line_start":202,"line_end":202,"column_start":50,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3287},{"krate":0,"index":3288}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":386186,"byte_end":386190,"line_start":222,"line_end":222,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3295}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":386311,"byte_end":386318,"line_start":228,"line_end":228,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3297}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":386448,"byte_end":386452,"line_start":234,"line_end":234,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3299}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":386563,"byte_end":386570,"line_start":240,"line_end":240,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3301}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":388240,"byte_end":388249,"line_start":23,"line_end":23,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3356}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":388362,"byte_end":388375,"line_start":29,"line_end":29,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3358}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":388496,"byte_end":388513,"line_start":35,"line_end":35,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3360}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":388632,"byte_end":388649,"line_start":41,"line_end":41,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3362}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":388754,"byte_end":388763,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3365}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":389001,"byte_end":389010,"line_start":59,"line_end":59,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3368}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":394925,"byte_end":394931,"line_start":24,"line_end":24,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3536},{"krate":0,"index":3537}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":395887,"byte_end":395891,"line_start":58,"line_end":58,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3553},{"krate":0,"index":3554}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":397290,"byte_end":397295,"line_start":105,"line_end":105,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3569},{"krate":0,"index":3570}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":397731,"byte_end":397745,"line_start":122,"line_end":122,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3572},{"krate":0,"index":3573},{"krate":0,"index":3574},{"krate":0,"index":3575}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":398844,"byte_end":398853,"line_start":159,"line_end":159,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3577},{"krate":0,"index":3578},{"krate":0,"index":3580},{"krate":0,"index":3581},{"krate":0,"index":3582},{"krate":0,"index":3583},{"krate":0,"index":3584},{"krate":0,"index":3585}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":400609,"byte_end":400618,"line_start":212,"line_end":212,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3591},{"krate":0,"index":3592}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":400844,"byte_end":400853,"line_start":219,"line_end":219,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3594}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":401426,"byte_end":401430,"line_start":237,"line_end":237,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3597}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":426624,"byte_end":426629,"line_start":58,"line_end":58,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3626},{"krate":0,"index":3629},{"krate":0,"index":3633},{"krate":0,"index":3637},{"krate":0,"index":3641}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":439192,"byte_end":439202,"line_start":411,"line_end":411,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3666},{"krate":0,"index":3667}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":440217,"byte_end":440235,"line_start":441,"line_end":441,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3671},{"krate":0,"index":3672}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":440394,"byte_end":440396,"line_start":448,"line_end":448,"column_start":27,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3676},{"krate":0,"index":3677}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":442206,"byte_end":442208,"line_start":48,"line_end":48,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":3711}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":442323,"byte_end":442326,"line_start":55,"line_end":55,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":3713},{"krate":0,"index":3714},{"krate":0,"index":3715},{"krate":0,"index":3716},{"krate":0,"index":3718}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":446675,"byte_end":446681,"line_start":192,"line_end":192,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3731},{"krate":0,"index":3732}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":446829,"byte_end":446832,"line_start":199,"line_end":199,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3736},{"krate":0,"index":3737}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":446984,"byte_end":446989,"line_start":206,"line_end":206,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3740}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":447090,"byte_end":447095,"line_start":212,"line_end":212,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3742}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":447298,"byte_end":447303,"line_start":221,"line_end":221,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3744}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":449663,"byte_end":449668,"line_start":59,"line_end":59,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3799},{"krate":0,"index":3800}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":450531,"byte_end":450543,"line_start":83,"line_end":83,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3807},{"krate":0,"index":3808}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":451212,"byte_end":451225,"line_start":106,"line_end":106,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3813},{"krate":0,"index":3814}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":451699,"byte_end":451719,"line_start":125,"line_end":125,"column_start":26,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3819},{"krate":0,"index":3820}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":453114,"byte_end":453131,"line_start":167,"line_end":167,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3823},{"krate":0,"index":3824}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":460089,"byte_end":460096,"line_start":33,"line_end":33,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3880},{"krate":0,"index":3881},{"krate":0,"index":3882},{"krate":0,"index":3883},{"krate":0,"index":3884},{"krate":0,"index":3885},{"krate":0,"index":3886},{"krate":0,"index":3887},{"krate":0,"index":3888},{"krate":0,"index":3889},{"krate":0,"index":3890},{"krate":0,"index":3891},{"krate":0,"index":3892},{"krate":0,"index":3893},{"krate":0,"index":3894},{"krate":0,"index":3895},{"krate":0,"index":3896}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":463965,"byte_end":463971,"line_start":148,"line_end":148,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3898}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":469007,"byte_end":469012,"line_start":122,"line_end":122,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3937},{"krate":0,"index":3938}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":469667,"byte_end":469672,"line_start":144,"line_end":144,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3942}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":470075,"byte_end":470079,"line_start":162,"line_end":162,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3944},{"krate":0,"index":3945},{"krate":0,"index":3946},{"krate":0,"index":3947}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":470763,"byte_end":470768,"line_start":184,"line_end":184,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3950},{"krate":0,"index":3951}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":484478,"byte_end":484483,"line_start":633,"line_end":633,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3982},{"krate":0,"index":3983}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":488537,"byte_end":488542,"line_start":748,"line_end":748,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3986},{"krate":0,"index":3987}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":489874,"byte_end":489887,"line_start":790,"line_end":790,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3993},{"krate":0,"index":3994}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":405884,"byte_end":405891,"line_start":129,"line_end":129,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4074}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":406099,"byte_end":406106,"line_start":139,"line_end":139,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4077}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":406240,"byte_end":406247,"line_start":146,"line_end":146,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4079}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":406369,"byte_end":406376,"line_start":153,"line_end":153,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4082},{"krate":0,"index":4084},{"krate":0,"index":4086},{"krate":0,"index":4088},{"krate":0,"index":4090},{"krate":0,"index":4092},{"krate":0,"index":4094},{"krate":0,"index":4096},{"krate":0,"index":4098},{"krate":0,"index":4100},{"krate":0,"index":4102},{"krate":0,"index":4104},{"krate":0,"index":4106},{"krate":0,"index":4108},{"krate":0,"index":4110},{"krate":0,"index":4112},{"krate":0,"index":4114},{"krate":0,"index":4116}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":411070,"byte_end":411074,"line_start":287,"line_end":287,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4120},{"krate":0,"index":4121},{"krate":0,"index":4122},{"krate":0,"index":4123},{"krate":0,"index":4124},{"krate":0,"index":4125},{"krate":0,"index":4126},{"krate":0,"index":4127},{"krate":0,"index":4129},{"krate":0,"index":4131},{"krate":0,"index":4132},{"krate":0,"index":4133},{"krate":0,"index":4135},{"krate":0,"index":4136},{"krate":0,"index":4137},{"krate":0,"index":4138},{"krate":0,"index":4139},{"krate":0,"index":4150},{"krate":0,"index":4153},{"krate":0,"index":4154}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":419341,"byte_end":419346,"line_start":530,"line_end":530,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4158},{"krate":0,"index":4159}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":419646,"byte_end":419659,"line_start":544,"line_end":544,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4163},{"krate":0,"index":4164}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","byte_start":491665,"byte_end":491673,"line_start":40,"line_end":40,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4193}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":502108,"byte_end":502135,"line_start":283,"line_end":283,"column_start":6,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4346},{"krate":0,"index":4347},{"krate":0,"index":4348},{"krate":0,"index":4349},{"krate":0,"index":4350},{"krate":0,"index":4351},{"krate":0,"index":4352},{"krate":0,"index":4353},{"krate":0,"index":4354}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":504375,"byte_end":504382,"line_start":346,"line_end":346,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4359},{"krate":0,"index":4360},{"krate":0,"index":4361},{"krate":0,"index":4362},{"krate":0,"index":4363},{"krate":0,"index":4364},{"krate":0,"index":4365},{"krate":0,"index":4366},{"krate":0,"index":4367},{"krate":0,"index":4368},{"krate":0,"index":4369},{"krate":0,"index":4371},{"krate":0,"index":4373},{"krate":0,"index":4375},{"krate":0,"index":4377},{"krate":0,"index":4379},{"krate":0,"index":4381},{"krate":0,"index":4383},{"krate":0,"index":4385},{"krate":0,"index":4387},{"krate":0,"index":4389},{"krate":0,"index":4391},{"krate":0,"index":4393},{"krate":0,"index":4395},{"krate":0,"index":4397},{"krate":0,"index":4399},{"krate":0,"index":4401},{"krate":0,"index":4403},{"krate":0,"index":4405},{"krate":0,"index":4407},{"krate":0,"index":4409},{"krate":0,"index":4411},{"krate":0,"index":4413},{"krate":0,"index":4415},{"krate":0,"index":4417},{"krate":0,"index":4418},{"krate":0,"index":4419},{"krate":0,"index":4426},{"krate":0,"index":4428},{"krate":0,"index":4430},{"krate":0,"index":4432},{"krate":0,"index":4434},{"krate":0,"index":4436},{"krate":0,"index":4438},{"krate":0,"index":4441},{"krate":0,"index":4442},{"krate":0,"index":4444},{"krate":0,"index":4446},{"krate":0,"index":4448},{"krate":0,"index":4450},{"krate":0,"index":4452},{"krate":0,"index":4454}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":531846,"byte_end":531852,"line_start":1062,"line_end":1062,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4457},{"krate":0,"index":4458},{"krate":0,"index":4459},{"krate":0,"index":4460},{"krate":0,"index":4461},{"krate":0,"index":4462},{"krate":0,"index":4463},{"krate":0,"index":4464},{"krate":0,"index":4465},{"krate":0,"index":4466},{"krate":0,"index":4467},{"krate":0,"index":4469},{"krate":0,"index":4471},{"krate":0,"index":4472},{"krate":0,"index":4473},{"krate":0,"index":4474},{"krate":0,"index":4475},{"krate":0,"index":4476},{"krate":0,"index":4477},{"krate":0,"index":4478},{"krate":0,"index":4479},{"krate":0,"index":4480},{"krate":0,"index":4481},{"krate":0,"index":4482},{"krate":0,"index":4483},{"krate":0,"index":4484},{"krate":0,"index":4485},{"krate":0,"index":4486},{"krate":0,"index":4487},{"krate":0,"index":4488},{"krate":0,"index":4489},{"krate":0,"index":4490},{"krate":0,"index":4491},{"krate":0,"index":4492},{"krate":0,"index":4493},{"krate":0,"index":4494},{"krate":0,"index":4496},{"krate":0,"index":4497},{"krate":0,"index":4498},{"krate":0,"index":4499},{"krate":0,"index":4501},{"krate":0,"index":4502},{"krate":0,"index":4503}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":550090,"byte_end":550096,"line_start":1531,"line_end":1531,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4505}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":550405,"byte_end":550409,"line_start":1542,"line_end":1542,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4507}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":550812,"byte_end":550822,"line_start":1555,"line_end":1555,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4509}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":551114,"byte_end":551124,"line_start":1564,"line_end":1564,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4511}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1040,"byte_end":1043,"line_start":31,"line_end":31,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":47}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1053,"byte_end":1057,"line_start":32,"line_end":32,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":321}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":73250,"byte_end":73260,"line_start":23,"line_end":23,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":406}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":73283,"byte_end":73287,"line_start":25,"line_end":25,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":719}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":126064,"byte_end":126071,"line_start":7,"line_end":7,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":746}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":126081,"byte_end":126087,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":835}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":73297,"byte_end":73306,"line_start":26,"line_end":26,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":972}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":146704,"byte_end":146709,"line_start":1,"line_end":1,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":973}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":146719,"byte_end":146726,"line_start":2,"line_end":2,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1080}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":146736,"byte_end":146740,"line_start":3,"line_end":3,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1185}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":146750,"byte_end":146754,"line_start":4,"line_end":4,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1278}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":146764,"byte_end":146768,"line_start":5,"line_end":5,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1472}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":146778,"byte_end":146785,"line_start":6,"line_end":6,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1739}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":146795,"byte_end":146799,"line_start":7,"line_end":7,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1904}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":146809,"byte_end":146813,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2019}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":146823,"byte_end":146827,"line_start":9,"line_end":9,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2119}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":146837,"byte_end":146844,"line_start":10,"line_end":10,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":2304}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mod.rs","byte_start":146854,"byte_end":146857,"line_start":11,"line_end":11,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2372}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":73316,"byte_end":73326,"line_start":27,"line_end":27,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":2534}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/mod.rs","byte_start":271318,"byte_end":271323,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2535}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/mod.rs","byte_start":271333,"byte_end":271337,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2574}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/mod.rs","byte_start":271347,"byte_end":271354,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":2587}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":278830,"byte_end":278839,"line_start":1,"line_end":1,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":2588}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":278849,"byte_end":278860,"line_start":2,"line_end":2,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":2610}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":278870,"byte_end":278878,"line_start":3,"line_end":3,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2663}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/mod.rs","byte_start":271364,"byte_end":271370,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2709}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":73336,"byte_end":73344,"line_start":28,"line_end":28,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2766}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":73354,"byte_end":73359,"line_start":29,"line_end":29,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2965}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1067,"byte_end":1071,"line_start":33,"line_end":33,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3064}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1081,"byte_end":1086,"line_start":34,"line_end":34,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3066}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1096,"byte_end":1101,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3128}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":359328,"byte_end":359331,"line_start":10,"line_end":10,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":3147}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1111,"byte_end":1115,"line_start":36,"line_end":36,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3240}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/mod.rs","byte_start":379764,"byte_end":379768,"line_start":12,"line_end":12,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3241}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1125,"byte_end":1130,"line_start":37,"line_end":37,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3316}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1140,"byte_end":1142,"line_start":38,"line_end":38,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":3318}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1152,"byte_end":1157,"line_start":39,"line_end":39,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3389}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1167,"byte_end":1174,"line_start":40,"line_end":40,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3391}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1184,"byte_end":1189,"line_start":41,"line_end":41,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3514}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1199,"byte_end":1203,"line_start":42,"line_end":42,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3598}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402042,"byte_end":402048,"line_start":6,"line_end":6,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3599}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402058,"byte_end":402062,"line_start":7,"line_end":7,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3682}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402072,"byte_end":402077,"line_start":8,"line_end":8,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3745}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402087,"byte_end":402093,"line_start":9,"line_end":9,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3854}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":402103,"byte_end":402107,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3899}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1213,"byte_end":1217,"line_start":43,"line_end":43,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":4184}},{"kind":"Mod","span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/lib.rs","byte_start":1227,"byte_end":1233,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4194}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":11643,"byte_end":11650,"line_start":234,"line_end":234,"column_start":9,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":14151,"byte_end":14158,"line_start":309,"line_end":309,"column_start":12,"column_end":19},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":22437,"byte_end":22450,"line_start":505,"line_end":505,"column_start":9,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":23120,"byte_end":23127,"line_start":531,"line_end":531,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":24149,"byte_end":24157,"line_start":555,"line_end":555,"column_start":6,"column_end":14},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":4536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":25384,"byte_end":25392,"line_start":593,"line_end":593,"column_start":18,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":4536},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":25481,"byte_end":25487,"line_start":599,"line_end":599,"column_start":18,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":4520},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":25821,"byte_end":25824,"line_start":612,"line_end":612,"column_start":6,"column_end":9},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":36890,"byte_end":36895,"line_start":905,"line_end":905,"column_start":6,"column_end":11},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":4531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":37895,"byte_end":37899,"line_start":926,"line_end":926,"column_start":12,"column_end":16},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":5154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/app.rs","byte_start":41242,"byte_end":41263,"line_start":1012,"line_end":1012,"column_start":6,"column_end":27},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/background.rs","byte_start":96305,"byte_end":96315,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":102167,"byte_end":102174,"line_start":64,"line_end":64,"column_start":22,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":4629},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":102303,"byte_end":102317,"line_start":72,"line_end":72,"column_start":10,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":103075,"byte_end":103082,"line_start":92,"line_end":92,"column_start":13,"column_end":20},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":4629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":107130,"byte_end":107137,"line_start":204,"line_end":204,"column_start":13,"column_end":20},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":4629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":111001,"byte_end":111008,"line_start":303,"line_end":303,"column_start":13,"column_end":20},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":4629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":112641,"byte_end":112648,"line_start":361,"line_end":361,"column_start":13,"column_end":20},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":4629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":113942,"byte_end":113949,"line_start":404,"line_end":404,"column_start":13,"column_end":20},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":4629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":118380,"byte_end":118387,"line_start":526,"line_end":526,"column_start":13,"column_end":20},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":4629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/drawing.rs","byte_start":119915,"byte_end":119922,"line_start":569,"line_end":569,"column_start":13,"column_end":20},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":4629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":134578,"byte_end":134589,"line_start":33,"line_end":33,"column_start":13,"column_end":24},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":134896,"byte_end":134907,"line_start":46,"line_end":46,"column_start":10,"column_end":21},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":135204,"byte_end":135215,"line_start":57,"line_end":57,"column_start":10,"column_end":21},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":135470,"byte_end":135481,"line_start":64,"line_end":64,"column_start":10,"column_end":21},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":135786,"byte_end":135797,"line_start":71,"line_end":71,"column_start":33,"column_end":44},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":782},"to":{"krate":29,"index":406}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":136590,"byte_end":136601,"line_start":95,"line_end":95,"column_start":34,"column_end":45},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":782},"to":{"krate":29,"index":411}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":137339,"byte_end":137350,"line_start":115,"line_end":115,"column_start":36,"column_end":47},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":782},"to":{"krate":29,"index":413}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":138113,"byte_end":138124,"line_start":138,"line_end":138,"column_start":34,"column_end":45},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":782},"to":{"krate":29,"index":411}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":138981,"byte_end":138992,"line_start":162,"line_end":162,"column_start":36,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":782},"to":{"krate":29,"index":413}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":139851,"byte_end":139862,"line_start":186,"line_end":186,"column_start":34,"column_end":45},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":782},"to":{"krate":29,"index":411}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/builder.rs","byte_start":140708,"byte_end":140719,"line_start":210,"line_end":210,"column_start":36,"column_end":47},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":782},"to":{"krate":29,"index":413}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":142953,"byte_end":142974,"line_start":52,"line_end":52,"column_start":9,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":4640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":143498,"byte_end":143519,"line_start":67,"line_end":67,"column_start":22,"column_end":43},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":4640},"to":{"krate":2,"index":8193}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":144562,"byte_end":144576,"line_start":105,"line_end":105,"column_start":9,"column_end":23},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4649},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":145148,"byte_end":145163,"line_start":125,"line_end":125,"column_start":9,"column_end":24},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":4659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":145796,"byte_end":145810,"line_start":146,"line_end":146,"column_start":22,"column_end":36},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":4649},"to":{"krate":2,"index":8193}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/vertex.rs","byte_start":146238,"byte_end":146253,"line_start":162,"line_end":162,"column_start":22,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":4659},"to":{"krate":2,"index":8193}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":126605,"byte_end":126609,"line_start":28,"line_end":28,"column_start":6,"column_end":10},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":4669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":131290,"byte_end":131294,"line_start":179,"line_end":179,"column_start":18,"column_end":22},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":4669},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":131409,"byte_end":131413,"line_start":186,"line_end":186,"column_start":16,"column_end":20},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":4669},"to":{"krate":2,"index":3369}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":131529,"byte_end":131533,"line_start":193,"line_end":193,"column_start":19,"column_end":23},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":4669},"to":{"krate":2,"index":3382}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":131649,"byte_end":131653,"line_start":199,"line_end":199,"column_start":31,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":4669},"to":{"krate":71,"index":201}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":131835,"byte_end":131839,"line_start":206,"line_end":206,"column_start":23,"column_end":27},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":4669},"to":{"krate":71,"index":205}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":131999,"byte_end":132003,"line_start":214,"line_end":214,"column_start":24,"column_end":28},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":4669},"to":{"krate":71,"index":209}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":132157,"byte_end":132161,"line_start":222,"line_end":222,"column_start":23,"column_end":27},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":4669},"to":{"krate":71,"index":213}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":132323,"byte_end":132327,"line_start":230,"line_end":230,"column_start":26,"column_end":30},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":4669},"to":{"krate":71,"index":217}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":132517,"byte_end":132521,"line_start":238,"line_end":238,"column_start":35,"column_end":39},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":4669},"to":{"krate":71,"index":225}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":132635,"byte_end":132639,"line_start":244,"line_end":244,"column_start":26,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":4669},"to":{"krate":71,"index":228}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":132949,"byte_end":132953,"line_start":259,"line_end":259,"column_start":29,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":4669},"to":{"krate":71,"index":233}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mesh/mod.rs","byte_start":133063,"byte_end":133067,"line_start":265,"line_end":265,"column_start":30,"column_end":34},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":4669},"to":{"krate":71,"index":235}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":148661,"byte_end":148666,"line_start":25,"line_end":25,"column_start":6,"column_end":11},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":4675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":150333,"byte_end":150345,"line_start":88,"line_end":88,"column_start":10,"column_end":22},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1029},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":151620,"byte_end":151625,"line_start":131,"line_end":131,"column_start":20,"column_end":25},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":4675},"to":{"krate":0,"index":2720}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":151776,"byte_end":151781,"line_start":137,"line_end":137,"column_start":25,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":4675},"to":{"krate":0,"index":2637}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":151928,"byte_end":151933,"line_start":143,"line_end":143,"column_start":22,"column_end":27},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":4675},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":152084,"byte_end":152089,"line_start":149,"line_end":149,"column_start":32,"column_end":37},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":4675},"to":{"krate":0,"index":2554}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":152219,"byte_end":152228,"line_start":155,"line_end":155,"column_start":22,"column_end":31},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":152335,"byte_end":152344,"line_start":161,"line_end":161,"column_start":30,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3053}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":152538,"byte_end":152543,"line_start":170,"line_end":170,"column_start":42,"column_end":47},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":4675},"to":{"krate":0,"index":2846}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/arrow.rs","byte_start":155629,"byte_end":155634,"line_start":252,"line_end":252,"column_start":18,"column_end":23},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":4675},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":156729,"byte_end":156736,"line_start":27,"line_end":27,"column_start":6,"column_end":13},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":4683},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":157535,"byte_end":157542,"line_start":54,"line_end":54,"column_start":42,"column_end":49},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":4683},"to":{"krate":0,"index":2846}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":159824,"byte_end":159831,"line_start":115,"line_end":115,"column_start":25,"column_end":32},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":4683},"to":{"krate":0,"index":2637}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":159981,"byte_end":159988,"line_start":121,"line_end":121,"column_start":22,"column_end":29},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":4683},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":160134,"byte_end":160141,"line_start":127,"line_end":127,"column_start":24,"column_end":31},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":4683},"to":{"krate":0,"index":2596}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":160301,"byte_end":160308,"line_start":133,"line_end":133,"column_start":32,"column_end":39},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":4683},"to":{"krate":0,"index":2554}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":160439,"byte_end":160446,"line_start":139,"line_end":139,"column_start":20,"column_end":27},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":4683},"to":{"krate":0,"index":2720}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":160596,"byte_end":160603,"line_start":145,"line_end":145,"column_start":21,"column_end":28},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":4683},"to":{"krate":0,"index":1804}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":160786,"byte_end":160795,"line_start":153,"line_end":153,"column_start":24,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":160908,"byte_end":160917,"line_start":159,"line_end":159,"column_start":32,"column_end":41},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3053}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/ellipse.rs","byte_start":161104,"byte_end":161118,"line_start":170,"line_end":170,"column_start":10,"column_end":24},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":162461,"byte_end":162465,"line_start":24,"line_end":24,"column_start":6,"column_end":10},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":4693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":163538,"byte_end":163549,"line_start":63,"line_end":63,"column_start":10,"column_end":21},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":164335,"byte_end":164339,"line_start":90,"line_end":90,"column_start":20,"column_end":24},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":4693},"to":{"krate":0,"index":2720}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":164490,"byte_end":164494,"line_start":96,"line_end":96,"column_start":25,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":4693},"to":{"krate":0,"index":2637}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":164641,"byte_end":164645,"line_start":102,"line_end":102,"column_start":22,"column_end":26},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":4693},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":164796,"byte_end":164800,"line_start":108,"line_end":108,"column_start":32,"column_end":36},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":4693},"to":{"krate":0,"index":2554}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":164929,"byte_end":164938,"line_start":114,"line_end":114,"column_start":21,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":165042,"byte_end":165051,"line_start":120,"line_end":120,"column_start":29,"column_end":38},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3053}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/line.rs","byte_start":165243,"byte_end":165247,"line_start":129,"line_end":129,"column_start":42,"column_end":46},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":4693},"to":{"krate":0,"index":2846}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":167736,"byte_end":167746,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":4703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":178032,"byte_end":178036,"line_start":312,"line_end":312,"column_start":6,"column_end":10},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":4711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":178676,"byte_end":178683,"line_start":335,"line_end":335,"column_start":10,"column_end":17},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":4629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":184775,"byte_end":184779,"line_start":484,"line_end":484,"column_start":42,"column_end":46},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":4711},"to":{"krate":0,"index":2846}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":187252,"byte_end":187266,"line_start":547,"line_end":547,"column_start":22,"column_end":36},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1337},"to":{"krate":2,"index":8193}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":187863,"byte_end":187867,"line_start":570,"line_end":570,"column_start":25,"column_end":29},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":4711},"to":{"krate":0,"index":2637}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":188021,"byte_end":188025,"line_start":576,"line_end":576,"column_start":22,"column_end":26},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":4711},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":188180,"byte_end":188184,"line_start":582,"line_end":582,"column_start":32,"column_end":36},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":4711},"to":{"krate":0,"index":2554}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":188344,"byte_end":188353,"line_start":588,"line_end":588,"column_start":27,"column_end":36},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":188465,"byte_end":188474,"line_start":594,"line_end":594,"column_start":21,"column_end":30},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":188584,"byte_end":188593,"line_start":600,"line_end":600,"column_start":35,"column_end":44},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3053}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/mesh.rs","byte_start":188788,"byte_end":188797,"line_start":609,"line_end":609,"column_start":29,"column_end":38},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3053}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":192517,"byte_end":192525,"line_start":112,"line_end":112,"column_start":6,"column_end":14},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":4746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":193106,"byte_end":193117,"line_start":130,"line_end":130,"column_start":9,"column_end":20},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":4754},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":193462,"byte_end":193470,"line_start":145,"line_end":145,"column_start":6,"column_end":14},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":194062,"byte_end":194072,"line_start":163,"line_end":163,"column_start":6,"column_end":16},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":194380,"byte_end":194391,"line_start":175,"line_end":175,"column_start":9,"column_end":20},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":4754},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":204630,"byte_end":204634,"line_start":507,"line_end":507,"column_start":42,"column_end":46},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":4769},"to":{"krate":0,"index":2846}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":209565,"byte_end":209569,"line_start":653,"line_end":653,"column_start":6,"column_end":10},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":4769},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":210187,"byte_end":210202,"line_start":676,"line_end":676,"column_start":10,"column_end":25},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":210744,"byte_end":210759,"line_start":692,"line_end":692,"column_start":10,"column_end":25},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":211238,"byte_end":211255,"line_start":706,"line_end":706,"column_start":10,"column_end":27},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":211603,"byte_end":211621,"line_start":718,"line_end":718,"column_start":13,"column_end":31},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":214309,"byte_end":214317,"line_start":805,"line_end":805,"column_start":18,"column_end":26},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1568},"to":{"krate":0,"index":2578}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":214428,"byte_end":214438,"line_start":811,"line_end":811,"column_start":20,"column_end":30},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1569},"to":{"krate":0,"index":2720}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":214563,"byte_end":214574,"line_start":817,"line_end":817,"column_start":30,"column_end":41},"kind":{"Impl":{"id":106}},"from":{"krate":29,"index":1238},"to":{"krate":0,"index":1550}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":214722,"byte_end":214735,"line_start":824,"line_end":824,"column_start":30,"column_end":43},"kind":{"Impl":{"id":107}},"from":{"krate":29,"index":1222},"to":{"krate":0,"index":1550}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":214885,"byte_end":214896,"line_start":831,"line_end":831,"column_start":28,"column_end":39},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":4754},"to":{"krate":0,"index":2637}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":215056,"byte_end":215067,"line_start":837,"line_end":837,"column_start":25,"column_end":36},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":4754},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":215228,"byte_end":215239,"line_start":843,"line_end":843,"column_start":35,"column_end":46},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":4754},"to":{"krate":0,"index":2554}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":215376,"byte_end":215380,"line_start":849,"line_end":849,"column_start":25,"column_end":29},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":4769},"to":{"krate":0,"index":2637}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":215534,"byte_end":215538,"line_start":855,"line_end":855,"column_start":22,"column_end":26},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":4769},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":215693,"byte_end":215697,"line_start":861,"line_end":861,"column_start":32,"column_end":36},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":4769},"to":{"krate":0,"index":2554}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":215831,"byte_end":215840,"line_start":867,"line_end":867,"column_start":25,"column_end":34},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":215950,"byte_end":215959,"line_start":873,"line_end":873,"column_start":27,"column_end":36},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":216071,"byte_end":216080,"line_start":879,"line_end":879,"column_start":25,"column_end":34},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":216184,"byte_end":216193,"line_start":885,"line_end":885,"column_start":21,"column_end":30},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":216301,"byte_end":216310,"line_start":891,"line_end":891,"column_start":33,"column_end":42},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3053}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":216501,"byte_end":216510,"line_start":900,"line_end":900,"column_start":33,"column_end":42},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3053}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":216703,"byte_end":216712,"line_start":909,"line_end":909,"column_start":35,"column_end":44},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3053}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/path.rs","byte_start":216903,"byte_end":216912,"line_start":918,"line_end":918,"column_start":29,"column_end":38},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3053}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":217679,"byte_end":217684,"line_start":17,"line_end":17,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":3155},"to":{"krate":0,"index":1804}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":219447,"byte_end":219458,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":4792},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":224964,"byte_end":224971,"line_start":265,"line_end":265,"column_start":6,"column_end":13},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":4813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":231376,"byte_end":231383,"line_start":437,"line_end":437,"column_start":42,"column_end":49},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":4813},"to":{"krate":0,"index":2846}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":231638,"byte_end":231645,"line_start":447,"line_end":447,"column_start":13,"column_end":20},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":4629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":232420,"byte_end":232438,"line_start":474,"line_end":474,"column_start":10,"column_end":28},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":233966,"byte_end":233980,"line_start":525,"line_end":525,"column_start":21,"column_end":35},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":4800},"to":{"krate":0,"index":1804}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":234092,"byte_end":234103,"line_start":531,"line_end":531,"column_start":25,"column_end":36},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":4792},"to":{"krate":0,"index":2637}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":234262,"byte_end":234273,"line_start":537,"line_end":537,"column_start":22,"column_end":33},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":4792},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":234433,"byte_end":234444,"line_start":543,"line_end":543,"column_start":32,"column_end":43},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":4792},"to":{"krate":0,"index":2554}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":234579,"byte_end":234590,"line_start":549,"line_end":549,"column_start":21,"column_end":32},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4792},"to":{"krate":0,"index":1804}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":234740,"byte_end":234751,"line_start":555,"line_end":555,"column_start":20,"column_end":31},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4792},"to":{"krate":0,"index":2720}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":234909,"byte_end":234916,"line_start":561,"line_end":561,"column_start":25,"column_end":32},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":4813},"to":{"krate":0,"index":2637}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":235075,"byte_end":235082,"line_start":567,"line_end":567,"column_start":22,"column_end":29},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4813},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":235242,"byte_end":235249,"line_start":573,"line_end":573,"column_start":32,"column_end":39},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":4813},"to":{"krate":0,"index":2554}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":235391,"byte_end":235400,"line_start":579,"line_end":579,"column_start":28,"column_end":37},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":235513,"byte_end":235522,"line_start":585,"line_end":585,"column_start":24,"column_end":33},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":235639,"byte_end":235648,"line_start":591,"line_end":591,"column_start":36,"column_end":45},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3053}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/polygon.rs","byte_start":235844,"byte_end":235853,"line_start":600,"line_end":600,"column_start":32,"column_end":41},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3053}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":236829,"byte_end":236833,"line_start":26,"line_end":26,"column_start":6,"column_end":10},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":4821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":237440,"byte_end":237444,"line_start":50,"line_end":50,"column_start":42,"column_end":46},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":4821},"to":{"krate":0,"index":2846}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":238868,"byte_end":238872,"line_start":92,"line_end":92,"column_start":35,"column_end":39},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":4821},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":239124,"byte_end":239128,"line_start":104,"line_end":104,"column_start":18,"column_end":22},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":4821},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":239561,"byte_end":239565,"line_start":120,"line_end":120,"column_start":25,"column_end":29},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":4821},"to":{"krate":0,"index":2637}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":239715,"byte_end":239719,"line_start":126,"line_end":126,"column_start":22,"column_end":26},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":4821},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":239865,"byte_end":239869,"line_start":132,"line_end":132,"column_start":24,"column_end":28},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":4821},"to":{"krate":0,"index":2596}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":240029,"byte_end":240033,"line_start":138,"line_end":138,"column_start":32,"column_end":36},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":4821},"to":{"krate":0,"index":2554}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":240164,"byte_end":240168,"line_start":144,"line_end":144,"column_start":20,"column_end":24},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":4821},"to":{"krate":0,"index":2720}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":240318,"byte_end":240322,"line_start":150,"line_end":150,"column_start":21,"column_end":25},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":4821},"to":{"krate":0,"index":1804}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":240503,"byte_end":240512,"line_start":158,"line_end":158,"column_start":21,"column_end":30},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":240616,"byte_end":240625,"line_start":164,"line_end":164,"column_start":29,"column_end":38},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3053}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/quad.rs","byte_start":240806,"byte_end":240817,"line_start":175,"line_end":175,"column_start":10,"column_end":21},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":241797,"byte_end":241801,"line_start":25,"line_end":25,"column_start":6,"column_end":10},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":4829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":242003,"byte_end":242014,"line_start":35,"line_end":35,"column_start":10,"column_end":21},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":242262,"byte_end":242266,"line_start":45,"line_end":45,"column_start":42,"column_end":46},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":4829},"to":{"krate":0,"index":2846}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":243264,"byte_end":243268,"line_start":78,"line_end":78,"column_start":32,"column_end":36},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":4829},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":243423,"byte_end":243427,"line_start":85,"line_end":85,"column_start":18,"column_end":22},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":4829},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":243639,"byte_end":243643,"line_start":96,"line_end":96,"column_start":25,"column_end":29},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":4829},"to":{"krate":0,"index":2637}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":243793,"byte_end":243797,"line_start":102,"line_end":102,"column_start":22,"column_end":26},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":4829},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":243943,"byte_end":243947,"line_start":108,"line_end":108,"column_start":24,"column_end":28},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":4829},"to":{"krate":0,"index":2596}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":244107,"byte_end":244111,"line_start":114,"line_end":114,"column_start":32,"column_end":36},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":4829},"to":{"krate":0,"index":2554}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":244242,"byte_end":244246,"line_start":120,"line_end":120,"column_start":20,"column_end":24},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":4829},"to":{"krate":0,"index":2720}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":244396,"byte_end":244400,"line_start":126,"line_end":126,"column_start":21,"column_end":25},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":4829},"to":{"krate":0,"index":1804}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":244581,"byte_end":244590,"line_start":134,"line_end":134,"column_start":21,"column_end":30},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/rect.rs","byte_start":244694,"byte_end":244703,"line_start":140,"line_end":140,"column_start":29,"column_end":38},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3053}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":245926,"byte_end":245930,"line_start":32,"line_end":32,"column_start":6,"column_end":10},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":4836},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":250199,"byte_end":250210,"line_start":161,"line_end":161,"column_start":10,"column_end":21},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":253735,"byte_end":253739,"line_start":262,"line_end":262,"column_start":42,"column_end":46},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4836},"to":{"krate":0,"index":2846}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":260219,"byte_end":260223,"line_start":419,"line_end":419,"column_start":25,"column_end":29},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":4836},"to":{"krate":0,"index":2637}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":260373,"byte_end":260377,"line_start":425,"line_end":425,"column_start":22,"column_end":26},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":4836},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":260523,"byte_end":260527,"line_start":431,"line_end":431,"column_start":24,"column_end":28},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":4836},"to":{"krate":0,"index":2596}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":260684,"byte_end":260688,"line_start":437,"line_end":437,"column_start":32,"column_end":36},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":4836},"to":{"krate":0,"index":2554}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":260851,"byte_end":260860,"line_start":445,"line_end":445,"column_start":21,"column_end":30},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/text.rs","byte_start":260964,"byte_end":260973,"line_start":451,"line_end":451,"column_start":29,"column_end":38},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3053}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":261752,"byte_end":261759,"line_start":23,"line_end":23,"column_start":6,"column_end":13},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":4854},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":262353,"byte_end":262360,"line_start":47,"line_end":47,"column_start":6,"column_end":13},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":4854},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":262887,"byte_end":262901,"line_start":63,"line_end":63,"column_start":10,"column_end":24},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":263461,"byte_end":263468,"line_start":78,"line_end":78,"column_start":42,"column_end":49},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":4854},"to":{"krate":0,"index":2846}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":265140,"byte_end":265147,"line_start":131,"line_end":131,"column_start":25,"column_end":32},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":4854},"to":{"krate":0,"index":2637}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":265297,"byte_end":265304,"line_start":137,"line_end":137,"column_start":22,"column_end":29},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":4854},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":265450,"byte_end":265457,"line_start":143,"line_end":143,"column_start":24,"column_end":31},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":4854},"to":{"krate":0,"index":2596}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":265633,"byte_end":265642,"line_start":151,"line_end":151,"column_start":24,"column_end":33},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/texture.rs","byte_start":265755,"byte_end":265764,"line_start":157,"line_end":157,"column_start":32,"column_end":41},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3053}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":266714,"byte_end":266717,"line_start":26,"line_end":26,"column_start":6,"column_end":9},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":267255,"byte_end":267265,"line_start":50,"line_end":50,"column_start":10,"column_end":20},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":267758,"byte_end":267761,"line_start":70,"line_end":70,"column_start":42,"column_end":45},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4862},"to":{"krate":0,"index":2846}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":269125,"byte_end":269128,"line_start":109,"line_end":109,"column_start":34,"column_end":37},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4862},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":269368,"byte_end":269371,"line_start":121,"line_end":121,"column_start":18,"column_end":21},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":4862},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":269712,"byte_end":269715,"line_start":133,"line_end":133,"column_start":25,"column_end":28},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4862},"to":{"krate":0,"index":2637}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":269865,"byte_end":269868,"line_start":139,"line_end":139,"column_start":22,"column_end":25},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4862},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":270014,"byte_end":270017,"line_start":145,"line_end":145,"column_start":24,"column_end":27},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4862},"to":{"krate":0,"index":2596}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":270177,"byte_end":270180,"line_start":151,"line_end":151,"column_start":32,"column_end":35},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4862},"to":{"krate":0,"index":2554}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":270311,"byte_end":270314,"line_start":157,"line_end":157,"column_start":20,"column_end":23},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":4862},"to":{"krate":0,"index":2720}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":270464,"byte_end":270467,"line_start":163,"line_end":163,"column_start":21,"column_end":24},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":4862},"to":{"krate":0,"index":1804}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":270647,"byte_end":270656,"line_start":171,"line_end":171,"column_start":20,"column_end":29},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/primitive/tri.rs","byte_start":270757,"byte_end":270766,"line_start":177,"line_end":177,"column_start":28,"column_end":37},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4870},"to":{"krate":2,"index":3053}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":272283,"byte_end":272288,"line_start":11,"line_end":11,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":3155},"to":{"krate":0,"index":2554}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/color.rs","byte_start":276629,"byte_end":276635,"line_start":145,"line_end":145,"column_start":25,"column_end":31},"kind":{"Impl":{"id":197}},"from":{"krate":2,"index":40320},"to":{"krate":0,"index":2554}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":277045,"byte_end":277050,"line_start":7,"line_end":7,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":3155},"to":{"krate":0,"index":2578}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/fill.rs","byte_start":278684,"byte_end":278690,"line_start":52,"line_end":52,"column_start":18,"column_end":24},"kind":{"Impl":{"id":198}},"from":{"krate":2,"index":40320},"to":{"krate":0,"index":2578}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":280467,"byte_end":280472,"line_start":12,"line_end":12,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3155},"to":{"krate":0,"index":2596}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/dimension.rs","byte_start":281965,"byte_end":281975,"line_start":70,"line_end":70,"column_start":24,"column_end":34},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":4923},"to":{"krate":0,"index":2596}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":282520,"byte_end":282530,"line_start":16,"line_end":16,"column_start":6,"column_end":16},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":4938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":283340,"byte_end":283345,"line_start":41,"line_end":41,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3155},"to":{"krate":0,"index":2637}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":287682,"byte_end":287692,"line_start":170,"line_end":170,"column_start":25,"column_end":35},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":4938},"to":{"krate":0,"index":2637}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/orientation.rs","byte_start":287784,"byte_end":287794,"line_start":176,"line_end":176,"column_start":18,"column_end":28},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":4938},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":288544,"byte_end":288549,"line_start":13,"line_end":13,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":3155},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":289770,"byte_end":289780,"line_start":56,"line_end":56,"column_start":6,"column_end":16},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":4957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":289901,"byte_end":289911,"line_start":62,"line_end":62,"column_start":22,"column_end":32},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":4957},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/position.rs","byte_start":290003,"byte_end":290013,"line_start":68,"line_end":68,"column_start":18,"column_end":28},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":4957},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":279094,"byte_end":279107,"line_start":10,"line_end":10,"column_start":23,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":2596},"to":{"krate":0,"index":2698}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":279110,"byte_end":279121,"line_start":10,"line_end":10,"column_start":39,"column_end":50},"kind":"SuperTrait","from":{"krate":0,"index":2674},"to":{"krate":0,"index":2698}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":279124,"byte_end":279138,"line_start":10,"line_end":10,"column_start":53,"column_end":67},"kind":"SuperTrait","from":{"krate":0,"index":2637},"to":{"krate":0,"index":2698}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":279166,"byte_end":279167,"line_start":12,"line_end":12,"column_start":24,"column_end":25},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2700},"to":{"krate":0,"index":2698}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":279440,"byte_end":279450,"line_start":21,"line_end":21,"column_start":18,"column_end":28},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":4968},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":279746,"byte_end":279756,"line_start":34,"line_end":34,"column_start":22,"column_end":32},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":4968},"to":{"krate":0,"index":2674}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":279886,"byte_end":279896,"line_start":40,"line_end":40,"column_start":24,"column_end":34},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":4968},"to":{"krate":0,"index":2596}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/spatial/mod.rs","byte_start":280030,"byte_end":280040,"line_start":46,"line_end":46,"column_start":25,"column_end":35},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":4968},"to":{"krate":0,"index":2637}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":290429,"byte_end":290434,"line_start":7,"line_end":7,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":3155},"to":{"krate":0,"index":2720}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/properties/stroke.rs","byte_start":296395,"byte_end":296401,"line_start":154,"line_end":154,"column_start":20,"column_end":26},"kind":{"Impl":{"id":211}},"from":{"krate":2,"index":40320},"to":{"krate":0,"index":2720}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":302328,"byte_end":302343,"line_start":168,"line_end":168,"column_start":18,"column_end":33},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2848},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":302435,"byte_end":302444,"line_start":174,"line_end":174,"column_start":32,"column_end":41},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":4870},"to":{"krate":0,"index":2846}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":303514,"byte_end":303524,"line_start":193,"line_end":193,"column_start":21,"column_end":31},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2865},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":303835,"byte_end":303850,"line_start":203,"line_end":203,"column_start":6,"column_end":21},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":304431,"byte_end":304438,"line_start":228,"line_end":228,"column_start":6,"column_end":13},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":5031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":308280,"byte_end":308290,"line_start":326,"line_end":326,"column_start":6,"column_end":16},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2865},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":308841,"byte_end":308849,"line_start":345,"line_end":345,"column_start":6,"column_end":14},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":5005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":336715,"byte_end":336722,"line_start":991,"line_end":991,"column_start":18,"column_end":25},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":5031},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":336796,"byte_end":336806,"line_start":997,"line_end":997,"column_start":16,"column_end":26},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":2865},"to":{"krate":2,"index":3369}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/renderer/mod.rs","byte_start":336940,"byte_end":336950,"line_start":1004,"line_end":1004,"column_start":19,"column_end":29},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2865},"to":{"krate":2,"index":3382}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":344025,"byte_end":344030,"line_start":40,"line_end":40,"column_start":6,"column_end":11},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":5101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/theme.rs","byte_start":345062,"byte_end":345067,"line_start":70,"line_end":70,"column_start":18,"column_end":23},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":5101},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":78205,"byte_end":78222,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":5214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":78482,"byte_end":78487,"line_start":148,"line_end":148,"column_start":6,"column_end":11},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":5203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":79695,"byte_end":79699,"line_start":182,"line_end":182,"column_start":6,"column_end":10},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":5154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":94170,"byte_end":94187,"line_start":597,"line_end":597,"column_start":18,"column_end":35},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":5214},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":94722,"byte_end":94727,"line_start":614,"line_end":614,"column_start":18,"column_end":23},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":5203},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":95255,"byte_end":95259,"line_start":633,"line_end":633,"column_start":18,"column_end":22},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":5154},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/draw/mod.rs","byte_start":95472,"byte_end":95479,"line_start":641,"line_end":641,"column_start":18,"column_end":25},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":5161},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":346718,"byte_end":346722,"line_start":22,"line_end":22,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":3056},"to":{"krate":0,"index":3111}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":351829,"byte_end":351840,"line_start":177,"line_end":177,"column_start":6,"column_end":17},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":5298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":357139,"byte_end":357144,"line_start":316,"line_end":316,"column_start":20,"column_end":25},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":5242},"to":{"krate":0,"index":3111}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/event.rs","byte_start":358999,"byte_end":359004,"line_start":356,"line_end":356,"column_start":23,"column_end":28},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":5242},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":374745,"byte_end":374753,"line_start":39,"line_end":39,"column_start":19,"column_end":27},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/raw.rs","byte_start":378992,"byte_end":379000,"line_start":153,"line_end":153,"column_start":28,"column_end":36},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3167},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":361024,"byte_end":361029,"line_start":56,"line_end":56,"column_start":34,"column_end":39},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3196},"to":{"krate":2,"index":3369}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":361176,"byte_end":361181,"line_start":63,"line_end":63,"column_start":19,"column_end":24},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":369741,"byte_end":369752,"line_start":271,"line_end":271,"column_start":6,"column_end":17},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":5367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":370007,"byte_end":370017,"line_start":280,"line_end":280,"column_start":6,"column_end":16},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":5359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/frame/mod.rs","byte_start":371516,"byte_end":371521,"line_start":325,"line_end":325,"column_start":28,"column_end":33},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3196},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":380395,"byte_end":380399,"line_start":19,"line_end":19,"column_start":6,"column_end":10},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":382061,"byte_end":382068,"line_start":77,"line_end":77,"column_start":6,"column_end":13},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":384563,"byte_end":384570,"line_start":154,"line_end":154,"column_start":37,"column_end":44},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3247},"to":{"krate":23,"index":98}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":384726,"byte_end":384733,"line_start":162,"line_end":162,"column_start":43,"column_end":50},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3247},"to":{"krate":23,"index":50}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":385551,"byte_end":385555,"line_start":195,"line_end":195,"column_start":54,"column_end":58},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":3245},"to":{"krate":2,"index":3454}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":385763,"byte_end":385767,"line_start":202,"line_end":202,"column_start":50,"column_end":54},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3245},"to":{"krate":2,"index":3454}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":386186,"byte_end":386190,"line_start":222,"line_end":222,"column_start":33,"column_end":37},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3245},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":386311,"byte_end":386318,"line_start":228,"line_end":228,"column_start":42,"column_end":49},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3247},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":386448,"byte_end":386452,"line_start":234,"line_end":234,"column_start":33,"column_end":37},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3245},"to":{"krate":2,"index":3053}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/geom/path.rs","byte_start":386563,"byte_end":386570,"line_start":240,"line_end":240,"column_start":42,"column_end":49},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3247},"to":{"krate":2,"index":3053}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":388240,"byte_end":388249,"line_start":23,"line_end":23,"column_start":29,"column_end":38},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":5378},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":388362,"byte_end":388375,"line_start":29,"line_end":29,"column_start":34,"column_end":47},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3351},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":388496,"byte_end":388513,"line_start":35,"line_end":35,"column_start":33,"column_end":50},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3352},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":388632,"byte_end":388649,"line_start":41,"line_end":41,"column_start":32,"column_end":49},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3353},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":388754,"byte_end":388763,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5378},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/io.rs","byte_start":389001,"byte_end":389010,"line_start":59,"line_end":59,"column_start":26,"column_end":35},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":5378},"to":{"krate":2,"index":9916}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":394925,"byte_end":394931,"line_start":24,"line_end":24,"column_start":10,"column_end":16},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":5389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":395887,"byte_end":395891,"line_start":58,"line_end":58,"column_start":20,"column_end":24},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":5409},"to":{"krate":2,"index":3369}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":397290,"byte_end":397295,"line_start":105,"line_end":105,"column_start":10,"column_end":15},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":5417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":397731,"byte_end":397745,"line_start":122,"line_end":122,"column_start":10,"column_end":24},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":5430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":398844,"byte_end":398853,"line_start":159,"line_end":159,"column_start":10,"column_end":19},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":5445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":400609,"byte_end":400618,"line_start":212,"line_end":212,"column_start":38,"column_end":47},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":5445},"to":{"krate":2,"index":3454}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":400844,"byte_end":400853,"line_start":219,"line_end":219,"column_start":41,"column_end":50},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":5445},"to":{"krate":2,"index":3458}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/state.rs","byte_start":401426,"byte_end":401430,"line_start":237,"line_end":237,"column_start":10,"column_end":14},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":5455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":426624,"byte_end":426629,"line_start":58,"line_end":58,"column_start":6,"column_end":11},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":439192,"byte_end":439202,"line_start":411,"line_end":411,"column_start":26,"column_end":36},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5494},"to":{"krate":2,"index":8193}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":440217,"byte_end":440235,"line_start":441,"line_end":441,"column_start":23,"column_end":41},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5505},"to":{"krate":2,"index":8193}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/cursor.rs","byte_start":440394,"byte_end":440396,"line_start":448,"line_end":448,"column_start":27,"column_end":29},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3620},"to":{"krate":2,"index":8193}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":442206,"byte_end":442208,"line_start":48,"line_end":48,"column_start":6,"column_end":8},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":5511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":442323,"byte_end":442326,"line_start":55,"line_end":55,"column_start":6,"column_end":9},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":446675,"byte_end":446681,"line_start":192,"line_end":192,"column_start":19,"column_end":25},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3707},"to":{"krate":2,"index":8193}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":446829,"byte_end":446832,"line_start":199,"line_end":199,"column_start":23,"column_end":26},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5538},"to":{"krate":2,"index":8193}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":446984,"byte_end":446989,"line_start":206,"line_end":206,"column_start":31,"column_end":36},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5544},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":447090,"byte_end":447095,"line_start":212,"line_end":212,"column_start":28,"column_end":33},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":5544},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/font.rs","byte_start":447298,"byte_end":447303,"line_start":221,"line_end":221,"column_start":28,"column_end":33},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":5544},"to":{"krate":2,"index":9916}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":449663,"byte_end":449668,"line_start":59,"line_end":59,"column_start":27,"column_end":32},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3768},"to":{"krate":2,"index":8193}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":450531,"byte_end":450543,"line_start":83,"line_end":83,"column_start":26,"column_end":38},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3773},"to":{"krate":2,"index":8193}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":451212,"byte_end":451225,"line_start":106,"line_end":106,"column_start":27,"column_end":40},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3779},"to":{"krate":2,"index":8193}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":451699,"byte_end":451719,"line_start":125,"line_end":125,"column_start":26,"column_end":46},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3784},"to":{"krate":2,"index":8193}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/glyph.rs","byte_start":453114,"byte_end":453131,"line_start":167,"line_end":167,"column_start":19,"column_end":36},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3790},"to":{"krate":2,"index":8193}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":460089,"byte_end":460096,"line_start":33,"line_end":33,"column_start":6,"column_end":13},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":5552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/layout.rs","byte_start":463965,"byte_end":463971,"line_start":148,"line_end":148,"column_start":18,"column_end":24},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":5565},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":469007,"byte_end":469012,"line_start":122,"line_end":122,"column_start":6,"column_end":11},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":5576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":469667,"byte_end":469672,"line_start":144,"line_end":144,"column_start":23,"column_end":28},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3920},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":470075,"byte_end":470079,"line_start":162,"line_end":162,"column_start":6,"column_end":10},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":5612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":470763,"byte_end":470768,"line_start":184,"line_end":184,"column_start":10,"column_end":15},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":3920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":484478,"byte_end":484483,"line_start":633,"line_end":633,"column_start":26,"column_end":31},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":3920},"to":{"krate":2,"index":8193}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":488537,"byte_end":488542,"line_start":748,"line_end":748,"column_start":22,"column_end":27},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":5627},"to":{"krate":2,"index":8193}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/line.rs","byte_start":489874,"byte_end":489887,"line_start":790,"line_end":790,"column_start":26,"column_end":39},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":3931},"to":{"krate":2,"index":8193}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":405884,"byte_end":405891,"line_start":129,"line_end":129,"column_start":33,"column_end":40},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":4056},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":406099,"byte_end":406106,"line_start":139,"line_end":139,"column_start":28,"column_end":35},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4056},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":406240,"byte_end":406247,"line_start":146,"line_end":146,"column_start":23,"column_end":30},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4056},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":406369,"byte_end":406376,"line_start":153,"line_end":153,"column_start":10,"column_end":17},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":4056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":411070,"byte_end":411074,"line_start":287,"line_end":287,"column_start":10,"column_end":14},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":5638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":419341,"byte_end":419346,"line_start":530,"line_end":530,"column_start":26,"column_end":31},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":5648},"to":{"krate":2,"index":8193}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/text/mod.rs","byte_start":419646,"byte_end":419659,"line_start":544,"line_end":544,"column_start":23,"column_end":36},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":5657},"to":{"krate":2,"index":8193}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/time.rs","byte_start":491665,"byte_end":491673,"line_start":40,"line_end":40,"column_start":33,"column_end":41},"kind":{"Impl":{"id":297}},"from":{"krate":2,"index":43097},"to":{"krate":0,"index":4185}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":502108,"byte_end":502135,"line_start":283,"line_end":283,"column_start":6,"column_end":33},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":6044},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":504375,"byte_end":504382,"line_start":346,"line_end":346,"column_start":12,"column_end":19},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":531846,"byte_end":531852,"line_start":1062,"line_end":1062,"column_start":6,"column_end":12},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":6020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":550090,"byte_end":550096,"line_start":1531,"line_end":1531,"column_start":15,"column_end":21},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":6020},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":550405,"byte_end":550409,"line_start":1542,"line_end":1542,"column_start":21,"column_end":25},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":5747},"to":{"krate":2,"index":9909}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":550812,"byte_end":550822,"line_start":1555,"line_end":1555,"column_start":23,"column_end":33},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":5759},"to":{"krate":2,"index":9916}},{"span":{"file_name":"/Users/thomas/.cargo/registry/src/github.com-1ecc6299db9ec823/nannou-0.18.1/src/window.rs","byte_start":551114,"byte_end":551124,"line_start":1564,"line_end":1564,"column_start":38,"column_end":48},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":5759},"to":{"krate":2,"index":3056}}]}